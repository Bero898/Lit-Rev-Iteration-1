"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"RapidMS: A Tool for Supporting Rapid Microservices Generation and Refinement from Requirements Model","Y. Zhang; Y. Li; Y. Yang; S. Chen; J. Gao; W. Wang; Y. Yin","School of Software, Beihang University, Beijing, China; School of Software, Beihang University, Beijing, China; School of Software, Beihang University, Beijing, China; China Northeast Petroleum University, Heilongjiang, China; China Northeast Petroleum University, Heilongjiang, China; Faculty of Information Technology, Beijing University of Technology, Beijing, China; School of Software, Beihang University, Beijing, China",2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C),"22 Dec 2023","2023","","","45","49","Microservices is a crucial architecture design pat-tern for developing cloud-native applications, which focuses on decomposing a large and complex software system into autonomous components that can be independently developed and deployed. However, microservices design is not a trivial task, which highly depends on the profound knowledge and experience of system design and target domain. This is a challenge for novice software architects. In this paper, we propose a microservices design tool named RapidMS, which only requires architects to specify potential context boundaries on the requirements model. The microservices architecture design model with component structure and interaction views can be automatically generated without extra human effort. Moreover, the proposed tool can automatically calculate the characteristic metrics of the microservices, which indicate the quality of the different aspects of models to support rapid architecture refinements. We demonstrate the tool's effectiveness through five case studies. The experimental result shows that architects can get better decomposition of requirement model within four iterations and over 90% of microservice architecture diagrams can be correctly generated within 10 seconds. RapidMS can be further extended and applied in the software industry to reduce the cost and difficulty of microservices decomposition and design. The tool can be downloaded at https://rm2pt.com/advs/ rapidms, and a demo video casting its features is at https://youtu.be/AoIM41FTnFO","","979-8-3503-2498-3","10.1109/MODELS-C59198.2023.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10350465","microservices;microservices architecture;mi-croservices design;requirements;model-driven","Measurement;Industries;Costs;Microservice architectures;Computer architecture;Software systems;Model driven engineering","","1","","16","IEEE","22 Dec 2023","","","IEEE","IEEE Conferences"
"Performance Evaluation of Monolithic and Microservice Architecture for an E-commerce Startup","N. N. Nayim; A. Karmakar; M. R. Ahmed; M. Saifuddin; M. H. Kabir","Department of Computer and Communication Engineering, International Islamic University Chittagong, Chattogram, Bangladesh; Department of Computer and Communication Engineering, International Islamic University Chittagong, Chattogram, Bangladesh; Department of Computer and Communication Engineering, International Islamic University Chittagong, Chattogram, Bangladesh; Department of Computer and Communication Engineering, International Islamic University Chittagong, Chattogram, Bangladesh; Department of Computer and Communication Engineering, International Islamic University Chittagong, Chattogram, Bangladesh",2023 26th International Conference on Computer and Information Technology (ICCIT),"27 Feb 2024","2023","","","1","5","Today's businesses must be flexible enough to develop scalable applications that can influence emerging models of production and management. The prevailing imperative for organizations to adopt new technologies and business strategies stems from the need to enhance the efficiency and optimization of both human and technology resources. The concept of ""software architecture"" has been employed to define the overall blueprint of a software system. Software architecture has been proposed as a strategy to decrease complexity and enhance reusability by facilitating system decomposition into its high-level components and their interrelationships. Within the technology sector, the phrase ""e-commerce"" is frequently employed to denote the activities encompassing acquiring, vending, and promoting goods and services. The necessity for an e-commerce enterprise lies in reusable code that pays minimal costs and possesses a streamlined infrastructure. Implementing a suitable architectural framework to meet the existing demands of e-commerce is the most optimal strategy presently. This study undertakes a comparative analysis of monolithic and microservice architectures in the context of an e-commerce startup. Two separate software applications are developed, each following one of the mentioned architectures while utilizing the same technology platform. The findings of the tests suggest that monolithic architectures have the potential to decrease infrastructure expenses and enhance performance when compared to traditional microservice architectures. In conclusion, we clarify the challenges encountered during the deployment and implementation phases of microservices and monolithic web applications.","","979-8-3503-5901-5","10.1109/ICCIT60459.2023.10441241","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10441241","e-commerce;monolithic;microservice;reactJs;nodeJS;web services mongoDB;stress testing;k6","Performance evaluation;Costs;Software architecture;Microservice architectures;Computer architecture;Software systems;Electronic commerce","","","","10","IEEE","27 Feb 2024","","","IEEE","IEEE Conferences"
"Intelligent Monitoring of Non-Invasive Network Blocking Faults Based on Cloud-Native Microservices Architecture","J. Zhang; C. Yao; W. Shen","Information Center, Guangdong Power Grid, Guangzhou, Guangdong, China; Information Center, Guangdong Power Grid, Guangzhou, Guangdong, China; Information Center, Guangdong Power Grid, Guangzhou, Guangdong, China","2023 5th International Conference on Machine Learning, Big Data and Business Intelligence (MLBDBI)","2 Apr 2024","2023","","","324","328","Conventional non-intrusive network blocking fault intelligent monitoring methods mainly focus on network attack monitoring, and the monitoring content is relatively single, which affects the final monitoring results. Therefore, a non-intrusive network blocking fault intelligent monitoring method based on cloud-native microservice architecture is designed. We generate non-intrusive network blocking fault intelligent monitoring components, and design the tasks of monitoring nodes into components to monitor the blocking condition of non-intrusive network to meet the monitoring accuracy requirements. Based on the cloud-native microservice architecture, we construct a network blocking fault intelligent monitoring model, which consists of three levels: network manager, subnet group leader and agent, and monitors different network blocking fault areas, so as to realize the demand of fault intelligent monitoring. Dynamically configure the intelligent monitoring parameters of network blocking faults, configure the files and database of network blocking faults in the environment of microservice architecture, and form a practical configuration center to further optimize the accuracy of fault monitoring. Comparison experiments are used to verify that the monitoring results of this method are more accurate and can be applied in real life.","2994-2977","979-8-3503-5993-0","10.1109/MLBDBI60823.2023.10482340","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10482340","Cloud-native microservices architecture;Nonintrusive net-work;Blocking faults;Intelligent monitoring methods","Databases;Microservice architectures;Machine learning;Big Data;Business intelligence;Task analysis;Monitoring","","","","15","IEEE","2 Apr 2024","","","IEEE","IEEE Conferences"
"A Component-Based Evolution Model for Service-Based Software Architectures","E. Berrio-Charry; J. Vergara-Vargas; H. Umaña-Acosta","Departamento de Ingeniería de Sistemas e Industrial, Universidad Nacional de Colombia, Bogotá, D.C., Colombia; Departamento de Ingeniería de Sistemas e Industrial, Universidad Nacional de Colombia, Bogotá, D.C., Colombia; Departamento de Ingeniería de Sistemas e Industrial, Universidad Nacional de Colombia, Bogotá, D.C., Colombia",2020 IEEE 11th International Conference on Software Engineering and Service Science (ICSESS),"4 Nov 2020","2020","","","111","115","Microservices architecture has emerged as an architectural style which focuses on the design and development of software systems as a set of small independent services. Although MSA is inspired by the Service-Oriented Architecture style (both are service-based architectures), it presents important differences. Likewise, software architecture must evolve as new architectural styles and software frameworks arise, and the evolution of the software architecture is considered as a central feature of any software system. In this way, this paper proposes an approach to evolve SOA to MSA architectures through the use of Sarch language. To accomplish this, the language was extended to allow the modeling of the two architectural styles from the component-and-connector view, the inclusion of a decomposition view for functional properties, and the use of a model-to-model transformation algorithm.","2327-0594","978-1-7281-6579-0","10.1109/ICSESS49938.2020.9237747","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9237747","Software Architecture;Architectures Evolution;SOA;Microservices;Architectural Style;Architectural View;Architecture Description Language","Software architecture;Conferences;Software algorithms;Computer architecture;Software systems;Service-oriented architecture","","5","","23","IEEE","4 Nov 2020","","","IEEE","IEEE Conferences"
"Evaluating the Inter-Service Communication on Microservice Architecture","L. D. S. B. Weerasinghe; I. Perera","Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka",2022 7th International Conference on Information Technology Research (ICITR),"26 Dec 2022","2022","","","1","6","Distributed computing concepts have proliferated with cloud computing concepts in the past decade. With the evolution in cloud computing, Microservice architecture has significantly become popular as a new architectural pattern and a software development architecture. Most enterprise software development has moved their monolithic software architecture to microservice-based architecture, as it can divide large applications into light-weighted, distributed components. However, this approach may be subject to certain downsides as well. With the modern convention, engineers have succeeded in achieving scalability and maintainability quality attributes and lack the performance attribute in terms of response time. This is because the microservice architecture has introduced inter-service communication over the network. The key challenge when developing a microservice-based application is choosing the correct inter-service communication mechanism to reduce the time taken when calling each service. This research has taken an experimental methodology to compare and contrast the most trending inter-service communication mechanisms. Industry-standard benchmark load test is run to collect quantitative data to evaluate the overall system performance in terms of response time. The testing observed that gRPC protocol performs well in terms of response time and throughput compared to the HTTP and Web Socket protocols.","2831-3399","979-8-3503-3203-2","10.1109/ICITR57877.2022.9992918","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9992918","Microservices;Inter-service communication;Performance;Latency","Cloud computing;Protocols;Software architecture;Scalability;System performance;Microservice architectures;Computer architecture","","5","","23","IEEE","26 Dec 2022","","","IEEE","IEEE Conferences"
"Comparative Analysis of Monolith, Microservice API Gateway and Microservice Federated Gateway on Web-based application using GraphQL API","K. Adrio; C. N. Tanzil; M. C. Lianto; Z. E. Rasjid","Computer Science, Bina Nusantara University, Jakarta, Indonesia; Computer Science, Bina Nusantara University, Jakarta, Indonesia; Computer Science, Bina Nusantara University, Jakarta, Indonesia; Computer Science, Bina Nusantara University, Jakarta, Indonesia","2023 10th International Conference on Electrical Engineering, Computer Science and Informatics (EECSI)","31 Oct 2023","2023","","","654","660","The purpose of this research is to provide a detailed explanation regarding the characteristics as well as the pros and cons offered by various software development architecture, such as monolithic and Microservice architecture implemented with graph-based API called GraphQL. Monolithic architecture offers a centralized software development pattern with relatively simpler integration and development process. Conversely, Microservices architecture such as Gateway Aggregation and Federated Gateway will divide independent components of the application into smaller modules. Gateway Aggregation utilizes a single Gateway which acts as the main entry point for data exchange between the client and the application. In this research aims an application is developed using the three different architectures to measure the quality, both qualitative and quantitative performances of each architecture. There are several different parameters that are going to be used to measure the architecture’s performance such as response time and data throughput which become an essential criterion in conducting load and stress testing. The result is that the Monolithic architecture offers some advantages in its quantitative performance measurement due to better efficiency in collecting and processing requested data in a single application which utilizes fewer resources and shorter time. In contrast, the Gateway Aggregation architecture and Federated Gateway architecture also have some significant performance differences because it costs resources to combine several subgraphs together into a valid graph.","","979-8-3503-0686-6","10.1109/EECSI59885.2023.10295809","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10295809","software architecture;GraphQL API;monolithic;Microservices;software testing analysis","Microservice architectures;Computer architecture;Logic gates;Throughput;Software;Time measurement;Time factors","","1","","18","IEEE","31 Oct 2023","","","IEEE","IEEE Conferences"
"An Approach of a Migration Process from a Legacy Web Management System with a Monolithic Architecture to a Modern Microservices-Based Architecture of a Tourism Services Company","B. A. Pinos-Figueroa; G. A. León-Paredes","Maestría en Software, Universidad Politécnica Salesiana, Cuenca, Ecuador; Grupo de Investigación en Cloud Computing, Smart Cities & High Performance Computing, Universidad Politécnica Salesiana, Cuenca, Ecuador",2023 11th International Conference in Software Engineering Research and Innovation (CONISOFT),"27 Jun 2024","2023","","","9","17","The migration from a monolithic to a microservice architecture is a complex process that involves separating an application into independent services that work together to provide the complete functionality that the legacy system provides. During this process, despite extensive planning; limitations and difficulties can arise, primarily related to code rewriting and updating outdated technologies. To mitigate all difficulties, it is necessary to first document the architectures properly; analyze their advantages and disadvantages, use cases, tech-nologies, and the existence of similar migration processes, among others. Gathering comprehensive documentation from the legacy system is also essential to establish a solid foundation of requirements and functionalities on which to conduct the migration. Finally, the choice of tools, such as in our case, those offered by Spring Cloud, Spring Boot, and Docker can greatly facilitate this process. The migration to microservices offers benefits such as easier implementation of new functionalities, quicker problem detection and resolution, improved availability, and enhanced user experience. Therefore, in this research paper we will (a) analyze the current architecture of the system of a company dedicated to providing tourism services in the city of Cuenca, Ecuador; (b) design an architecture based on microservices; and (c) develop a prototype to help us validate the feasibility of the proposed architecture. Thus, contributing to better performance, applying fault tolerance, and the possibility of both horizontal and vertical scaling in the microservices architecture system.","","979-8-3503-2883-7","10.1109/CONISOFT58849.2023.00012","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10568257","containers;continuous integration;cloud computing;devOps;microservices;migration;monitoring;monolithic architecture;refactoring;software architecture;web development","Fault tolerance;Scalability;Fault tolerant systems;Urban areas;Microservice architectures;Computer architecture;Companies","","","","24","IEEE","27 Jun 2024","","","IEEE","IEEE Conferences"
"Fortifying Information Security: Security Implications of Microservice and Monolithic Architectures","S. Nemmini; S. Abhishek; A. T; S. Raj","Department of Computer Science and Engineering, Amrita School of Computing, Amrita Vishwa Vidyapeetham, Amritapuri, India; Department of Computer Science and Engineering, Amrita School of Computing, Amrita Vishwa Vidyapeetham, Amritapuri, India; Department of Computer Science and Engineering, Amrita School of Computing, Amrita Vishwa Vidyapeetham, Amritapuri, India; Vrije Universiteit Brussel, MACS, Pleinlaan 2, Brussels, Belgium",2023 16th International Conference on Security of Information and Networks (SIN),"27 Mar 2024","2023","","","1","6","Monolithic architecture is a traditional and primary method for creating software programs. On the other hand, monolithic architecture's shortcomings were addressed by developing the unique evolutionary technique known as microservice architecture, which led to businesses' widespread acceptance of this design. However, the microservice design raises several security concerns, particularly web application security, a significant business problem. The purpose of this study is to analyse and contrast the security and safety features of monolithic and microservice architectures, emphasizing the security issues that each presents and the solutions that have been proposed to address them. Examining both architectures security risks and investigating viable mitigation strategies are covered in the paper. Microservices improve security and flexibility but also need a more complex and dynamic security strategy.","","979-8-3503-4321-2","10.1109/SIN60469.2023.10474925","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10474925","Monolithic;Architecture;Security;Microservices;Attacks;Web Application;Remote","Scalability;Microservice architectures;Information security;Computer architecture;Software;Vectors;Application security","","1","","19","IEEE","27 Mar 2024","","","IEEE","IEEE Conferences"
"Microservices-based architecture for fault diagnosis in tele-rehabilitation equipment operated via Internet","J. M. Alvarez Q.; J. A. Sanabria O.; J. I. Garcia M.","Universidad del Valle, Cali, CO; Universidad del Valle, Cali, CO; Universidad del Valle, Cali, CO",2019 IEEE Latin American Test Symposium (LATS),"2 May 2019","2019","","","1","6","This paper presents the design of a microservices based architecture allows early fault detection and diagnosis on a remote controlled physical rehabilitation machine using the Internet as a communication channel. Aforementioned architecture is composed of three layers: the low layer which collects variables from the rehabilitation machine components, using Internet of Things protocols. The middle layer which analyses the provided variables and diagnoses the component status, using fuzzy logic. And finally, the upper layer which makes decisions depending on the diagnosis data. The proposed architecture is suitable for heterogeneous systems.This paper also shows how this architecture fulfills the specific and rigorous safety measures for critical mission devices like technical aids for health-care.","2373-0862","978-1-7281-1756-0","10.1109/LATW.2019.8704556","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8704556","Fault diagnosis;Telemedicine;Internet of Things;Software architecture","Computer architecture;Fault detection;Telemedicine;Medical treatment;Reliability;Protocols","","5","","35","IEEE","2 May 2019","","","IEEE","IEEE Conferences"
"Research on SFC Deployment with Variable Granularity based on Microservice Architecture","J. Zhang; X. Wu; Y. Zhang; C. Li","School of Information &#x0026; Electronic Engineering, Zhejiang Gongshang University, HangZhou, China; School of Information &#x0026; Electronic Engineering, Zhejiang Gongshang University, HangZhou, China; School of Information &#x0026; Electronic Engineering, Zhejiang Gongshang University, HangZhou, China; School of Information &#x0026; Electronic Engineering, Zhejiang Gongshang University, HangZhou, China",2021 IEEE 3rd International Conference on Frontiers Technology of Information and Computer (ICFTIC),"24 Dec 2021","2021","","","478","482","Network function virtualization (NFV) solves the problem of inflexibility in traditional network, but there are still some problems with service function chain (SFC) in some usage scenarios. Aiming at the optimization problem of end-to-end delay and resource overhead of SFC in NFV. Firstly, according to the user's service function connection request, the VNF is functionally divided into the most fine-grained atomNF according to the operation logic which is based on microservice architecture, and the redundant logical units are eliminated. Then, the path is planned according to the resource status of nodes and deployment units. Finally, the atomNF in the same node is aggregated in a single container. Simulation results show that the proposed method can optimize the end-to-end delay and node resource utilization.","","978-1-6654-0605-5","10.1109/ICFTIC54370.2021.9647178","Natural Science Foundation of China(grant numbers:61871468); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9647178","component;Network Function Virtualizatio;Service Function Chain;Microservice;Resource utilization","Service function chaining;NP-hard problem;Heuristic algorithms;Simulation;Microservice architectures;Computer architecture;Approximation algorithms","","1","","10","IEEE","24 Dec 2021","","","IEEE","IEEE Conferences"
"Paradigm Shift From Monolithic to Microservices","D. Saxena; B. Bhowmik","Department of Computer Science and Engineering, Swami Vivekananda NoC Lab, BRICS Lab, National Institute of Technology Karnataka, Mangalore, Bharat; Department of Computer Science and Engineering, Swami Vivekananda NoC Lab, BRICS Lab, National Institute of Technology Karnataka, Mangalore, Bharat",2023 IEEE International Conference on Recent Advances in Systems Science and Engineering (RASSE),"25 Dec 2023","2023","","","1","7","Microservices have been making waves among forward-thinking application development organizations. In the realm of software development, software architecture holds paramount importance because it serves as a guiding force to shape the entire life cycle of a software system. Software architecture is a foundation for complex digital components built upon a software system. Within this domain, two prevalent paradigms, monolithic and service-oriented architecture (SOA), stand distinct. While monolithic simplifies development using its integrated structure, SOA reduces complexity through modular services. However, both paradigms suffer severe scalability, development cycle, and flexibility challenges. Subsequently, microservice architecture as a modern paradigm emerges to overcome these challenges. This paper presents an in-depth analysis of the paradigm shift from monolithic to microservice architecture. It begins with exploring the monolithic and SOA conceptual landscape and their pros and cons. After that, we delve into the microservice platform, including its basic architecture and implementation stages. Furthermore, we provide the trend of the paradigm shift that highlights the recent developments in the field and identifies the research challenges associated with it. Thus, the paper brings multiple research dimensions for the researchers and lets the software and application development teams improve resilience and expedite their time to market.","","979-8-3503-4167-6","10.1109/RASSE60029.2023.10363466","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10363466","Monolithic Architecture;Service Oriented Architecture;Microservice Architecture;Deployment;Scalability","Technological innovation;Software architecture;Shape;Scalability;Microservice architectures;Time to market;Computer architecture","","5","","39","IEEE","25 Dec 2023","","","IEEE","IEEE Conferences"
"A microservice based reference architecture model in the context of enterprise architecture","Yale Yu; H. Silveira; M. Sundaram","Xi'an Peihua University, Xi'an, China; Infosys Australia, Melbourne, Australia; Infosys Australia, Melbourne, Australia","2016 IEEE Advanced Information Management, Communicates, Electronic and Automation Control Conference (IMCEC)","2 Mar 2017","2016","","","1856","1860","In the service oriented, customer experience centric and customer changing demand driven market environment, ICT is becoming the leading enabler and partner of the modern enterprise business. More and more companies are transformed into more or pure digital style and virtual organized enterprises that are enabled and supported by a group of business oriented and microservice based applications and modules that are new to most of the companies and enterprises, both business and technical solution staff. This paper presents a microservice based reference architecture model with clear understanding and definition of the concept of microservice and key architectural components and building blocks for implementing and managing enterprise microservices in the context of enterprise architecture. This reference architecture model can be used as the pragmatic guidance for both business and IT professionals when they develop the enterprise IT transformation architecture solutions so that the API and microservice relevant technologies could be used properly at enterprise level without confusion. This paper also highlights a set of key architectural issues and provides corresponding recommendations when APIs and microsevices are leveraged within a company at enterprise level.","","978-1-4673-9613-4","10.1109/IMCEC.2016.7867539","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7867539","service oriented architecture;microservice;API;enterprise architecture;domain driven design;domain architecture;API gateway;API platform","Measurement;Context;Sensors;Runtime;Routing;Visualization;Rats","","4","5","8","IEEE","2 Mar 2017","","","IEEE","IEEE Conferences"
"Model-based engineering for microservice architectures using Enterprise Integration Patterns for inter-service communication","R. Petrasch","Department of Computer Science, Thammasat University, Bangkok, Thailand",2017 14th International Joint Conference on Computer Science and Software Engineering (JCSSE),"7 Sep 2017","2017","","","1","4","Microservices need to communicate via inter-service communication mechanism. This leads to service integration that requires the aspect of messaging and event handling to be considered during the specification of microservices. Therefore, the application of Enterprise Integration Patterns (EIP) in the context of the design of microservice architectures seems to be a promising approach for microservice architecture engineering. This paper presents a model-based approach for microservice architectural design and service integration through formal models using the UML and UML profiles. A domain model (bounded contexts) is used as a starting point. UML component diagrams are extended so that microservices can be modeled. Enterprise integration patterns are applied to the microservice diagrams providing a precise microservice specification that can be used for further simulations, transformations, or code generation tasks.","","978-1-5090-4834-2","10.1109/JCSSE.2017.8025912","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8025912","microservice architecture;enterprise integration pattern;EIP;UML;UML profile;model-driven engineering;model-driven architecture;microservice architecture engineering","","","23","1","20","IEEE","7 Sep 2017","","","IEEE","IEEE Conferences"
"Semi-automated Cross-Component Issue Management and Impact Analysis","S. Speth","Institute of Software Engineering, University of Stuttgart, Stuttgart, Germany",2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE),"20 Jan 2022","2021","","","1090","1094","Despite microservices and other component-based architecture styles being state of the art in research for many years by now, issue management across the boundaries of a single component is still challenging. Components that were developed independently and can be used independently are joined together in the overall architecture, which results in dependencies between those components. Due to these dependencies, bugs can result that propagate along the call chains through the architecture. Other types of issues, such as the violation of non-functional quality properties, can also impact other components. However, traditional issue management systems end at the boundaries of a component, making tracking of issues across different components time-consuming and error-prone. Therefore, a need for automation arises for cross-component issue management, which automatically puts issues of the independent components in the correct mutual context, creating new cross-component issues and syncing cross-component issues between different components. This automation could enable developers to manage issues across components as efficiently as possible and increases the system’s quality. To solve this problem, we propose an initial approach for semi-automated cross-component issue management in conjunction with service-level objectives based on our Gropius system. For example, relationships between issues of the same or different components can be predicted using classification to identify dependencies of issues across component boundaries. In addition, we are developing a system to model, monitor and alert service-level objectives. Based on this, the impact of such quality violations on the overall system and the business process will be analysed and explained through cross-component issues.","2643-1572","978-1-6654-0337-5","10.1109/ASE51524.2021.9678830","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9678830","Automated Issue Management;Component-based Architectures;Cross-Component Issues;SLO Monitoring","Automation;Computer bugs;Microservice architectures;Computer architecture;Monitoring;Software engineering;Business","","5","","28","IEEE","20 Jan 2022","","","IEEE","IEEE Conferences"
"Proposed Methodology for Designing a Microservice Architecture","M. L. Fanomezana; A. M. Rapatsalahy; N. R. Razafindrakoto; C. Bădică","Laboratory for Mathematical and Computer Applied to the Development Systems (LIMAD), University of Fianarantsoa, Madagascar; Laboratory for Mathematical and Computer Applied to the Development Systems (LIMAD), University of Fianarantsoa, Madagascar; Laboratory of Multidisciplinary Applied Research (LRAM), University of Antananarivo, Madagascar; Faculty of Automation, Computers and Electronics (ACE), University of Craiova, Romania",2022 23rd International Carpathian Control Conference (ICCC),"27 Jun 2022","2022","","","303","308","The changing needs of the enterprise require the manageability of its information system. Therefore, it is crucial to absorb these changes by orienting the design of the information system towards a modern architecture that decomposes the monolithic application into autonomous services. This paper proposes an enterprise architecture methodological framework to design the so-called microservice architecture known as MSA. Our approach is to describe the similarities between the MSA style of architecture and the service-oriented architecture known as SOA, the latter having a rich research literature focused on exploiting the methodology for designing services in a service architecture. The result of the comparative study indicates that the ideology for designing a SOA is identical as MSA which ultimately relies on decomposing applications into smaller components with a smaller and more manageable footprint. Thus, we conclude that it is preferable to use the adapted enterprise architecture methodology for SOA to design MSA.","","978-1-6654-6636-3","10.1109/ICCC54292.2022.9805930","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9805930","SOA;MSA;UML;Monolithic Architecture;MDA;software architecture design methodology;Praxeme","Design methodology;Microservice architectures;Information systems","","3","","37","IEEE","27 Jun 2022","","","IEEE","IEEE Conferences"
"Perspectives for Selecting Cloud Microservices","M. França; C. Werner","Systems Engineering and Computer Science Program, IBM, Rio de Janeiro, Brazil; Systems Engineering and Computer Science Program, IBM, Rio de Janeiro, Brazil",2018 IEEE International Conference on Software Architecture Companion (ICSA-C),"13 Aug 2018","2018","","","56","59","In the era of Cloud platforms, microservices have multiplied, becoming a de facto standard for software reuse. With so many alternatives, a challenge still open is to find the most adequate one, given a set of requirements and priorities. In this context, we present DIRECTOR, a Cloud microservice selection framework based on different perspectives: technical, social and semantical. Emerging results prove that it can support software acquisition via discovery and comparison of microservices, being able to recommend the fittest among hundreds of candidates.","","978-1-5386-6585-5","10.1109/ICSA-C.2018.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8432178","Software Architecture;Software Acquisition;Cloud Computing;Microservice;Cognitive Computing","Quality of service;Cloud computing;Artificial intelligence;Service-oriented architecture;Metadata;Standards","","2","","16","IEEE","13 Aug 2018","","","IEEE","IEEE Conferences"
"Building Secure Environments for Microservices","B. Northern; D. Ulybyshev","Department of Computer Science, Tennessee Technological University, Cookeville, United States of America; Department of Computer Science, Tennessee Technological University, Cookeville, United States of America",2022 International Workshop on Secure and Reliable Microservices and Containers (SRMC),"12 Dec 2022","2022","","","27","31","Microservice-based architectures are widely used in modern software and the number of cyber attacks on software is increasing. It is essential to make microservices more reliable and resilient against cyber attacks. In this paper, we propose a methodology to detect configurations of computing systems that host microservices and containers, evaluate cyber risks of their essential components in an automatic continuous mode, and reconfigure environments aiming to make them less vulnerable against cyber attacks. Our solution supports multiple operating systems and hardware configurations. For cyber risk evaluation, our approach relies on a public database of Common Vulnerabilities and Exposures for software and hardware, as well as penetration testing and static analysis. Furthermore, the cyber risk evaluation model considers the attributes of microservices, such as their privilege level. We will show least and most vulnerable configurations for computing systems that use popular operating systems and applications.","","978-1-6654-5539-8","10.1109/SRMC57347.2022.00008","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9973086","microservices;cyber risk assessment;cyber resiliency","Operating systems;Microservice architectures;Static analysis;Computer architecture;Containers;Software;Hardware","","2","","12","IEEE","12 Dec 2022","","","IEEE","IEEE Conferences"
"A Rule-based System for Automated Generation of Serverless-Microservices Architecture","K. J. P. G. Perera; I. Perera","Department of Computer Science and Engineering, University Of Moratuwa, Katubedda, Sri Lanka; Department of Computer Science and Engineering, University Of Moratuwa, Katubedda, Sri Lanka",2018 IEEE International Systems Engineering Symposium (ISSE),"29 Nov 2018","2018","","","1","8","Software being ubiquitous in today's systems and business operations, it's highly important to structure the high-level architecture of a software application accordingly to deliver the expected customer requirements while accounting for quality measures such as scalability, high availability and high performance. We propose The Architect, a rule-based system for serverless-microservices based high-level architecture generation. In the process of auto generating serverless-microservices high-level architecture, TheArchitect will preserve the highlighted quality measures. It will also provide a tool based support for the high-level architecture designing process of the software architect. Any software developer will be able to use TheArchitect to generate a proper architecture minimizing the involvement of a software architect. Furthermore, the positives of microservices and serverless technologies have made a significant impact on the software engineering community in terms of shifting from the era of building large monolith applications containing overly complex designs, to microservices and serverless based technologies. Hence The Architect focuses on generating best fitted microservices and serverless based high-level architecture for a given application.","","978-1-5386-4446-1","10.1109/SysEng.2018.8544423","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8544423","Software Architecture;Microservices Architecture;Serverless Architecture;Rule-based Systems;Domain Specific Software Architecture","Computer architecture;Software;Knowledge based systems;Calculators;Software architecture;Architecture;Generators","","3","","26","IEEE","29 Nov 2018","","","IEEE","IEEE Conferences"
"Design and implementation of online judgment system based on microservice architecture and Docker","J. Liang; C. Tu","Chengdu University of Technology, Chengdu, China; Chengdu University of Technology, Chengdu, China","2022 5th International Conference on Advanced Electronic Materials, Computers and Software Engineering (AEMCSE)","16 Nov 2022","2022","","","749","753","The online judgment system tests whether the source code can pass the problem’s test cases in the programming contests. Users only need to click the submit button on the front-end page, and the system will return the judge results after a certain period. Although there are many online judgment systems for programming contests, there are few online judgment systems for programming teaching and adopting a microservice architecture. This paper aims to design and implement an online judgment system for programming teaching. The system’s front-end adopts Vue and Element-Ui framework, and the back-end adopts microservice architecture for development. On the one hand, using the system can improve students' programming ability and teachers' efficiency and accuracy in marking programming assignments. On the other hand, the system has an online contest function, which can hold contests or be used as an examination platform to assess students' actual levels.","","978-1-6654-8474-9","10.1109/AEMCSE55572.2022.00150","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9948274","component;online judgment;programming teaching;microservice;Vue","Computers;Codes;Source coding;Education;Microservice architectures;Systems architecture;Computer architecture","","1","","8","IEEE","16 Nov 2022","","","IEEE","IEEE Conferences"
"Architecture-Based Cross-Component Issue Management and Propagation Analysis","S. Speth","Institute of Software Engineering, Stuttgart, Baden-Wiirttemberg, Germany",2024 IEEE/ACM 46th International Conference on Software Engineering: Companion Proceedings (ICSE-Companion),"20 Jun 2024","2024","","","145","149","This paper addresses the challenge of issue management in complex, component-based software architectures. In these systems, issues in one component often propagate across the architecture along the call chains. Yet, traditional issue management systems (IMSs) are limited to the boundaries of a single component and lack mechanisms for managing issues concerning their architectural dependencies. We present Gropius, a novel method that enhances issue management by integrating issues in an architecture graph. Gropius allows semantically linking issues across different components, synchronizes changes with underlying IMSs like GitHub, and allows modeling the architecture ontologically by defining the components' semantics at runtime. We explore whether combining issue and architecture management improves the development of component-based architectures regarding issue management. We hypothesize that this method will improve the efficiency and effectiveness of identifying and resolving cross-component issues, maintaining a comprehensive view of the application's state.","2574-1934","979-8-4007-0502-1","10.1145/3639478.3639814","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10554959","Issue Management;Issue Propagation Analysis;Component-based Software Architecture;Model-based Analysis","Component architectures;Runtime;Software architecture;Semantics;Text categorization;Computer architecture;Predictive models","","1","","31","","20 Jun 2024","","","IEEE","IEEE Conferences"
"Microservice Architectures for Scalability, Agility and Reliability in E-Commerce","W. Hasselbring; G. Steinacker","Software Engineering Group, Kiel University, Kiel, Germany; Software Engineering Group, Kiel University, Kiel, Germany",2017 IEEE International Conference on Software Architecture Workshops (ICSAW),"26 Jun 2017","2017","","","243","246","Microservice architectures provide small services that may be deployed and scaled independently of each other, and may employ different middleware stacks for their implementation. Microservice architectures intend to overcome the shortcomings of monolithic architectures where all of the application's logic and data are managed in one deployable unit. We present how the properties of microservice architectures facilitate scalability, agility and reliability at otto.de, which is one of the biggest European e-commerce platforms. In particular, we discuss vertical decomposition into self contained systems and appropriate granularity of microservices as well as coupling, integration, scalability and monitoring of microservices at otto.de. While increasing agility to more than 500 live deployments per week, high reliability is achieved by means of automated quality assurance with continuous integration and deployment.","","978-1-5090-4793-2","10.1109/ICSAW.2017.11","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7958496","Microservices;Scalability;Agility;Reliability;E-Commerce","Computer architecture;Scalability;Pipelines;Software;Business;Reliability;Monitoring","","95","1","16","IEEE","26 Jun 2017","","","IEEE","IEEE Conferences"
"RM2MS: A Tool for Automatic Identification of Microservices from Requirements Models","Y. Li; Y. Zhang; Y. Yang; W. Wang; Y. Yin","School of Software, Beihang University, Beijing, China; School of Software, Beihang University, Beijing, China; School of Software, Beihang University, Beijing, China; Faculty of Information Technology, Beijing University of Technology, Beijing, China; School of Software, Beihang University, Beijing, China",2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C),"22 Dec 2023","2023","","","50","54","Microservices identification is the key development process of cloud-native applications. It focuses on decomposing system into decoupling autonomous components to support development and deployment independently. This process requires sophisticated human efforts for careful requirements analysis and validation to identify the appropriate microservices boundary inside system modules. Our previous work RM2PT can help to achieve a validated requirements model through automatically generating prototypes from original requirements models. The validated requirements model contains the precise definitions of functionality and data structure that can help in microservices identification. In this paper, we present a tool named RM2MS to further alleviate the problem of cloud-native application development to support automatic identification of microservices from the validated requirements model. RM2MS can automatically analyse the relationship between functionality and data structure, and trade-off non-functional factors for microservices identification. We demonstrate that the microservice architecture solution generated by RM2MS demonstrates a average gain of 27.1% over the manual approach in three key metrics(Function-Cohesion, Modularity, and Instability), while exhibiting efficiency that surpasses the manual process by more than 10-fold through five case studies. The proposed approach can be further extended and applied for the cloud-native application development in the software industry. The tool can be downloaded at https://rm2pt.com/advs/rm2ms, and a demo video casting its features is at https://www.youtube.com/watch?v=T71vQDasOSw","","979-8-3503-2498-3","10.1109/MODELS-C59198.2023.00018","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10350596","Microservices;Requirements Model;Software Architecture;System Function Decomposing","Casting;Microservice architectures;Prototypes;Manuals;Data structures;Software;Model driven engineering","","1","","16","IEEE","22 Dec 2023","","","IEEE","IEEE Conferences"
"Monolithic to Microservices Architecture - A Framework for Design and Implementation","A. Parikh; P. Kumar; P. Gandhi; J. Sisodia","Department of Information Technology, Sardar Patel Institute of Technology, Mumbai, India; Department of Information Technology, Sardar Patel Institute of Technology, Mumbai, India; Department of Information Technology, Sardar Patel Institute of Technology, Mumbai, India; Department of Information Technology, Sardar Patel Institute of Technology, Mumbai, India","2022 International Conference on Computer, Power and Communications (ICCPC)","23 Mar 2023","2022","","","90","96","Systems for scalable and reliable software applications can be realised only after a thorough consideration of the design and architecture of the underlying components. The ubiquitous use of distributed architecture to design and implement building applications serves as an impetus to delve into analysing various architectural models such as monoliths and microservices. Through the design and implementation of a modern banking system, this research paper makes a comprehensive analysis of the different aspects of monolithic and microservice architectures. The paper highlights various logistical concerns and strategies - from discussing database patterns and communication strategies to deployment methods. The paper also outlines a step-wise, algorithmic approach to aid software engineering practitioners in migrating from a monolith to a microservice. The aforementioned approach was implemented in developing the banking application, and the result was a modular, functional and scalable microservice system. The quantitative and qualitative analysis of the results were encouraging, which attests to the feasibility of the proposed methodology.","","979-8-3503-9784-0","10.1109/ICCPC55978.2022.10072238","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10072238","Microservices;Distributed Computing;Software Architecture;Interprocess Communication;Monolith","Databases;Architecture;Software algorithms;Microservice architectures;Computer architecture;Banking;Reliability engineering","","","","22","IEEE","23 Mar 2023","","","IEEE","IEEE Conferences"
"Smart city service system engineering based on microservices architecture: Case study: Government of tangerang city","T. Hidayat; Suhardi; N. B. Kurniawan","Institut Teknologi Bandung, Bandung, Jawa Barat, ID; Institut Teknologi Bandung, Bandung, Jawa Barat, ID; Institut Teknologi Bandung, Bandung, Jawa Barat, ID",2017 International Conference on ICT For Smart Society (ICISS),"12 Feb 2018","2017","","","1","7","Smart City can be viewed as a service system so that the vision of a city to create valuable services for the citizens can be realized by creating a good service system. In this paper the good service system engineering referred to will be realized by using service system engineering methodology with the top-down and holistic approach. This methodology is used to produce a service system design as a solution to solve the problems that arise with current approaches. This research uses the government of Tangerang City as a case study. The contribution of this research is to provide systematic guidance on how to apply service system engineering methodology. The result of this study is a smart city service system engineering based on microservices architecture.","","978-1-5386-2330-5","10.1109/ICTSS.2017.8288864","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8288864","smart city;service system engineering;service oriented architecture;microservices","Smart cities;Technological innovation;Systems engineering and theory;Government;Service-oriented architecture","","8","","30","IEEE","12 Feb 2018","","","IEEE","IEEE Conferences"
"CARLOS: An Open, Modular, and Scalable Simulation Framework for the Development and Testing of Software for C-ITS","C. Geller; B. Haas; A. Kloeker; J. Hermens; B. Lampe; T. Beemelmanns; L. Eckstein","Research Area Vehicle Intelligence & Automated Driving, Institute for Automotive Engineering, RWTH Aachen University, Germany; Research Area Vehicle Intelligence & Automated Driving, Institute for Automotive Engineering, RWTH Aachen University, Germany; Research Area Vehicle Intelligence & Automated Driving, Institute for Automotive Engineering, RWTH Aachen University, Germany; Research Area Vehicle Intelligence & Automated Driving, Institute for Automotive Engineering, RWTH Aachen University, Germany; Research Area Vehicle Intelligence & Automated Driving, Institute for Automotive Engineering, RWTH Aachen University, Germany; Research Area Vehicle Intelligence & Automated Driving, Institute for Automotive Engineering, RWTH Aachen University, Germany; Research Area Vehicle Intelligence & Automated Driving, Institute for Automotive Engineering, RWTH Aachen University, Germany",2024 IEEE Intelligent Vehicles Symposium (IV),"15 Jul 2024","2024","","","3100","3106","Future mobility systems and their components are increasingly defined by their software. The complexity of these cooperative intelligent transport systems (C-ITS) and the ever-changing requirements posed at the software require continual software updates. The dynamic nature of the system and the practically innumerable scenarios in which different software components work together necessitate efficient and automated development and testing procedures that use simulations as one core methodology. The availability of such simulation architectures is a common interest among many stakeholders, especially in the field of automated driving. That is why we propose CARLOS - an open, modular, and scalable simulation framework for the development and testing of software in C-ITS that leverages the rich CARLA and ROS ecosystems. We provide core building blocks for this framework and explain how it can be used and extended by the community. Its architecture builds upon modern microservice and DevOps principles such as containerization and continuous integration. In our paper, we motivate the architecture by describing important design principles and showcasing three major use cases - software prototyping, data-driven development, and automated testing. We make CARLOS and example implementations of the three use cases publicly available at github.com/ika-rwth-aachen/carlos.","2642-7214","979-8-3503-4881-1","10.1109/IV55156.2024.10588502","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10588502","","Software prototyping;Intelligent vehicles;Architecture;Ecosystems;Microservice architectures;Computer architecture;Software","","","","39","IEEE","15 Jul 2024","","","IEEE","IEEE Conferences"
"A Dashboard for Microservice Monitoring and Management","B. Mayer; R. Weinreich","Johannes Kepler University Linz, Linz, Austria; Johannes Kepler University Linz, Linz, Austria",2017 IEEE International Conference on Software Architecture Workshops (ICSAW),"26 Jun 2017","2017","","","66","69","We present an experimental dashboard for microservice monitoring and management. The dashboard can be adapted to different stakeholder needs and it supports the integration of different monitoring infrastructures for collecting microservice runtime data. Aside from runtime information, the dashboard also supports the integration of other information sources for providing static information about microservices and microservice development. We describe the main motivation for developing the dashboard, explain the basic concepts and present important usage scenarios and views currently supported in the dashboard.","","978-1-5090-4793-2","10.1109/ICSAW.2017.44","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7958458","Microservices;microservice monitoring;microservice management;microservice dashboard","Conferences;Software architecture","","33","","8","IEEE","26 Jun 2017","","","IEEE","IEEE Conferences"
"A Method for Designing and Analyzing Automotive Software Architecture: A Case Study for an Autonomous Electric Vehicle","J. Lee; L. Wang","Institute of New Energy Vehicle, First Automotive Works Group, Changchun, China; College of Computer Science and Technology, Zhejiang University, Hangzhou, China",2021 International Conference on Computer Engineering and Artificial Intelligence (ICCEAI),"4 Oct 2021","2021","","","20","26","Software complexity is increased in automotive systems because many software functions are required for autonomous driving, electrified vehicles, and connected cars. In addition, autonomous driving requires centralized software that generally decreases evolvability with many connections. Thus, the automotive industry adopted the microservice architecture within the service-oriented architecture (SOA), which was already being used in distributed computing environments in the information and communication technology (ICT) industry. However, the software characteristics of an automotive system are different from those of an ICT system. Automotive software generally fulfills safety and real-time requirements that are not required in ICT software. Another challenge is integrating electric control units (ECUs) because software platforms supporting SOA require relatively high computational power and network bandwidth, which increases ECU cost. Thus, the deployment of software functions must be considered before integrating ECUs to find an optimal design solution for evolvability, dependability, real-time performance, cost, etc. However, many OEMs integrate ECUs based on deploying vehicular features without software architecture. It causes optimality problems during integrating ECUs. We propose component-based sensor-process-actuator architectural style for high-level architecture to handle quality attributes. Software architecture for an autonomous electrified vehicle will be presented with the proposed architectural style. The architecture is used to deploy software components and integrated ECUs with empirical quantitative analysis. Four design patterns for dependability with the architectural style will also be introduced.","","978-1-6654-3960-2","10.1109/ICCEAI52939.2021.00004","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9544320","automotive software architecture;automotive E/E architecture;autonomous electrified vehicle;service-oriented architecture;microservice","Industries;Costs;Software architecture;Statistical analysis;Computer architecture;Software;Real-time systems","","9","","25","IEEE","4 Oct 2021","","","IEEE","IEEE Conferences"
"A Multi-Level Self-Adaptation Approach For Microservice Systems","S. Zhang; M. Zhang; L. Ni; P. Liu","College of Information and Communication, National University of Defense Technology, Xi’an, China; College of Information and Communication, National University of Defense Technology, Xi’an, China; College of Information and Communication, National University of Defense Technology, Xi’an, China; College of Computer National, University of Defense Technology, Hunan, China",2019 IEEE 4th International Conference on Cloud Computing and Big Data Analysis (ICCCBDA),"30 May 2019","2019","","","498","502","Microservice technology that emphasizes self-management and lightweight of software systems has received great interests in both academic and industry fields of software engineering. The highly self-contained components and the dynamic running instance of microservice architecture require more flexible and diverse self-adaptation at multiple levels, which poses challenges to existing self-adaptation technologies. This paper proposes a multi-level self-adaptation approach to enrich the self-adaptation capabilities of microservice architecture and technologies. In our approach, the self-adaptation of microservice system can occur at both microservice level and instance level to satisfy various self-adaptation requirements. Based on the abstract model of self-adaptive microservice systems, the operation primitives to accomplish self-adaptation at different levels are proposed. We also present a microservice self-adaptation description language MSDL to specify the self-adaptation logics at multiple levels and implement a supporting platform by extending Kubernetes. A case is developed to illustrate our approach and experiments are conducted to show its effectiveness and availability.","","978-1-7281-1410-1","10.1109/ICCCBDA.2019.8725647","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8725647","self-adaptive;microservice;model;primitives;platform","Software systems;Adaptation models;Computer architecture;Service-oriented architecture;Containers;Time factors","","11","","18","IEEE","30 May 2019","","","IEEE","IEEE Conferences"
"A BlackBox Approach to Profile Runtime Execution Dependencies in Microservices","X. Gu; J. Liu; Q. Wang","Louisiana State University, Baton Rouge, USA; Louisiana State University, Baton Rouge, USA; Louisiana State University, Baton Rouge, USA",2023 IEEE 9th International Conference on Collaboration and Internet Computing (CIC),"19 Feb 2024","2023","","","116","120","Loosely-coupled and lightweight microservices running in containers are likely to form complex execution dependencies inside the system. The execution dependency arises when two execution paths partially share component microservices, resulting in potential runtime performance interference. In this paper, we present a blackbox approach that utilizes legitimate HTTP requests to accurately profile the internal pairwise dependencies of all supported execution paths in the target microservices application. Concretely, we profile the pairwise dependency of two execution paths through performance interference analysis by sending bursts of two types of requests simultaneously. By characterizing and grouping all the execution paths based on their pairwise dependencies, the black box approach can derive a clear dependency graph(s) of the entire backend of the microservices application. We validate the effectiveness of the blackbox approach through experiments of open-source microservices benchmark applications running on real clouds (e.g., EC2, Azure).","","979-8-3503-3912-3","10.1109/CIC58953.2023.00024","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10429940","Microservices;performance analysis;dependency","Cloud computing;Runtime;Microservice architectures;Closed box;Interference;Production;Benchmark testing","","","","24","IEEE","19 Feb 2024","","","IEEE","IEEE Conferences"
"Acceptance Tests over Microservices Architecture using Behaviour-Driven Development","H. R. Lima; K. C. Souza; L. V. de Paula; L. M. C. e Martins; W. F. Giozza; R. T. de Sousa","Laboratório Latitude, Universidade de Brasília (UnB), Brasília, DF, Brasil; Laboratório Latitude, Universidade de Brasília (UnB), Brasília, DF, Brasil; Laboratório Latitude, Universidade de Brasília (UnB), Brasília, DF, Brasil; Laboratório Latitude, Universidade de Brasília (UnB), Brasília, DF, Brasil; Laboratório Latitude, Universidade de Brasília (UnB), Brasília, DF, Brasil; Laboratório Latitude, Universidade de Brasília (UnB), Brasília, DF, Brasil",2021 16th Iberian Conference on Information Systems and Technologies (CISTI),"12 Jul 2021","2021","","","1","6","The application of software quality assurance practices upon microservices architectures can be somehow challenging, mainly caused by the high granularity with low coupling of its software components. Since this granularity is not visible to the end user, it is difficult to assess the whole system behaviour. This paper proposes the use of Behaviour-Driven Development (BDD) technique on software development based on microservices architecture, by building test scenarios written by non-technical users and developing automated tests on API REST services layer, enabling the ability to match system results to end-user needs. Using a real scenario of a pay roll system, the applicability of the Behave BDD tool was assessed for acceptance tests automation.","2166-0727","978-989-54659-1-0","10.23919/CISTI52073.2021.9476643","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9476643","acceptance tests;microservices;Behaviour-Driven Development (BDD)","Couplings;Automation;Architecture;Buildings;Computer architecture;Software quality;Tools","","2","","0","","12 Jul 2021","","","IEEE","IEEE Conferences"
"A Comparative Study of Monolithic and Microservices Architectures in Machine Learning Scenarios","S. Kleftakis; A. Mavrogiorgou; N. Zafeiropoulos; K. Mavrogiorgos; A. Kiourtis; D. Kyriazis","Department of Digital Systems, University of Piraeus, Piraeus, Greece; Department of Digital Systems, University of Piraeus, Piraeus, Greece; Department of Digital Systems, University of Piraeus, Piraeus, Greece; Department of Digital Systems, University of Piraeus, Piraeus, Greece; Department of Digital Systems, University of Piraeus, Piraeus, Greece; Department of Digital Systems, University of Piraeus, Piraeus, Greece",2022 IEEE International Conference on Computing (ICOCO),"2 Feb 2023","2022","","","352","357","Choosing the most suitable architecture for applications is not an easy decision. While the software giants have almost all put in place the microservices architecture, on smaller platforms such decision it is not so obvious. In the healthcare domain and specifically when accomplishing Machine Learning (ML) tasks in this domain, considering its special characteristics, the decision should be made based on specific metrics. In the context of the beHEALTHIER platform, a platform that is able to handle heterogeneous healthcare data towards their successful management and analysis by applying various ML tasks, such research gap was fully investigated. There has been conducted an experiment by installing the platform in three (3) different architectural ways, referring to the monolithic architecture, the clustered microservices architecture exploiting docker compose, and the microservices architecture exploiting Kubernetes cluster. For these three (3) environments, time-based measurements were made for each Application Programming Interface (API) of the diverse platform’s functionalities (i.e., components) and useful conclusions were drawn towards the adoption of the most suitable software architecture.","","978-1-6654-8996-6","10.1109/ICOCO56118.2022.10031648","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10031648","Software Architecture;Monolithic;Microservices;MSA;Docker Compose;Kubernetes;Machine Learning;Healthcare","Training;Software architecture;Microservice architectures;Computer architecture;Medical services;Machine learning;Software","","1","","43","IEEE","2 Feb 2023","","","IEEE","IEEE Conferences"
"Microservices Architecture for Improved Maintainability and Traceability in MVC-Based E-Learning Platforms: RoadMap for Future Developments","S. Bataieneh; A. Ziadeh; L. F. Al-Qora'n","Department of Software Engineering, Philadelphia University, Amman, Jordan; Department of Software Engineering, Philadelphia University, Amman, Jordan; Department of Software Engineering, Philadelphia University, Amman, Jordan",2024 15th International Conference on Information and Communication Systems (ICICS),"22 Aug 2024","2024","","","1","6","E-learning platforms often struggle with maintainability and traceability due to the traditionally employed monolithic architecture. Such websites are faced with managing complex codebases and tracking user interactions and system behaviors efficiently. These challenges are met by migrating to microservices architecture which permits modularization as well as autonomy of components by developers. This paper demonstrates how microservices can improve maintainability by allowing independent deployment, scaling up or down, upgrading services, and fostering traceability via distributed monitoring and logging systems. This can be demonstrated by analyzing a case of transitioning an MVC-based e-learning platform to microservices and showing how this could offer practical insights for sustainable development practices that optimize user experiences.","2573-3346","979-8-3315-4076-0","10.1109/ICICS63486.2024.10638288","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10638288","Microservices architecture;Maintainability;Traceability;MVC design pattern;E-learning platforms;Modularization;Independent deployment","Electronic learning;Communication systems;Microservice architectures;Sustainable development;Monitoring","","","","34","IEEE","22 Aug 2024","","","IEEE","IEEE Conferences"
"Intelligent Edge Computing Gateway Implementation Method based on Microservice Architecture","K. Lin; B. Liu; Y. Chen; H. Dai; Z. Liang","China Southern Power Grid Company Limited, Guangzhou, Guangdong, China; China Southern Power Grid Digital Grid Group Co., Ltd, Guangzhou, Guangdong, China; China Southern Power Grid Digital Grid Group Co., Ltd, Guangzhou, Guangdong, China; China Southern Power Grid Digital Grid Group Co., Ltd, Guangzhou, Guangdong, China; China Southern Power Grid Digital Grid Group Co., Ltd, Guangzhou, Guangdong, China","2022 International Conference on Informatics, Networking and Computing (ICINC)","5 Apr 2023","2022","","","203","208","In the process of data processing, the implementation method of intelligent edge computing gateway takes too long to add device reading request. In order to solve the above problems, an implementation method of intelligent edge computing gateway based on micro service architecture is designed. The concept of genetic operator is introduced to extract the link operation state at the previous time and evaluate the communication link quality. Extract the micro message queue based on the micro service architecture, reorganize the micro service components under the condition of standardized interface, identify the source address and target address in the data, optimize the service driven routing algorithm, and design the implementation method of intelligent edge computing gateway with the matching condition as the judgment standard. The experimental results show that the time-consuming of adding device reading request between the intelligent edge computing gateway implementation method designed this time and the other three intelligent edge computing gateway implementation methods is 233.14 ms, 277.24 ms, 276.01 ms and 263.66 ms respectively, which indicates that the intelligent edge computing gateway implementation method designed this time can provide more perfect functions in terms of time-consuming under the condition of micro service architecture.","","979-8-3503-0969-0","10.1109/ICINC58035.2022.00048","China Southern Power Grid; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10090155","Micro service architecture;Edge computing;Intelligent gateway;Internet of things;Communication link;Micro message queue","Design methodology;Microservice architectures;Computer architecture;Logic gates;Routing;Genetics;Internet of Things","","1","","15","IEEE","5 Apr 2023","","","IEEE","IEEE Conferences"
"MicroIP: A general-purpose microservice-based integration platform","A. Nebel; L. González; G. Llambías","Facultad de Ingeniería, Instituto de Computación, Universidad de la República, Montevideo, Uruguay; Facultad de Ingeniería, Instituto de Computación, Universidad de la República, Montevideo, Uruguay; Facultad de Ingeniería, Instituto de Computación, Universidad de la República, Montevideo, Uruguay",2021 XLVII Latin American Computing Conference (CLEI),"21 Dec 2021","2021","","","1","10","The development of large-scale software systems is usually supported by integration platforms, which provide connectivity and mediation capabilities to facilitate the integration of heterogeneous and distributed applications. Integration platforms have traditionally been built as monolithic systems which, in some of the current contexts (e.g. market's high pace of demand, large amount of users and data), present issues in terms of scalability, maintainability and fault tolerance, among others. In turn, microservices architecture is an approach for developing applications as a set of small independent services, which may contribute to address such limitations (e.g. maintaining and scaling services independently, according to their specific needs). Indeed, various integration platform proposals leveraging this approach have emerged during the last years. However, those proposals are domain-specific and/or they do not provide insights regarding the architecture and implementation of the platform. This paper proposes a general-purpose microservice-based integration platform, which aims to address limitations of monolithic solutions and of the aforementioned existing proposals. Our work comprises the definition of the platform and its main functionality, a description of its microservice-based architecture, and implementation alternatives as well as prototypes for some of its main components.","","978-1-6654-9503-5","10.1109/CLEI53233.2021.9640179","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9640179","integration platforms;microservices;software architecture","Fault tolerance;Scalability;Fault tolerant systems;Microservice architectures;Prototypes;Computer architecture;Software systems","","","","18","IEEE","21 Dec 2021","","","IEEE","IEEE Conferences"
"Migration of Monolithic to Microservices With an Extraction Design Pattern in Single Sign on (SSO) Module Using Graph Neural Network (GNN)","L. Mardhatillah; S. Rochimah","Faculty of Intelligent Electrical and Informatics Technology, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia; Faculty of Intelligent Electrical and Informatics Technology, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia",2024 International Seminar on Intelligent Technology and Its Applications (ISITIA),"12 Sep 2024","2024","","","208","213","In software system development, Mololithic is an architectural model that is built in the same codebase. For example, on an online shopping site, there are several feature sections such as user authorization, shopping cart, payment, shipping, and others, all of these features are built in an integrated manner on the same codebase. This is different from the microservice architecture approach. In microservices, each feature or component will be an architecture that is separate from one another. Each of these services will later communicate with each other via a special protocol. Mololithic is increasingly being abandoned because it does not meet scalability needs, if there is a surge in users the Mololithic model tends to be unstable.As happens in the SSO module, in the SSO module process itself there are several functions including registration, authentication, user management, back end API and several other functions where these functions are combined in one unified module. Therefore, a Microservices Architecture model is needed to handle the needs due to the surge in users. Scalability can be regulated because the codebase separation process depends on needs. The migration process from monolithic to microservices is not easy, it requires sufficient knowledge regarding the application to determine the number of nodes and determine the number of services. This research will separate the codebase to determine the number of services using extraction design patterns on function entities, and system logs used in the SSO module at one institution in Indonesia.It is hoped that by extracting functions from the source code and data transaction we will get how many services are running and the nodes that will be used. The modeling process regarding the number of nodes and services will be carried out using a Graph Neural Network (GNN)","2769-5492","979-8-3503-7857-3","10.1109/ISITIA63062.2024.10667894","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10667894","Monolithic;Microservices;function extraction;Graph Neural Network;modul SSO;design extraction","Seminars;Scalability;Source coding;Microservice architectures;Computer architecture;Software systems;Graph neural networks","","","","10","IEEE","12 Sep 2024","","","IEEE","IEEE Conferences"
"Analysis of component-based approaches toward componentized 5G","E. E. Hayek; I. G. Ben Yahia; D. Arellanes; K. -K. Lau","Orange Telecom, Orange Labs Networks, Paris, France; Orange Telecom, Orange Labs Networks, Paris, France; School of Computer Science, The University of Manchester, Manchester, United Kingdom; School of Computer Science, The University of Manchester, Manchester, United Kingdom","2018 21st Conference on Innovation in Clouds, Internet and Networks and Workshops (ICIN)","2 Jul 2018","2018","","","1","5","5G is expected to be modular by design toward autonomic and agile networks. In this regards, the 5G functional architecture is designed as service-based seeking to support the concept of Network Slicing. This leads us to the question: what componentization approach to implement this modular architecture? Is there a componentization approach that is suitable for all the network functions? Which design approach will help to have autonomic and cognitive networks? In this paper we shed the light on the different component-based approaches. In addition, we reviewed the state of the art addressing the applicability of component-based approaches to build autonomic networks. Therefore, we present discussion, comparison and synthesis as input to 5G related activities.","2472-8144","978-1-5386-3458-5","10.1109/ICIN.2018.8401611","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8401611","5G;component-based;autonomic;microservice;object","5G mobile communication;Software;Object oriented modeling;Connectors;Computer architecture;Computational modeling;Message passing","","2","","26","IEEE","2 Jul 2018","","","IEEE","IEEE Conferences"
"Migrating web applications to clouds with microservice architectures","J. Lin; L. C. Lin; S. Huang","Department of Information Management, Ming Chuan University, Taoyuan, Taiwan; Department of Information Management, Ming Chuan University, Taoyuan, Taiwan; Department of Information Management, Ming Chuan University, Taoyuan, Taiwan",2016 International Conference on Applied System Innovation (ICASI),"11 Aug 2016","2016","","","1","4","For the recent advances of Cloud Computing technologies, cloud applications have been popularity for their rich set of features. Therefore, their practical use for promoting business values can be expected. As such, cloud applications are recognized as a trend for the next generation of existing Web applications, and hence how to migrate these Web applications to the clouds becomes a desired field in the literature. For this need, we present a migration method that employs the well-known microservice architectures to support an effective migration of Web applications into the clouds.","","978-1-4673-9888-6","10.1109/ICASI.2016.7539733","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7539733","Cloud computing;migration method;Web application;microservice architecture","Decision support systems;Google;Engines;Decision making;Engineering profession","","14","","9","IEEE","11 Aug 2016","","","IEEE","IEEE Conferences"
"Microservices Architecture: Challenges and Proposed Conceptual Design","R. M. Munaf; J. Ahmed; F. Khakwani; T. Rana","Department of Computer Software Engineering, MCS National University of Sciences and Technology (NUST), Islamabad, Pakistan; Department of Computer Software Engineering, MCS National University of Sciences and Technology (NUST), Islamabad, Pakistan; Department of Computer Software Engineering, MCS National University of Sciences and Technology (NUST), Islamabad, Pakistan; Department of Computer Software Engineering, MCS National University of Sciences and Technology (NUST), Islamabad, Pakistan",2019 International Conference on Communication Technologies (ComTech),"21 Jun 2019","2019","","","82","87","Microservices Architecture has evolved in the recent past and has gained significant popularity offering various benefits as compared to existing architectures addressing various serious concerns of the recent era in Software Engineering. This paper will first briefly introduce the microservices architecture and its evolution being still in inception phase. After enlisting its offered benefits, its envisaged implementation challenges will be addressed including various options available for coping up with those challenges by using empirical and conceptual method. Based on the challenges and available options, a conceptual design of microservices architecture including major components and their role will be proposed. This paper addresses the new comers for understanding of microservices architecture, researchers and the practitioners for verification of evolved conceptual design and future prospects.","","978-1-5386-5106-3","10.1109/COMTECH.2019.8737831","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8737831","Microservices Architecture;Microservices;Fine grained SOA;Service Oriented Architecture;SOA;Software Architecture","Computer architecture;Service-oriented architecture;Software systems;Scalability;Task analysis;Databases","","16","","13","IEEE","21 Jun 2019","","","IEEE","IEEE Conferences"
"Automating the Recognition of Microservices from Business Process Analysis","S. Zougari; M. Daoud; A. Sabri; A. Zougari; A. Chahboun; A. Azyat","MASI, ENSAT, Université Abdelmalek Essaadi, Tanger, Maroc; Université Claude Bernard, France; Université Sidi Mohamed Ben Abdellah, Fez, Maroc; MASI, ENSAT, Université Abdelmalek Essaadi, Tanger, Maroc; MASI, ENSAT, Université Abdelmalek Essaadi, Tanger, Maroc; MASI, ENSAT, Université Abdelmalek Essaadi, Tanger, Maroc",2024 International Conference on Intelligent Systems and Computer Vision (ISCV),"12 Aug 2024","2024","","","1","8","In the evolution from monolithic to modular software architectures, the integration of microservices is increasingly preferred due to its enhancement of operational efficiency and adaptability. Microservices are distinguished by their compact size, cohesive functionality, and independent operation, positioning them as a formidable alternative to traditional architectures. However, identifying optimal microservice configurations poses significant challenges. This study introduces an innovative automated method for deriving microservices from business processes, incorporating a broader BPMN with more activities and dependencies than previous studies to verify the quality of our approach. Our method leverages a cooperative clustering strategy that integrates multiple models to analyze control, information, and semantic connections within business operations. Each dependency type is addressed by a dedicated clustering algorithm, allowing modules to leverage insights from one another, thereby enhancing microservice identification accuracy. We validate our methodology through a case study in a bike rental service, involving 25 distinct activities to evaluate our dependency model’s effectiveness. The findings demonstrate superior precision in microservices generation compared to existing methods, highlighting the advantage of using detailed business operations as a foundation for precise microservice architecture design.","2768-0754","979-8-3503-5018-0","10.1109/ISCV60512.2024.10620133","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10620133","Microservice Architecture;Semantic Analysis;Process Management;Disco;Dependency Analysis","Analytical models;Software architecture;Semantics;Microservice architectures;Clustering algorithms;Computer architecture;Natural language processing","","","","18","IEEE","12 Aug 2024","","","IEEE","IEEE Conferences"
"Monolithic to microservices redesign of event driven integration platform","E. Djogic; S. Ribic; D. Donko","Mistral technologies Inc, Sarajevo, Bosnia and Herzegovina; Faculty of Electrical Engineering, Sarajevo, Bosnia and Herzegovina; Faculty of Electrical Engineering, Sarajevo, Bosnia and Herzegovina","2018 41st International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)","2 Jul 2018","2018","","","1411","1414","With this paper we presented architectural redesign of SOA (service oriented architecture) integration platform by following principles of microservices design. Presented SOA platform is currently in use for Real estate sector. Number of messages which need to be processed by platform is growing as well as number of new integrations which requires redesign of platform. Redesign should provide ability for scalability, better resource management, maintenance and deployment. To support this, it is necessary to transform integration platform to be microservices based.","","978-953-233-095-3","10.23919/MIPRO.2018.8400254","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8400254","Microservices;SOA;integration platform;Real estate","Service-oriented architecture;Business;Computer architecture;Maintenance engineering;Databases;Monitoring","","21","","13","","2 Jul 2018","","","IEEE","IEEE Conferences"
"Microns: Commands for Building Bubble Microservices","S. Rasmy","School of Professional Studies, New York University, New York, NY, USA",2018 Sixth International Conference on Enterprise Systems (ES),"27 Dec 2018","2018","","","158","165","Microns are bean-like command objects with structural and behavioral properties that are naturally aligned with microservices design principles and architectural goals. A micron based microservice implementation revolves around building every microservice operation as a micron command. Microns are then logically grouped to virtually realize a bubble microservice. Bubbles facilitate postponing the need for physically defining service domain boundaries until deployment and are meant to be more agile and scalable than traditional microservices implementation approaches. Microns are not limited to building microservices; they are adequate for building many parts of the architecture as long-lived software assets that can be reused in realizing existing and future architecture trends. This paper attempts to re-explore commands through microns and discusses their suitability for building microservices and many other parts of the architecture with the ultimate goal of increasing system's agility, scalability, performance, and consistency. The paper also presents some micron-based applications and designs, where microns serve as high-quality architectural elements that can non-invasively make existing as well as new snippets of logic accessible over the web and other channels with minimal effort.","2572-6609","978-1-5386-8388-0","10.1109/ES.2018.00032","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8588274","GoF Command, Microservices, Representation State Transfer (REST), Service Oriented Architecture (SOA), Software Architecture","Micrometers;Architecture;Computer architecture;Buildings;Connectors;Business;Software","","","","14","IEEE","27 Dec 2018","","","IEEE","IEEE Conferences"
"A platform-independent communication framework for the simplified development of shop-floor applications as microservice components","M. M. Strljic; T. Korb; T. Tasci; E. -F. Tinsel; D. Pawlowicz; O. Riedel; A. Lechler","Institute of Control Engineering of Tool Machines and Manufacturing Units (ISW), University Stuttgart, Stuttgart, Germany; Institute of Control Engineering of Tool Machines and Manufacturing Units (ISW), University Stuttgart, Stuttgart, Germany; Institute of Control Engineering of Tool Machines and Manufacturing Units (ISW), University Stuttgart, Stuttgart, Germany; Institute of Control Engineering of Tool Machines and Manufacturing Units (ISW), University Stuttgart, Stuttgart, Germany; Institute of Control Engineering of Tool Machines and Manufacturing Units (ISW), University Stuttgart, Stuttgart, Germany; Institute of Control Engineering of Tool Machines and Manufacturing Units (ISW), University Stuttgart, Stuttgart, Germany; Institute of Control Engineering of Tool Machines and Manufacturing Units (ISW), University Stuttgart, Stuttgart, Germany",2018 IEEE International Conference on Advanced Manufacturing (ICAM),"17 Jan 2019","2018","","","250","253","For flexible and highly networked industry 4.0 production processes, software components are becoming more and more significant for reconfiguring production systems or facilitating complex functionalities. Standards for communication such as OPC UA have a crucial role in the data exchange required in this context. However, these systems adopt the static properties from their domain, which have led to their success and widespread use in Industry 4.0. The most critical core difficulties with OPC UA are the definition of communication mechanisms and the data model to be used in a strictly coupled environment. Because of their central client-server architecture and missing communication patterns, these systems do not offer the necessary flexibility and platform independence to use the entire spectrum of possible software tools efficiently. Especially negatively affected is the initial effort to integrate such systems and to guarantee the scalability of the infrastructure later on. With a focus on these challenges, the message-based communication framework XSC has been developed for the shop-floor, which uses the high-performance ZeroMQ framework and the data format Google Protocol Buffers for platform independence and a high degree of efficiency. It has a scalable and distributed multi-agent architecture that provides a distributed registry for the usage and provision of microservice components. Besides, multiple communication patterns were provided to meet the requirements of both environments, shop-floor, and cloud computing applications.","","978-1-5386-5609-9","10.1109/AMCON.2018.8615044","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8615044","SOA;ZeroMQ;MOM;IOT;CPS","Protocols;Automation;Data models;Computer architecture;Method of moments;Standards;Throughput","","2","","8","IEEE","17 Jan 2019","","","IEEE","IEEE Conferences"
"ROS-like framework using modern development concepts and microservices","M. Ivanou; S. Mikhel; A. Maloletov","Center for Technologies in Robotics and Mechatronics Components, Innopolis University, Innopolis, Russia; Center for Technologies in Robotics and Mechatronics Components, Innopolis University, Innopolis, Russia; Center for Technologies in Robotics and Mechatronics Components, Innopolis University, Innopolis, Russia","2021 International Conference ""Nonlinearity, Information and Robotics"" (NIR)","5 Jan 2022","2021","","","1","6","The Robot Operating System (ROS) has established itself as a useful set of software libraries and tools that can help to build robot applications. It provides services such as hardware abstraction, low-level device management, implementation of frequently used functions, inter-process message passing, and package management. ROS is good for small static research environments, however, it does not scale so well to large real-world applications. Besides, there is no security model, the test approach is unclear, the library versions can be incompatible. The paper presents a survey, the results of which show that many ROS users have problems with such modern programming techniques as testing or automatic deployment. Nowadays, many systems based on modern programming paradigms are developed by leading companies, and there is a lot of good open-source software out there. An application can be built without writing a lot of code, one just needed to combine high-quality libraries with necessary functionality. This paper intends to show how to build a ROS-like system using modern technologies, such as microservices and message queues, in a simple way with high quality and functionality using an example of the RhoMBus framework.","","978-1-6654-2407-3","10.1109/NIR52917.2021.9666141","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9666141","ROS;microservice;message queue;cloud robotics;robot system;RhoMBus","Software libraries;Operating systems;Message passing;Microservice architectures;Programming;Writing;Security","","3","","27","IEEE","5 Jan 2022","","","IEEE","IEEE Conferences"
"Towards Integrating Microservices with Adaptable Enterprise Architecture","J. Bogner; A. Zimmermann","Hewlett Packard Enterprise, Herman Hollerith Center, Boeblingen, Germany; Reutlingen University, Herman Hollerith Center, Boeblingen, Germany",2016 IEEE 20th International Enterprise Distributed Object Computing Workshop (EDOCW),"10 Oct 2016","2016","","","1","6","IT environments that consist of a very large number of rather small structures like microservices, Internet of Things (IoT) components, or mobility systems are emerging to support flexible and agile products and services in the age of digital transformation. Biological metaphors of living and adaptable ecosystems with service-oriented enterprise architectures provide the foundation for self-optimizing, resilient run- time environments and distributed information systems. We are extending Enterprise Architecture (EA) methodologies and models that cover a high degree of heterogeneity and distribution to support the digital transformation and related information systems with micro-granular architectures. Our aim is to support flexibility and agile transformation for both IT and business capabilities within adaptable digital enterprise architectures. The present research paper investigates mechanisms for integrating Microservice Architectures (MSA) by extending original enterprise architecture reference models with elements for more flexible architectural metamodels and EA-mini-descriptions.","2325-6605","978-1-4673-9933-3","10.1109/EDOCW.2016.7584392","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7584392","","Computer architecture;Adaptation models;Business;Biological system modeling;Unified modeling language;Context;Service-oriented architecture","","38","","27","IEEE","10 Oct 2016","","","IEEE","IEEE Conferences"
"PF4MD: A Microservice Decomposition Tool Combining Problem Frames","Y. Li; Z. Li; Y. Bu; H. Xiao; Y. Deng","School of Computer Science and Engineering, Guangxi Normal University, Guilin, China; School of Computer Science and Engineering, Guangxi Normal University, Guilin, China; School of Computer Science and Engineering, Guangxi Normal University, Guilin, China; School of Computer Science and Engineering, Guangxi Normal University, Guilin, China; School of Computer Science and Engineering, Guangxi Normal University, Guilin, China",2023 IEEE 31st International Requirements Engineering Conference (RE),"28 Sep 2023","2023","","","359","360","Microservices have an important position in today's software development, enabling a highly cohesive and low-coupling way of service organization. To address the complexity issues of inter-service communication, data consistency and distributed system management in the microservice decomposition process, we extend the traditional problem diagram based on the commonality of microservice decomposition and problem frames: the causal domain in the problem domain is further divided into communication components and business components. We design a microservice decomposition tool PF4MD to visualize service requirements and design problem decomposition and complexity calculation rules. We evaluated it with cases such as the Smart Building system and obtained a strategy similar to manual decomposition but with more intuitive and finer granularity, thus helping architects to make more efficient decisions and understand the decomposition process more clearly in system requirements.","2332-6441","979-8-3503-2689-5","10.1109/RE57278.2023.00051","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10260891","microservice decomposition;problem frames;requirements engineering;complexity computing","Smart buildings;Microservice architectures;Distributed databases;Organizations;Manuals;Software;Complexity theory","","","","6","IEEE","28 Sep 2023","","","IEEE","IEEE Conferences"
"On-Demand and Automatic Deployment of Microservice at the Edge Based on NGSI-LD","F. Martella; V. Lukaj; M. Fazio; A. Celesti; M. Villari","University of Messina, Italy; University of Messina, Italy; University of Messina, Italy; University of Messina, Italy; University of Messina, Italy","2023 31st Euromicro International Conference on Parallel, Distributed and Network-Based Processing (PDP)","1 Jun 2023","2023","","","314","320","This paper focuses on a new approach to conceiving “virtual sensors” operating in smart environments, which are abstracted components able to map different behaviours on the same Internet of Things (IoT)-based infrastructures according to the needs of the high-level applications. To realize “virtual sensors”, it is necessary to codify user requests in an automation process for the deployment at the Edge of the microservices (MSs) that satisfy such requests. We present a solution that implements all the necessary functionalities to bind the user application with the Edge device in charge to execute the “virtual sensors”. In particular, the solution we propose is based on the FIWARE NGSI-LD information model, which helps us to standardize the communication among the different entities involved in the process. Moreover, the paper describes the reference architecture we designed, provides the implementation details of our first prototype and reports the results of our evaluation experiments.","2377-5750","979-8-3503-3763-1","10.1109/PDP59025.2023.00055","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10137215","Edge Computing;Automatic Deploy;NGSI-LD;FIWARE;Microservice","Cloud computing;Protocols;Soft sensors;Scalability;Microservice architectures;Prototypes;Computer architecture","","","","14","IEEE","1 Jun 2023","","","IEEE","IEEE Conferences"
"Dealing with Anti-Patterns When Migrating from Monoliths to Microservices: Challenges and Research Directions","H. Farsi; D. Allaki; A. En-nouaary; M. Dahchour","Institut National des Postes et TélécommunicationsRabat, Morocco; Institut National des Postes et TélécommunicationsRabat, Morocco; Institut National des Postes et TélécommunicationsRabat, Morocco; Institut National des Postes et TélécommunicationsRabat, Morocco",2023 IEEE 6th International Conference on Cloud Computing and Artificial Intelligence: Technologies and Applications (CloudTech),"29 Dec 2023","2023","","","1","8","Microservices refers to a highly effective architectural style for organizations to build cloud-native applications. However, in most real-world cases, the adoption of microservices is not a deliberate choice made by organizations. Instead, the shift towards microservices is compelled by the urgent necessity to overcome the constraints imposed by traditional monolithic architectures. As a result, organizations typically seek to migrate their existing systems to microservices incrementally and with caution to ensure safe migration. To achieve this particular goal, the industry has provided various strategies and patterns. However, many practitioners overlook a very important aspect while migrating to microservices, which is the presence of anti-patterns and their potential evolution during the migration phases. Therefore, studies and investigations are needed to assist the migration task to microservices against anti-patterns. Accordingly, this paper brings attention to a research gap concerning the impact of anti-patterns on migrating to microservices. This gap is addressed through the formulation of four research questions. The main aim is to inspire the academic community to conduct additional investigations in this area, aiming to improve migration quality and facilitate the development of more efficient architectures.","","979-8-3503-0306-3","10.1109/CloudTech58737.2023.10366131","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10366131","component;Cloud Native;Monolithic Architecture;Microservices Architecture;Anti-Patterns;Migration Challenges","Industries;Cloud computing;Microservice architectures;Organizations;Computer architecture;Task analysis;Artificial intelligence","","1","","17","IEEE","29 Dec 2023","","","IEEE","IEEE Conferences"
"Automated Reverse Engineering for MoM-Based Microservices (ARE4MOM) Using Static Analysis","S. Singh; A. Koziolek","KASTEL – Institute of Information Security and Dependability, Karlsruhe Institute of Technology, Karlsruhe, Germany; KASTEL – Institute of Information Security and Dependability, Karlsruhe Institute of Technology, Karlsruhe, Germany",2024 IEEE 21st International Conference on Software Architecture (ICSA),"24 Jul 2024","2024","","","12","22","Context: Understanding architecture is crucial during the development of Message-oriented Middleware-based (MoM-based) microservices. Such architecture serves as a prerequisite for system maintenance, comprehension, and refactoring. However, maintaining an accurate architecture document becomes challenging due to continuous changes in the architecture throughout development. Problem: The challenge lies in maintaining the correct architectural document amid ongoing architectural modifications. While Reverse Engineering supports architecture extraction, existing approaches are limited to synchronous microservice communication and lack clear identification of microservice components and messaging interfaces. Objective: This research aims to automatically extract both the component-based architecture and behavior of MoM-based microservice systems, focusing on asynchronous communication. The primary contribution is the extraction of components and behavior models tailored for asynchronous scenarios. Method: To address the challenges, we extend the existing Software Model eXtractor (SoMoX) approach, incorporating a model-based reverse engineering concept to support asynchronous communication. Our approach automates the extraction of MoM-based microservice system architecture from its source code using static analysis. Result: The paper introduces the concepts of our approach (ARE4MOM) through a running example, demonstrating its capabilities. Evaluation: involves three GitHub case studies utilizing different MoMs and technologies for asynchronous communication. ARE4MOM successfully extracts the architecture and behavior model with a 98.1% F1 score.","2835-7043","979-8-3503-5916-9","10.1109/ICSA59870.2024.00010","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10592672","Microservice;Asynchronous communication;Software Architecture;Reverse Engineering","Asynchronous communication;Analytical models;Software architecture;Source coding;Unified modeling language;Reverse engineering;Microservice architectures","","","","20","EU","24 Jul 2024","","","IEEE","IEEE Conferences"
"Borehole Trajectory System Based on Microservices Architecture","K. Wang; Y. Miao","Xi'an Shiyou University, College of Computer, Xi'an, Shannxi, China; Xi'an Shiyou University, College of Computer, Xi'an, Shannxi, China","2024 6th International Conference on Communications, Information System and Computer Engineering (CISCE)","9 Sep 2024","2024","","","1343","1346","This research aims to integrate microservices architecture into the borehole trajectory design system, addressing the challenges faced by traditional monolithic systems in processing big data and rapid updates. By dividing and deploying the frontend, backend, database, database operation modules, and the drilling trajectory module as microservices, this paper achieves coordinated operation among system components through a loosely coupled architecture, thereby efficiently completing system functions. This method not only improves adaptability to new technologies but also provides an effective strategy for overcoming existing problems.","2833-2423","979-8-3503-5317-4","10.1109/CISCE62493.2024.10653309","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10653309","microservices;loosely coupled;borehole trajectory","Drilling;Technological innovation;Databases;System performance;Scalability;Microservice architectures;Computer architecture","","","","10","IEEE","9 Sep 2024","","","IEEE","IEEE Conferences"
"Towards Decomposing Monolithic Applications into Microservices","D. Kuryazov; D. Jabborov; B. Khujamuratov","Software Engineering Department, Urgench branch of Tashkent University of Information Technologies named after Muhammad al-Khwarizmi, Urgench, Uzbekistan; Software Engineering Department, Urgench branch of Tashkent University of Information Technologies named after Muhammad al-Khwarizmi, Urgench, Uzbekistan; Software Engineering Department, Urgench branch of Tashkent University of Information Technologies named after Muhammad al-Khwarizmi, Urgench, Uzbekistan",2020 IEEE 14th International Conference on Application of Information and Communication Technologies (AICT),"9 Mar 2021","2020","","","1","4","Continuously changing the existing software systems results in large and monolith software solutions making them difficult to maintain. As maintenance and development of monolithic software systems is a difficult task, there is a need for decomposing these monolithic systems into smaller subsystems, components and services, i.e., microservices. Service-oriented architectures yield more maintenance and less complexity in developing large-scale software applications. Thus, this paper focuses on decomposing monolithic software systems into microservices in order to maintain them with less development effort. Moreover, it addresses to the problem of architectural refactoring and improvement of software systems during architectural migration.","2472-8586","978-1-7281-7386-3","10.1109/AICT50176.2020.9368571","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9368571","Monolithic Software;Migration;Microservice Architecture;Microservices;Sustainability","Conferences;Maintenance engineering;Software systems;Service-oriented architecture;Information and communication technology;Complexity theory;Task analysis","","15","","17","IEEE","9 Mar 2021","","","IEEE","IEEE Conferences"
"Load Balancing for Microservice Service Meshes","R. Bhattacharya",George Washington University,2022 IEEE International Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C),"4 Nov 2022","2022","","","63","65","Microservices break down monolithic applications into smaller components and have become a popular model for application deployment. In this model, load balancing has moved from the server to the request side where a load balancer resides with each upstream service.Least Connection, a derivative of the Join the Shortest Queue (JSQ), is a popular algorithm used in the microservice architecture. Despite JSQ being proven to be nearly optimal in certain scenarios, Least Connection significantly underperforms in microservices and edge environments.My thesis aims to adapt load balancing to the microservices environment such that they can autonomously choose from a collection of approaches to mitigate widening of response time distributions.","","978-1-6654-5142-0","10.1109/ACSOSC56246.2022.00032","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9934879","load balancing;microservice;service mesh;backend feedback","Microservice architectures;Computer architecture;Load management;Time factors;Servers;Distributed computing;Load modeling","","1","","8","IEEE","4 Nov 2022","","","IEEE","IEEE Conferences"
"Making the move to microservice architecture","A. Koschel; I. Astrova; J. Dötterl","Faculty IV, Department of Computer Science, University of Applied Sciences and Arts, Hannover, Germany; Department of Software Science School of IT, Tallinn University of Technology, Tallinn, Estonia; Faculty IV Department of Computer Science, University of Applied Sciences and Arts, Hannover, Germany",2017 International Conference on Information Society (i-Society),"7 May 2018","2017","","","74","79","Microservice architecture is an architectural style suitable for large software projects. The main goals of microservices are flexible on-demand scalability and short release cycles. Microservice architecture decomposes applications into multiple independent components (called microservices), each running in its own process. This sets microservice applications apart from monoliths, which run in a single process. This paper describes the characteristics of both architectures and explores under which circumstances a shift from a monolith towards the more costly microservice architecture is justified. Furthermore, the paper describes (non-)technical challenges that arise in that shift.","","978-1-908320-80-3","10.23919/i-Society.2017.8354675","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8354675","monolithycal architecture;microservice architecture;large software projects","Computer architecture;Companies;Software;Servers;Web pages;Databases","","10","1","5","","7 May 2018","","","IEEE","IEEE Conferences"
"Fostering Microservice Maintainability Assurance Through a Comprehensive Framework","A. S. Abdelfattah","Computer Science Department, Baylor University, Waco, TX, USA",2024 IEEE International Conference on Software Maintenance and Evolution (ICSME),"19 Dec 2024","2024","","","838","842","Cloud-native systems represent a significant leap in constructing scalable, large systems, employing microservice architecture as a key element in developing distributed systems through self-contained components. However, the decentralized nature of these systems, characterized by separate source codes and deployments, introduces challenges in assessing system qual-ities. Microservice-based systems, with their inherent complexity and the need for coordinated changes across multiple microser-vices, lack established best practices and guidelines, leading to difficulties in constructing and comprehending the holistic system view. This gap can result in performance degradation and increased maintenance costs, potentially requiring system refactoring. The main goal of this project is to offer maintainability assur-ance for microservice practitioners. It introduces an automated assessment framework tailored to microservice architecture, en-hancing practitioners' understanding and analytical capabilities of the multiple system perspectives. The framework addresses various granularity levels, from artifacts to constructing holistic views of static and dynamic system characteristics. It integrates diverse perspectives, encompassing human-centric elements like architectural visualization and automated evaluations, including coupling detection, testing coverage measurement, and semantic clone identification. Validation studies involving practitioners demonstrate the framework's effectiveness in addressing diverse quality and maintainability issues, revealing insights not apparent when analyzing individual microservices in isolation.","2576-3148","979-8-3503-9568-6","10.1109/ICSME58944.2024.00087","National Science Foundation(grant numbers:2409933); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10795009","Microservice Architecture;Microservice Visual-ization;Maintainability;Metrics;Software Architecture Reconstruction;Viewpoints","Visualization;Software maintenance;Source coding;Semantics;Microservice architectures;Computer architecture;Maintenance;Dynamical systems;Testing;Guidelines","","","","26","IEEE","19 Dec 2024","","","IEEE","IEEE Conferences"
"On Microservice Architecture Based Communication Environment for Cycling Map Developing and Maintenance Simulator","A. Aizstrauts; D. Burkhardt; E. Ginters; K. Nazemi","Sociotechnical Systems OU, Tallinn, Estonia; Darmstadt University of Applied Sciences, Darmstadt, Germany; Department of Modelling and Simulation, Riga Technical University, Riga, Latvia; Darmstadt University of Applied Sciences, Darmstadt, Germany",2020 61st International Scientific Conference on Information Technology and Management Science of Riga Technical University (ITMS),"19 Nov 2020","2020","","","1","4","Urban transport infrastructure nowadays involves environmentally friendly modes of transport, the most democratic of which is cycling. Citizens will use bicycles if a reasonably designed cycle path scheme will be provided. Cyclists also need to know the characteristics and load of the planned route before the trip. Prediction can be provided by simulation, but it is often necessary to use heterogeneous and distributed models that require a specific communication environment to ensure interaction. The article describes the easy communication environment that is used to provide microservices communication and data exchange in a bicycle route design and maintenance multi-level simulator.","","978-1-7281-9105-8","10.1109/ITMS51158.2020.9259299","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9259299","simulation;microservice architecture;easy communication environment","Load modeling;Bicycles;Computational modeling;Urban areas;Planning;Protocols;Predictive models","","1","","15","IEEE","19 Nov 2020","","","IEEE","IEEE Conferences"
"MAT: Automating Go monolithic applications transform into microservices through dependency analysis and AST","Y. -Y. Chen; K. -H. Hsu; A. W. Hou","Department of Computer Science, National Taichung University of Education, Taichung, Taiwan; Department of Computer Science, National Taichung University of Education, Taichung, Taiwan; Department of Computer Science, National Taichung University of Education, Taichung, Taiwan",2023 9th International Conference on Applied System Innovation (ICASI),"19 Jul 2023","2023","","","133","135","The advancement of containerization and various integration tools has greatly reduced the development cost of microservice architecture. Under this premise, many companies have begun to migrate their legacy systems (monolithic applications) to microservice architectures in order to adapt to market demands. Instead of migrating legacy systems to microservice architecture from scratch, we provide another approach of splitting an existing monolithic system into microservices. In this paper, we use Go language’s AST as a basis to split the original project into multiple independent components and design a method for analyzing dependencies, classifying them, and producing independently runnable microservices.","2768-4156","979-8-3503-9838-0","10.1109/ICASI57738.2023.10179517","Ministry of Science and Technology; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10179517","microservice;dependency;AST;Go","Technological innovation;Costs;Design methodology;Microservice architectures;Transforms;Manuals;Companies","","","","18","IEEE","19 Jul 2023","","","IEEE","IEEE Conferences"
"Strategies for Request-Response Logging in Microservices Architecture","F. Basciftci; F. Aydemir","Dept. of Computer Engineering, Faculty of Technology, Selcuk University, Konya, Turkey; R&D Center, Information Technologies, Kuveyt Türk Bank, Istanbul, Turkey",2022 IEEE 20th Jubilee International Symposium on Intelligent Systems and Informatics (SISY),"13 Feb 2023","2022","","","000121","000126","Microservices Architecture is the prevailing architectural choice today for building distributed software systems in various business sectors, such as telecommunications, e-commerce, and finance. It is often necessary to log the full content of request and response messages (i.e., the entire body of these messages) that are entering and leaving such distributed systems due to legal book-keeping requirements. In this work, two systematic design strategies were used to realize the structured logging of request-response messages including their entire message body, particularly in a microservices architecture-based distributed software system. As a case study, a prototype per strategy was implemented and deployed into an existing Microservices Architecture-based banking system, which was provided by a commercial bank for the research presented in this paper in the Kubernetes cluster. Load tests were performed against this banking system to measure average request throughputs and average response times per logging strategy for analysis purposes. The results that are presented in this paper are expected to be helpful for both researchers and practitioners in the software industry who need a similar logging solution.","1949-0488","978-1-6654-8988-1","10.1109/SISY56759.2022.10036308","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10036308","Microservices Architecture;Distributed System Design;Request-Response Logging;Banking System","Computer languages;Microservice architectures;Wheels;Banking;Computer architecture;Logic gates;Writing","","1","","37","IEEE","13 Feb 2023","","","IEEE","IEEE Conferences"
"A Microservices Quality Model Based on Microservices Anti-patterns","S. Pulnil; T. Senivongse","Department of Computer Engineering, Faculty of Engineering, Chulalongkorn University, Bangkok, Thailand; Department of Computer Engineering, Faculty of Engineering, Chulalongkorn University, Bangkok, Thailand",2022 19th International Joint Conference on Computer Science and Software Engineering (JCSSE),"28 Jul 2022","2022","","","1","6","Microservices architecture is becoming popular as many software organizations have the need to transform large complex systems into small-sized software units whose functions are separated by business capabilities. Microservices architecture is preferable since it promotes independence of software modification, maintenance, and deployment. However, anti-patterns or poor development patterns of microservices can decrease the software quality. Nonetheless, quality measurement of microservices design based on anti-patterns has not been found in existing research. Using the QMOOD method for quality model design, this paper proposes a microservices quality model based on 11 microservices anti-patterns and ISO/IEe 25010 as a standard reference for quality attributes. Also, a microservices quality measurement tool called MSA Nose+ is developed to measure the quality of microservices applications. In an experiment to validate the proposed model, the result shows that the quality values obtained from the proposed model improve consistently with the refactorings that are applied to a microservice-based system. Thus, development teams can use the proposed model and quality measurements as part of the decision making on quality improvement and maintenance of microservices applications.","2642-6579","978-1-6654-8510-4","10.1109/JCSSE54890.2022.9836297","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9836297","microservices;quality model;anti-patterns;quality measurement","Computational modeling;Standards organizations;Microservice architectures;Organizations;Computer architecture;Transforms;Software quality","","3","","12","IEEE","28 Jul 2022","","","IEEE","IEEE Conferences"
"Analyzing Microservices and Monolithic Systems: Key Factors in Architecture, Development, and Operations","J. Christian; Steven; A. Kurniawan; M. S. Anggreainy","Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, Indonesia; Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, Indonesia; Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, Indonesia; Computer Science Department, BINUS Graduate Program Doctor of Computer Science, Bina Nusantara University, Jakarta, Indonesia",2023 6th International Conference of Computer and Informatics Engineering (IC2IE),"4 Dec 2023","2023","","","64","69","Microservices and monolithic systems are two prevalent architectural approaches in software development. This study provides a complete review and analysis of the key components involved in design, development, and operation in software development. A systematic review of the literature was conducted according to the Preferred Reporting Items for Systematic Reviews and Meta-Analyses (PRISMA) guidelines. This review examined various sources debating monolithic systems vs microservices, highlighting their benefits, drawbacks, and implementation in enterprises. The paper addresses important research questions, aiming to further analyze this architectural approach. Findings show that microservices offer benefits such as scalability, flexibility, and independent deployment, while monolithic systems provide simplicity and ease of development. However, challenges related to network communication, data consistency, and operational complexity were also found with microservices. This research focuses on discussing the trade-offs and factors to consider when deciding between monolithic systems and microservices, which provides in-depth information for practitioners in decision-making for software development. This research aims to help readers understand the effects of using monolithic or microservice-based systems in software development.","","979-8-3503-4516-2","10.1109/IC2IE60547.2023.10331155","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10331155","Microservices;Monolithic Systems;PRISMA;benefits;drawbacks;implementation","Systematics;Scalability;Microservice architectures;Computer architecture;Maintenance engineering;Throughput;Software","","2","","28","IEEE","4 Dec 2023","","","IEEE","IEEE Conferences"
"Research on Digital Agile Information System Based on Microservice Architecture","Z. Xiuli; F. Dong; W. Chengzhang; W. Zhanwei","Beijing Guodiantong Network Technology Co. LTD, Beijing, China; Beijing Guodiantong Network Technology Co. LTD, Beijing, China; Beijing Guodiantong Network Technology Co. LTD, Beijing, China; Beijing Guodiantong Network Technology Co. LTD, Beijing, China",2023 2nd International Conference on Artificial Intelligence and Autonomous Robot Systems (AIARS),"20 Oct 2023","2023","","","238","242","With the vigorous development of various business systems of the State Grid Corporation of China, the business requirements are continuously updated and changed, and the traditional waterfall model development can no longer meet the current business needs. And in the paper, the architecture method of microservice integration Data Middle Office is proposed. Based on the microservice architecture system, the application and function are realized by integrating the component technology of the Data Middle Office, then the project practice is carried out through agile development, and the technical architecture layer and the agile development process are elaborated. In addition, the technical layers and workflows involved. By adopting the micro-service architecture and integrating the agile development model, focusing on the demand and rapidly iterating, the platform is continuously optimized and iterative upgraded, which provides a reference for the enterprise-level development solution of State Grid Corporation under the construction of the new information system.","","979-8-3503-2435-8","10.1109/AIARS59518.2023.00055","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10285240","microservices;data middle office;agile development","Microservice architectures;Focusing;Real-time systems;Iterative methods;Springs;Research and development;Information systems","","","","10","IEEE","20 Oct 2023","","","IEEE","IEEE Conferences"
"Understanding the Causes of Microservice Logical Coupling: an Exploratory Study","D. A. d'Aragona; X. Li; A. Janes","Tampere University, Tampere, Finland; University of Oulu, Oulu, Finland; FHV Vorarlberg University of Applied Sciences, Dornbirn, Austria",2024 IEEE/ACM International Workshop New Trends in Software Architecture (SATrends),"10 Sep 2024","2024","","","14","17","When implementing a software system, two crucial metrics come into play: the degree of interdependence between modules, known as coupling, and the extent to which the components within a module collaborate to fulfill its task, referred to as cohesion. This paper studies the phenomenon of apparent coupling and explores the possibilities to exclude it from measurement when studying coupling between microservices.","","979-8-4007-0560-1","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10669856","microservices;coupling;software quality;natural language processing;commits","Couplings;Measurement;Software architecture;Conferences;Microservice architectures;Software systems;Market research","","","","15","CCBY","10 Sep 2024","","","IEEE","IEEE Conferences"
"Design of a Geographic Information System for Forest and Land Fires Based on a Real-Time Database on Microservices Infrastructure","F. Zahra’ Aqilah Mudrikah; Istikmal; B. Aditya","School of Electrical Engineering, Telkom University, Bandung, Indonesia; School of Electrical Engineering, Telkom University, Bandung, Indonesia; School of Electrical Engineering, Telkom University, Bandung, Indonesia",2022 IEEE International Conference on Internet of Things and Intelligence Systems (IoTaIS),"13 Dec 2022","2022","","","1","6","Forest and land fires are an increasingly common problem in Indonesia. Fire cases that often occur require a system that is able to detect fires and provide information to users remotely to reduce the impact of fires. Along with the development of hardware technology such as computers, the use of GIS seems to be an effective shortcut in analyzing an event. Kubernetes is an open source platform for managing containerized application workloads, offering declarative configuration and automation. This research designs a Google Maps API System tool for forest and land fires using a real-time database on microservices infrastructure with outputs in the form of fire locations and the results of sensor readings used. Broadly speaking, the processes that occur in the design of the location of forest fire points will be detected by sensors. Then firebase will store forest fire data which will simultaneously be updated on the website. Clients can see the point of forest fires through a browser on their respective desktops. Based on the results of the performance tests that have been carried out, it can be concluded that the use of Kubernetes microclusters can provide advantages when compared to those built monolithically, because Kubernetes microclusters have several advantages, namely having the Horizontal Pod Autoscaler feature, and the Kubernetes microcluster manages components and related services well. Then for each test performed, there was no significant change in memory usage. In the analysis of the results of the comparison data with 7 tests that have been carried out there are 6 tests which mean that the service built with the Kubernetes microcluster is superior to the monolithic one, namely hits per second 2354 ms, latency 3599 ms, response code 720 success code, cpu utilization 13.84%, error rate error rate 0.00%, and throughput 112/sec.","2832-1383","979-8-3503-9645-4","10.1109/IoTaIS56727.2022.9975953","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9975953","SIG;Detector;Fire;Kubernetes;Microservices","Codes;Error analysis;Databases;Microservice architectures;Forestry;Throughput;Real-time systems","","1","","23","IEEE","13 Dec 2022","","","IEEE","IEEE Conferences"
"A Microservices Identification Approach based on Problem Frames","Z. Yang; S. Wu; C. Zhang","Anhui Provincial Key Laboratory of Multimodal Cognitive Computation (Anhui University); School of Computer Science and Technology, Anhui University; State Key Lab for Novel Software Technology (Nanjing University), Hefei, China; Anhui Provincial Key Laboratory of Multimodal Cognitive Computation (Anhui University); School of Computer Science and Technology, Anhui University; State Key Lab for Novel Software Technology (Nanjing University), Hefei, China; Anhui Provincial Key Laboratory of Multimodal Cognitive Computation (Anhui University); School of Computer Science and Technology, Anhui University; State Key Lab for Novel Software Technology (Nanjing University), Hefei, China",2022 IEEE 2nd International Conference on Software Engineering and Artificial Intelligence (SEAI),"25 Jul 2022","2022","","","155","159","As software grows in size continuously, traditional monolithic architecture is difficult to upgrade and update. As a more flexible architecture, microservices consist of smaller pieces or services that are loosely coupled and can be deployed independently. More and more IT companies are adopting microservices architecture. However, migrating to microservices is still a big challenge due to the lack of a more systematic methodology on microservices identification. Most existing studies on microservices identification are mainly based on refactoring the system module rather than considering the actual functional requirements. Therefore, we propose a microservices identification approach based on the problem frames to address this challenge, which considers real-world requirements. It relies on the merging process with the problem diagram, where the problem domain is processed, and the causal chain is obtained by searching the problem diagram. Subsequently, we calculate the correlation degree of the domains in the problem diagram. Then, based on the calculated correlation, we implement a clustering algorithm for the problem domains and get the categorization result of the problem domains which is the initial microservice candidate. The developers can consider each category of the problem domain as a microservice by converting the problem domains into the microservices. Finally, a case study verifies the validity of our proposed approach.","","978-1-6654-8223-3","10.1109/SEAI55746.2022.9832106","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9832106","Microservices;microservices migration;problem frames;problem domain","Correlation;Systematics;Conferences;Merging;Microservice architectures;Computer architecture;Companies","","1","","12","IEEE","25 Jul 2022","","","IEEE","IEEE Conferences"
"PISCO: A smart simulator to deploy energy saving methods in microservices based networks","H. Humberto Alvarez Valera; M. Dalmau; P. Roose; J. Larracoechea; C. Herzog","E2S UPPA, University of Pau, Anglet, France; E2S UPPA, University of Pau, Anglet, France; E2S UPPA, University of Pau, Anglet, France; E2S UPPA, University of Pau, Anglet, France; EFFICIT SAS - Mauzac, France",2022 18th International Conference on Intelligent Environments (IE),"15 Jul 2022","2022","","","1","4","Nowadays, many researchers work to identify microservices-based application deployments and scheduling solutions to save energy without decreasing functional QoS. In this work, we present PISCO: A simulator that allows facing this challenge in a simple and efficient way, enabling its users to focus uniquely on microservices deployment/scheduling algorithms and its hardware/software repercussions (load vs. energy consumption) without worrying about low-level network configurations or operating system issues. PISCO is able to deploy and schedule (move, duplicate, start/stop) microservices and their dependencies on various devices with software and hardware heterogeneity (CPU, bandwidth, RAM, Battery, etc.), taking into account various scheduling heuristics algorithms: centralized vs non-centralized. To do this, PISCO allows deploying custom network topologies based on client-server schemes or p2p distributions, where devices can (dis)appear, turn on/off obeying random circumstances or user strategies.Finally, the simulator performs relevant operations such as QoS definition, resource monitoring, calculation of energy saved and consumption tracking (at device and network level). We tested some ideas based on our previous work “Kaligreen” to demonstrate the effectiveness of PISCO.","2472-7571","978-1-6654-6934-0","10.1109/IE54923.2022.9826775","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9826775","microservices;middleware;energy;consumption;CPU;network;hard disk;prototype;simulator","Performance evaluation;Schedules;Network topology;Operating systems;Software algorithms;Microservice architectures;Random access memory","","","","10","IEEE","15 Jul 2022","","","IEEE","IEEE Conferences"
"Towards Microservices-Aware Autoscaling: A Review","M. H. Fourati; S. Marzouk; M. Jmaiel","ReDCAD Laboratory, University of Sfax, Tunisia; ReDCAD Laboratory, University of Sfax, Tunisia; ReDCAD Laboratory, University of Sfax, Tunisia",2023 IEEE Symposium on Computers and Communications (ISCC),"28 Aug 2023","2023","","","1080","1083","This research paper elaborates an overview of auto scaling solutions for microservices-based applications deployed with containers. Two main features may characterize the efficiency of an autoscaler: analysis strategy launched to identify the root cause of resource saturation, and resource allocation strategy which selects the eligible components for scaling and calculates the required amount of resources. However, existing solutions do not consider the specificity of microservice architecture in their analysis and resource allocation strategies, which may lead to wrong root cause identification and unnecessary resource allocation. In this paper, we investigate and classify existing autoscalers dealing with containers in microservice context. We additionally specify the strength and the shortcomings of each category. As a conclusion, we report the challenges of such solutions and provide recommendations for future works enabling the development of microservices-aware autoscalers.","2642-7389","979-8-3503-0048-2","10.1109/ISCC58397.2023.10218213","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10218213","Autoscaling;Microservices;Containers;Cloud computing","Computers;Microservice architectures;Computer architecture;Containers;Dynamic scheduling;Resource management","","1","","23","IEEE","28 Aug 2023","","","IEEE","IEEE Conferences"
"Using Microservices for Rapid Creation of Remote Sensing Products","B. Xiang; Z. Li; Y. Liu; H. Zhang","Institute of Remote Sensing and Digital Earth, Chinese Academy of Sciences, China; Department of Computer Engineering and Computer Science, University of Concepción, Chile; Faculty of Engineering and Computer Science, Concordia University, Canada; State Key Laboratory of Novel Software Technology, Software Institute, Nanjing University, China",2018 IEEE International Conference on Software Architecture Companion (ICSA-C),"13 Aug 2018","2018","","","111","114","Driven by the demands of various sensing data products, remote sensing software systems have increasingly been developed and applied to a wide range of fields. Due to the legacy monolithic product line, we used to satisfy the requirements on a project-by-project basis, only with reuse of some fundamental source codes and tools. By employing microservices to refactor our product line, we are now able to follow a divide-and-conquer strategy to maximize the reusability of component business capacities and create satellite remote sensing products at a much faster pace. This paper mainly introduces our microservice-oriented product line, and the data-analytics-visualization (DAV) pattern for logically organizing and managing relevant microservices of different products. In particular, two projects (namely archaeological detection and cultural heritage protection & urban planning and land use) are used to demonstrate how we prevent to develop thematic products from scratch.","","978-1-5386-6585-5","10.1109/ICSA-C.2018.00037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8432192","Microservices;Software Architecture;Satellite Remote Sensing","Sensors;Cultural differences;Remote sensing;Satellites;Monitoring;Portals;Computer architecture","","","","5","IEEE","13 Aug 2018","","","IEEE","IEEE Conferences"
"A cloud platform architecture recovery metric method","W. Zhao; W. Hong; Y. Cheng","Institute of Mechanical Manufacturing Technology, Chinese Academy of Engineering Physics, Mianyang, China; Institute of Mechanical Manufacturing Technology, Chinese Academy of Engineering Physics, Mianyang, China; Institute of Computer Application, Chinese Academy of Engineering Physics, Mianyang, China",2022 IEEE 10th Joint International Information Technology and Artificial Intelligence Conference (ITAIC),"3 Aug 2022","2022","10","","1840","1845","Cloud platforms have become the most popular architecture for providing software services today, and traditional architecture evolution evaluation methods cannot achieve better results on cloud platforms because they are different from the architecture of traditional software. In this paper, we propose a method for architecture recovery based on the decentralized characteristics of cloud platforms. First, the method identifies the inapplicability of traditional monolithic software architecture recovery methods under the cloud platform architecture, and then a fast recovery method for cloud platform architecture based on the new city of dispersion features. The process of cloud platform architecture recovery extracts the overall architecture information, integrates the transformed New Town association dependency graph based on the architecture information, and then uses the architecture dependency graph as the input for distance-based aggregation of decentralized components. Finally, the above method is applied to three cloud platform projects, and the evaluation of the effectiveness of architecture recovery is verified separately. The experimental results show that the cloud platform architecture recovery method based on decentralized features can fully extract the cloud platform architecture information and achieve the accurate metric of architecture description.","2693-2865","978-1-6654-2207-9","10.1109/ITAIC54216.2022.9836690","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9836690","cloud platforms;evolution principles;architecture recovery;architecture extraction","Measurement;Codes;Software architecture;Urban areas;Systems architecture;Computer architecture;Feature extraction","","1","","9","IEEE","3 Aug 2022","","","IEEE","IEEE Conferences"
"Migrating Monolithic Mobile Application to Microservice Architecture: An Experiment Report","C. -Y. Fan; S. -P. Ma","Department of Computer Science and Engineering, National Taiwan Ocean University, Taiwan; Department of Computer Science and Engineering, National Taiwan Ocean University, Taiwan",2017 IEEE International Conference on AI & Mobile Services (AIMS),"11 Sep 2017","2017","","","109","112","The microservice architecture (MSA) is an emerging cloud software system, which provides fine-grained, self-contained service components (microservices) used in the construction of complex software systems. DevOps techniques are commonly used to automate the process of development and operation through continuous integration and continuous deployment. Monitoring software systems created by DevOps, makes it possible for MSA to obtain the feedback necessary to improve the system quickly and easily. Nonetheless, systematic, SDLC-driven methods (SDLC: software development life cycle) are lacking to facilitate the migration of software systems from a traditional monolithic architecture to MSA. Therefore, this paper proposes a migration process based on SDLC, including all of the methods and tools required during design, development, and implementation. The mobile application, EasyLearn, was used as an illustrative example to demonstrate the efficacy of the proposed migration process. We believe that this paper could provide valuable references for other development teams seeking to facilitate the migration of existing applications to MSA.","","978-1-5386-1999-5","10.1109/AIMS.2017.23","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8027278","microservice;microservice architecture;migration;software development life cycle","Computer architecture;Databases;Software systems;Tools;Automation;Mobile applications","","57","1","10","IEEE","11 Sep 2017","","","IEEE","IEEE Conferences"
"Pattern-based Modelling, Integration, and Deployment of Microservice Architectures","V. Yussupov; U. Breitenbücher; C. Krieger; F. Leymann; J. Soldani; M. Wurster","Institute of Architecture of Application Systems, University of Stuttgart, Germany; Institute of Architecture of Application Systems, University of Stuttgart, Germany; Institute of Architecture of Application Systems, University of Stuttgart, Germany; Institute of Architecture of Application Systems, University of Stuttgart, Germany; Department of Computer Science, University of Pisa, Italy; Institute of Architecture of Application Systems, University of Stuttgart, Germany",2020 IEEE 24th International Enterprise Distributed Object Computing Conference (EDOC),"23 Oct 2020","2020","","","40","50","Microservice-based architectures (MSAs) gained momentum in industrial and research communities since finer-grained and more independent components foster reuse and reduce time to market. However, to come from the design of MSAs to running applications, substantial knowledge and technology-specific expertise in the deployment and integration of microservices is needed. In this paper, we propose a model-driven and pattern-based approach for composing microservices, which facilitates the transition from architectural models to running deployments. Using a unified modelling for MSAs, including both their integration based on Enterprise Integration Patterns (EIPs) and deployment aspects, our approach enables automatically generating the artefacts for deploying microservice compositions. This helps abstracting away the underlying infrastructure including container orchestration platforms and middleware layer for service integration. To validate the feasibility of our approach, we illustrate its prototypical implementation, with Kubernetes used as container orchestration system and OpenFaaS used for managing integration logic, and we present a case study.","2325-6362","978-1-7281-6473-1","10.1109/EDOC49727.2020.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9233043","Microservice Architecture;Service Composition;Enterprise Integration Pattern;Model-driven Engineering","Containers;Task analysis;Routing;Standards;Publish-subscribe;Communication channels;Programming","","11","","35","IEEE","23 Oct 2020","","","IEEE","IEEE Conferences"
"Streamlining Software Release Process and Resource Management for Microservice-based Architecture on multi-cloud","I. P. Herath; S. Jayawardena; A. Fadhil; N. Kodagoda; U. S. S. S. Arachchillage","Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Faculty of Computing, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science, Sri Lanka Institute of Information Technology, Sri Lanka",2023 25th International Multitopic Conference (INMIC),"19 Mar 2024","2023","","","1","6","The software development process is more flexible with the concept of containerization in the microservice platform. This research is on three key components to resolve problems faced by the developers and DevOps teams in the IT industry. First, the development phase expects a fully automated software release process from to the deployment phase and then optimize processes tailored to Docker, and Kubernetes, in microservice-based applications. Then streamline the process and leverage the container orchestration technologies to monitor the main aspect of the development lifecycle through the multi-cloud deployment on demand of the growth of day-today releases on multi-regions. A centralized monitoring platform is developed to monitor the deployed applications and that provides comprehensive visibility regarding performance and health of microservices. At the stage of scalarization in microservices, Vertical Pod Autoscaling (VPA) and Horizontal Pod Autoscaling (HPA) are available approaches for resource allocation, and they require measuring the minimum and maximum resource limits. As a result, an intelligent resource allocation system is proposed using a combination of Convolutional Neural Networks (CNN) and Bidirectional Long Short-Term Memory (Bi-LSTM) algorithms to cater to dynamic resource allocation, optimizing scalability, and improving cost-efficiency. This research aims to achieve practical insights into the IT industry’s automated deployment, managing, scaling, and monitoring of microservice-based applications through the mentioned components.","2835-8864","979-8-3503-1770-1","10.1109/INMIC60434.2023.10465960","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10465960","Kubernetes;Docker;Microservice;HPA;VPA;DevOps;IT;Containerization;Scaling;CNN;Bi-LSTM;multicloud;multi-region","Measurement;Heuristic algorithms;Software algorithms;Microservice architectures;Computer architecture;Predictive models;Software","","","","23","IEEE","19 Mar 2024","","","IEEE","IEEE Conferences"
"An Approach to Extract the Architecture of Microservice-Based Software Systems","B. Mayer; R. Weinreich","Johannes Kepler University Linz, Austria; Johannes Kepler University Linz, Austria",2018 IEEE Symposium on Service-Oriented System Engineering (SOSE),"17 May 2018","2018","","","21","30","Microservices decouple network-accessible system components to support independent development, deployment, and scalability. The architecture of microservice-based software systems is typically not defined upfront but emerges by dynamically assembling services to systems. This makes it hard to extract component relations from static sources since component relationships may only become evident at runtime. Existing systems focus either on the static structure of service relations, neglecting runtime properties, or on (short-term) monitoring of runtime properties to detect errors. We present an approach to extract and analyze the architecture of a microservice-based software system based on a combination of static service information with infrastructure-related and aggregated runtime information.","","978-1-5386-5207-7","10.1109/SOSE.2018.00012","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8359145","Microservices;architecture extraction;microservice monitoring;microservice management","Computer architecture;Runtime;Software systems;Data models;Documentation;Containers;Monitoring","","32","","36","IEEE","17 May 2018","","","IEEE","IEEE Conferences"
"Self-adaptation in Microservice Architectures: A Case Study","S. R. Boyapati; C. Szabo","Atlassian, Adelaide, Australia; The University of Adelaide, Adelaide, Australia",2022 26th International Conference on Engineering of Complex Computer Systems (ICECCS),"3 May 2022","2022","","","42","51","Most software companies deploy microservices be-hind API Gateways or load balancers to separate their business logic while at the same time serving their customers according to their SLAs. Today, internet companies serve an average of 150–200 million users efficiently in rapidly changing conditions, where autonomic self-adaptation solutions are critical. At such a large scale, self-adaptation has to address challenges related to high availability and reliability, in a variety of scenarios. In this industry experience report, we present the implementation of a self-adaptation approach for microservice architectures that can operate at a large scale and address availability and reliability concerns. Our prototype builds on current industry standards of observability tools used to track the system's internal state. We implement a lightweight MAPE-K loop that reduces the time taken to add self-adaptability and the total cost of ownership. Our case study focuses on dynamic rate limiting, where the implementation of our architecture was able to trigger and execute self-adaptation in under 1 second. We present our architecture, an overview of our prototype implementation and suite of tools used, and discuss our empirical observations.","","978-1-6654-0162-3","10.1109/ICECCS54210.2022.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9763724","Microservice architectures;self-adaptation","Industries;Limiting;Microservice architectures;Prototypes;Computer architecture;Companies;Logic gates","","5","","34","IEEE","3 May 2022","","","IEEE","IEEE Conferences"
"A Survey on Microservices Criticality Attributes on Established Architectures","E. Fernandes Mioto de Oliveira dos Santos; C. M. Lima Werner","Programa de Engenharia de Sistemas e Computação, Universidade Federal do Rio de Janeiro, Rio de Janeiro, Brazil; Programa de Engenharia de Sistemas e Computação, Universidade Federal do Rio de Janeiro, Rio de Janeiro, Brazil",2019 International Conference on Information Systems and Software Technologies (ICI2ST),"27 Dec 2019","2019","","","149","155","The microservice oriented software architecture considers the delegation of responsibilities by separate components, thus creating a set of interconnected but independent services. Information about the most critical microservices is relevant to software architects and other decision-makers, thus guiding the maintenance and evolution of architecture in a more assertive and guided way. This paper aims to observe the need for a method to measure criticality in a microservice oriented architecture, motivated by this purpose, during August 2019, a survey with twenty experienced participants from the industry and academia was conducted, where the lack of a grounded method to measure the criticality on established architectures was observed.","","978-1-7281-4886-1","10.1109/ICI2ST.2019.00028","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8940402","Microservices;Criticality;Attributes;Established Architectures;Survey","Computer architecture;ISO Standards;Atmospheric measurements;Particle measurements;Service-oriented architecture;Computational modeling","","","","9","IEEE","27 Dec 2019","","","IEEE","IEEE Conferences"
"Research on Unified Authentication and Authorization in Microservice Architecture","Y. ShuLin; H. JiePing","College of Information Engineering, Beijing Institute of Graphics Communication, Beijing, China; Department of Basic, Beijing Institute of Graphics Communication, Beijing, China",2020 IEEE 20th International Conference on Communication Technology (ICCT),"24 Dec 2020","2020","","","1169","1173","Microservice architecture reduces the coupling between application modules, which is conducive to the development, deployment and operation and maintenance of complex application systems. However, compared with the monolithic architecture, the access control of its resources becomes more complex. Based on the application scenario of enterprise system micro service architecture, aiming at the high security requirements of business system, through the analysis and research of micro service architecture, this paper designs a set of access control solution, which can meet the requirements of unified authentication, improving the efficiency of authority verification and accelerating the system development speed under the microservice architecture, which has reference for enterprise application system design significance.","2576-7828","978-1-7281-8141-7","10.1109/ICCT50939.2020.9295931","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9295931","component;microservice architecture;oauth2;zuul","Authentication;Authorization;Servers;Security;Logic gates;Business;Public key","","10","","8","IEEE","24 Dec 2020","","","IEEE","IEEE Conferences"
"Are knowledge and usage of microservices patterns aligned? An exploratory study with professionals","J. F. L. Daniel; A. Goldman; E. G. Martins","Institute of Mathematics and Statistics, University of São Paulo, São Paulo, Brazil; Institute of Mathematics and Statistics, University of São Paulo, São Paulo, Brazil; Faculty of Computer Science, Free University of Bozen-Bolzano, Bolzano, Italy","2022 IEEE 46th Annual Computers, Software, and Applications Conference (COMPSAC)","10 Aug 2022","2022","","","878","883","Microservices Architecture is a trending solution for large systems, which counts with an extensive pattern language that defines its base practices and documents solutions to recurrent problems. However, there is a lack of studies investigating how these patterns are known and applied by professionals. Understanding how the patterns are used enables to comprehend the design process for this architectural style and identify opportunities for improvement. So, this work aims to collect and analyze information about how professionals know and use microservice patterns. To achieve that, we conducted a questionnaire study focused on eleven patterns that directly influence the architecture and components structure. The questionnaire was answered by 63 participants and revealed that, in general, they know the patterns, but with a significant amount declaring that it was known only as a practice. Additionally, among other results, our study also identified that the patterns are more commonly adopted at the project beginning rather than by refactoring and that they frequently are adopted more than once in the same system.","0730-3157","978-1-6654-8810-5","10.1109/COMPSAC54236.2022.00139","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9842717","Microservices Patterns;Microservices Architecture;Architectural Patterns;Usage of Patterns","Microservice architectures;Computer architecture;Software","","1","","15","IEEE","10 Aug 2022","","","IEEE","IEEE Conferences"
"Design and Implementation of Gray Publishing System under Distributed Application Microservice","H. Chen; W. Qi; W. Li; S. Shuai; F. Zheng; Z. Yu","Smart Grid Service Center, Jiangsu Frontier Electric Power Technology Co., Ltd, Nanjing, China; Smart Grid Service Center, Jiangsu Frontier Electric Power Technology Co., Ltd, Nanjing, China; Smart Grid Service Center, Jiangsu Frontier Electric Power Technology Co., Ltd, Nanjing, China; Smart Grid Service Center, Jiangsu Frontier Electric Power Technology Co., Ltd, Nanjing, China; Smart Grid Service Center, Jiangsu Frontier Electric Power Technology Co., Ltd, Nanjing, China; Smart Grid Service Center, Jiangsu Frontier Electric Power Technology Co., Ltd, Nanjing, China",2021 11th International Conference on Power and Energy Systems (ICPES),"26 Jan 2022","2021","","","452","455","The release of the information system version poses a certain risk to the normal operation of the system. Based on the information system micro service architecture, this paper studies the entrusted management of the information system according to the EDAs gray level table under different gray levels, and provides all-round solutions in combination with the different needs of system development, configuration, monitoring, operation and maintenance, so as to effectively improve the core computing capability of the platform under the micro service architecture and realize the online release and loss free return of the system, Reduce system release risk and improve system service quality.","2767-732X","978-1-6654-1325-1","10.1109/ICPES53652.2021.9683953","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9683953","information system;gray scale publishing;EDAS","Publishing;Microservice architectures;Distributed databases;Computer architecture;Gray-scale;Maintenance engineering;Monitoring","","","","15","IEEE","26 Jan 2022","","","IEEE","IEEE Conferences"
"Latency-Aware Microservice Deployment for Edge AI Enabled Video Analytics","Z. Yang; Z. Yu; X. Liu; D. Wen; Y. Zhou; Y. Shi","School of Information Science and Technology, ShanghaiTech University, Shanghai, China; School of Information Science and Technology, ShanghaiTech University, Shanghai, China; School of Information Science and Technology, ShanghaiTech University, Shanghai, China; School of Information Science and Technology, ShanghaiTech University, Shanghai, China; School of Information Science and Technology, ShanghaiTech University, Shanghai, China; School of Information Science and Technology, ShanghaiTech University, Shanghai, China",2024 IEEE Wireless Communications and Networking Conference (WCNC),"3 Jul 2024","2024","","","01","06","Video analytics plays a pivotal role in public safety (e.g., criminal suspect detection, traffic flow count, and illegal parking management), which assists the polices in monitoring all anomalous events in the street. In this paper, we consider the scenario with multiple video analytics applications from a single video stream. However, traditional monolithic architecture based video analytics applications shall seriously increase the response latency due to the resource contention of repetitive components. Therefore, we utilize the microservice architecture based video analytics (MAVA) to share the universal microser-vices in different applications, which shall decrease the response latency by reducing the computation load and increasing the resource utilization. To further achieve fast and accurate video analytics, the video analytics microservices are deployed in the edge closing to the cameras and users, and artificial intelligence (AI) methods are used in the microservices to realize specified functions. Therefore, an edge AI enabled MAVA (EAI-MAVA) architecture is proposed to achieve accurate video analytics in real-time. Furthermore, we formulate a microservice deployment problem to determine the location of each microservice in EAI-MAVA, which minimizes the response latency of all applications by considering the resource demands of microservices and the resource constraints of heterogeneous edge devices. Finally, a greedy-based heuristic algorithm is proposed to solve the non-convex microservice deployment problem, which obtains a sub-optimal solution with small loss of accuracy and reduces the solution time obviously.","1558-2612","979-8-3503-0358-2","10.1109/WCNC57260.2024.10571167","Natural Science Foundation of Shanghai(grant numbers:21ZR1442700,23YF1427400,23ZR1442800); National Natural Science Foundation of China(grant numbers:U20A20159); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10571167","Video analytics;microservice architecture;edge AI;microservice deployment;heuristic algorithm","Accuracy;Visual analytics;Heuristic algorithms;Microservice architectures;Computer architecture;Streaming media;Real-time systems","","","","19","IEEE","3 Jul 2024","","","IEEE","IEEE Conferences"
"An Overview Analysis of Authentication Mechanism in Microservices-Based Software Architecture: A Discussion Paper","C. H. Jack; S. K. Teck; L. T. Ming; D. Y. Hong","Department of Software Engineering And Technology, Tunku Abdul Rahman University of Management and Technology, Kuala Lumpur, Malaysia; Department of Information System And Security, Tunku Abdul Rahman University of Management and Technology, Kuala Lumpur, Malaysia; Department of Centre For Business Incubation And Entrepreneurial Venture, Tunku Abdul Rahman University of Management and Technology, Kuala Lumpur, Malaysia; Department of Software Engineering And Technology, Tunku Abdul Rahman University of Management and Technology, Kuala Lumpur, Malaysia",2023 IEEE 8th International Conference On Software Engineering and Computer Systems (ICSECS),"26 Sep 2023","2023","","","1","6","Microservices-based software architecture promotes scalability and flexibility by breaking down a software application into smaller modules and making it more independent and loosely coupled services compared to monolith systems. However, securing microservices in a distributed nature has become one of the challenges. Authentication is one of the most critical components that should be focused in the microservices security measures. It helps to identify that only authenticated personnel and services can access sensitive information and secure the trust between microservices. This discussion paper aims to provide an overview analysis and extensive understanding on the authentication mechanism in microservices-based software architecture. In this study, we explore different authentication mechanisms including Mutual Transport Layer Security (mTLS), Token based authentication and API Gateway authentication. This study examines the strengths and limitations of different authentication mechanisms in microservices-based software architecture. It also emphasizes the importance of authentication and the need for having a well-designed authentication mechanism to ensure the integrity and security of microservices-based software architecture is crucial.","","979-8-3503-1093-1","10.1109/ICSECS58457.2023.10256409","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10256409","microservices;architecture;authentication mechanism;security","Software architecture;Scalability;Authentication;Microservice architectures;Computer architecture;Logic gates;Software","","","","17","IEEE","26 Sep 2023","","","IEEE","IEEE Conferences"
"Container-Based Microservices SDN Control Plane for Open Disaggregated Optical Networks","Q. P. Van; D. Verchere; H. Tran-Quang; D. Zeghlache","Nokia Bell Labs, Nozay, France; Nokia Bell Labs, Nozay, France; Telecom Sud-Paris, Évry; Telecom Sud-Paris, Évry",2019 21st International Conference on Transparent Optical Networks (ICTON),"19 Sep 2019","2019","","","1","4","Optical networks are undergoing a massive transformation heading the open optical systems with services automation. The Software Defined Networking (SDN), Open Line System (OLS) disaggregation and standardization of data models including IETF, OpenConfig, OpenROADM, Transport-API, are the key factors driving this transformation. In this paper, we first introduce the evolution of optical networks, then we present a container-based microservices SDN control platform and explain how this optical network control platform as a service supports this evolution. Finally, a demonstration of the container-based microservices platform with 4-step scenario is presented and validated.","2161-2064","978-1-7281-2779-8","10.1109/ICTON.2019.8840430","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8840430","SDN;microservices architecture;service provisioning;Docker container.","Optical fiber networks;Integrated optics;Optical fibers;Optical switches;Software;Computer architecture","","6","","11","IEEE","19 Sep 2019","","","IEEE","IEEE Conferences"
"Study of Microservice Execution Framework Using Spoken Dialogue Agents","H. Ozono; S. Chen; M. Nakamura","Graduate School of System Informatics, Kobe University, Kobe, Japan; Graduate School of System Informatics, Kobe University, Kobe, Japan; Graduate School of System Informatics, Kobe University, Kobe, Japan","2021 IEEE/ACIS 22nd International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","11 Feb 2022","2021","","","273","278","Japan is currently facing super-aging society and the assistive technology for self-help and mutual aid of the elderly is becoming urgent. The purpose of this paper is to build a system that can execute various services through dialogue with agents, in order to support elderly people who cannot use Internet services due to lack of access to devices. To achieve the goal, we discuss a framework for executing microservices using dialogue agents. More specifically, the framework consists of the next two essential elements: (1) Managing user information for the various microservices centrally. (2) Configuring the behavior of the agents when executing the services correctly. In the proposed method, we first discuss each element in detail. Then, we demonstrate the effectiveness of the framework by applying it to the actual integration of a dialogue agent and several microservices.","2693-8421","978-1-6654-0403-7","10.1109/SNPD51163.2021.9704889","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9704889","super-aging society;assistive technology;dialogue agents;microservices;framework","Web and internet services;Microservice architectures;Speech recognition;User interfaces;Assistive technologies;Older adults;Artificial intelligence","","9","","11","IEEE","11 Feb 2022","","","IEEE","IEEE Conferences"
"Intelligent Agent support for Topology Learning in microservices-based SDN Controller","D. Scotece; P. M. Tshakwanda; S. T. Arzo; R. Cavallari; L. Foschini; M. Devetsikiotis","Department of Computer Science and Engineering, University of Bologna, Bologna, Italy; Department of Electrical and Computer Engineering, University of New Mexico, USA; Department of Electrical and Computer Engineering, University of New Mexico, USA; Department of Computer Science and Engineering, University of Bologna, Bologna, Italy; Department of Computer Science and Engineering, University of Bologna, Bologna, Italy; Department of Electrical and Computer Engineering, University of New Mexico, USA",ICC 2024 - IEEE International Conference on Communications,"20 Aug 2024","2024","","","165","170","The softwarization of networks is increasingly spreading, and one of the main paradigms is SDN (Software-Defined Networking), which allows overcoming the limitations mainly arising from the integration of the control plane and the forwarding plane within the network devices. It extracts the control plane to place it within a new logically centralized component: the SDN controller. Since this is a monolithic architecture that limits reliability and scalability, distributed solutions based on microservices have been proposed in the literature. In parallel, Agents are fully intelligent, atomic, and autonomous decision-making units that can be flexibly recomposed to create a completely autonomous network system. They also have the ability to replicate single or multiple decision-making processes that collaborate with each other. The development of future networks such as 5G, including 6G, is pushing towards the concept of network management automation and integration of intelligence, making agents an excellent means to meet this trend. This paper first introduces intelligence in the form of agents to a distributed SDN controller based on microservices, by implementing two new functionalities: topology _learning and shortest path, Then, it leverages a microservices-based SDN solution based on Ryu SDN framework, named MSN, to run agents in a Docker Container environment. Multiple measurements were performed locally in a single machine. Results show the topology learning performances compared with several network topologies. Moreover, the shortest patti agent experimental evaluations show the knowledge size depends on the network topology and the performances of different algorithms.","1938-1883","978-1-7281-9054-9","10.1109/ICC51166.2024.10622390","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10622390","Software-Defined Networking;Microservices;Intelligent Agent;Docker Container;5G;6G","Knowledge engineering;Network topology;Scalability;Decision making;Microservice architectures;Quality of service;Topology","","","","22","IEEE","20 Aug 2024","","","IEEE","IEEE Conferences"
"Experiences on a Frameworkless Micro-Frontend Architecture in a Small Organization","J. Männistö; A. -P. Tuovinen; M. Raatikainen","SimAnalytics Oy, Helsinki, Finland; University of Helsinki, Helsinki, Finland; University of Helsinki, Helsinki, Finland",2023 IEEE 20th International Conference on Software Architecture Companion (ICSA-C),"24 Apr 2023","2023","","","61","67","Micro-frontend (MFE) architecture for a web application aims at doing the same for a monolithic user interface (UI) that microservices do for a monolithic backend: it decomposes the UI into self-contained components that can be developed, deployed, and provisioned together with their associated backend service. This paper represents a small team’s experiences at the Visma company transforming its monolithic UI into a Micro-frontend solution. We describe the motivations, the key design decisions based on Web Component technologies, the design and implementation process including ATAM-based architectural assessment, and our learnings from the case. The key takeaways are that (1) the motivations for MFE concerned improving customer-specific configurability and lowering the related costs rather than enabling team independence, (2) the APIs provided by web standards — and the Web Components API based on them — offered a competitive alternative for JavaScript frameworks avoiding many framework-induced problems, and (3) small organizations without a large number of feature teams can benefit from Micro-frontend architectures.","2768-4288","978-1-6654-6459-8","10.1109/ICSA-C57050.2023.00025","Academy of Finland; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10092645","Micro-frontend;Microservice;Software architecture;Software Architecture Assessment","Costs;Software architecture;Standards organizations;Microservice architectures;Computer architecture;Companies;User interfaces","","3","","29","IEEE","24 Apr 2023","","","IEEE","IEEE Conferences"
"From Models to Microservices: Easily Operationalizing Machine Learning models","D. Panchal; I. Baran; D. Musgrove; D. Lu","AT&T, Middletown, NJ, USA; AT&T, Middletown, NJ, USA; AT&T, Middletown, NJ, USA; AT&T, Dallas, TX, USA",2023 International Conference on Computer and Applications (ICCA),"23 Jan 2024","2023","","","1","5","Although Machine Learning and Deep Learning have advanced significantly in their ability to perform supervised, unsupervised and reinforcement learning tasks quite well, integrating them into applications for which they are meant to provide intelligence is not as seamless as it should be. There are many reasons for this - primary being that the kind of skills needed to understand the business need, understand the data, develop models, develop applications, and integrate models with applications are different and it is very difficult for one person or just a group of application developers or just a group of data scientists to have all these skills. This makes it challenging to productionalize the developed ML models fast or at all in order to experiment with them further. This paper demonstrates how certain components of the Acumos AI platform project can be used to take models developed using H2o, Java, Spark to production by deploying them as microservices, automatically. The same concept can be (and has been extended by Acumos) to Python, R and ONNX models. What this enables is - multiple heterogeneous models written by different developers or different teams or different organizations in different languages and frameworks becoming functioning microservices that would provide intelligent APIs to the business application in question. These models can then be easily shared with different individuals and organizations and operationalized easily. Using Acumos, these microservices can be deployed such that they also communicate and co-ordinate with each other to do much more complex tasks. We will talk about the 5G Network Slicing usecase, create an ML model for 5G Network Slicing and use certain Acumos components to make it shareable and operationalize it as a predicting microservice.","","979-8-3503-0325-4","10.1109/ICCA59364.2023.10401515","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10401515","Acumos;Machine Learning;MLOps;Platform;Microservices;5G;Network Slicing;eMBB;mMTC;URLLC;Open Source;AI4EU","5G mobile communication;Computational modeling;Network slicing;Microservice architectures;Organizations;Data models;Task analysis","","3","","24","IEEE","23 Jan 2024","","","IEEE","IEEE Conferences"
"Access Point Management Using Java Based Microservice","M. Bhat; V. Prabhu H","Dept of Computer Science and Engineering, RV College of Engineering, Bangalore, India; Dept of Computer Science and Engineering, RV College of Engineering, Bangalore, India",2024 8th International Conference on Computational System and Information Technology for Sustainable Solutions (CSITSS),"1 Jan 2025","2024","","","1","5","This research paper explores the design and implementation of an event-driven monitoring system for Wi-Fi6 Access Points (APs) using Java-based microservices architecture. WiFi 6's primary advantage over other standards is that it provides maximum speed and accessibility in congested networks. The system aims to enhance network management capabilities by leveraging real-time event processing and Kafka messaging infrastructure. Key components include event listeners for capturing Quality of Experience (QoE) and Trap events via Kafka topics from APs, microservices for event processing, and Kafka topics for inter-service communication. The paper discusses the architecture, functionality, and integration of each component, as well as the system's ability to identify and handle various event types, such as ap-info and user reports. Additionally, the paper addresses error handling mechanisms and debugging practices for events with undefined syntax. Overall, the research contributes to the advancement of network monitoring solutions through the utilization of microservices and events-driven architectures.","2767-1097","979-8-3315-0546-2","10.1109/CSITSS64042.2024.10816792","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10816792","Access Point Management;Java Microservices;Event-driven Architecture;Real-time Monitoring;Kafka Integration","Java;Microservice architectures;Computer architecture;Syntactics;Real-time systems;Quality of experience;Information technology;Monitoring;Wireless fidelity;Standards","","","","12","IEEE","1 Jan 2025","","","IEEE","IEEE Conferences"
"CaMP-INC: Components-aware Microservices Placement for In-Network Computing Cloud-Edge Continuum","S. O. Ali; H. Elbiaze; R. Glitho; W. Ajib","Université du Québec à Montréal, Montreal, Canada; Université du Québec à Montréal, Montreal, Canada; Concordia University, Montreal, Canada; Université du Québec à Montréal, Montreal, Canada",GLOBECOM 2022 - 2022 IEEE Global Communications Conference,"11 Jan 2023","2022","","","2116","2121","Microservices are a promising technology for future networks, and many research efforts have been devoted to optimally placing microservices in cloud data centers. However, microservices deployment in edge and in-network devices is more expensive than the cloud. Additionally, several works do not consider the main requirements of microservice architecture, such as service registry, failure detection, and each microservice's specific database. This paper investigates the problem of placing components (i.e. microservices and their corresponding databases) while considering physical nodes' failure and the distance to service registries. We propose a Components-aware Microservices Placement for In-Network Computing Cloud-Edge Continuum (CaMP-INC). We formulate an Integer Linear Programming (ILP) problem with the objective of cost minimization. Due to the problem's $\mathcal{NP}$-hardness, we propose a heuristic solution. Numerical results demonstrate that our proposed solution CaMP-INC reduces the total cost by 15.8% on average and has a superior performance in terms of latency minimization compared to benchmarks.","2576-6813","978-1-6654-3540-6","10.1109/GLOBECOM48099.2022.10000936","CHIST-ERA; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10000936","Microservices placement;Microservice architecture;In-Network Computing;Cloud-Edge Continuum","Costs;Databases;Image edge detection;Microservice architectures;Computer architecture;Integer linear programming;Minimization","","4","","15","IEEE","11 Jan 2023","","","IEEE","IEEE Conferences"
"An NFV and microservice based architecture for on-the-fly component provisioning in content delivery networks","N. T. Jahromi; R. H. Glitho; A. Larabi; R. Brunner","CIISE, Concordia University, Montreal, QC, Canada; Concordia University, Montreal, QC, CA; Ericsson, Montreal, QC, Canada; CIISE, Concordia University, Montreal, QC, Canada",2018 15th IEEE Annual Consumer Communications & Networking Conference (CCNC),"19 Mar 2018","2018","","","1","7","Content Delivery Networks (CDNs) deliver content (e.g. Web pages, videos) to geographically distributed end-users over the Internet. Some contents do sometimes attract the attention of a large group of end-users. This often leads to flash crowds which can cause major issues such as outage in the CDN. Microservice architectural style aims at decomposing monolithic systems into smaller components which can be independently deployed, upgraded and disposed. Network Function Virtualization (NFV) is an emerging technology that aims to reduce costs and bring agility by decoupling network functions from the underlying hardware. This paper leverages the NFV and microservice architectural style to propose an architecture for on-the-fly CDN component provisioning to tackle issues such as flash crowds. In the proposed architecture, CDN components are designed as sets of microservices which interact via RESTFul Web services and are provisioned as Virtual Network Functions (VNFs), which are deployed and orchestrated on-the-fly. We have built a prototype in which a CDN surrogate server, designed as a set of microservices, is deployed on-the-fly. The prototype is deployed on SAVI, a Canadian distributed test bed for future Internet applications. The performance is also evaluated.","2331-9860","978-1-5386-4790-5","10.1109/CCNC.2018.8319227","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8319227","Content Delivery Network;CDN;Network Function Virtualization;NFV;Microservice;Architecture;on-the-fly component provisioning","Servers;Computer architecture;Hardware;Videos;Internet;Conferences;Network function virtualization","","12","","17","IEEE","19 Mar 2018","","","IEEE","IEEE Conferences"
"An Approach to Follow Microservices Principles in Frontend","R. Perlin; D. Ebling; V. Maran; G. Descovi; A. Machado","Laboratory of Ubiquitous, Mobile and Applied Computing, Federal University of Santa Maria, Santa Maria, Brazil; Laboratory of Ubiquitous, Mobile and Applied Computing, Federal University of Santa Maria, Santa Maria, Brazil; Polytechnic College, Federal University of Santa Maria, Santa Maria, Brazil; Polytechnic College, Federal University of Santa Maria, Santa Maria, Brazil; Polytechnic College, Federal University of Santa Maria, Santa Maria, Brazil",2023 IEEE 17th International Conference on Application of Information and Communication Technologies (AICT),"13 Nov 2023","2023","","","1","6","Software development practices have evolved rapidly, seeking more flexible and reusable architectures. Microservices technology is an example of this, with its principles of technological independence and heterogeneity. These principles can be extended to the concept of micro-frontends, which proposes to divide the interface, allowing each team to work independently. This article presents an architecture that uses components developed in multiple frontend frameworks, aiming to make the workflow more independent and modular. The proposed architecture was evaluated in a prototype developed at the Animal Health Defense Platform of Rio Grande do Sul, which successfully integrated components from different frameworks.","2472-8586","979-8-3503-0356-8","10.1109/AICT59525.2023.10313208","Health; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10313208","Architecture;Microservices;Micro-frontend;Technological heterogeneity","Prototypes;Microservice architectures;Collaboration;Computer architecture;Standardization;Companies;Software","","1","","35","IEEE","13 Nov 2023","","","IEEE","IEEE Conferences"
"Applying a Service-Based Architecture Design Style to Network Functions Virtualization","B. Chatras","ORANGE, Orange Labs Networks, Chatillon, France",2018 IEEE Conference on Standards for Communications and Networking (CSCN),"20 Dec 2018","2018","","","1","4","This article presents a proposed an evolution of the Network Functions Virtualization (NFV) architectural framework towards a Service-Based Architecture (SBA), where management and orchestration services can be dynamically registered and discovered.","","978-1-5386-8146-6","10.1109/CSCN.2018.8581751","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8581751","NFV;orchestration;service-based architectures","Standards;Network function virtualization;Memory;Conferences;Industries;Computer architecture;Service-oriented architecture","","3","","6","IEEE","20 Dec 2018","","","IEEE","IEEE Conferences"
"A New Framework for Microservices with Single Sign-On, Security Assertion Markup Language and OpenID Connect","M. S. Saravanan; N. Gogineni","Department of Computer Science and Engineering, Saveetha School of Engineering, Saveetha Institute of Medical and Technical Sciences, Chennai, Tamilnadu, India; Department of Computer Science and Engineering, Saveetha School of Engineering, Saveetha Institute of Medical and Technical Sciences, Chennai, Tamilnadu, India",2024 3rd International Conference on Sentiment Analysis and Deep Learning (ICSADL),"25 Jul 2024","2024","","","539","543","Integrated global Single Sign-On (SSO) module is a security module for microservices which can be used to perform the basic authentication and authorization process in terms of user level and resources level. In general, micro services are the individual components which are executed separately for different purposes. In general, each individual service can communicate with external authentication mechanism to get validated in terms of identity and access check. But it is a complicated process for the services which are deployed individually because each service has to communicate with the authentication mechanism to get verified. In existing security models, the microservices are controlled through Auth 2.0 entity, Client Application and Authorization server individually. Therefore, this research study proposing an integrated framework called “BridG” identifies and connect all type of microservices with local and global network systems. The BridG framework has SSO module, Security Assertion Markup Language (SAML) and OpenID Connect (OlD C) to get authenticated and authorized for the individual microservices.","","979-8-3503-9615-7","10.1109/ICSADL61749.2024.00094","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10601390","SSO;SAML;OIDC;BridG;Microservices;Authentication;Authorization","Authorization;Deep learning;Sentiment analysis;Markup languages;Microservice architectures;Authentication;Security","","","","26","IEEE","25 Jul 2024","","","IEEE","IEEE Conferences"
"Analysis and Design of Microservices Architecture with GraphlQL as an API Gateway for Higher Education Information System","M. F. Radhiyan; D. Khairani; H. B. Suseno","Informatics Engineering, Faculty of Science and Technology UIN Syarif Hidayatullah, Jakarta, Indonesia; Informatics Engineering, Faculty of Science and Technology UIN Syarif Hidayatullah, Jakarta, Indonesia; Informatics Engineering, Faculty of Science and Technology UIN Syarif Hidayatullah, Jakarta, Indonesia",2022 International Conference on Science and Technology (ICOSTECH),"25 Jul 2022","2022","","","1","7","The use of monolithic architecture is considered ineffective for use in large-scale applications because it can affect the complexity of further development. In addition, the use of monolithic architecture allows failure of part of the system that can affect the entire system, so that the application must be fully maintained. Microservices is an architecture built by separating component parts (services) that do not depend on each other and have their respective functions. Each service can communicate and is managed by an API gateway that implements GraphQL as a data communication protocol. The method of decomposition of the system into service is carried out by applying the Decomposition by business capability pattern method. In this study, the authors recommend the use of a new system architecture for Academic Information System on UIN Jakarta based on literature studies from existing research. The result of this research is an analysis and architectural design of microservices with GraphQL as the API Gateway for the academic information system of UIN Jakarta for student.","","978-1-6654-7985-1","10.1109/ICOSTECH54296.2022.9829090","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9829090","System Analysis and Design;AIS UIN Jakarta;Microservices;GraphQL;API Gateway;Decomposition by Business Capability","Protocols;Education;Microservice architectures;Systems architecture;Logic gates;Data communication;Artificial intelligence","","2","","21","IEEE","25 Jul 2022","","","IEEE","IEEE Conferences"
"TOSCA for Microservice Deployment in Distributed Control Systems: Experiences and Lessons Learned","H. Koziolek; R. Hark; N. Eskandani; P. S. Nguyen; P. Rodriguez","ABB Corporate Research, Ladenburg, Germany; ABB Corporate Research, Ladenburg, Germany; ABB Corporate Research, Ladenburg, Germany; Frankfurt University of Applied Science, Frankfurt, Germany; ABB Corporate Research, Ladenburg, Germany",2023 IEEE 20th International Conference on Software Architecture Companion (ICSA-C),"24 Apr 2023","2023","","","11","21","The OASIS TOSCA language provides means for specifying the deployment of microservices to cloud-platforms in a vendor-neutral way. Designed in a independent of any application domain, it needs to be tailored to the distributed control systems (DCS), which for example manage the automation in chemical refineries, renewables production, and mining applications. There is still a lack of experience reports applying OASIS TOSCA in real-world settings, therefore the benefits and drawbacks of using this technology are still not well understood. In this context, we designed a simple DCS consisting of several microservices modelled in TOSCA and implemented an according TOSCA orchestrator. We executed a case study deploying the microservices to an on-premise and a cloud-based Kubernetes environment. While TOSCA provides a sophisticated object-oriented language, we found a few specification gaps, challenges when creating portable service templates, and challenges for synchronizing TOSCA orchestrators with DCS engineering tools as well as container orchestrators. The adoption of TOSCA in the process automation domain thus requires more work on the specification and tools and remains a mid-term goal.","2768-4288","978-1-6654-6459-8","10.1109/ICSA-C57050.2023.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10092611","software architecture;microservice;deployment;OASIS TOSCA;distributed control systems;case study;modeling;Azure;StarlingX","Renewable energy sources;Automation;Software architecture;Object oriented modeling;Decentralized control;Microservice architectures;Technology transfer","","1","","24","IEEE","24 Apr 2023","","","IEEE","IEEE Conferences"
"Building a Modern Microservices Ecosystem for Environmental Monitoring using IoT Sensors.","E. Vincent; P. P. Dhumal; G. Geevarghese; R. Jadhav","Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Vashi, Navi Mumbai; Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Vashi, Navi Mumbai; Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Vashi, Navi Mumbai; Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Vashi, Navi Mumbai",2023 5th Biennial International Conference on Nascent Technologies in Engineering (ICNTE),"12 Jun 2023","2023","","","1","4","Over the past decade, the software industry has steadily moved from large monolithic code repositories to small modular libraries. Micro services are the latest evolution in this transformation. Micro services are software systems specially designed to do one thing and only one thing but do it well. Internet of Things systems are usually designed to operate in the field without manual supervision. As such these systems need to have sufficient software functionality to display fault tolerance, error state recovery and operational consistency. This project is designed to deliver these core Internet of Things functionalities through an ecosystem of micro services. Specifically the project will focus on an in field gateway device – in this case a Raspberry Pi and implement micro services for environmental monitoring, command and control, device registration and on-boarding and over the air software upgrades. These systems will empower the gateway device to successfully integrate itself into a cloud connected content platform. For the purposes of this project all cloud components will be orchestrated on Amazon Web Services, the gateway device will be a Raspberry Pi Model B and the micro services built in Java.","","978-1-6654-6504-5","10.1109/ICNTE56631.2023.10146685","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10146685","Microservices;Mqtt;Raspberry Pi;Sensor","Java;Cloud computing;Protocols;Architecture;Ecosystems;Microservice architectures;Computer architecture","","","","6","IEEE","12 Jun 2023","","","IEEE","IEEE Conferences"
"An exploratory evaluation of replacing ESB with microservices in service-oriented architecture","L. D. S. B. Weerasinghe; I. Perera","Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka",2021 International Research Conference on Smart Computing and Systems Engineering (SCSE),"25 Oct 2021","2021","4","","137","144","With the continuous progress in technology during the past few decades, cloud computing has become a fast-growing technology in the world, making computerized systems widespread. The emergence of Cloud Computing has evolved towards microservice concepts, which are highly demanded by corporates for enterprise application level. Most enterprise applications have moved away from traditional unified models of software programs like monolithic architecture and traditional SOA architecture to microservice architecture to ensure better scalability, lesser investment in hardware, and high performance. The monolithic architecture is designed in a manner that all the components and the modules are packed together and deployed on a single binary. However, in the microservice architecture, components are developed as small services so that horizontally and vertically scaling is made easier in comparison to monolith or SOA architecture. SOA and monolithic architecture are at a disadvantage compared to Microservice architecture, as they require colossal hardware specifications to scale the software. In general terms, the system performance of these architectures can be measured considering different aspects such as system capacity, throughput, and latency. This research focuses on how scalability and performance software quality attributes behave when converting the SOA system to microservice architecture. Experimental results have shown that microservice architecture can bring more scalability with a minimum cost generation. Nevertheless, specific gaps in performance are identified in the perspective of the final user experiences due to the interservice communication in the microservice architecture in a distributed environment.","2613-8662","978-1-6654-0965-0","10.1109/SCSE53661.2021.9568289","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9568289","microservice;performance;scalability;SOA","Cloud computing;Costs;Scalability;System performance;Computational modeling;Computer architecture;Software quality","","4","","22","IEEE","25 Oct 2021","","","IEEE","IEEE Conferences"
"The advantages of Micro-Frontend architecture for developing web application","E. Gashi; D. Hyseni; I. Shabani; B. Çiço","Department of Computer Engineering, Faculty of Electrical and Computer Engineering, University of Prishtina, Prishtina, Kosova; Department of Computer Engineering, Faculty of Electrical and Computer Engineering, University of Prishtina, Prishtina, Kosova; Department of Computer Engineering, Faculty of Electrical and Computer Engineering, University of Prishtina, Prishtina, Kosova; Department of Computer Engineering, Faculty of Architecture and Computer Engineering, Epoka University, Tirana, Albania",2024 13th Mediterranean Conference on Embedded Computing (MECO),"3 Jul 2024","2024","","","1","5","Based on the fact that the use of web applications is growing strongly and witnessing the chaos in the development of the frontends of these applications, in recent years there has been a need for an innovation that will solve the issues addressed by this complexity. Large applications with scalability needs need modularity. Seeing the surprising results of applying microservices and the increased performance of backend development in general, the need for modularity in the frontend has been met with the introduction of microfrontends as their counterparts in the field of frontend development. Also in the case of performance, each microfrontend works as an independent unit and the components can be loaded and executed in parallel, thus simultaneously reducing the overall load time of the application.This paper presents the many benefits that the microfrontend architecture brings to the web application development process, highlighting the possibilities to promote modularity, scalability and team autonomy. Also through a description supplemented with use cases and industry trends, this paper presents the microfrontend architecture as a fundamental basis for the development of modern web applications.","2637-9511","979-8-3503-8756-8","10.1109/MECO62516.2024.10577836","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10577836","microfrontend;modularity;component","Industries;Technological innovation;Embedded computing;Scalability;Microservice architectures;Computer architecture;Market research","","1","","20","IEEE","3 Jul 2024","","","IEEE","IEEE Conferences"
"ROSDiscover: Statically Detecting Run-Time Architecture Misconfigurations in Robotics Systems","C. S. Timperley; T. Dürschmid; B. Schmerl; D. Garlan; C. Le Goues","Carnegie Mellon University, Pittsburgh, PA, USA; Carnegie Mellon University, Pittsburgh, PA, USA; Carnegie Mellon University, Pittsburgh, PA, USA; Carnegie Mellon University, Pittsburgh, PA, USA; Carnegie Mellon University, Pittsburgh, PA, USA",2022 IEEE 19th International Conference on Software Architecture (ICSA),"24 May 2022","2022","","","112","123","Robot systems are growing in importance and complexity. Ecosystems for robot software, such as the Robot Operating System (ROS), provide libraries of reusable software components that can be configured and composed into larger systems. To support compositionality, ROS uses late binding and architecture configuration via “launch files” that describe how to initialize the components in a system. However, late binding often leads to systems failing silently due to misconfiguration, for example by misrouting or dropping messages entirely.In this paper we present ROSDiscover, which statically recovers the run-time architecture of ROS systems to find such architecture misconfiguration bugs. First, ROSDiscover constructs component level architectural models (ports, parameters) from source code. Second, architecture configuration files are analyzed to compose the system from these component models and derive the connections in the system. Finally, the reconstructed architecture is checked against architectural rules described in first-order logic to identify potential misconfigurations.We present an evaluation of ROSDiscover on real world, off-the-shelf robotic systems, measuring the accuracy, effectiveness, and practicality of our approach. To that end, we collected the first data set of architecture configuration bugs in ROS from popular open-source systems and measure how effective our approach is for detecting configuration bugs in that set.","","978-1-6654-1728-0","10.1109/ICSA53651.2022.00019","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9779703","ROS;Software Architecture;Static Analysis","Ports (computers);Software architecture;Biological system modeling;Operating systems;Computer bugs;Computer architecture;Static analysis","","13","","55","IEEE","24 May 2022","","","IEEE","IEEE Conferences"
"Enabling the Deployment of Any-Scale Robotic Applications in Microservice Architectures through Automated Containerization*","J. -P. Busch; L. Reiher; L. Eckstein","Institute for Automotive Engineering (ika), RWTH Aachen University, Germany; Institute for Automotive Engineering (ika), RWTH Aachen University, Germany; Institute for Automotive Engineering (ika)",2024 IEEE International Conference on Robotics and Automation (ICRA),"8 Aug 2024","2024","","","17650","17656","In an increasingly automated world – from ware-house robots to self-driving cars – streamlining the development and deployment process and operations of robotic applications becomes ever more important. Automated DevOps processes and microservice architectures have already proven successful in other domains such as large-scale customer-oriented web services (e.g., Netflix). We recommend to employ similar microservice architectures for the deployment of small- to large-scale robotic applications in order to accelerate development cycles, loosen functional dependence, and improve resiliency and elasticity. In order to facilitate involved DevOps processes, we present and release a tooling suite for automating the development of microservices for robotic applications based on the Robot Operating System (ROS). Our tooling suite covers the automated minimal containerization of ROS applications, a collection of useful machine learning-enabled base container images, as well as a CLI tool for simplified interaction with container images during the development phase. Within the scope of this paper, we embed our tooling suite into the overall context of streamlined robotics deployment and compare it to alternative solutions. We release our tools as open-source software at github.com/ika-rwth-aachen/dorotos.","","979-8-3503-8457-4","10.1109/ICRA57147.2024.10611586","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10611586","","DevOps;Operating systems;Microservice architectures;Computer architecture;Containers;Streaming media;Stakeholders","","","","48","IEEE","8 Aug 2024","","","IEEE","IEEE Conferences"
"An application about server communication: Using the Command pattern on Web API requests","D. Damyanov; Z. Varbanov","Dept. of Information Technologies, University of Veliko Tarnovo, Veliko Tarnovo, Bulgaria; Dept. of Information Technologies, University of Veliko Tarnovo, Veliko Tarnovo, Bulgaria","2024 16th International Conference on Electronics, Computers and Artificial Intelligence (ECAI)","30 Jul 2024","2024","","","1","5","In modern applications, performing a large number of activities and exchange of information, the architectural approach of microservices is increasingly required. If we make a more detailed analysis of them, they are nothing more than standalone applications that are synchronized in their communication between them, they are interchangeable in certain situations, and they are also divided by functionality. In addition to microservices, the so-called monolithic applications also work with the reception and processing of requests, which architecturally translates into an even greater concentration of functionality in one place and this leads to difficulties in their maintenance. In modern microservice architectures, different methods of communication are often used: microservices often communicate via HTTP with RESTful API design. URLs are used to detect and access microservices. Message Brokers: the use of communications brokers such as RabbitMQ 1 or Apache Kafka 2 provides an effective way of asynchronous communication. Whether we are talking about monolithic or microservice applications, it always comes the moment with the growing code, complex service structure and maintenance. In the current development, we focus on the implementation of a new service in a microservice architecture. The goal of the development is to create an application architecture using design patterns and optimization solutions that lead to fast and efficient operations of the business layer, which remains stable in its performance even with a large amount of data to process.1www.rabbitmq.com2https://kafka.apache.org","","979-8-3503-7115-4","10.1109/ECAI61503.2024.10607395","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10607395","Web API;Command pattern;Microservice","Codes;Microservice architectures;Computer architecture;Software;Maintenance;Safety;Logic","","","","14","IEEE","30 Jul 2024","","","IEEE","IEEE Conferences"
"A Case For Cross-Domain Observability to Debug Performance Issues in Microservices","R. K; P. Tammana; P. G. Kannan; P. Naik","IIT Hyderabad, India; IIT Hyderabad, India; IBM Research, India; IBM Research, India",2022 IEEE 15th International Conference on Cloud Computing (CLOUD),"24 Aug 2022","2022","","","244","246","Many applications deployed in the cloud are usually refactored into small components called microservices that are deployed as containers in a Kubernetes environment. Such applications are deployed on a cluster of physical servers which are connected via the datacenter network.In such deployments, resources such as compute, memory, and network, are shared and hence some microservices (culprits) can misbehave and consume more resources. This interference among applications hosted on the same node leads to performance issues (e.g., high latency, packet loss) in the microservices (victims) followed by a delayed or low-quality response. Given the highly distributed and transient nature of the workloads, it’s extremely challenging to debug performance issues. Especially, given the nature of existing monitoring tools, which collect traces and analyze them at individual points (network, host, etc) in a disaggregated manner.In this paper, we argue toward a case for a cross-domain (network & host) monitoring and debugging framework which could provide the end-to-end observability to debug performance issues of applications and pin-point the root-cause whether it is on the sender-host, receiver-host or the network. We present the design and provide preliminary implementation details using eBPF (extended Berkeley Packet Filter) to elucidate the feasibility of the system.","2159-6190","978-1-6654-8137-3","10.1109/CLOUD55607.2022.00045","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9860474","Observability;cloud;microservices;ebpf;performance","Cloud computing;Microservice architectures;Packet loss;Interference;Debugging;Containers;Servers","","3","","20","IEEE","24 Aug 2022","","","IEEE","IEEE Conferences"
"Microservice Driven Parallel Framework for Image Collection and Processing in the Large-scale Laser Beam Collimation System","J. Luo; L. Li; Z. Ni; X. Zhou","China Academy of Engineering Physics, Institute of Computer Application, Mianyang City, China; China Academy of Engineering Physics, Institute of Computer Application, Mianyang City, China; China Academy of Engineering Physics, Institute of Computer Application, Mianyang City, China; China Academy of Engineering Physics, Institute of Computer Application, Mianyang City, China",2020 Chinese Automation Congress (CAC),"29 Jan 2021","2020","","","7163","7167","Laser beam collimation involving image collection and processing is an essential task in the high-power laser experiment. With the development of worldwide high-power laser facilities, both the type and the amount of image collection devices have increased, which contributes to a large-scale heterogeneous image collection system and a highly concurrent image data environment. It is challenging our current image collection and processing system, and requiring a more efficient control pattern. Parallelism by utilizing the multi-thread technology is an effective solution, while a big obstacle is that image collection devices can not be parallel driven, thus we obtain the pseudo parallelism. To address this issue, giving the existing microservice based distributed architecture utilized by the laser beam collimation system, we equip each of these devices with an embedded computer. We conduct the co-design of hardware and software for each image collection device, such that each embedded computer serves as an independent and parallel servant of image collection and processing. This parallel framework is expected to reduce the time consumption of image acquisition and processing. What's more, hardware customization can be further implemented.","2688-0938","978-1-7281-7687-1","10.1109/CAC51589.2020.9326874","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9326874","microservice;parallel framework;image collection and processing","Charge coupled devices;Laser beams;Control systems;Cameras;Optical imaging;Computer architecture;Software","","","","9","IEEE","29 Jan 2021","","","IEEE","IEEE Conferences"
"State of Practice and Challenges of Issue Management for Component-based and Service-Oriented Systems: An Empirical Study","S. Speth; N. Meißner; S. Becker; U. Breitenbücher","Institute of Software Engineering, University of Stuttgart, Stuttgart, Germany; Institute of Software Engineering, University of Stuttgart, Stuttgart, Germany; Institute of Software Engineering, University of Stuttgart, Stuttgart, Germany; Reutlingen University, Reutlingen, Germany",2024 IEEE International Conference on Service-Oriented System Engineering (SOSE),"26 Sep 2024","2024","","","1","10","Modern software systems often consist of independently developed components, e.g., libraries or (micro-)services, that can be combined to form a larger architecture. Many of these components are developed externally, i.e., in other projects by other teams, which is particularly the case in service-oriented architectures. Even though the components are independently developed, bugs may arise that propagate along the call chains, which sometimes negatively affect the calling components. However, as such components are typically managed in separate issue management systems (IMS), identifying that a downstream component is affected by an upstream component’s issues is complex and time-consuming. Even though some scientific works and IMS forums discuss how to manage such cross-component issues, there is no systematic study on the state of practice and the challenges of issue management when different components are affected. Therefore, this study aims to determine which types of components are usually included in modern software projects, how developers identify and manage issue propagation between components, and how often they face such propagations. To get these insights, we conducted an empirical study through a questionnaire with 64 industry experts and open-source contributors and interviewed seven of them. Our key takeaways help researchers and software engineers to understand possible impacts and to improve cross-component issue management. We identified, for example, that related issues currently are non-semantically linked via URLs in issue comments.","2642-6587","979-8-3315-3958-0","10.1109/SOSE62363.2024.00007","Ministry of Education; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10685333","Issue Management;Cross-Component Issues;Issue Propagation;Service-Oriented Architectures","Industries;Systematics;Service-oriented systems engineering;Computer bugs;Computer architecture;Software systems;Libraries","","","","16","IEEE","26 Sep 2024","","","IEEE","IEEE Conferences"
"A Conceptual Antifragile Microservice Framework for Reshaping Critical Infrastructures","H. Bangui; B. Rossi; B. Buhnova","Faculty of Informatics, Masaryk University, Brno, Czech Republic; Faculty of Informatics, Masaryk University, Brno, Czech Republic; Faculty of Informatics, Masaryk University, Brno, Czech Republic",2022 IEEE International Conference on Software Maintenance and Evolution (ICSME),"19 Dec 2022","2022","","","364","368","Recently, microservices have been examined as a solution for reshaping and improving the flexibility, scalability, and maintainability of critical infrastructure systems. However, microservice systems are also suffering from the presence of a substantial number of potentially vulnerable components that may threaten the protection of critical infrastructures. To address the problem, this paper proposes to leverage the concept of antifragility built in a framework for building self-learning microservice systems that could be strengthened by faults and threats instead of being deteriorated by them. To illustrate the approach, we instantiate the proposed approach of autonomous machine learning through an experimental evaluation on a benchmarking dataset of microservice faults.","2576-3148","978-1-6654-7956-1","10.1109/ICSME55016.2022.00040","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9977445","Critical Infrastructures;Microservices;Antifragility;Machine Learning;Generative Adversarial Network","Software maintenance;Autonomous systems;Scalability;Microservice architectures;Termination of employment;Elasticity;Generative adversarial networks","","","","17","IEEE","19 Dec 2022","","","IEEE","IEEE Conferences"
"An Microservices-Based Openstack Monitoring Tool","M. Yang; M. Huang","Wireless Innovation Lab. of Yunnan University, School of Information Science and Engineering of Yunnan University, Kunming, China; Wireless Innovation Lab. of Yunnan University, School of Information Science and Engineering of Yunnan University, Kunming, China",2019 IEEE 10th International Conference on Software Engineering and Service Science (ICSESS),"19 Mar 2020","2019","","","706","709","Monitoring of openstack clouds is an imperative necessity for cloud providers and administrators to analyze and discover what is happening in the cloud. In this paper, a microservices-based openstack monitoring system, namely openstack-reporter, is proposed, aiming at monitoring openstack clouds and providing a convenient tool for the administrators. Openstack-reporter adopting microservices architecture consists of three constituent components where each component is responsible for a single aspect. The connection among these components is implemented with the help of kubernetes DNS-based service discovery and Role-based access control (RBAC) mechanisms. The management of these three components is performed by kubernetes which is devoted to automate rollouts, rollbacks. We have released the openstack-reporter, docker images and kubernetes configurations which can be accessed publicly. One can easily build the openstack monitoring system just by deploying the openstack-reporter in our kubernetes cluster. To validate the performance of the proposed monitoring system, an openstack platform and openstack-reporter have been built in our datacenter and the management center respectively, and the results are displayed.","2327-0594","978-1-7281-0945-9","10.1109/ICSESS47205.2019.9040740","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9040740","component;microservices;kubernetes;service discovery;cloud computing;monitoring","","","7","","13","IEEE","19 Mar 2020","","","IEEE","IEEE Conferences"
"Study and comparison of transportation system architectures for smart city","P. Parmar; T. Champaneria","Computer Department, L. D. College of Engineering, Ahmedabad, India; Computer Department, L. D. College of Engineering, Ahmedabad, India","2017 International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC)","5 Oct 2017","2017","","","675","680","IoT refers to a technology which makes every possible device internet ready whose advance use will develop machine-to-machine relationship instead of user-to-machine relationship. These IoT devices includes everything from cell phone, coffee maker, TV, refrigerator, watch etc. A smart city is one that uses Information and communication Technology (ICT) to enhance its standard of living, way of working and sustainability. Internet of Things provide support and ease in the development of smart city. A smart city contains various domains such as waste management, transportation system etc. This paper discusses about existing smart transportation and smart city architectures and compare them with respect to various parameters. Comparison can help in building robust and generic software architecture for transportation domain of smart city.","","978-1-5090-3243-3","10.1109/I-SMAC.2017.8058264","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8058264","Smart City;Internet of Things;Smart Transportation;Service Oriented Architecture;Restful;Cyber Physical System","Computer architecture;Smart cities;Cloud computing;Automobiles;Systems architecture","","1","","15","IEEE","5 Oct 2017","","","IEEE","IEEE Conferences"
"Automatically Refactoring Application Transactions for Microservice-Oriented Architecture","A. Ishida; Y. Katsuno; A. Tozawa; S. Saito","IBM Research - Tokyo, Japan, Tokyo; IBM Research - Tokyo, Japan, Tokyo; IBM Research - Tokyo, Japan, Tokyo; IBM Research - Tokyo, Japan, Tokyo",2023 IEEE International Conference on Software Services Engineering (SSE),"4 Sep 2023","2023","","","210","219","An Application Transaction, which is a method-call flow from an exported API to a data-source access, is important for application modernization for microservice-oriented architecture. The application transaction in legacy applications is based on a traditional unified architecture on which a single application and database structure under low latency is assumed, which means that a significant decrease in performance can occur on microservice-oriented architectures composed of distributed application and database structures under high latency. Therefore, transaction refactoring is essential for application modernization. However, it is time-consuming and labor-intensive to manually identify the transaction split point in an application transaction. In this paper, we propose an approach for automatically refactoring the recommendation for application transactions by identifying the split point on the basis of database operation and business contexts. Our approach involves using a framework we designed for discovering application transactions from binary Java code and two partitioning methods, “operation-based splitting“ and “business-context-based splitting“ for detecting the optimal split points for application transactions in applications with different implementation patterns. We applied our approach to actual enterprise applications, identified split points for transaction-refactoring recommendation, and showed that it can significantly reduce processing time compared with doing it manually.","","979-8-3503-4075-4","10.1109/SSE60056.2023.00035","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10234330","Microservice-oriented architecture;Service-oriented system engineering;Service discovery;Service recommendation","Java;Codes;Microservice architectures;Distributed databases;Computer architecture;Software;Low latency communication","","2","","17","IEEE","4 Sep 2023","","","IEEE","IEEE Conferences"
"An Open Source Software Architecture and Ready-To-Use Components for Health IoT","P. Barbosa; A. Figueiredo; S. Souto; E. Gaeta; E. Araujo; T. Teixeira","Center for Strategic Health Technologies - NUTES, Campina Grande, Brazil; Center for Strategic Health Technologies - NUTES, Campina Grande, Brazil; Center for Strategic Health Technologies - NUTES, Campina Grande, Brazil; Life Supporting Technologies - LifeSTech, Universidad Politécnica de Madrid, Madrid, Spain; Atlantico Institute, Fortaleza, Brazil; Unparallel Innovation, Lda Lisbon, Portugal",2020 IEEE 33rd International Symposium on Computer-Based Medical Systems (CBMS),"1 Sep 2020","2020","","","374","379","This paper presents the definition of a software architecture and implementation as open-source components specially designed for the state-of-art of Health IoT technologies. These activities were conducted through a H2020 project that developed a smart IoT solution for childhood obesity and two contracted Health IoT projects for the leading brazilian clinics in wound treatment. The software components and the guidelines presented in this paper are fully available as github repositories and contributors can find immediate application in Health IoT projects. A survey with contributors in four different countries was conducted about the way the realized software architecture addresses quality requirements for Health IoT. The results shows that the integration of components was the main concern of this team due to the distributed nature of the projects and the implementation of patterns such as API Gateway using open source technologies are very likely to be reused in the future. The initiative continues collecting user's experiences for continuous improvements and research goals.","2372-9198","978-1-7281-9429-5","10.1109/CBMS49503.2020.00077","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9183119","Health IoT;Software Architecture;Open Source","Software architecture;Logic gates;Pediatrics;Computer architecture;Synchronization;Data acquisition;Monitoring","","4","","10","IEEE","1 Sep 2020","","","IEEE","IEEE Conferences"
"Reactive Microservices Architecture Using a Framework of Fault Tolerance Mechanisms","J. A. Rasheedh; S. Saradha","Department of Computer Science, VISTAS, Pallavaram, Chennai, India; Department of Computer Science, VISTAS, Pallavaram, Chennai, India",2021 Second International Conference on Electronics and Sustainable Communication Systems (ICESC),"23 Sep 2021","2021","","","146","150","In Cloud Computing, microservices have been recently introduced for enabling the development of large-scale structures, which are scalable, agile and especially suitable for meeting the emerging demands. The asynchronous communication has facilitated using reactive system which managed in interaction challenges and even variation of load in modern systems. There are certain features of microservices like elasticity and resilience have considered for messages can be progressed through Reactive Microservices (RM) which consists of segregated components over event stream that can able to perform individually or shown with various microservices for reaching the event at final stages. The reactive principle in microservices have involved for individual possibility in every microservice components reference architecture include the components of microservices, which have the ability to develop, release, organize, scale, upgrade and retired individually. It has infused the necessary redundancy into the network for avoiding failure cascading, which maintains the system reactive in case of any failure. This paper has explored the RM architecture application and provides insights by assisting in reducing the developing demand to create resilient and scalable systems. The basic use case of microservice framework implementation has been illustrated by Vert.x, which act as the general toolkit to create RM and also the performance of both reactive and nonreactive implementation are compared as an alternate. The performance comparison can reveal how RM performs better than non-reactive microservices.","","978-1-6654-2867-5","10.1109/ICESC51422.2021.9532893","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9532893","Reactive Microservices (RM);fault tolerance;Vert.x;failures","Circuit breakers;Fault tolerant systems;Redundancy;Power system protection;Computer architecture;Elasticity;Software","","3","","20","IEEE","23 Sep 2021","","","IEEE","IEEE Conferences"
"Beyond Monoliths: An In-Depth Analysis of Microservices Adoption in the Era of Kubernetes","S. Arya; D. Chauhan; Tanishq; S. Anand; O. Sharma","Department of CSE, SRM Institute of Science and Technology, Ghaziabad, UP, India; Department of CSE, SRM Institute of Science and Technology, Ghaziabad, UP, India; Department of CSE, SRM Institute of Science and Technology, Ghaziabad, UP, India; Department of CSE, SRM Institute of Science and Technology, Ghaziabad, UP, India; Department of CSE, SRM Institute of Science and Technology, Ghaziabad, UP, India",2024 1st International Conference on Advanced Computing and Emerging Technologies (ACET),"29 Oct 2024","2024","","","1","6","In today’s rapidly evolving technology environment, software development and deployment paradigms have drastically changed from traditional monolithic architectures to highly scalable flexible microservices, facilitated by the widespread adoption of Kubernetes. Our study explores the complexities of this shift in the era of Kubernetes and examines the challenges, benefits, and best practices associated with microservice adoption. The focus of our research is to implement a MERN application on Kubernetes, which is a common and efficient approach controlling modern web applications. Using infrastructure as a code principle, we use Terraform to deliver resources on AWS, laying a solid foundation for our deployment pipeline. This pipeline, developed by CircleCI, performs core tasks such as creating and pushing Docker images to Docker Hub, ensuring seamless integration, and moving code changes through our adopted GitOps workflow so, we promote a declarative approach to infrastructure management, where application repositories act as a single source of truth. Any deviations from the desired state are quickly resolved with ArgoCD, maintaining consistency and reliability within the Kubernetes cluster. In addition, our research includes a comparative analysis of scaling strategies as opposed to virtual machine scaling and container scaling in a Kubernetes ecosystem. Furthermore, we explore various deployment strategies available in Kubernetes, evaluating their efficiency in different scenarios and use cases.","","979-8-3503-6772-0","10.1109/ACET61898.2024.10730456","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10730456","monolithic;microservices;Kubernetes;DevOps;containers;automation;GitOps","Technological innovation;Codes;Scalability;Pipelines;Microservice architectures;Organizations;Computer architecture;Solids;Complexity theory;Rigidity","","","","8","IEEE","29 Oct 2024","","","IEEE","IEEE Conferences"
"Architecture Interoperability and Repeatability with Microservices: An Industry Perspective","E. Yuan","Aerospace Corporation, Chantilly, VA",2019 IEEE/ACM 2nd International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE),"29 Aug 2019","2019","","","26","33","Microservices, along with supporting technologies such as containers, have become a prevalent architecture approach for today's software systems, especially in enterprise environments. They represent the latest evolutionary step in the decades-old journey towards service-and component-based software architectures. Along with virtualization technologies, microservices have enabled the loose-coupling of both service interfaces (message passing) and service integration (form and fit). This paper attempts to explore the impact of microservices on software architecture interoperability and repeatability, based on our experiences in developing two microservice-based systems. Our central thesis is that, if we view software architecture as a set of principal design decisions, the microservices approach enable us to more elegantly separate these decisions from non-architectural, domain-specific ones, and thus make these decisions more interoperable, reusable, and repeatable across disparate problem domains. We therefore propose that a microservices based reference architecture (RA) and reference implementation (RI) be created for the community-wide infrastructure for software engineering and software architecture research, along with a set of detailed considerations.","","978-1-7281-2241-0","10.1109/ECASE.2019.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8815604","microservice, software architecture, DevOps, cloud computing","","","2","","25","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"Online Experiment Platform: A Microservices-based Cloud Native Application","J. Li","National Key R&D Program of China, Beijing Key Laboratory of Big Data in Security & Protection Industry, Communication University of China, Beijing, China","2021 IEEE International Conference on Computer Science, Electronic Information Engineering and Intelligent Control Technology (CEI)","29 Oct 2021","2021","","","435","439","The development of cloud native technologies and web technologies is constantly innovating all aspects of web applications. As the scale of web applications continues to expand, the complexity of design, development, deployment and maintenance is getting higher and higher. The industry urgently needs a new web development paradigm to meet the upcoming challenge, so the concept of microservices comes into being, and soon becomes the preferred solution for large companies and individual developers. The emergence of public and private clouds further reduces the difficulty of implementing microservices-based applications. This article analyzes the idea of microservices architecture and its key components, then presents a microservices-based cloud native application Online experiment platform. As a complete product, its life cycle well demonstrates the advantages of microservices architecture and the practical significance of cloud native concept.","","978-1-6654-3881-0","10.1109/CEI52496.2021.9574601","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9574601","component;Cloud native;Microservices;Software engineering","Industries;Computer science;Cloud computing;Conferences;Computer architecture;Companies;Maintenance engineering","","1","","8","IEEE","29 Oct 2021","","","IEEE","IEEE Conferences"
"MAAD: A Distributed Anomaly Detection Architecture for Microservices Systems","R. Tan; Z. Li","Department of Computer Science and Engineering, Southern University of Science and Technology, China; Department of Computer Science and Engineering, Southern University of Science and Technology, China",2024 IEEE International Parallel and Distributed Processing Symposium (IPDPS),"8 Jul 2024","2024","","","1009","1021","Anomaly detection plays a critical role in microservices systems by enabling system administrators to promptly detect and respond to anomalies. However, existing anomaly detection systems often necessitate the centralization of log and trace data from diverse system components and rely on resource-intensive statistical methods or deep learning models for analysis. This approach impedes real-time anomaly detection and requires a significant demand on computing resources. In this paper, we design a multi-agent-based, distributed anomaly detection architecture called MAAD to address the limitations. MAAD consists of a collection of agents that cooperate together to identify abnormal behaviors in a distributed manner. Each agent is deployed along with a single service and applies lightweight machine learning techniques to perform local anomaly detection based on its own logs, local context, and information extracted from its parent span service.To preserve the graph information in a microservices request, an agent can communicate essential features with each other, taking into account the collective patterns learned from the prior services. We evaluate the effectiveness of MAAD on two microservices datasets, TrainTicket and MicroSS, and show that MAAD achieved high precision (up to 95.8%) and recall (up to 99.6%), outperforming state-of-the-art centralized anomaly detection approaches. Compared to centralized approaches, MAAD reduces the amount of transferred data before anomaly detection by approximately 88%, facilitating real-time anomaly detection. Furthermore, the lightweight nature of MAAD allows for rapid anomaly detection with minimal impact on microservices systems. Compared to DeepLog, MAAD saves approximately 92% detection time without using GPU accelerators.","1530-2075","979-8-3503-8711-7","10.1109/IPDPS57955.2024.00094","National Natural Science Foundation of China; Southern University of Science and Technology; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10579128","Microservices system;anomaly detection;multi-agent","Deep learning;Distributed processing;Statistical analysis;Microservice architectures;Graphics processing units;Computer architecture;Feature extraction","","","","55","IEEE","8 Jul 2024","","","IEEE","IEEE Conferences"
"Design and research of University intelligent education cloud platform based on Dubbo microservice framework","H. Zhao; Y. Jiang; X. Zhao","Nanjing Xiaozhuang University, Nanjing, China; Nanjing Xiaozhuang University, Nanjing, China; Nanjing Xiaozhuang University, Nanjing, China","2020 5th International Conference on Mechanical, Control and Computer Engineering (ICMCCE)","13 May 2021","2020","","","870","874","With the rapid development of mobile Internet, more and more people participate in online learning, online interaction and online communication. Online education has gradually become a new education model. Aiming at the cloud computing environment, this paper uses the hierarchical systematic design idea to deeply carry out the demand analysis and architecture design of smart education cloud in Colleges and universities. The system architecture design of the platform takes service and component as the core, and realizes the service encapsulation of each functional module of the platform through the micro service design of the single project architecture. At the same time, combining Dubbo microservice framework and distributed database technology, the platform's RPC communication, service discovery and traffic management capabilities are optimized, which effectively improves the intelligent management and application level of the platform.","","978-1-6654-2314-4","10.1109/ICMCCE51767.2020.00191","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9421416","component;Dubbo;Online education;Smart education cloud platform","Cloud computing;Epidemics;Systematics;Smart cities;Education;Smart healthcare;Systems architecture","","1","","11","IEEE","13 May 2021","","","IEEE","IEEE Conferences"
"An application of microservices architecture pattern to create a modular computer numerical control system","M. Y. Afanasev; Y. V. Fedosov; A. A. Krylova; S. A. Shorokhov","ITMO University, St. Petersburg, Russian Federation; ITMO University, St. Petersburg, Russian Federation; ITMO University, St. Petersburg, Russian Federation; ITMO University, St. Petersburg, Russian Federation",2017 20th Conference of Open Innovations Association (FRUCT),"19 Oct 2017","2017","","","10","19","Currently, the most common approach to Computer Numerical Control (CNC) system design is a monolithic architecture. However, the introduction of the concept of Cyber-Physical Production Systems (CPPS) requires a paradigm shift in the design of control systems. This paper suggests a new approach to developing modular industrial equipment using a microservices architecture pattern. Microservices architecture features are addressed, as well as advantages and disadvantages. A heterogeneous computer network, where nodes communicate via a message queue, is proposed as a basis for the computer numerical control system. Fault tolerance is provided by modules full autonomy and reliable messaging. Furthermore, NoSQL database, guaranteeing high data accessibility and increased data access speed, is applied. An apparatus for selective photopolymer laser curing of free-form surfaces is considered as an example. Common setup structure, as well as main hardware and software modules, are described. Moreover, a distributed network latency simulation was carried out to prove the viability of the proposed microservices architecture.","2305-7254","978-9-5268-6530-0","10.23919/FRUCT.2017.8071286","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8071286","","Computer architecture;Protocols;Software;Magnetic heads;Computer numerical control;Production systems;Control systems","","7","","23","","19 Oct 2017","","","IEEE","IEEE Conferences"
"Reflections on SOA and Microservices","Z. Xiao; I. Wijegunaratne; X. Qiang","School of Electronic Engineering, Xi'an Shiyou University Xi'an, China; Enterprise Architect, Australia; School of Computer Science, Xi'an Shiyou University Xi'an, China",2016 4th International Conference on Enterprise Systems (ES),"20 Mar 2017","2016","","","60","67","Today's Enterprises are facing many challenges in the service oriented, customer experience centric and customer demand driven global environment where ICT is becoming the leading enabler and partner of the modern enterprise. In the last decade, many enterprises have invested heavily in SOA-aligned IT transformations, but not harvested what SOA promised to provide. Now the API and Microservice paradigm has emerged as the ""next big thing"" for delivering IT outcomes to support the modern enterprise, with many technology vendors and service jumping on the bandwagon. This paper undertakes a critical investigation of the key concepts around SOA, API and Microservices, identifying similarities and differences between them and dispelling the confusion and hype around them. Based on our discussion and analysis, this paper presents a set of recommendations and best practices on the effective use and management of enterprise software components, drawing upon the best of SOA, API and Microservice concepts and practice.","","978-1-5090-3790-2","10.1109/ES.2016.14","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7880473","service oriented architecture;microservice;API;enterprise architecture;architecture design pattern","Business;Service-oriented architecture;Computer architecture;Monitoring;Context;Architecture;Standards","","38","","6","IEEE","20 Mar 2017","","","IEEE","IEEE Conferences"
"Low Power Real Time GPS Tracking Enabled with RTOS and Serverless Architecture","S. Anand; A. Johnson; P. Mathikshara; K. R.","School of Electronics Engineering, Vellore Institute of Technology, Chennai, India; School of Electronics Engineering, Vellore Institute of Technology, Chennai, India; School of Electronics Engineering, Vellore Institute of Technology, Chennai, India; School of Electronics Engineering, Vellore Institute of Technology, Chennai, India",2019 IEEE 4th International Conference on Computer and Communication Systems (ICCCS),"2 Sep 2019","2019","","","618","623","In this day and age everything is monitored and tracked. GPS tracking plays one of the most vital roles in our everyday life. Tracking entities is important in many fields including fleet management, personal security and even operations management. The proposed work details the low power analysis carried out on the built real time GPS tracking system. Incorporating microservices and modern architecture, the system provides live tracking solution along with analyses of the travel history. The use of serverless architecture augments and provides an intelligible design for the system. Equipped with mobile and web application, this system delivers live tracking results to the end users. Customized geofences enables the email alert service to the user in case of a breach in the boundary.","","978-1-7281-1322-7","10.1109/CCOMS.2019.8821738","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8821738","GPS;RTOS;cloud computing;low power;QoS;microservices","Global Positioning System;Servers;Hardware;Cloud computing;Protocols;Real-time systems;Computer architecture","","6","","19","IEEE","2 Sep 2019","","","IEEE","IEEE Conferences"
"A Component Development Framework for Embedded Software","C. Yuan; Z. Liu; X. Wang; F. Yuan","School of Software, Beihang University,Beijing,China,100191; School of Software, Beihang University,Beijing,China,100191; School of Software, Beihang University,Beijing,China,100191; School of Software, Beihang University,Beijing,China,100191",2021 IEEE International Conference on Information Communication and Software Engineering (ICICSE),"23 Apr 2021","2021","","","71","75","Traditional embedded software development methods are limited by the characteristics of embedded software and the harsh environmental conditions of embedded devices. Therefore, these methods often cost a lot, and the tight coupling between software will also bring difficulties in development and reuse. Component technology is developed on the basis of object-oriented technology. It improves the abstraction to a higher level and further improves the reusability of code. In order to solve the problems of high cost, difficulty, and low efficiency in the process of embedded software development, this paper implements a component-based framework for embedded software's development. Based on this framework, developers only need to focus on the development of component functions instead of paying attention to differences between devices and systems. The shielding of embedded device software and hardware, communication between components, and component life cycle management are completed by this framework.","","978-1-6654-1919-2","10.1109/ICICSE52190.2021.9404109","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9404109","reusable;componentization;embedded software;architecture design","Couplings;Concurrent computing;Runtime;Operating systems;Conferences;Computer architecture;Hardware","","","","12","IEEE","23 Apr 2021","","","IEEE","IEEE Conferences"
"TraceNet: Operation Aware Root Cause Localization of Microservice System Anomalies","J. Yang; Y. Guo; Y. Chen; Y. Zhao","School of Electronic and Information Engineering, Beijing Jiaotong University, Beijing, China; School of Electronic and Information Engineering, Beijing Jiaotong University, Beijing, China; School of Electronic and Information Engineering, Beijing Jiaotong University, Beijing, China; School of Electronic and Information Engineering, Beijing Jiaotong University, Beijing, China",2023 IEEE International Conference on Communications Workshops (ICC Workshops),"23 Oct 2023","2023","","","758","763","Microservice architecture has been widely-adopted to enable scalable, flexible, and resilient applications. However, numerous components and complex dependencies pose daunting challenges for anomaly root cause localization. Existing localization methods rely on supervision or coarse-grained analysis. In this paper, we propose TraceNet, an algorithm to locate root causes, based on a fine-grained construction of microservice dependency at the operation level. Firstly, to mitigate the interference from anomaly propagation, TraceNet builds the microservice dependency graph by distinguishing different operations, which depicts the complex microservice dependency at the operation dimension. Then, TraceNet classifies abnormality into inner-abnormality and outer-abnormality, and quantifies the abnormality of microservices by an edge-operation-microservice aggregation, Finally, TraceNet locates root causes based on the largest anomaly subgraph and candidates' different impacts, without human interference. Our experimental evaluation on an open dataset shows that TraceNet can effectively locate root causes, with 90% mean average precision, outperforming state-of-the-art methods.","2694-2941","979-8-3503-3307-7","10.1109/ICCWorkshops57953.2023.10283749","National Natural Science Foundation of China(grant numbers:61872031); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10283749","operation;root cause analysis;microservice abnormality","Location awareness;Conferences;Microservice architectures;Interference;Classification algorithms","","2","","22","IEEE","23 Oct 2023","","","IEEE","IEEE Conferences"
"Development of Applications Based on Microservices - Case Study of Ministry of Economy and Finance of Paraguay","R. F. P. Heikel; M. B. Guayuan; M. L. Cremona; H. Nemeth; J. C. Mello-Román","Dirección General de Informática y Comunicaciones, Ministerio de Economía y Finanzas, Asunción, Paraguay; Dirección General de Informática y Comunicaciones, Ministerio de Economía y Finanzas, Asunción, Paraguay; Dirección General de Informática y Comunicaciones, Ministerio de Economía y Finanzas, Asunción, Paraguay; Dirección General de Informática y Comunicaciones, Ministerio de Economía y Finanzas, Asunción, Paraguay; Dirección General de Informática y Comunicaciones, Ministerio de Economía y Finanzas, Asunción, Paraguay",2024 L Latin American Computer Conference (CLEI),"8 Oct 2024","2024","","","1","8","The Ministry of Economy and Finance (MEF) is responsible for the development and maintenance of Paraguay's Integrated State Financial Administration System (SIARE), which provides state financial services for the Ministry and other governmental entities. Currently, the MEF count with a system built on client-server architecture and monolithic sub-systems, which presents challenges related to scalability, agility in the implementation of new functionalities and high coupling between modules. This article presents the technological adaptation and integration of the microservices architecture in SIARE. The solution comprises an ecosystem of components. Each of these components adheres to a layering scheme, which responds to a logical grouping of the internal components of each one of them. This architectural approach allows them to be grouped by responsibilities from the point of view of information, behavior and security. This architectural approach favors the decoupling of components, which increases the flexibility and maintainability of the system. The development practice employed throughout the project life cycle was the agile scrum methodology. The functionalities are outlined in Use Cases and the main technologies used to build the applications were: Spring Boot, Angular, Oracle, PostgreSql, Redis and Kafka. Besides, for artifact orchestration, Jenkins and WSO2 API Manager were deployed to manage the REST API services. In addition, for application observability, the ELK tool was selected as a monitoring tool. As a result of the performance tests we could observe that the architecture is stable to support large amount of workload, supporting at least 5000 simultaneous requests per second.","2771-5752","979-8-3315-4097-5","10.1109/CLEI64178.2024.10700123","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10700123","MEF;SIARE;microservices;agile scrum methodology;api manager;observability;DevOps","Scalability;Microservice architectures;Finance;Computer architecture;Maintenance;Security;Springs;Observability;Monitoring;Financial services","","","","0","IEEE","8 Oct 2024","","","IEEE","IEEE Conferences"
"Introduction to Inline-Services: A Seamless Approach to Microservices Development","F. Almeida","Engineering Manager in Software Development, Dayton, NJ, US",2024 IEEE 14th Annual Computing and Communication Workshop and Conference (CCWC),"13 Feb 2024","2024","","","0620","0625","In recent years, there has been a notable surge in the popularity of the modern software development approach using microservices. This approach inherently comes with its own complexities and over time there have been efforts made ease deployment and maintenance using orchestration frameworks, but not much has been done on the development, creation and usage of microservices. The purpose of this paper is to introduce a streamlined and simpler approach for the creation and utilization of Microservices. By employing this approach, the intricacies of service development and deployment are concealed, allowing developers to concentrate on the core aspects of the problem domain. This paper will outline the fundamental concepts and components of the framework, accompanied by a Proof-of-Concept implementation in Java. The development of a complex distributed service-oriented application is reduced to as simple as a local application.","","979-8-3503-6013-4","10.1109/CCWC60891.2024.10427723","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10427723","InlineServices;Microservices;Monolith;SOA","Java;Codes;Microservice architectures;Maintenance engineering;Software;Surges;Optimization","","1","","11","IEEE","13 Feb 2024","","","IEEE","IEEE Conferences"
"Building Agile Workflow Microservice System for HPC Applications Based on Fast-start OSv","Q. Hu; L. Ma; E. Shao; G. Tan","State Key Laboratory of Computer Architecture, Institute of Computing Technology, CAS, Beijing, China; State Key Laboratory of Computer Architecture, Institute of Computing Technology, CAS, Beijing, China; State Key Laboratory of Computer Architecture, Institute of Computing Technology, CAS, Beijing, China; State Key Laboratory of Computer Architecture, Institute of Computing Technology, CAS, Beijing, China",2021 IEEE 27th International Conference on Parallel and Distributed Systems (ICPADS),"3 May 2022","2021","","","522","529","The advances of containers have significantly promoted the development of microservice architecture. This architecture splits a monolithic application into multiple independent components and the container orchestrator manages these components by the container in the cloud environment. The feasibility of deploying high performance computing(HPC) applications as microservices has been proven, but the existing container orchestrator incurs a large performance overhead as there is interference between different containers on the same physical host. In this paper, we design an agile workflow microservice system for HPC applications with fast-start OSv. We consider improving HPC workflow performance from two aspects: single OSv startup time optimization and workflow orchestration optimization. For single OSv startup time optimization, we design a fast-start OSv by analyzing the process of OSv startup and finding an optimization by modifying OSv source code. In this way, we get nearly 50% improvement of startup time. For workflow orchestration optimization, we propose four optimization techniques to speed up the execution of workflow by jointly considering OSv and workflow features, namely: node fusion, node merge, image preload, boot delay. Furthermore, we utilize our fast startup OSv to design an orchestration system for efficiently building an agile HPC workflow microservice by Kubevirt. Our experimental results optimization microservice system reduces the execution time by 30% compared with the original deployment with docker.","2690-5965","978-1-6654-0878-3","10.1109/ICPADS53394.2021.00071","NSFC(grant numbers:62102396,61972380,62032023,61972377,61702483); Chinese Academy of Sciences(grant numbers:2021099); State Grid Corporation of China(grant numbers:5700-202158261A-0-0-00); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9763734","OSv;Workflow;Micorservice system;Kubevirt","Cloud computing;Conferences;Buildings;Microservice architectures;Computer architecture;Interference;Containers","","","","19","IEEE","3 May 2022","","","IEEE","IEEE Conferences"
"A Review of Container level Autoscaling for Microservices-based Applications","M. H. Fourati; S. Marzouk; M. Jmaiel","ReDCAD Laboratory, University of Sfax, Tunisia; ReDCAD Laboratory, University of Sfax, Tunisia; ReDCAD Laboratory, University of Sfax, Tunisia",2021 IEEE 30th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE),"24 Jan 2022","2021","","","17","22","This paper presents an overview of autoscaling solutions for microservices-based applications during elastic treatment. Actually, most of existing work propose solutions dealing with elasticity at the VM level. These solutions launch elasticity when VM overload is detected or predicted. Few solutions treat this issue at the container level and deal with elasticity of microservices- based applications. In addition, these latter use ideas employed at the VM level without considering the specificity of microservice architecture. In this paper, we study and classify existing autoscalers dealing with containers and deploying microservices-based applications. We explain the strength and the shortcomings of each category. As a conclusion, we describe the challenges of autoscaling treatment and we give recommendations for future solutions.","2641-8169","978-1-6654-2789-0","10.1109/WETICE53228.2021.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9680560","Autoscaling;Microservices;Containers;Cloud computing","Conferences;Microservice architectures;Focusing;Collaboration;Computer architecture;Containers;Elasticity","","3","","22","IEEE","24 Jan 2022","","","IEEE","IEEE Conferences"
"Towards a Modular Digital Twin Microservice Architecture for Urban Multi-Energy Systems","A. Pastor; S. A. Uerlich; S. Schwarz; A. Monti","Institute for Automation of Complex Power Systems (ACS) RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems (ACS) RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems (ACS) RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems (ACS) RWTH Aachen University, Aachen, Germany",2023 IEEE PES Innovative Smart Grid Technologies Europe (ISGT EUROPE),"30 Jan 2024","2023","","","1","5","This paper proposes a formal definition of Digital Twins (DTs) and presents general Building Blocks (BBs) advocating for a microservice architecture. The BBs are categorized into data pipeline, trust and security, and service components. The definition arises from a list of DT requirements for Multi-Energy System (MES) applications and Use Cases (UCs). To create this requirements list, existing DT architectures and concepts are examined for their UCs and requirements that they fulfill.","","979-8-3503-9678-2","10.1109/ISGTEUROPE56780.2023.10407920","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10407920","Building Block (BB);Digital Twin (DT);Microservice Architecture;Multi-Energy System (MES)","Architecture;Pipelines;Microservice architectures;Europe;Digital twins;Smart grids;Security","","1","","27","IEEE","30 Jan 2024","","","IEEE","IEEE Conferences"
"Research on A Lightweight Service Mesh Architecture Using eBPF","Y. Tan; S. Quan; Z. Zhu; S. Gao","China Telecom, Beijing, China; China Telecom, Beijing, China; China Telecom, Beijing, China; China Telecom, Beijing, China",2023 4th International Conference on Computer Engineering and Application (ICCEA),"1 Jun 2023","2023","","","52","55","Many applications deployed in the cloud are typically refactored as widgets in microservices, and these components run as containers in a Kubernetes environment. The containers then run on clusters of physical servers that interoperate with the data center network. With this deployment, a large number of microservice containers running comes with resource consumption. The prevailing management architecture of microservices deepens this resource consumption on physical servers and increases network latency. We believe that this scenario could be further optimized. In this paper, we argue for an improved service mesh architecture design (compared to the traditional one). It reduces the resource consumption and improves the performance of deployed microservice applications, while providing some end-to-end visibility to debug problems that occur in microservices. We present the design and provide preliminary implementation details using eBPF technology to illustrate the feasibility of the system.","2159-1288","979-8-3503-4754-8","10.1109/ICCEA58433.2023.10135394","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10135394","component;eBPF;service mesh;micro service","Microservice architectures;Computer architecture;Complex networks;Switches;Containers;Reliability engineering;Servers","","","","7","IEEE","1 Jun 2023","","","IEEE","IEEE Conferences"
"Implementing DevOps Practices in CPPS Using Microservices and GitOps","I. Koren; F. Rinker; K. Meixner; M. Kröger; M. Zeng","Chair of Process and Data Science, RWTH Aachen University, Germany; CDL SQI, Institute of Information Systems Engineering, Technische Universität Wien, Austria; CDL SQI, Institute of Information Systems Engineering, Technische Universität Wien, Austria; Chair for Laser Technology, RWTH Aachen University, Germany; Laboratory for Machine Tools and Production Engineering, RWTH Aachen University, Germany",2023 IEEE 28th International Conference on Emerging Technologies and Factory Automation (ETFA),"12 Oct 2023","2023","","","1","4","As digitalization shapes Industry 4.0, integrating software engineering practices into the manufacturing domain becomes a key focus. DevOps is such a practice and methodology that enhances collaboration and automates processes in software development and IT operations. In previous work, we discussed challenges and opportunities of applying the DevOps paradigm in Cyber-Physical Production Systems (CPPS) engineering, which are complex systems that integrate physical components with computer-controlled operations. This paper instantiates our DevOps4CPPS framework, spotlighting the application of GitOps and microservices in a CPPS environment. A real-world case study from laser ultra short pulse manufacturing illustrates how the approach effectively addresses the inherent challenges of CPPS, boosting agility and operational performance, while reducing downtime. The paper provides guidance to researchers and practitioners on applying DevOps practices to CPPS, and suggests future research directions.","1946-0759","979-8-3503-3991-8","10.1109/ETFA54631.2023.10275433","Deutsche Forschungsgemeinschaft; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10275433","DevOps;Cyber-Physical Production Systems;Microservices;GitOps","Software design;Shape;Scalability;Microservice architectures;Data collection;Software;Fourth Industrial Revolution","","1","","9","IEEE","12 Oct 2023","","","IEEE","IEEE Conferences"
"Smart City Service System Design Based On Microservice Architecture: Case Study in Magelang City","M. T. Adhi Utomo; R. Hartanto; S. Sulistyo","Department of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia; Department of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia; Department of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia",2022 International Symposium on Information Technology and Digital Innovation (ISITDI),"17 Nov 2022","2022","","","181","187","The micro service-oriented platform provides a flexible and scalable implementation to accommodate the various services offered to citizens in the smart city concept. Integration is a problem that arises along with the widespread application of smart cities, which are seen as a service system. The purpose of the research is to design a good service system as a solution to existing problems. The study will be more specific on service systems as part of implementing smart cities by referring to previous research. Service system engineering is the method, and it takes a top-down, holistic approach. This research results in a microservice architecture design for smart city service system engineering. The resulting design can be a guide to providing decent and better services for citizens.","","978-1-6654-6116-0","10.1109/ISITDI55734.2022.9944498","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9944498","Smart City;Microservice Architecture;Service System Engineering","Technological innovation;Smart cities;Microservice architectures;Information technology;System analysis and design","","","","27","IEEE","17 Nov 2022","","","IEEE","IEEE Conferences"
"An Microservices-Based OpenStack Monitoring System","H. Wang; X. Zhang; Z. Ma; L. Li; J. Gao","College of Data Science and Application, Inner Mongolia University of Technology, Hohhot, China; College of Data Science and Application, Inner Mongolia University of Technology, Hohhot, China; College of Data Science and Application, Inner Mongolia University of Technology, Hohhot, China; College of Data Science and Application, Inner Mongolia University of Technology, Hohhot, China; College of Computer and Information Engineering, Inner Mongolia Agricultural University, Hohhot, China",2022 11th International Conference on Educational and Information Technology (ICEIT),"1 Feb 2022","2022","","","232","236","As the number of service clusters in the OpenStack Cloud Platform, the work-load in the data center also increase, leading to node failures and performance issues. Therefore, managers need to know how the OpenStack cloud platform is operating and storing. This function can be realized through the monitoring system, and the monitoring can improve the quality of cloud computing services and also help to identify faults within the system. The purpose of this paper is to provide a solution for the monitoring of cloud computing services, that allows users and managers to optimize computing resources based on the changing business requirements within the cloud computing system. First of all, the functions of the OpenStack cloud monitoring system are introduced to mainly include the functions of OpenStack data collection, data processing, analysis, display, and alarm notification. Secondly, the system is mainly composed of components such as OpenStack-exporter, Libvirt, Ceph-exporter and Grafana. Finally, the existing issues of the Open-Stack cloud platform monitoring system are discussed.","","978-1-6654-4546-7","10.1109/ICEIT54416.2022.9690713","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9690713","openstack;microservices;cloud computing;monitoring","Fault diagnosis;Cloud computing;Data centers;Microservice architectures;System improvement;Resource management;Information technology","","2","","13","IEEE","1 Feb 2022","","","IEEE","IEEE Conferences"
"A General Cloud Service Architecture of Smart City Based on Component Assembling","W. Guo; M. Zhu; D. Qi","Security Research Center of Smart City, Asiainfo Security Technologies Co., Ltd, Nanjing, China; Research Institute of Smart City, Nanjing LES Information Technology Co. Ltd, Nanjing, China; School of Computer Science and Technology, Nanjing Normal University, Nanjing, China",2021 3rd International Symposium on Smart and Healthy Cities (ISHC),"29 Jun 2022","2021","","","41","46","In the information age, managers urgently need to improve their ability to manage cities comprehensively, so building a smart city has become an unstoppable trend. In this process, the cross-industry business collaboration at the municipal level is the difficulty and focus of construction. This paper puts forward the concept of a component-based cloud service architecture for the smart city. It focuses on business reuse and collaboration relationship sorting. It maps the municipal cross-industry business collaboration into the organic combination of several basic concepts such as component, service, and cloud. Because of its loose coupling and flexible application characteristics, the component-based cloud service architecture for the smart city will become one of the common essential capability platforms of the smart city.","","978-1-6654-6743-8","10.1109/ISHC54333.2021.00016","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9804466","component-based;cross-industry;cloud service architecture;smart city","Couplings;Smart cities;Architecture;Buildings;Collaboration;Market research;Information age","","1","","15","IEEE","29 Jun 2022","","","IEEE","IEEE Conferences"
"Towards a Multi-Tenant Microservice Architecture: An Industrial Experience","C. Batista; B. Proença; E. Cavalcante; T. Batista; F. Morais; H. Medeiros","Synchro Information Systems, João Pessoa, Brazil; Synchro Information Systems, João Pessoa, Brazil; Federal University of Rio Grande do Norte, Natal, Brazil; Federal University of Rio Grande do Norte, Natal, Brazil; Federal University of Rio Grande do Norte, Natal, Brazil; Federal University of Rio Grande do Norte, Natal, Brazil","2022 IEEE 46th Annual Computers, Software, and Applications Conference (COMPSAC)","10 Aug 2022","2022","","","553","562","Academia and industry have recently acknowledged the many benefits of architecting with microservices. Nonethe-less, adopting a microservice architecture does not immediately guarantee the achievements promised by such an architectural style. A crucial architectural decision is why and where multi-tenancy should be adopted in microservice architectures. This paper presents a multi-tenant microservice architecture conceived to meet the requirements of a company to serve multiple customer applications (tenants). By reporting the migration and modern-ization of a monolith legacy architecture towards microservices, this paper discusses how a multi-tenant microservice architecture could benefit scalability, management, and third-party system integration. This paper also presents empirical results of a scalability evaluation to assess the adoption of multi-tenancy in the proposed architecture and quantify its impact on the system's performance.","0730-3157","978-1-6654-8810-5","10.1109/COMPSAC54236.2022.00100","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9842651","microservices;multi-tenancy;legacy software;software modernization;scalability","Costs;Scalability;Architecture;Microservice architectures;Finance;Computer architecture;Companies","","","","26","IEEE","10 Aug 2022","","","IEEE","IEEE Conferences"
"Comparison Of Architectural Models Of IoT Systems - Advantages And Disadvantages","V. Stefanova-Stoyanova; K. Stoyanov; P. Danov","Faculty of Computer Systems and Technologies Technical University of Sofia, Sofia, Bulgaria; Faculty of Computer Systems and Technologies Technical University of Sofia, Sofia, Bulgaria; Faculty of Computer Systems and Technologies Technical University of Sofia, Sofia, Bulgaria",2021 XXX International Scientific Conference Electronics (ET),"4 Nov 2021","2021","","","1","5","There are currently many classifications of IoT systems, many of which come from the industry and reflect the functional and structural characteristics of the solutions. One of the most popular practical classifications of loT systems is the Postscapes classification, which divides the whole set of solutions into seven different categories (“Smart Home”, “Smart Transport”, “Smart Healthcare”, “Smart Sales”, “Smart Transport”). “Smart Home” and “Smart Production” and “Smart City”, as well as “Smart Energy”.","","978-1-6654-4518-4","10.1109/ET52713.2021.9579948","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9579948","loT;Architecture of loT Systems;Client-Server Architecture;Peer-to-peer model;Service-oriented architecture (SOA);REST Architecture;Layer-oriented Architecture;Microkernel architecture (plug-in architecture)","Industries;Smart cities;Smart homes;Production;Medical services;Task analysis","","1","","33","IEEE","4 Nov 2021","","","IEEE","IEEE Conferences"
"Deployment orchestration of microservices with geographical constraints for Edge computing","M. Villari; A. Celesti; G. Tricomi; A. Galletta; M. Fazio","Department of Engineering, University of Messina, Italy; Department of Engineering, University of Messina, Italy; Department of Engineering, University of Messina, Italy; Department of Engineering, University of Messina, Italy; Department of Engineering, University of Messina, Italy",2017 IEEE Symposium on Computers and Communications (ISCC),"4 Sep 2017","2017","","","633","638","Nowadays, Edge computing allows to push the application intelligence at the boundaries of a network in order to get high-performance processing closer to both data sources and end-users. In this scenario, the Horizon 2020 BEACON project - enabling federated Cloud-networking - can be used to setup Fog computing environments were applications can be deployed in order to instantiate Edge computing applications. In this paper, we focus on the deployment orchestration of Edge computing distributed services on such fog computing environments. We assume that a distributed service is composed of many microservices. Users, by means of geolocation deployment constrains can select regions in which microservices will be deployed. Specifically, we present an Orchestration Broker that starting from an ad-hoc OpenStack-based Heat Orchestraton Template (HOT) service manifest of an Edge computing distributed service produces several HOT microservice manifests including the the deployment instruction for each involved Fog computing node. Experiments prove the goodness of our approach.","","978-1-5386-1629-1","10.1109/ISCC.2017.8024599","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8024599","Cloud computing;edge Computing;microservices;deployment;orchestration","Cloud computing;Edge computing;Heating systems;Elasticity;Computers;Computer architecture;Topology","","19","","12","IEEE","4 Sep 2017","","","IEEE","IEEE Conferences"
"Containerized Development and Microservices for Self-Driving Vehicles: Experiences & Best Practices","C. Berger; B. Nguyen; O. Benderius","Department of Computer Science and Engineering, University of Gothenburg, Sweden; Department of Mechanics and Maritime Sciences, Chalmers University of Technology, Gothenburg, Sweden; Department of Mechanics and Maritime Sciences, Chalmers University of Technology, Gothenburg, Sweden",2017 IEEE International Conference on Software Architecture Workshops (ICSAW),"26 Jun 2017","2017","","","7","12","In this paper, experiences and best practices from using containerized software microservices for self-driving vehicles are shared. We applied the containerized software paradigm successfully to both the software development and deployment to turn our software architecture in the vehicles following the idea of microservices. Key enabling elements include onboarding of new developers, both researchers and students, traceable development and packaging, convenient and bare-bone deployment, and traceably archiving binary distributions of our quickly evolving software environment. In this paper, we share our experience from working one year with containerized development and deployment for our self-driving vehicles highlighting our reflections and application-specific shortcomings, our approach uses several components from the widely used Docker ecosystem, but the discussion in this paper generalizes these concepts. We conclude that the growingly complex automotive software systems in combination with their computational platforms should be rather understood as data centers on wheels to design both, (a) the software development and deployment processes, and (b) the software architecture in such a way to enable continuous integration, continuous deployment, and continuous experimentation.","","978-1-5090-4793-2","10.1109/ICSAW.2017.56","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7958428","","Software;Cameras;Sensors;Containers;Software architecture;Hardware;Best practices","","17","1","17","IEEE","26 Jun 2017","","","IEEE","IEEE Conferences"
"Digital Twinning for Microservice Architectures","A. Raghunandan; D. Kalasapura; M. Caesar","Department of Computer Science, University of Illinois at Urbana Champaign, Urbana, IL, USA; Department of Computer Science, University of Illinois at Urbana Champaign, Urbana, IL, USA; Department of Computer Science, University of Illinois at Urbana Champaign, Urbana, IL, USA",ICC 2023 - IEEE International Conference on Communications,"23 Oct 2023","2023","","","3018","3023","Digital twins have been designed and implemented for diverse applications like smart manufacturing, healthcare, supply chain and retail management. They provide monitoring, remote prognostics and health management capabilities for the various physical assets used in these domains. Many of these capabilities would be beneficial to microservice architectures as well, given the need for lightweight monitoring solutions in multitenant environments. In particular, twins can provide operators with real-time resource usage metrics which help with operational objectives such as resource planning, anomaly detection, rewind and replay and so on. In this work, we propose a design for building digital twins for microservice architectures. As a proof of concept, we focus on modelling the resource utilization as that is a key requirement for monitoring system reliability and security. In general, digital twins require a real world counterpart, a virtual model and a mechanism for consistently keeping both synchronized. We focus on the two latter aspects of the digital twin. Our approach involves converting a formal model of a microservice architecture into a digital twin that can capture and execute an actual cluster's state. We present an extensible architecture connecting the various components of the system and the twin and evaluate the twin's ability to capture the real-time state of a real Kubernetes cluster. We also discuss future extensions which can enhance the system's security by detecting a broad range of attacks.","1938-1883","978-1-5386-7462-8","10.1109/ICC45041.2023.10279802","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10279802","microservices;digital twin;Kubernetes;anomaly detection;reliability;security;monitoring;resource utilization","Architecture;Buildings;Microservice architectures;Real-time systems;Digital twins;Security;Resource management","","1","","20","IEEE","23 Oct 2023","","","IEEE","IEEE Conferences"
"Istio API Gateway Impact to Reduce Microservice Latency and Resource Usage on Kubernetes","L. Nathaniel; G. V. Perdana; M. R. Hadiana; R. M. Negara; S. N. Hertiana","Adaptive Network Laboratory,School of Electrical Engineering, Telkom University, Indonesia; Adaptive Network Laboratory,School of Electrical Engineering, Telkom University, Indonesia; Adaptive Network Laboratory,School of Electrical Engineering, Telkom University, Indonesia; Telecommunication Engineering,School of Electrical Engineering, Telkom University, Indonesia; Telecommunication Engineering,School of Electrical Engineering, Telkom University, Indonesia",2023 International Seminar on Intelligent Technology and Its Applications (ISITIA),"23 Aug 2023","2023","","","43","47","The rapid development of technology has caused a massive demand for technology applications. Infrastructure plays a vital role in application performance, and unreliable infrastructure can hinder application performance, resulting in a poor customer experience. One of the core components that enables application accessibility is the proxy server, which routes incoming traffic to the application that executing business logic. The proxy server runs in the Kubernetes environment in the abstraction of operating system virtualization. As the gateway to applications running in the Kubernetes environment, a gateway server with excellent performance, reliability, and efficient resource utilization is required. The selection of the proxy server as the gateway to the backend application significantly impacts application performance from the user’s perspective. The experiment conducted in this research is to test the backend application accessed through two different proxy servers in the Kubernetes environment. This research compares the response time and hardware resource utilization of the proxy server application, representing common microservice architecture and mesh microservice. This paper proposed the modern microservice architecture and evaluate the performance of common microservice paradigm so enterprise application with high request rate can serve client with lowest latency and efficient resource. The results shows that the Istio ingress proxy is suitable for microservice applications with high request rates while nginx ingress proxy performs better when serving lower request.","2769-5492","979-8-3503-1395-6","10.1109/ISITIA59021.2023.10221035","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10221035","Proxy Server;API Gateway;Cloud Computing;Microservices;Service Mesh","Seminars;Operating systems;Microservice architectures;Computer architecture;Logic gates;Servers;Resource management","","1","","19","IEEE","23 Aug 2023","","","IEEE","IEEE Conferences"
"Optimizing HR Monolithic Systems to Modern HR Systems using Microservices Architecture","I. Shabani; N. Hiseni; D. Hyseni; B. Çiço","Department of Computer Engineering, Faculty of Electrical and Computer Engineering, University of Prishtina, Prishtina, Kosova; Department of Computer Engineering, Faculty of Electrical and Computer Engineering, University of Prishtina, Prishtina, Kosova; Department of Computer Engineering, Faculty of Electrical and Computer Engineering, University of Prishtina, Prishtina, Kosova; Department of Computer Engineering, Faculty of Architecture and Computer Engineering, Epoka University, Tirana, Albania",2024 13th Mediterranean Conference on Embedded Computing (MECO),"3 Jul 2024","2024","","","1","7","Human Recourse (HR) are a vital function of any organization because it manages the most valuable resource of the company. However, traditional HR systems are generally monolithic, complex, and inflexible, which penalizes their ability to adapt to changing business needs and employee expectations. In this paper, we have proposed a new approach to optimize HRs processes using microservice architecture. Microservices offer many benefits to modern HRs systems, such as scalability, flexibility, reliability, and security. We will provide a prototype of an HR system designed using microservice architecture. The prototype shows microservices facilitate rapid development, testing, and deployment of HRs system capable of meeting evolving organizational needs. Through rigorous testing and evaluation, the prototype demonstrated substantial improvements in delivery time, resource utilization, and system modularity compared to monolithic HRs systems, making this a promising option for modern HRs management in diverse organizational structures.","2637-9511","979-8-3503-8756-8","10.1109/MECO62516.2024.10577792","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10577792","monolithic systems;microservices;software systems;human resources","Engineering profession;Scalability;Microservice architectures;Prototypes;Market research;Security;Resource management","","","","17","IEEE","3 Jul 2024","","","IEEE","IEEE Conferences"
"A Cloud-Based Software Architecture for Mathematical Modeling based on Interval Data Analysis","M. Dyvak; V. Manzhula; A. Melnyk; L. Dostalek; M. Ozhha; O. Papa","Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine; Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine; Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine; Department of Computer Systems, Czech Technical University in Prague, Prague, Czech Republic; Department of Computer Technologies, Ternopil Volodymyr Hnatiuk National Pedagogical University, Ternopil, Ukraine; Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine",2024 14th International Conference on Advanced Computer Information Technologies (ACIT),"16 Oct 2024","2024","","","89","93","In this paper, we present a software architecture for mathematical modeling based on the analysis of interval data using cloud technologies. The key features of the proposed architecture include the integration of an interval modeling subsystem for static systems into a cloud-based service-oriented architecture, optimization of computational schemes using the Google Cloud Run platform, the use of the MapReduce distributed computing model, free software-interpreted tools, and the application of RESTful APIs at all stages of mathematical modeling.","2770-5226","979-8-3503-5004-3","10.1109/ACIT62333.2024.10712488","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10712488","mathematical modeling;cloud services;software architecture","Analytical models;Data analysis;Computational modeling;Restful API;Computer architecture;Mathematical models;Data models;Service-oriented architecture;Internet;Optimization","","","","27","IEEE","16 Oct 2024","","","IEEE","IEEE Conferences"
"Research on designing an integrated electric power marketing information system based on microapplications and microservices architecture","H. Lin; J. Zhao; Y. Jiao; J. Cao; H. Ouyang; B. Yuan; G. Xiong","State Grid Information & Telecommunication Group Co. Ltd., Beijing, China; State Grid Information & Telecommunication Group Co. Ltd., Beijing, China; Maintenance Branch, State Grid Liaoning Electric Power Supply Co., Ltd, Shenyang, China; Marketing Department, State Grid Hunan Electric Power Company, Changsha, China; State Grid Information & Telecommunication Group Co. Ltd., Beijing, China; State Grid Information & Telecommunication Group Co. Ltd., Beijing, China; State Grid Information & Telecommunication Group Co. Ltd., Beijing, China",2018 IEEE 3rd International Conference on Cloud Computing and Big Data Analysis (ICCCBDA),"18 Jun 2018","2018","","","600","607","With the continuous expansion of the electric power marketing business, the demand for new services is constantly increasing and the required functions continue to raise, the issues of multiple inter-system interfaces and interactions, diversified interface technologies, diverse data replication approaches, and multiple data transmission channels, are more prominent in the current electric power marketing business application system and have affected the regular operations and development of the electric power marketing services and applications. This paper proposes the microapplications and microservices architecture based on microservices framework to implement the applications and functions. Based on this architecture, it describes the design method of an integrated electric power marketing business information system and elaborates each technical layer in the overall architecture, which includes the application access layer, microapplications layer, microservices layer, data resource layer and basic platform layer, by unifying the technical architecture and implementation technologies of the information system, reducing the business interactions, interface interactions, data replication and data transmission within the system, to be suitable for the future development of the electric power marketing business. Finally the paper describes the system verification with the typical business scenario of charging and accounting in the electric power marketing business.","","978-1-5386-4301-3","10.1109/ICCCBDA.2018.8386586","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8386586","microapplications;microservices;distributed service bus;data analysis domain;data processing domain;electric power marketing;information system","Business;Power systems;Information systems;Access control;Computer architecture;Distributed databases;Data communication","","1","","22","IEEE","18 Jun 2018","","","IEEE","IEEE Conferences"
"Evaluating Frameworks Assemblies In Microservices-based Systems Using Imperfect Information","G. Márquez; Y. Lazo; H. Astudillo","Universidad Técnica Federico Santa María, Valparaíso, Chile; Universidad Técnica Federico Santa María, Valparaíso, Chile; Universidad Técnica Federico Santa María, Valparaíso, Chile",2020 IEEE International Conference on Software Architecture Companion (ICSA-C),"19 May 2020","2020","","","250","257","Microservices is an architectural style that promotes the facility to build and maintain systems by breaking down its business capabilities into smaller and distributed services. Often, practitioners commonly use frameworks to provide generic functionalities to address recurring quality attribute concerns on microservices-based systems. Nevertheless, in practical settings, frameworks information is incomplete, imprecise, and changing as well as requirements. More realistically deployable approaches combine the exploration of candidate architectures with their evaluation regarding requirements satisfaction and the fuzziness and incompleteness available frameworks information. This article outlines a novel technique, called μAzimut, whose purpose is to generate, evaluate, and compare frameworks assemblies using potentially incomplete, imprecise, and changing descriptions of non-functional requirements and frameworks. The frameworks assemblies evaluation is based on a support score which allows modeling imperfect architectural knowledge. The technique is evaluated in an industrial case study. The results point out that μAzimut generates solutions that are close to those solutions that an architect selects for designing microservices architectures.","","978-1-7281-7415-0","10.1109/ICSA-C50368.2020.00049","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9095600","Microservices;Frameworks;Architectural tactics;Architectural patterns;Quality attributes","Computer architecture;Software;Task analysis;Systematics;Scalability;Containers","","3","","29","IEEE","19 May 2020","","","IEEE","IEEE Conferences"
"A Microservice Architecture for Online Mobile App Optimization","Y. Zhao; N. Medvidovic",University of Southern California; University of Southern California,2019 IEEE/ACM 6th International Conference on Mobile Software Engineering and Systems (MOBILESoft),"29 Aug 2019","2019","","","45","49","A large number of techniques for analyzing and optimizing mobile apps have emerged in the past decade. However, those techniques' components are notoriously difficult to extract and reuse outside their original tools. This paper introduces MAOMAO, a microservice-based reference architecture for reusing and integrating such components. MAOMAO's twin goals are (1) adoption of available app optimization techniques in practice and (2) improved construction and evaluation of new techniques. The paper uses several existing app optimization techniques to illustrate both the motivation behind MAOMAO and its potential to fundamentally alter the landscape in this area.","","978-1-7281-3395-9","10.1109/MOBILESoft.2019.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8817053","mobile applications;reference architecture;infrastructure;reusability;optimization","Instruments;Prefetching;Monitoring;Optimization;Runtime;Mobile applications;Tools","","2","","33","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"Event Model Algorithm with Microservice Architecture Implementation","O. Romanov; V. Mankivskyi; I. Saychenko; M. Nesterenko","Igor Sikorsky Kyiv Polytechnic Institute, National Technical University of Ukraine, Kiev, Ukraine; Igor Sikorsky Kyiv Polytechnic Institute, National Technical University of Ukraine, Kiev, Ukraine; Igor Sikorsky Kyiv Polytechnic Institute, National Technical University of Ukraine, Kiev, Ukraine; Military Institute of Telecommunications and Information Technologies Named After Heroiv Krut, Kiev, Ukraine","2022 IEEE 9th International Conference on Problems of Infocommunications, Science and Technology (PIC S&T)","6 Sep 2023","2022","","","561","566","The Event-driven architectures (EDA) are gaining popularity for a reason. Scalability in building isolated microservices is a paradigm that many businesses are constantly striving for, and event-driven architecture is built with that in mind. With innovative tools such as Kafka and RabbitMQ, event-driven architectures are becoming more flexible, versatile, and robust to satisfy a wide range of business needs. However, powerful tool also comes at a price: a high learning curve and rather complicated initial setup. However, once such a structure is in place, the benefits are clear as data is transmitted with lower latency and higher throughput. So why not use an event-driven architecture? In the work, an algorithm for transition to the use of EDA is proposed for a successful transition to such an architecture.","","979-8-3503-9891-5","10.1109/PICST57299.2022.10238498","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10238498","eda;event;network;kafka;domain model","Costs;Architecture;Scalability;Microservice architectures;Human factors;Throughput;Complexity theory","","","","13","IEEE","6 Sep 2023","","","IEEE","IEEE Conferences"
"Towards a Scalable Architecture for Building Digital Twins at the Edge","K. Alanezi; S. Mishra","Department of Computing, College of Basic Education, PAAET, Kuwait; Computer Science Department, University of Colorado, Boulder, USA",2023 IEEE/ACM Symposium on Edge Computing (SEC),"7 Feb 2024","2023","","","325","329","This paper presents a system architecture for building digital twins at the edge. In particular, it addresses two major chal-lenges: system scalability and complexity. It introduces two novel architectural components: a Context Aware Communication Component (CACC) that addresses the scalability issue in communication between physical and virtual environments, and second, an application-agnostic methodology, a service registry component for integrating digital twin with EdgeAI (DT-EdgeAI integration) at the edge. The paper describes this architecture in detail and provides a preliminary prototype implementation.","2837-4827","979-8-4007-0123-8","10.1145/3583740.3626807","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10419266","Digital Twin Architecture;EdgeAI;Scalability;Complexity;CCS Concepts","Scalability;Architecture;Buildings;Virtual environments;Systems architecture;Computer architecture;Digital twins","","","","10","","7 Feb 2024","","","IEEE","IEEE Conferences"
"A Comparative Analysis of Communication Efficiency: REST vs. gRPC in Microservice- Based Ecosystems","Ritu; S. Arora; A. Bhardwaj; A. Kukkar; S. Kaur","Department of Computer Science & Engineering, Chandigarh Engineering College, Chandigarh Group of Colleges, Jhanjeri, Mohali, India; Chitkara University Institute of Engineering and Technology Chitkara University, Punjab, India; Amity School of Engineering and Technology Amity University Mohali, Punjab, India; Chitkara University Institute of Engineering and Technology Chitkara University, Punjab, India; Amity School of Engineering and Technology Amity University Mohali, Punjab, India",2024 International Conference on Emerging Innovations and Advanced Computing (INNOCOMP),"17 Sep 2024","2024","","","621","626","This study investigates the practical aspects of evaluating the efficiency and performance of Representational State Transfer (REST) and gRPC communication protocols in microservice-based systems. Microservices revolutionize software architecture by enabling scalable applications through independently deployable services. However, effective communication between these services is crucial for maintaining system responsiveness and reliability. The paper takes a hands-on approach, drawing insights from real-world implementations and experiments. It offers a pragmatic overview of microservices architecture, highlighting the pivotal role of communication protocols in facilitating seamless interactions among distributed components. Furthermore, the study delves into the technical intricacies of REST and gRPC, exploring aspects such as message formats, serialization mechanisms, and transport protocols. Through empirical analysis, the paper evaluates the latency performance of REST and gRPC across various communication tasks under different workloads and network conditions. These insights provide practical guidance for developers and architects in selecting the most suitable communication protocol based on specific project requirements and performance constraints, ultimately enhancing microservice communication efficiency and reliability.","","979-8-3503-7647-0","10.1109/INNOCOMP63224.2024.00107","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10664091","Representational state transfer (REST);gRPC;communication protocols;microservices architecture;distributed systems;latency analysis;practical guidelines","Transport protocols;Technological innovation;Protocols;Ecosystems;Microservice architectures;Computer architecture;Throughput","","","","18","IEEE","17 Sep 2024","","","IEEE","IEEE Conferences"
"A Reference Architecture for Modular Industrial Automation Systems","S. Grüner; M. Hoernicke; M. Thies; G. Fachinger; N. C. Torres; T. Kleinert","ABB Corporate Research Center Germany, Ladenburg, Germany; ABB Corporate Research Center Germany, Ladenburg, Germany; RWTH Aachen University, Aachen, Germany; RWTH Aachen University, Aachen, Germany; RWTH Aachen University, Aachen, Germany; RWTH Aachen University, Aachen, Germany",2021 26th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA ),"30 Nov 2021","2021","","","1","8","Modular automation is an upcoming paradigm to improve flexibility and maintainability of industrial production systems. The lack of interoperability between equipment adhering to different modular automation specifications limits module sourcing and hampers coexistence of discrete and process modules in joint hybrid production applications. In this work, we present a reference software architecture for modular automation which is able to cover existing specifications and demonstrate how it can be used to assess alternatives of cross-standard orchestration. Based on this foundation, next steps regarding cross-module and cross-orchestrator communication are outlined.","","978-1-7281-2989-1","10.1109/ETFA45728.2021.9613203","German Federal Ministry of Education and Research(grant numbers:01IS19022); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9613203","modular automation;service-oriented production;software architecture;MTP;PackML","Production systems;Software architecture;Conferences;Computer architecture;Manufacturing automation;Interoperability","","6","","19","IEEE","30 Nov 2021","","","IEEE","IEEE Conferences"
"BLOC: Balancing Load with Overload Control In the Microservices Architecture","R. Bhattacharya; T. Wood","Department of Computer Science, George Washington University; Department of Computer Science, George Washington University",2022 IEEE International Conference on Autonomic Computing and Self-Organizing Systems (ACSOS),"4 Nov 2022","2022","","","91","100","The microservices architecture has become ubiquitous in the cloud environment. It simplifies application development by breaking monolithic applications into manageable micro services that can be developed and deployed independently of the whole. However, the move from a monolithic or simple multi-tier architecture to a distributed microservice ""service mesh"" leads to new challenges due to the more complex application topology.A particular problem when automatically managing the performance of microservices is that since each service component scales up and down independently, it can easily create load imbalance problems on shared backend services accessed by multiple components. Traditional load balancing algorithms were designed for centralized load balancers sitting between a group of clients and a server farm. These algorithms, however, do not port over well to a distributed microservice architecture where load balancers are deployed client-side. In this paper we propose a self managing load balancing system, BLOC, which provides consistent response times to users without using a centralized metadata store or explicit messaging between nodes.We show that different service layers scaling independently can create unacceptably wide response time distributions and long tails, hurting client experience. This is because popular microservice load balancing algorithms, like Least Connection, only use a single component’s view of the backend load to guide decisions. This limited perspective leads to an unevenly balanced system and the potential for incast problems where a large number of frontend components can easily overload a shared backend. BLOC uses overload control approaches like rate limiting, active queue management and backpressure to provide feedback to the load balancers. The load balancers react to this feedback with techniques like backoff and retries. We show that this performs significantly better in solving the incast problem in microservice architectures.Evaluating this framework, we found that BLOC improves the response time distribution range, between the 10th and 90th percentiles, by 2 to 4 times and the tail, 99th percentile, latency by two times.","","978-1-6654-7137-4","10.1109/ACSOS55765.2022.00027","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9935022","microservices;loadbalancing;overload control","Limiting;Microservice architectures;Tail;Metadata;Load management;Control systems;User experience","","4","","21","IEEE","4 Nov 2022","","","IEEE","IEEE Conferences"
"UFCity: A Software Architecture to Create Data Ecosystem in Smart Cities","D. Pereira; A. Brayner","Doctoral program in computer science, Federal University of Ceara, Fortaleza, Brazil; Dept. computer science, Federal University of Ceara, Fortaleza, Brazil",2023 Symposium on Internet of Things (SIoT),"17 Jan 2024","2023","","","1","5","Smart city platforms manage resources and information to offer services to citizens. Developing technological solutions for this scenario is not trivial, given data and resource heterogeneity and the need for platform flexibility and adaptability. This work presents UFCity, a software architecture for smart city data ecosystems using microservices, artificial intelligence, and a three-layer networking structure. As a proof of concept, we developed a prototype and tested it in usage scenarios with real data. These use cases explored how our solution solves identified problems, showing meeting essential requirements for smart city platforms. In this way, UFCity is an alternative for data management in a smart city, presenting advantages over other solutions listed in this work in meeting the platform requirements.","","979-8-3503-2943-8","10.1109/SIoT60039.2023.10389861","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10389861","software architecture;smart city platform;microservices;artificial intelligence","Flexible printed circuits;Smart cities;Software architecture;Ecosystems;Microservice architectures;Prototypes;Network architecture","","","","25","IEEE","17 Jan 2024","","","IEEE","IEEE Conferences"
"Case for Microservices Orchestration Using Workflow Engines","A. Nadeem; M. Z. Malik","North Dakota State University, Fargo, North Dakota, USA; North Dakota State University, Fargo, North Dakota, USA",2022 IEEE/ACM 44th International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER),"13 Jun 2022","2022","","","6","10","Microservices have become the de-facto software architecture for cloud-native applications. A contentious architectural decision in microservices is to compose them using choreography or orchestration. In choreography, every service works independently, whereas, in orchestration, there is a controller that coordinates service interactions. This paper makes a case for orchestration. The promise of microservices is that each microservice can be independently developed, deployed, tested, upgraded, and scaled. This makes them suitable for systems running on cloud infrastructures. However, microservice-based systems become complicated due to the complex interactions of various services, concurrent events, failing components, developers’ lack of global view, and configurations of the environment. This makes maintaining and debugging such systems very challenging. We hypothesize that orchestrated services are easier to debug and to test this we ported the largest publicly available microservices’ benchmark TrainTicket [24], which is implemented using choreography, to a fault-oblivious stateful workflow framework Temporal [19]. We report our experience in porting the code from traditional choreographed microservice architecture to one orchestrated by Temporal and present our initial findings of time to debug the 22 bugs present in the benchmark. Our findings suggest that an effort towards making a transition to orchestrated approach is worthwhile, making the ported code easier to debug.","","978-1-6654-9596-7","10.1145/3510455.3512777","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9793520","Microservices;Distributed Systems;Orchestration;Workflow Engines;Fault tolerance;Debugging","Visualization;Codes;Software architecture;Computer bugs;Microservice architectures;Debugging;Computer architecture;Benchmark testing;Engines","","","","25","IEEE","13 Jun 2022","","","IEEE","IEEE Conferences"
"11 things about Securing Microservice","Y. Madheswaran","General Motors Financial Company, San Antonio, USA",2023 IEEE Secure Development Conference (SecDev),"8 Nov 2023","2023","","","51","53","Microservices are a modern-era software development approach to creating REST APIs as a small independent process that is loosely coupled, performs business specific operation or capabilities, and is owned by a small team. Microservices are light weight components that are easy to develop, deploy and scale based on business requirements. Some of our customers use microservice with container-based deployment, some implement regular legacy process build and deploy on the webserver and some serverless in private, public, or hybrid cloud. Microservices are evolving and distributing the business requirement logic to multiple services which increases application complexity, maintainability and security while interacting with other services. Each organization follows multiple ways to secure their Microservices. Here, we will go through some of the security implementations and finally will review securing Microservices in zero trust.","","979-8-3503-3132-5","10.1109/SecDev56634.2023.00019","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10305626","","Scalability;Microservice architectures;Organizations;Software;Zero Trust;Complexity theory","","","","6","IEEE","8 Nov 2023","","","IEEE","IEEE Conferences"
"gym-hpa: Efficient Auto-Scaling via Reinforcement Learning for Complex Microservice-based Applications in Kubernetes","J. Santos; T. Wauters; B. Volckaert; F. D. Turck","Department of Information Technology Technologiepark-Zwijnaarde 126, IDLab, Ghent University - imec, Gent, Belgium; Department of Information Technology Technologiepark-Zwijnaarde 126, IDLab, Ghent University - imec, Gent, Belgium; Department of Information Technology Technologiepark-Zwijnaarde 126, IDLab, Ghent University - imec, Gent, Belgium; Department of Information Technology Technologiepark-Zwijnaarde 126, IDLab, Ghent University - imec, Gent, Belgium",NOMS 2023-2023 IEEE/IFIP Network Operations and Management Symposium,"21 Jun 2023","2023","","","1","9","Containers have revolutionized application deployment and life-cycle management in current cloud platforms. Applications have evolved from large monoliths to complex graphs of loosely-coupled microservices aiming to improve deployment flexibility and operational efficiency. However, modern microservice-based architectures are challenging since proper allocation and scaling of microservices is a difficult task due to their complex inter-dependencies. Existing works do not consider microservice dependencies, which could lead to the application’s performance degradation when service demand increases. This paper studies the impact of microservice interdependencies in auto-scaling mechanisms by proposing a novel framework named gym-hpa that enables different auto-scaling goals via Reinforcement Learning (RL). The framework has been developed based on the OpenAI Gym library for the popular Kubernetes (K8s) platform to bridge the gap between RL and auto-scaling research by training RL agents on real cloud environments. The aim is to improve resource usage and reduce the application’s response time in future cloud platforms by considering microservice inter-dependencies in horizontal scaling. Experiments with microservice benchmark applications show that RL agents trained with the gym-hpa framework can reduce on average resource usage by 30% and reduce the application’s response time by 25% compared to default scaling mechanisms.","2374-9709","978-1-6654-7716-1","10.1109/NOMS56928.2023.10154298","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10154298","Auto-scaling;Containers;Cloud-native;Microservices;Orchestration;Reinforcement Learning;Kubernetes","Training;Degradation;Microservice architectures;Reinforcement learning;Containers;Benchmark testing;Libraries","","10","","48","IEEE","21 Jun 2023","","","IEEE","IEEE Conferences"
"Software Component Update for IoT Systems","M. Nordahl; A. Åkesson; B. A. Johnsson; G. Hedin; B. Magnusson","Dept. of Computer Science, Lund University, Sweden; Dept. of Computer Science, Lund University, Sweden; Dept. of Computer Science, Lund University, Sweden; Dept. of Computer Science, Lund University, Sweden; Dept. of Computer Science, Lund University, Sweden","2024 11th International Conference on Internet of Things: Systems, Management and Security (IOTSMS)","14 Oct 2024","2024","","","124","131","Frequent updates in IoT software are crucial for fixing security vulnerabilities, correcting bugs, and adding new features. However, for systems comprising geographically distributed devices, implementing updates is challenging. Such updates must be coordinated across multiple devices, automated without end-user involvement, adaptable to weak connectivity, and minimally disruptive to end users. In this paper we introduce an update method that addresses these challenges. Our approach utilizes a versioned, component-oriented software model for light-weight microservices, alongside a domain-specific language for specifying configurations, facilitating updates of individual components. We evaluate the effectiveness of this method within a Hospital-at-Home system, including servers, tablets for nurses and patients, and medical equipment located in patients’ homes. Our results demonstrate that this method offers substantial flexibility and significantly reduces total update time, switchover time, and network load compared to previous methods.","2832-3033","979-8-3503-6650-1","10.1109/IOTSMS62296.2024.10710264","Health; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10710264","IoT;software updates;component-oriented software;configuration language;microservices;eHealth","Microservice architectures;Switches;Telecommunication traffic;Software;Safety;Internet;Electronic healthcare;Servers;Security;Domain specific languages","","","","16","IEEE","14 Oct 2024","","","IEEE","IEEE Conferences"
"A Service-Oriented Digital Twins Framework for Smart Grid Management","M. Atalay","Middle East Technical University, Ankara, Turkey",2022 International Workshop on Secure and Reliable Microservices and Containers (SRMC),"12 Dec 2022","2022","","","9","17","Cyber-Physical Systems (CPS) are infrastructures with capabilities of perception, networking, and computation. They consist of physical and virtual components that interact with their environment. Their main goal is to monitor the physical system in real-time to have its behavior under control. Some of these infrastructures require well-defined security measures due to their critical processing capabilities. Digital Twins are defined as virtual structures emulating the physical components in various systems. They enable the deployment of isolated simulation environments to test changes and specify the security issues of a CPS. One of the main applications of CPS is smart grids. Microservices allow us to create fine-grained operations on automation systems. Using small, well-defined, modular processes, we can observe the states of smart grid infrastructure in many stages. In this work, we aim to design a framework that can create a reliable environment for smart grids compliant with existing industrial standards. We propose a service-oriented digital twins framework consisting of entities such as power meters, data aggregators, and system parameters for providing a scalable and highly available platform for complex energy systems.","","978-1-6654-5539-8","10.1109/SRMC57347.2022.00006","Middle East Technical University(grant numbers:GAP-312-2021-10784); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9973120","smart grid;digital twin;microservice architecture;cyber-physical systems","Microservice architectures;Intrusion detection;Reliability engineering;Real-time systems;Software;Smart grids;Digital twins","","","","46","IEEE","12 Dec 2022","","","IEEE","IEEE Conferences"
"Node-RED Workflow Manager for Edge Service Orchestration","F. Larrinaga; W. Ochoa; A. Perez; J. Cuenca; J. Legaristi; M. Illarramendi","Faculty of Engineering, Mondragon Unibertsitatea, Arrasate-Mondragon, Spain; Faculty of Engineering, Mondragon Unibertsitatea, Arrasate-Mondragon, Spain; Faculty of Engineering, Mondragon Unibertsitatea, Arrasate-Mondragon, Spain; Faculty of Engineering, Mondragon Unibertsitatea, Arrasate-Mondragon, Spain; Faculty of Engineering, Mondragon Unibertsitatea, Arrasate-Mondragon, Spain; Faculty of Engineering, Mondragon Unibertsitatea, Arrasate-Mondragon, Spain",NOMS 2022-2022 IEEE/IFIP Network Operations and Management Symposium,"9 Jun 2022","2022","","","1","6","Microservice Architectures have increasingly become popular in Industry 4.0 as they allow heterogeneous systems to interact, reduce the complexity in the management of individual components, and support distributed deployments. The integration of those distributed services into orchestrated production processes is performed by workflow managers. Next generation workflow managers must overcome a number of challenges when operating in microservice architectures and IoT environments. To overcome these challenges (heterogeneity, high dynamism, edge deployment or scalability), we propose a workflow manager alternative built in Node-RED. Node-RED provides instruments for the development of IoT systems and leverages the edge computing paradigm. This solution is deployable in embedded systems, is able to load and execute business processes by means of BPMN recipes and enables the integration of other frameworks and architectures.","2374-9709","978-1-6654-0601-7","10.1109/NOMS54207.2022.9789940","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9789940","Business processes;Workflow Management;Industry4.0;Service Oriented Architecture;Microservices;Node-RED","Embedded systems;Microservice architectures;Computer architecture;Sensor systems;Workstations;Sensors;Task analysis","","5","","33","IEEE","9 Jun 2022","","","IEEE","IEEE Conferences"
"A Task-Oriented Automatic Microservice Deployment Method For Industrial Edge Applications","F. Yang; Y. Zhang; B. Lv; W. Dai","Shanghai Jiao Tong University, China; Shanghai Jiao Tong University, China; Shanghai Jiao Tong University, China; Shanghai Jiao Tong University, China",IECON 2020 The 46th Annual Conference of the IEEE Industrial Electronics Society,"18 Nov 2020","2020","","","2149","2154","Flexible production and intelligent manufacturing prompt a variety of production and computing requirements of industrial edge applications. Industrial edge applications need to adopt more flexible deployment methods to meet the new requirements from the new industrial cloud and edge paradigm. However, most legacy industrial applications are still based on a fixed order deployment method. In this paper, a task-oriented automatic edge-cloud collaborative microservice method is proposed to optimize the deployment process of industrial edge applications and improve the flexibility and expandability. The proposed method was verified by a case study of the thrust ball bearing producing.","2577-1647","978-1-7281-5414-5","10.1109/IECON43393.2020.9254447","National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9254447","Microservice;Automatic Deployment;Industrial Edge Computing;Edge-Cloud Collaboration;Task Analysis","Task analysis;Computer architecture;Collaboration;Production;Databases;Shape;Merging","","2","","15","IEEE","18 Nov 2020","","","IEEE","IEEE Conferences"
"Object-Aware Identification of Microservices","M. J. Amiri","Department of Computer Science, University of California, Santa Barbara",2018 IEEE International Conference on Services Computing (SCC),"6 Sep 2018","2018","","","253","256","Microservices is an architectural style inspired by service-oriented computing that structures an application as a collection of cohesive and loosely coupled components, which implement business capabilities. One of today's problems in designing microservice architectures is to decompose a system into cohesive, loosely coupled, and fine-grained microservices. Identification of microservices is usually performed intuitively, based on the experience of the system designers, however, if the functionalities of a system are highly interconnected, it is a challenging task to decompose the system into appropriate microservices. To tackle this challenge, we present a microservice identification method that decomposes a system using clustering technique. To this end, we model a system as a set of business processes and take two aspects of structural dependency and data object dependency of functionalities into account. Furthermore, we conduct a study to evaluate the effect of process characteristics on the accuracy of identification approaches.","2474-2473","978-1-5386-7250-1","10.1109/SCC.2018.00042","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8456428","Microservice;Identification;Business Process;Clustering","Logic gates;Computer architecture;Task analysis;Object recognition;Companies;Estimation","","27","","16","IEEE","6 Sep 2018","","","IEEE","IEEE Conferences"
"Automatic Derivation of Vulnerability Models for Software Architectures","Y. R. Kirschner; M. Walter; F. Bossert; R. Heinrich; A. Koziolek","KASTEL - Institute of Information Security and Dependability, Karlsruhe Institute of Technology, Karlsruhe, Germany; KASTEL - Institute of Information Security and Dependability, Karlsruhe Institute of Technology, Karlsruhe, Germany; KASTEL - Institute of Information Security and Dependability, Karlsruhe Institute of Technology, Karlsruhe, Germany; KASTEL - Institute of Information Security and Dependability, Karlsruhe Institute of Technology, Karlsruhe, Germany; KASTEL - Institute of Information Security and Dependability, Karlsruhe Institute of Technology, Karlsruhe, Germany",2023 IEEE 20th International Conference on Software Architecture Companion (ICSA-C),"24 Apr 2023","2023","","","276","283","Software architectures consist of more and more connections to different components or elements. With the increased connection and exchange between different elements also the attack surface increases, since each element might contain vulnerabilities. The vulnerabilities may be harmless on their own, but attackers could develop attack paths from the combination of different vulnerabilities. For a model-based attack propagation analysis, it is useful to have an annotated components model with vulnerabilities. However, depending on the size of the system, the manual annotation of these models is very time-consuming and error-prone. In this context, we present in this paper an approach that automatically annotates vulnerability information to the components of an architectural model. The goal here is to extract security information of source artifacts and transform them into an existing architecture-based security model to enable model-based security risk assessment. We evaluate our approach using three open-source case studies to demonstrate feasibility and accuracy. The results indicate high recall reading vulnerabilities.","2768-4288","978-1-6654-6459-8","10.1109/ICSA-C57050.2023.00065","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10092544","Component-based;Context-Aware QoS Model;Modeling and prediction;Software architecture;Security","Analytical models;Codes;Software architecture;Soft sensors;Transforms;Quality of service;Predictive models","","3","","34","IEEE","24 Apr 2023","","","IEEE","IEEE Conferences"
"Towards the architecture of a decision support ecosystem for system component selection","J. Axelsson; U. Franke; J. Carlson; S. Sentilles; A. Cicchetti","Swedish Institute of Computer Science (RISE SICS), Kista, Sweden; Swedish Institute of Computer Science (RISE SICS), Kista, Sweden; Mälardalen University, Västerås, Sweden; Mälardalen University, Västerås, Sweden; Mälardalen University, Västerås, Sweden",2017 Annual IEEE International Systems Conference (SysCon),"29 May 2017","2017","","","1","7","When developing complex software-intensive systems, it is nowadays common practice to base the solution partly on existing software components. Selecting which components to use becomes a critical decision in development, but it is currently not well supported through methods and tools. This paper discusses how a decision support system for this problem could benefit from a software ecosystem approach, where participants share knowledge across organizations both through reuse of analysis models, and through partially disclosed past decision cases. We show how the ecosystem architecture becomes fundamental to deal with efficient knowledge sharing, while respecting constraints on integrity of intellectual property. A concrete architecture proposal is outlined, which is a web-based distributed system-of-systems. Experiences of a proof-of-concept implementation are also described.","2472-9647","978-1-5090-4623-2","10.1109/SYSCON.2017.7934757","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7934757","Software ecosystems;software architecture;decision support systems;software components;system-of-systems","Ecosystems;Software;Computer architecture;Organizations;Tools;Standards organizations;Biological system modeling","","4","","29","IEEE","29 May 2017","","","IEEE","IEEE Conferences"
"A Framework for Catering Software Complexity Issues Using Architectural Patterns","A. Muaz; M. E. Rana; V. A. Hameed","Asia Pacific University of Technology and Innovation Technology Park Malaysia, Bukit Jalil Kuala Lumpur, Malaysia; Asia Pacific University of Technology and Innovation Technology Park Malaysia, Bukit Jalil Kuala Lumpur, Malaysia; Asia Pacific University of Technology and Innovation Technology Park Malaysia, Bukit Jalil Kuala Lumpur, Malaysia",2021 Third International Sustainability and Resilience Conference: Climate Change,"13 Jan 2022","2021","","","554","561","Software systems need to be maintained and updated regularly to meet new requirements and to adapt to improvements in technology. However, every time an update is made, more codes are added that result in the increasing complexity of the software. High complexity in software makes it challenging for developers to update and maintain. To improve the complexity issues in software systems, architectural patterns play an important role. With the in-built concept of modularity in architectural patterns, they have a general tendency to reduce the complexity of software systems. This also improves other quality factors of the software, such as maintainability and testability. This research is conducted to study the impact of commonly used architectural patterns on different types of applications by applying the patterns on both desktop and web-based applications. As per the findings of the literature review, the survey results, and the empirical evaluation, it proves that complexity issues in software can be improved using architectural patterns. The findings of this research is used to propose a framework for improving complexity issues in software using architectural patterns. This framework will help stakeholders to reduce complexity by choosing suitable architectural patterns.","","978-1-6654-1632-0","10.1109/IEEECONF53624.2021.9668115","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9668115","Software Complexity;Model View Controller (MVC);3-tier Architecture;Microservice Architecture;Software Architecture;Software Metrics","Industries;Codes;Software architecture;Bibliographies;Computer architecture;Software systems;Complexity theory;Climate change","","","","28","IEEE","13 Jan 2022","","","IEEE","IEEE Conferences"
"Research on building an innovative electric power marketing business application system based on cloud computing and microservices architecture technologies","Hong Lin; Jiakui Zhao; Yi Jiao; Jing Cao; Hong Ouyang; Hongwang Fang; Bao Yuan","State Grid Information & Telecommunication Group Co., Ltd., Beijing, China; State Grid Information & Telecommunication Group Co., Ltd., Beijing, China; Maintenance Branch, State Grid Liaoning Electric Power Supply Co., Ltd., Shenyang, China; Marketing Department, State Grid Hunan Electric Power Company, Changsha, China; State Grid Information & Telecommunication Group Co., Ltd., Beijing, China; State Grid Information & Telecommunication Group Co., Ltd., Beijing, China; State Grid Information & Telecommunication Group Co., Ltd., Beijing, China",2017 IEEE 2nd International Conference on Cloud Computing and Big Data Analysis (ICCCBDA),"19 Jun 2017","2017","","","246","253","The paper proposes the method of building the electric power marketing business application system based on the cloud computing and microservices architecture technologies to solve the issues of the current system with the concentrated infrastructure and the monolithic architecture which are difficult to support the business processing in very large scale and the evolution of the electric power marketing business. The paper first introduces the current electric power marketing business application system and highlights its main drawbacks. Then it proposes the method to build the innovative electric power marketing business application system with the main technical characteristics as follows: the IaaS part of the application system has the distributed infrastructures with the IT resource elastic management and powerful horizontal scalability brought by the cloud computing technology; its PaaS part is the service platform with the components of the data processing, information integration, application building, and cloud service center to provide the several cloud services, such as one-click deployment, flexible scaling, fault self-healing, gray distribution, full-link monitoring and other cloud service capabilities; and its SaaS part has the microservices architecture with the features of servitization, componentization, decentralization, independent deployment etc. Finally, the suggestions are given to design the microservices for the electric power marketing business application.","","978-1-5090-4499-3","10.1109/ICCCBDA.2017.7951919","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7951919","electric power marketing;cloud computing;microservices architecture;SaaS;PaaS;IaaS;horizontal scaling;distributed service bus","Computer architecture;Monitoring;Servers;Business;Reliability","","2","","19","IEEE","19 Jun 2017","","","IEEE","IEEE Conferences"
"Evaluating Cloud Microservices with DIRECTOR","M. França; C. Werner","Systems Engineering and Computer Science Program, Federal University of Rio de Janeiro - UFRJ, Rio de Janeiro, Brazil; Systems Engineering and Computer Science Program, Federal University of Rio de Janeiro - UFRJ, Rio de Janeiro, Brazil",2019 IEEE International Conference on Service-Oriented System Engineering (SOSE),"6 May 2019","2019","","","47","4709","Software ecosystems are now emerging in the cloud, allowing actors to contribute, but also commercialize their own solutions, by reusing software assets provided through the platforms - popularly in the shape of microservices. With so many alternatives, an open challenge for software architects is to find the most adequate asset given a set of requirements and priorities. In this context, we propose DIRECTOR: A cloud microservice selection framework based on technical, social and semantical perspectives, i.e., objective analysis, reputation and artificial intelligence, respectively. Results indicate that it can support software acquisition via discovery, evaluation and comparison of microservices, being able to recommend the fittest among hundreds of candidates in multiple cloud platforms.","2642-6587","978-1-7281-1442-2","10.1109/SOSE.2019.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8705787","Software Architecture;Software Acquisition;Cloud Computing;Microservice;Cognitive Computing","Cloud computing;Service-oriented architecture;Current measurement;Artificial intelligence;Organizations","","1","","39","IEEE","6 May 2019","","","IEEE","IEEE Conferences"
"Key Lessons from Microservices for Data Mesh Adoption","A. Ashraf; A. Hassan; H. Mahdi","Computer and Systems, Engineering Department, Ain Shams University, Cairo, Egypt; Egypt University of Informatics, Ain Shams University, Cairo, Egypt; Computer and Systems, Engineering Department, Ain Shams University, Cairo, Egypt","2023 International Mobile, Intelligent, and Ubiquitous Computing Conference (MIUCC)","20 Oct 2023","2023","","","1","8","Data Mesh constitutes an architectural blueprint tailored to facilitate the execution of enterprise data platforms within expansive and intricate organizations. Its design aims to propel the broad adoption of analytics beyond a single platform and solitary implementation team. This research delves into the convergence of Microservices and Data Mesh structures, pinpointing vital learnings from Microservices that can inform and ease the transition to Data Mesh architecture. Several critical components like Domain-Driven Design, data consistency, team autonomy, technology selection, and scalability are included in this investigation, each with significant implications for the successful implementation of a Data Mesh.","","979-8-3503-0623-1","10.1109/MIUCC58832.2023.10278300","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10278300","Decentralized Domain Driven Design;Software Engineering;Data Mesh;Microservices;Big Data","Navigation;Scalability;Microservice architectures;Organizations;Computer architecture;Transforms;Propulsion","","2","","27","IEEE","20 Oct 2023","","","IEEE","IEEE Conferences"
"Microservices for Continuous Deployment, Monitoring and Validation in Cyber-Physical Systems: an Industrial Case Study for Elevators Systems","A. Gartziandia; J. Ayerdi; A. Arrieta; S. Ali; T. Yue; A. Agirre; G. Sagardui; M. Arratibel",Ikerlan; Mondragon University; Mondragon University; Simula Research Laboratory; Simula Research Laboratory; Ikerlan; Mondragon University; Orona,2021 IEEE 18th International Conference on Software Architecture Companion (ICSA-C),"10 May 2021","2021","","","46","53","Cyber-Physical Systems (CPSs) are systems that integrate digital cyber computations with physical processes. The software embedded in CPSs has a long life-cycle, requiring constant evolution to support new requirements, bug fixes, and deal with hardware obsolescence. To date, the development of software for CPSs is fragmented, which makes it extremely expensive. This could be substantially enhanced by tightly connecting the development and operation phases, as is done in other software engineering domains (e.g., web engineering through DevOps). Nevertheless, there are still complex issues that make it difficult to use DevOps techniques in the CPS domain, such as those related to hardware-software co-design. To pave the way towards DevOps in the CPS domain, in this paper we instantiate part of the reference architecture presented in the H2020 Adeptness project, which is based on microservices that allow for the continuous deployment, monitoring and validation of CPSs. To this end, we elaborate a systematic methodology that considers as input both domain expertise and a previously defined taxonomy for DevOps in the CPS domain. We obtain a generic microservice template that can be used in any kind of CPS. In addition, we instantiate this architecture in the context of an industrial case study from the elevation domain.","","978-1-6654-3910-7","10.1109/ICSA-C52384.2021.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9425852","Microservices;DevOps;Cyber-Physical Systems","Systematics;Software architecture;Conferences;Taxonomy;Computer architecture;Cyber-physical systems;Software","","3","","23","IEEE","10 May 2021","","","IEEE","IEEE Conferences"
"On the need to merge architectural and infrastructural considerations","V. Andrikopoulos; E. Di Nitto","University of Groningen, Groningen, The Netherlands; Politecnico di Milano, Milano, Italy",2024 IEEE/ACM International Workshop New Trends in Software Architecture (SATrends),"10 Sep 2024","2024","","","1","4","This work takes the position that attempting to keep a separation between the logical and deployment view of modern, cloud-native software systems only leads to a new type of technical debt that manifests during the operational side of the lifecycle. This is an issue that is fueled by the treatment of software qualities without considering where the systems under consideration are supposed to be deployed, and how long it takes until positive or negative treatments on these qualities manifest themselves. Sustainability is a particularly interesting case of a quality that requires logical and deployments views to be taken into account in a unified way.","","979-8-4007-0560-1","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10669871","software architecture;technical debt;cloud computing;sustainability","Sensitivity;Software architecture;Conferences;Merging;Software quality;Software systems;Market research","","","","8","CCBY","10 Sep 2024","","","IEEE","IEEE Conferences"
"An Exploratory Case Study: Using Petri Nets for Modelling Microservice-based Systems","G. K. Soylu; O. Demirörs","Department of Computer Engineering, Izmir Institute of Technology, Izmir, Turkey; Department of Computer Engineering, Izmir Institute of Technology, Izmir, Turkey",2023 49th Euromicro Conference on Software Engineering and Advanced Applications (SEAA),"1 Jan 2024","2023","","","254","261","The rapid evolution of cloud technology has led to the development of highly responsive and flexible applications. Microservice-based Architecture (MSbA) is a popular approach for creating cloud-compatible applications. However, MSbA presents challenges in system verification and analysis. This paper explores using Petri nets for modelling microservice-based systems. The proposed method utilises abstraction and composition techniques to model complex systems using 1-safe Petri nets. A case study on Banking as a Service (BaaS) demonstrates the suitability of Petri nets for modelling, analysis and verification of microservice-based systems.","2376-9521","979-8-3503-4235-2","10.1109/SEAA60479.2023.00047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10371419","Microservice;modelling;analysis;verification;Petri nets","Analytical models;System verification;Petri nets;Microservice architectures;Computer architecture;Banking;Complex systems","","1","","19","IEEE","1 Jan 2024","","","IEEE","IEEE Conferences"
"A Digital Enterprise Architecture based on Cloud-Based Services and Digital Signatures","M. Marian; A. Cusman; F. Stîngă; D. Popescu","Dept. of Computers and IT, University of Craiova, Craiova, Romania; CERT DIGITAL, Centrul de Calcul S.A., Tg. Jiu, Romania; Dept. of Automation and Electronics, University of Craiova, Craiova, Romania; Dept. of Automation and Electronics, University of Craiova, Craiova, Romania",2024 25th International Carpathian Control Conference (ICCC),"1 Jul 2024","2024","","","1","6","Digital Enterprise (DE) is defined as an organization that uses digital technologies in its operations to gain a competitive advantage. Starting from reshaping infrastructure and operations using information technology, businesses have evolved into a digital transformation, including, and adopting digital solutions throughout the organization. The paper presents two particular DE component services: Document Management (DMS) and Electronic Archiving (EA). These services are offered by reusing some functionalities provided by the microservices that compose the middleware developed within the project. Also, the services offered by CBS (Cloud-Based Signature) and OCC (Online Content Certification) products, resulting from the performance of previous project activities, are also integrated within the DE. The design and implementation of the DMS, respectively EA components started from the SDK (Software Development Kit) developed in the DE's middleware. It contains a set of auxiliary subcomponents that define the data structure (models’ area) and common behavior (services area).","","979-8-3503-5070-8","10.1109/ICCC62069.2024.10569192","European Regional Development Fund(grant numbers:2021-2023); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10569192","digitalization;cloud computing;electronic signature","Digital transformation;Microservice architectures;Europe;Organizations;Market research;Middleware;Information technology","","","","7","IEEE","1 Jul 2024","","","IEEE","IEEE Conferences"
"We Need to Talk About Microservices: an Analysis from the Discussions on StackOverflow","A. Bandeira; C. A. Medeiros; M. Paixao; P. H. Maia","State University of Ceara, Fortaleza, Brazil; State University of Ceara, Fortaleza, Brazil; State University of Ceara, Fortaleza, Brazil; State University of Ceara, Fortaleza, Brazil",2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR),"29 Aug 2019","2019","","","255","259","Microservices are a new and rapidly growing architectural model aimed at developing highly scalable software solutions based on independently deployable and evolvable components. Due to its novelty, microservice-related discussions are increasing in Q&A websites, such as StackOverflow (SO). In order to understand what is being discussed by the microservice community, this work has applied mining techniques and topic modelling to a manually-curated dataset of 1,043 microservice-related posts from StackOverflow. As a result, we found that 13.68% of microservice technical posts on SO discuss a single technology: Netflix Eureka. Moreover, buzzwords in the microservice ecosystem, e.g., blue/green deployment, were not identified as relevant subjects of discussion on SO. Finally, we show how a high discussion rate on SO may not reflect the popularity of a certain subject within the microservice community.","2574-3864","978-1-7281-3412-3","10.1109/MSR.2019.00051","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8816756","Microservices, StackOverflow, Topic Modelling","Manuals;Biological system modeling;Tools;Authentication;Computer architecture;Cloud computing;Fault tolerance","","27","","35","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"Design and Implementation of Multi-tenant Vehicle Monitoring Architecture Based on Microservices and Spark Streaming","C. Chen; J. Cai; N. Ren; X. Cheng",China Automotive Technology and Research Center Co. Ltd; China Automotive Technology and Research Center Co. Ltd; China Automotive Technology and Research Center Co. Ltd; China Automotive Technology and Research Center Co. Ltd,"2020 International Conference on Communications, Information System and Computer Engineering (CISCE)","20 Nov 2020","2020","","","169","172","Aiming at reducing the costs for customers and making full use of software and hardware resources, this article propose a vehicle monitoring cloud architecture for multi-tenant in this paper which could provide customers with rent-and-use cloud services. This architecture is based on the springcloud microservice framework, any microservice module could be packaged into docker images and managed by kubernetes. When the system concurrency increases or decreases, the container can be dynamically expanded and recycled to rationally allocate hardware resources to solve the bottleneck of service access load. This architecture also recommends kafka message queues to decouple front-end data collection components and back-end data processing components that could achieve greater throughput. The MapReduce programming model is used to group chaotic data sent by all tenants’ vehicle terminal by tenant id, and statistical analysis is performed on the data of each tenant.","","978-1-7281-9761-6","10.1109/CISCE50729.2020.00040","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9258792","spark streaming;multi-tenant;microservice;docker","Sparks;Information systems;Handheld computers;Conferences","","3","","8","IEEE","20 Nov 2020","","","IEEE","IEEE Conferences"
"Toward Enabling Self-Protection in the Service Mesh of the Microservice Architecture","R. Alboqmi; S. Jahan; R. F. Gamble","Tandy School of Computer Science, University of Tulsa, Tulsa, OK, USA; Tandy School of Computer Science, University of Tulsa, Tulsa, OK, USA; Tandy School of Computer Science, University of Tulsa, Tulsa, OK, USA",2022 IEEE International Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C),"4 Nov 2022","2022","","","133","138","The service mesh is a dedicated infrastructure layer in a microservice architecture. It manages service-to-service communication within an application between decoupled or loosely coupled microservices (called services) without modifying their implementations. The service mesh includes APIs for security, traffic and policy management, and observability features. These features are enabled using a pre-defined configuration, which can be changed at runtime with human intervention. However, it has no autonomy to self-manage changes to the microservice application’s operational environment. A better configuration is one that can be customized according to environmental conditions during execution to protect the application from potential threats. This customization requires enabling self-protection mechanisms within the service mesh that evaluate the risk of environmental condition changes and enable appropriate configurations to defend the application from impending threats. In this paper, we design an assessment component into a service mesh that includes a security assurance case to define the threat model and dynamically assess the application given environment changes. We experiment with a demo application, Bookinfo, using an open-source service mesh platform, Istio, to enable self-protection. We consider certain parameters extracted from the service request as environmental conditions. We evaluate those parameters against the threat model and determine the risk of violating a security requirement for controlled and authorized information flow.","","978-1-6654-5142-0","10.1109/ACSOSC56246.2022.00047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9934881","microservices;service mesh;self-protection;assessment;threat model","Runtime;Computational modeling;Microservice architectures;Computer architecture;Security;Observability;Distributed computing","","","","32","IEEE","4 Nov 2022","","","IEEE","IEEE Conferences"
"MTAP - A Distributed Framework for NLP Pipelines","B. C. Knoll; R. McEwan; R. Finzel; G. Silverman; R. Zhang; S. V. S. Pakhomov; G. B. Melton","Institute for Health Informatics University of Minnesota, Twin Cities, Minneapolis, MN, USA; Health Sciences Technology University of Minnesota, Twin Cities, Minneapolis, MN, USA; College of Pharmacy University of Minnesota, Twin Cities, Minneapolis, MN, USA; Department of Surgery, University of Minnesota, Twin Cities, Minneapolis, MN, USA; College of Pharmacy University of Minnesota, Twin Cities, Minneapolis, MN, USA; College of Pharmacy University of Minnesota, Twin Cities, Minneapolis, MN, USA; Department of Surgery & Institute for Health Informatics, University of Minnesota, Twin Cities, Minneapolis, MN, USA",2022 IEEE 10th International Conference on Healthcare Informatics (ICHI),"8 Sep 2022","2022","","","537","538","To facilitate the research, development, and testing process for clinical Natural Language Processing (NLP) platforms and associated solutions we have created the Microservice Text Analysis Platform (MTAP). MTAP provides a programming language agnostic, easy-to-use platform for users to create independently deployable, testable, and scalable pipeline components.","2575-2634","978-1-6654-6845-9","10.1109/ICHI54592.2022.00102","Agency for Healthcare Research and Quality(grant numbers:R01HS024532); National Institutes of Health(grant numbers:R01GM120079,R01GM02282,R01AT009457,U01TR002062,UL1TR002494,1R01AT009457); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9874670","Natural language processing;libraries;software;tools;microservices","Text analysis;Pipelines;Microservice architectures;Medical services;Production;Maintenance engineering;Market research","","","","5","IEEE","8 Sep 2022","","","IEEE","IEEE Conferences"
"Reactive Microservices in Commodity Resources","D. Goel; A. Nayak","Merchant Technology Walmart Labs, Sunnyvale, CA, USA; Merchant Technology Walmart Labs, Sunnyvale, CA, USA",2019 IEEE International Conference on Big Data (Big Data),"24 Feb 2020","2019","","","3658","3665","A microservice is a cohesive, independent process that communicates via messages. Reactive microservices consist of isolated components in an event stream that can react independently or in concert with other microservices to arrive at the final states of the event. n this paper, we present a microservice architecture which is based on event streams and has a decentralized framework for microservice coordination. The architecture allows microservices to enrich content in an event stream without any time or mobility constraints. Final states are construed as acceptable and incrementally stackable for event updates that occur at different time slots. The event coordinator platform establishes the coordination within a microservice using the event registry. We present how we horizontally scaled the platform with multiple parallelism strategies and show the platform performance results.","","978-1-7281-0858-2","10.1109/BigData47090.2019.9006584","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9006584","reactive microservices;coordination;microservice architecture;event stream;event registry;blob store;Kafka;cloud computing;parallelism;scaling applications","Computer architecture;Business;Electronic commerce;Parallel processing;Scalability;Feeds;Resilience","","1","","22","IEEE","24 Feb 2020","","","IEEE","IEEE Conferences"
"Architecture Design of Intelligent Campus One-stop Service Platform Based on Middle Platform and Micro Service","M. Zhu","Modern Education Technology Center, Jiangxi Open University, School of Information Engineering, Nanchang University, Nanchang, China",2021 IEEE 15th International Conference on Electronic Measurement & Instruments (ICEMI),"21 Jan 2022","2021","","","59","63","With the extensive application of big data, cloud computing, Internet of Things, artificial intelligence, block chain and other complex scenarios, frequent switching and login between multiple systems, inconsistent data of various business systems, multiple filling and submission of the same data form and high concurrent applications emerge in an endless stream. To solve the above problems, according to the characteristics of middle platform and micro service architecture and one-stop service platform needs of wisdom campus, it was put forward that wisdom campus one-stop service platform architecture designing based on the concept of middle platform and micro service architecture. Meanwhile, taking Jiangxi Open University as an example, we have finished design and construction and implement. Result shows that the one-stop service platform is highly cohesive, loosely coupled, rapid response, easy to expand and manageable for wisdom teaching and management and service.","","978-1-6654-4491-0","10.1109/ICEMI52946.2021.9679645","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9679645","middle platform;micro service;smart campus;one-stop services","Cloud computing;Instruments;Education;Computer architecture;Switches;Big Data;Filling","","1","","16","IEEE","21 Jan 2022","","","IEEE","IEEE Conferences"
"MicroMCM: Fine-grained Root Cause Localization for Microservice Systems Based on Multiple Causal Inference Methods","H. Gao; J. Zhao; W. Li; Z. Li","Inner Monglia University, Hohhot, China; Inner Monglia University, Hohhot, China; Inner Monglia University, Hohhot, China; Inner Monglia University, Hohhot, China",2024 27th International Conference on Computer Supported Cooperative Work in Design (CSCWD),"10 Jul 2024","2024","","","371","376","Microservice architecture has become a prevalent approach for developing large-scale applications due to its scalability, flexibility, and agility. However, the large-scale deployment and frequent updates of microservices pose challenges for operational personnel in diagnosing performance issues. To address this, we propose MicroMCM, a framework that enables fine-grained, automated, and real-time root cause localization. MicroMCM dynamically selects different causal inference (CI) methods based on diverse anomaly patterns to construct causal graphs and utilizes root cause inference techniques to identity the root cause metrics. We conduct experiments for both coarse-grained and fine-grained root cause localization to evaluate the performance of MicroMCM. The results demonstrate that MicroMCM outperforms baseline methods, exhibiting superior localization capabilities.","2768-1904","979-8-3503-4918-4","10.1109/CSCWD61410.2024.10580445","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10580445","root cause analysis;microservice systems;causal inference;fine-grained","Location awareness;Measurement;Fault diagnosis;Federated learning;Scalability;Microservice architectures;Computer architecture","","","","14","IEEE","10 Jul 2024","","","IEEE","IEEE Conferences"
"A microservice-based platform for IoT application development","G. Porruvecchio; A. Romanino; C. Casari; R. Sanna","CRS4 - Center for Advanced Studies, Research and Development in Sardinia, Italy; CRS4 - Center for Advanced Studies, Research and Development in Sardinia, Italy; CRS4 - Center for Advanced Studies, Research and Development in Sardinia, Italy; CRS4 - Center for Advanced Studies, Research and Development in Sardinia, Italy","2021 IEEE 12th Annual Ubiquitous Computing, Electronics & Mobile Communication Conference (UEMCON)","10 Jan 2022","2021","","","0332","0336","Modern Internet of Things ecosystems and applications must be able to cope with an increasing demand for flexibility, efficiency, scalability, security. This paper presents CMC-IoT (CRS4 Microservice Core - IoT), an Internet of Things platform built upon a microservice-based architecture, providing tools for developing scalable and robust IoT applications. The platform aims to act as a generic middleware to connect a wide variety of devices, using a connector-driven and vendor-agnostic approach, allowing the development of applications in many domains, as shown in the provided examples. The focus is on the most prominent architectural features of CMC-IoT, that are compared with a reference architecture available in literature.","","978-1-6654-0690-1","10.1109/UEMCON53757.2021.9666727","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9666727","Internet of Things;Microservices;IoT middleware","Scalability;Ecosystems;Microservice architectures;Solids;Mobile communication;Internet of Things;Security","","2","","33","IEEE","10 Jan 2022","","","IEEE","IEEE Conferences"
"Nonintrusive Measurement on Temporal and Spatial Features of Microservice Inferences","X. Li; T. Zeng; B. Liu; H. Hu; Z. Xu; S. Tan; Y. Tan; C. Xu",National University of Defense Technology; Nanchang University; Nanchang University; Nanchang University; Nanchang University; National University of Defense Technology; National University of Defense Technology; Peking University,"2022 IEEE Smartworld, Ubiquitous Intelligence & Computing, Scalable Computing & Communications, Digital Twin, Privacy Computing, Metaverse, Autonomous & Trusted Vehicles (SmartWorld/UIC/ScalCom/DigitalTwin/PriComp/Meta)","27 Jul 2023","2022","","","16","24","The high flexibility of microservice architecture provides notable divergence among the internal software stack within the same application. Microservice-based applications are commonly deployed in data centers by users yet they have no clue of what is exactly provided by the service provider. In this case, there could exist those providers could be able to replace the internal software without noticing, making a contract-level fault and offloading risks to users. To better profile the microservice, we propose a framework that provides nonintrusive measurements on microservice inference, or MEME, to detect fraudulent behaviors of cloud service providers on microservice-based applications. We design MEME using performance portrait and fast Fourier transform (FFT). We model the microservice-based application with a set of cohorts and use FFT to obtain the signal formed by the main frequency components of average response time. Our model represents the performance portrait of the microservice-based application. The performance portrait is similar to a fingerprint that carries internal software information. In our experiments, we take a two-tier microservice-based application containing databases as an example. Empirical results show that MEME can provide a distinguishable profile of the performance portrait of data services in a temporal and spatial manner, which allows us to identify the software type.","","979-8-3503-4655-8","10.1109/SmartWorld-UIC-ATC-ScalCom-DigitalTwin-PriComp-Metaverse56740.2022.00030","National Natural Science Foundation of China; Research and Development; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10189582","Microservice;Performance Analysis and Evaluation;Fast Fourier Transform","Time-frequency analysis;Data centers;Fast Fourier transforms;Databases;Microservice architectures;Full stack;Fingerprint recognition","","","","21","IEEE","27 Jul 2023","","","IEEE","IEEE Conferences"
"A Novel Architectural Design for Solving Lost-Link Problems in UAV Collaboration","G. Airlangga; A. Liu","Information System, Atma Jaya Catholic University of Indonesia, Jakarta, Indonesia; Electrical Engineering, National Chung Cheng University, Chiayi, Taiwan",2021 28th Asia-Pacific Software Engineering Conference (APSEC),"17 Feb 2022","2021","","","380","389","Research in unmanned aerial vehicles (UAVs) has gained attention from various communities because of their potential usage in improving safety and efficiency in different applications. An UAV has shown promising results in dangerous conditions such as forest fires, search and rescue, medical deliveries, wildlife monitoring and geophysical scanning. Some external conditions like slow or no internet connection areas such as rural, farm, forest, ocean, etc. may affect the performance of the UAVs. These conditions can be considered as lost-link problems. Several approaches have been conducted to resolve such issues by implementing robust on-board architecture, machine learning approaches and developing knowledge based reasoning systems. However, much of software architecture research has concentrated on UAV implementation in normal network condition. Thus, we propose a model for considering lost-link problems in software architecture. In this paper, we describe two interconnected architectures for client and server. The UAV as a client is controlled by microkernel based architecture and the server is developed using microservice architecture. Both of them are connected using a synchronizer component to collect, filter, analyze, predict, and mitigate an UAV when a lost-link problem occurs. Therefore, the UAV can still find an appropriate action to complete a mission as far as the sensor and actuator are not in a critical condition. Experiment results show that our approach yields high percentage of mission accomplishment, fault tolerance and performance in a lost-link situation.","2640-0715","978-1-6654-3784-4","10.1109/APSEC53868.2021.00045","Ministry of Science and Technology, Taiwan(grant numbers:109-2221-E-194-022-MY3); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9712099","UAV Microkernel Microservice Software Architecture Design Patterns","Software architecture;Wildlife;Microservice architectures;Computer architecture;Forestry;Autonomous aerial vehicles;Software","","2","","32","IEEE","17 Feb 2022","","","IEEE","IEEE Conferences"
"Automatic Dependency Tracking in Microservice-based Systems Using Static Analysis in Helm Charts","A. Fekete; B. Kovács; Z. Porkoláb","Faculty of Informatics, Eötvös Loránd University, Budapest, Hungary; Ericsson Hungary Ltd., Budapest, Hungary; Faculty of Informatics, Eötvös Loránd University, Budapest, Hungary","2023 International Conference on Software, Telecommunications and Computer Networks (SoftCOM)","10 Oct 2023","2023","","","1","7","In this paper, we aim to show the power of static analysis when it comes to understanding the relationships between microservice components of a software. We have developed an algorithm that models the conventional rules in Helm that describe the dependencies between microservices to discover the architectural design of microservice-based systems. We implemented the algorithm as a new plugin in CodeCompass (open source code comprehension tool: https://github.com/Ericsson/CodeCompass) that parses YAML files, automatically identifies microservices and dependencies between them, and graphically visualizes the microservice architecture of the software. We present the challenges and strength of the static analysis approach and we demonstrate how the solution helps software architects via an example.","1847-358X","979-8-3503-0107-6","10.23919/SoftCOM58365.2023.10271686","Innovation Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10271686","microservice;Kubernetes;static analysis;dependency tracking;visualization","Visualization;Source coding;Software algorithms;Microservice architectures;Static analysis;Computer architecture;Software","","","","24","","10 Oct 2023","","","IEEE","IEEE Conferences"
"Extraction of Microservices from Monolithic Software Architectures","G. Mazlami; J. Cito; P. Leitner","Department of Informatics, University of Zurich; Department of Informatics, University of Zurich; Department of Informatics, University of Zurich",2017 IEEE International Conference on Web Services (ICWS),"11 Sep 2017","2017","","","524","531","Driven by developments such as mobile computing, cloud computing infrastructure, DevOps and elastic computing, the microservice architectural style has emerged as a new alternative to the monolithic style for designing large software systems. Monolithic legacy applications in industry undergo a migration to microservice-oriented architectures. A key challenge in this context is the extraction of microservices from existing monolithic code bases. While informal migration patterns and techniques exist, there is a lack of formal models and automated support tools in that area. This paper tackles that challenge by presenting a formal microservice extraction model to allow algorithmic recommendation of microservice candidates in a refactoring and migration scenario. The formal model is implemented in a web-based prototype. A performance evaluation demonstrates that the presented approach provides adequate performance. The recommendation quality is evaluated quantitatively by custom microservice-specific metrics. The results show that the produced microservice candidates lower the average development team size down to half of the original size or lower. Furthermore, the size of recommended microservice conforms with microservice sizing reported by empirical surveys and the domain-specific redundancy among different microservices is kept at a low rate.","","978-1-5386-0752-7","10.1109/ICWS.2017.61","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029803","microservices;extraction;coupling;graph-based clustering","Couplings;Clustering algorithms;Computer architecture;Cloud computing;Industries;Tools","","147","3","21","IEEE","11 Sep 2017","","","IEEE","IEEE Conferences"
"UCSAM: A UAV Ground Control System Architecture Supporting Cooperative Control Among Multi-form Stations based on MDA and Container Cloud Platform","F. Jiang; Y. Ding; H. Zhang; Z. Li; R. Rao","China National Aviation, Radio Electron Institute, Shanghai, China; China National Aviation, Radio Electron Institute, Shanghai, China; China National Aviation, Radio Electron Institute, Shanghai, China; China National Aviation, Radio Electron Institute, Shanghai, China; School of Software, Shanghai Jiao Tong University, Shanghai, China",2022 IEEE International Conference on Unmanned Systems (ICUS),"29 Dec 2022","2022","","","411","417","An open, unified and loosely coupled service oriented software architecture of UAV Ground Control System (UGCS) based on container cloud platform is proposed in this paper, which is called “UCSAM”, and can support the collaborative control of UAV among multi-form ground control stations, such as portable, mobile and fixed stations. UCSAM establishes a kind of software computing environment based on the component framework conforming to the OSGi specifications on the client side, the container cloud platform on the server side, and the middleware conforming to the DDS and other transmission protocols between the two, so that the application software components on the client side and the FDSCs(Functional Domain Service Components) on the server side only rely on standardized APIs, so as to realize the architecture features of resource allocation on demand and cross platform portability. On the other hand, UCSAM defines PSM based on Open Application Model (OAM), including message model, service model and application model, which separates FDSC development from the operation and maintenance complexity of infrastructure software. Through a set of tool chains, it realizes the conversion from PIM based on XMI format to PSM based on OAM, code generation based on template and PSM, CI/CD based on GitOps, and dynamic deployment based on AppStore, so as to achieve the architectural goal of dynamic generation of capabilities, and the agile software development mode based on MDA and DevOps. Lastly, several study cases including UAV cooperative application, development of functional domain service components, and application deployment and operation are briefly discussed to verify this architecture's correctness and feasibility.","2771-7372","978-1-6654-8456-5","10.1109/ICUS55513.2022.9986525","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9986525","UAV;OAM;SOA;MDA;Container;Cloud","Protocols;Software architecture;Collaboration;Systems architecture;Computer architecture;Containers;Control systems","","","","12","IEEE","29 Dec 2022","","","IEEE","IEEE Conferences"
"Is it Worth Migrating a Monolith to Microservices? An Experience Report on Performance, Availability and Energy Usage","V. Berry; A. Castelltort; B. Lange; J. Teriihoania; C. Tibermacine; C. Trubiani","Polytech Engineering School, LIRMM, Université Montpellier, CNRS, Montpellier, France; Polytech Engineering School, LIRMM, Université Montpellier, CNRS, Montpellier, France; ZENITH Team INRIA & LIRMM, Montpellier, France; Polytech Engineering School, Université Montpellier, Montpellier, France; Polytech Engineering School, LIRMM, Université Montpellier, CNRS, Montpellier, France; Computer Science Department, Gran Sasso Science Institute, L’Aquila, Italy",2024 IEEE International Conference on Web Services (ICWS),"15 Oct 2024","2024","","","944","954","The microservice architecture (MSA) emerged as an evolution of existing architectural styles with the promise of improving software quality by decomposing an app into modules that can be maintained, deployed, and scaled independently. However, the transition from a monolithic to a microservice architecture is fraught with difficulties, especially when it comes to assessing qualitative aspects, as controversial results can arise. In this paper, we present an experience report on the migration of a monolithic web application and use performance, availability and energy efficiency as quality attributes to shed light on such an architectural transition. Horizontal scaling, i.e., distributing the workload across several service instances, is applied and we study its impact.Our main findings are: i) when no app component is replicated, MSA outperforms the monolithic architecture; ii) the monolithic architecture shows performance and availability improvement when replicating the entire app; iii) the replicated MSA version reaches a ceiling when not replicating its routing part (i.e., the API gateway), showing worse response times compared to the replicated monolith; iv) when replicating the API gateway, the MSA version reaches optimal performance with fewer replicates than the monolith; v) when not replicating services, MSA consumes more CPU resources than the monolithic architecture; vi) when scaling up, the MSA version is more efficient than the replicated monolith in terms of memory usage, and it can better exploit CPU resources; vii) when not replicating services, MSA consumes more energy than the monolithic architecture, whereas when scaling up, the MSA version is more efficient than the replicated monolith; MSA version reaches a good balance between CPU and memory usage.","2836-3868","979-8-3503-6855-0","10.1109/ICWS62655.2024.00112","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10707516","Microservices;architecture migration;horizontal scaling;load tests;performance;availability;energy usage","Energy consumption;Web services;Memory management;Microservice architectures;Software quality;Logic gates;Routing;Energy efficiency;Time factors;Testing","","","","42","IEEE","15 Oct 2024","","","IEEE","IEEE Conferences"
"Magnet: Method-Based Approach Using Graph Neural Network for Microservices Identification","I. Trabelsi; N. Moha; Y. -G. Guéhéneuc; L. Geffard","Software and IT Engineering Department, École de technologie supérieure ÉTS, Montréal, Canada; Software and IT Engineering Department, École de technologie supérieure ÉTS, Montréal, Canada; Computer Science and Software Engineering, Concordia University, Montréal, Canada; Software and IT Engineering Department, École de technologie supérieure ÉTS, Montréal, Canada",2024 IEEE 21st International Conference on Software Architecture (ICSA),"24 Jul 2024","2024","","","1","11","Monolithic software systems face significant challenges in terms of maintenance, scalability, and portability. To address these challenges, many companies are embracing the microservices architectural style as a more flexible alternative to their monoliths. Microservices structure systems into modular, independent components, enabling easier development, deployment, and maintenance. However, the migration from a monolith to microservices is challenging due to the laborious task of manually identifying and decomposing a system into microservices. Several earlier studies focused on developing approaches to facilitate the migration process. However, the reliance on domain experts to define various parameters and thresholds restricted their use. In this paper, we introduce Magnet, a fully automated microservice identification approach, based on graph neural networks (GNNs). Magnet integrates a GNN model with a fine-grained method-based graph enriched with semantic and static features of the system. It enables accurate microservices identification while simultaneously promoting microservice cohesion and reducing microservice coupling. To validate the accuracy of Magnet, we performed extensive experiments using a set of open-source systems. Quantitatively, we use a set of quality metrics to assess the resulting microservices quality. We also compare our results to established ground truths. Empirical evidence suggests that our fully-automated approach Magnet achieves precision and recall rates of 56% and 68%. Qualitatively, we assess the modularity and functional independence of the resulting microservices by examining their relationships and semantic integrity. This evaluation demonstrates that our fully automated approach yields promising results, underlining its effectiveness in creating modular and coherent microservices.","2835-7043","979-8-3503-5916-9","10.1109/ICSA59870.2024.00009","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10592666","Microservices;Identification;Migration;Graph Neural Network;Static Analysis;Semantic Analysis;Feature-Rich Dependency Graph","Accuracy;Software architecture;Scalability;Semantics;Microservice architectures;Magnetic domains;Software systems","","","","30","IEEE","24 Jul 2024","","","IEEE","IEEE Conferences"
"An Intelligent Robot Sorting System By Deep Learning On RGB-D Image","J. Zheng; L. Chen; Y. Li; Y. A. Khan; H. Lyu; X. Wu","School of Automation Science and Engineering, Faculty of Electronic and Information Engineering, Xi’an Jiao Tong University, Shaanxi, China; School of Automation Science and Engineering, Faculty of Electronic and Information Engineering, Xi’an Jiao Tong University, Shaanxi, China; School of Automation Science and Engineering, Faculty of Electronic and Information Engineering, Xi’an Jiao Tong University, Shaanxi, China; School of Automation Science and Engineering, Faculty of Electronic and Information Engineering, Xi’an Jiao Tong University, Shaanxi, China; School of Automation Science and Engineering, Faculty of Electronic and Information Engineering, Xi’an Jiao Tong University, Shaanxi, China; School of Civil Engineering and Architecture, Xi’an University of Technology, Shaanxi, China",2023 22nd International Symposium INFOTEH-JAHORINA (INFOTEH),"11 Apr 2023","2023","","","1","8","Industrial robots have seen wide adoption in the field of intelligent manufacturing, and they are applied to the intelligent sorting of items on the industrial product line. However, such techniques have some limitations, such as the object being placed at a fixed height. To solve this problem and meet the needs of flexible manufacturing, this paper develops an intelligent robot sorting system by deep learning on RGBD image (RSSDR). RSSDR consists of five modules, including central host, robot, visual kit, microservices and machine visual control software. The central host provides the image of 3D printed industrial parts collected by the visual kit, and calls the deep learning algorithm on the microservice to detect the key points on the image, and then sends the position of the grasping points to the robot through the machine vision control software to control the robot to sort the 3D printed industrial parts. In RSSDR, to visually identify a total of 3 different 3D printed industrial parts in uncontrolled conditions, YOLOv5s is used as the detection model, which achieves 97.65% accuracy and 35ms runtime. The experimental results show that RSSDR is suitable for sorting electronic component.","2767-9470","978-1-6654-7546-4","10.1109/INFOTEH57020.2023.10094093","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10094093","component;intelligent manufacturing;flexible manufacturing;intelligent robot sorting system;microservice;machine vision;YOLOv5s","Deep learning;Visualization;Solid modeling;Three-dimensional displays;Service robots;Microservice architectures;Software","","3","","14","IEEE","11 Apr 2023","","","IEEE","IEEE Conferences"
"Sharing platform of digital specimen of wood canker based on WebGIS in Xinjiang province: architecture, design and implementation","Q. Li; W. Sun; R. Ma","College of Computer and Information Engineering, Xinjiang Agricultural University, Urumchi, China; Agricultural Information Institute, Chinese Academy of Agricultural Sciences, Beijing, China; Collage of Forestry, Xinjiang Agricultural University, Urumchi, China","2022 International Conference on Computers, Information Processing and Advanced Education (CIPAE)","10 Feb 2023","2022","","","102","106","The collection, integration, analysis and sharing of digital specimens of wood canker is an important basic work for conducting relevant scientific research, education and teaching. In this study, for all kinds of users, such as scientific research, education, experts and the public, the architecture of Sharing platform of digital specimen of wood canker in Xinjiang province was designed by microservice architecture, the microservice function tree was constructed by domain-driven design method, the microservice cluster was built by using Spring Cloud technology components, and 8 kinds of microservices were developed based on WebGIS technology. The application results show that the platform is easy to use, provides data sharing and services through visualization and interactivity, and can provide decision-making data resources support for scientific research, education, monitoring, quarantine and prevention of wood canker.","","978-1-6654-6812-1","10.1109/CIPAE55637.2022.00029","National Natural Science Foundation of China (NSFC); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10036864","Wood canker;Digital specimen;WebGis;Integration Sharing;Microservice","Education;Microservice architectures;Data visualization;Computer architecture;QR codes;Vegetation;Spatial databases","","2","","6","IEEE","10 Feb 2023","","","IEEE","IEEE Conferences"
"Artificial Intelligence-Based Centralized Resource Management Application for Distributed Systems","L. S. Hettiarachchi; S. V. Jayadeva; R. A. V. Bandara; D. Palliyaguruge; U. S. S. S. Arachchillage; D. Kasthurirathna","Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka",2022 13th International Conference on Computing Communication and Networking Technologies (ICCCNT),"26 Dec 2022","2022","","","1","6","Due to the decentralized nature and emergence of new practices, tools, and platforms, microservices have become one of the most widely spread software architectures in the modern software industry. Furthermore, the advancement of software packaging tools like Docker and orchestration platforms such as Kubernetes enable developers and operation engineers to deploy and manage microservice applications more effectively and efficiently. However, establishing and managing microservice applications are still cumbersome due to the infrastructure configuration and array of disjoint tools that fail to understand the application’s dynamic behavior. As a result, developers need to configure multiple tools and platforms to automate the deployment and monitoring process to provide the optimal deployment strategy for microservices. Even though many tools are available in the industry, the fully automated product which comprises deployment, monitoring, resiliency evaluation and optimization were not developed yet. In response to this issue, we propose an artificial intelligence (AI)-based centralized resource management tool, that provides an automated low latency container management, cluster metrics gathering, resiliency evaluation and optimal deployment strategy behave in dynamic nature.","","978-1-6654-5262-5","10.1109/ICCCNT54827.2022.9984530","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9984530","Microservices;Kubernetes;Docker;Auto-scaling;Chaos engineering;Load prediction;Machine Learning;Containerization","Measurement;Industries;Software architecture;Microservice architectures;Containers;Predictive models;Software","","1","","21","IEEE","26 Dec 2022","","","IEEE","IEEE Conferences"
"Enhancing microservices architectures using data-driven service discovery and QoS guarantees","Z. Houmani; D. Balouek-Thomert; E. Caron; M. Parashar","Inria Avalon team, LIP Laboratory, UMR CNRS - ENS de Lyon - INRIA - UCB Lyon 5668, University of Lyon, France; Rutgers Discovery Informatics Institute, Rutgers University, NJ, USA; Inria Avalon team, LIP Laboratory, UMR CNRS - ENS de Lyon - INRIA - UCB Lyon 5668, University of Lyon, France; Rutgers Discovery Informatics Institute, Rutgers University, NJ, USA","2020 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing (CCGRID)","14 Jul 2020","2020","","","290","299","Microservices promise the benefits of services with an efficient granularity using dynamically allocated resources. In the current evolving architectures, data producers and consumers are created as decoupled components that support different data objects and quality of service. Actual implementations of service meshes lack support for data-driven paradigms, and focus on goal-based approaches designed to fulfill the general system goal. This diversity of available components demands the integration of users requirements and data products into the discovery mechanism. This paper proposes a data-driven service discovery framework based on profile matching using data-centric service descriptions. We have designed and evaluated a microservices architecture for providing service meshes with a standalone set of components that manages data profiles and resources allocations over multiple geographical zones. Moreover, we demonstrated an adaptation scheme to provide quality of service guarantees. Evaluation of the implementation on a real life testbed shows effectiveness of this approach with stable and fluctuating request incoming rates.","","978-1-7281-6095-5","10.1109/CCGrid49817.2020.00-64","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9139713","Microservices;data-driven;quality of service;software architecture;load shedding","Quality of service;Computer architecture;Data models;Protocols;Internet of Things;Edge computing;Adaptation models","","12","","35","IEEE","14 Jul 2020","","","IEEE","IEEE Conferences"
"Development Processes in Automotive Service-oriented Architectures","A. Vetter; P. Obergfell; H. Guissouma; D. Grimm; M. Rumez; E. Sax","Networking and Software Technologies, Mercedes-Benz AG, Böblingen, Germany; Research, Technologies, and Innovation BMW Group, Munich, Germany; Institute for Information Processing Technologies (ITIV), Karlsruhe Institute of Technology, Karlsruhe, Germany; Institute for Information Processing Technologies (ITIV), Karlsruhe Institute of Technology, Karlsruhe, Germany; Institute of Energy Efficient Mobility (IEEM), Karlsruhe University of Applied Sciences, Karlsruhe, Germany; Institute for Information Processing Technologies (ITIV), Karlsruhe Institute of Technology, Karlsruhe, Germany",2020 9th Mediterranean Conference on Embedded Computing (MECO),"7 Jul 2020","2020","","","1","7","“The car is the ultimate mobile device” [1] and with its connectivity and a large number [2] of sensors and actuators an example for a cyber-physical system. The advantages of a service-oriented architecture (SOA) are shown in comparison to the classic signal-oriented design. A hybrid architecture which contains both static signal- and dynamic service-oriented elements is introduced. With an example we show how the benefits of a SOA can be achieved, even without migrating the whole vehicle away from the current static communication schemes. The “SuperTuxKart” application integrated into the Mercedes CLA as presented by Daimler on the Mobile World Congress 2019 [3] is an additional customer value application and used as our showcase. Its development and implementation can be greatly simplified if the target vehicle has an electric/electronic architecture, which is service-oriented. We introduce a new process to develop an application within a service-oriented vehicle and use software over the air (SOTA) updates to deploy it. The process is illustrated using a fictive, service-based application.","2637-9511","978-1-7281-6949-1","10.1109/MECO49872.2020.9134175","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9134175","Service-oriented Architecture;Hybrid Architecture;Software Over The Air;Network Design","","","13","","25","IEEE","7 Jul 2020","","","IEEE","IEEE Conferences"
"Comparing Microservices and Monolithic Applications in a DevOps Context","U. Chouhan; V. Tiwari; H. Kumar","School of Computing Science and Engineering, Galgotias University, Greater Noida, India; School of Computing Science and Engineering, Galgotias University, Greater Noida, India; School of Computing Science and Engineering, Galgotias University, Greater Noida, India",2023 3rd Asian Conference on Innovation in Technology (ASIANCON),"10 Oct 2023","2023","","","1","7","This research looks at the interaction between DevOps and microservices. It explores how these two methods can be combined to create a more agile and efficient application development process. This whitepaper highlights the benefits of using DevOps and microservices over traditional monolithic approaches and examines why microservices-based delivery is preferred for large-scale applications. Additionally, this study seeks to identify best practices for implementing these strategies in organizations for optimal application growth and maintainability. This white paper examines the synergies between DevOps and microservices, providing insights into how organisations can improve their application development processes and gain an edge in today's fast-paced business environment.","","979-8-3503-0228-8","10.1109/ASIANCON58793.2023.10270721","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10270721","Monolithic Architecture;Microservice Architecture;DevOps;Agile;CI/CD","Technological innovation;Microservice architectures;Organizations;Best practices;Testing","","1","","19","IEEE","10 Oct 2023","","","IEEE","IEEE Conferences"
"LEAD: Latency-Efficient Application Deployment for Microservices Architecture","M. -A. Mirzaei; P. Poorsistani; S. A. Javadi","Department of Computer Engineering, Amirkabir University of Technology, Tehran, Iran; Department of Math and Computer Science, Amirkabir University of Technology, Tehran, Iran; Department of Computer Engineering, Amirkabir University of Technology, Tehran, Iran",2024 29th International Conference on Automation and Computing (ICAC),"23 Oct 2024","2024","","","1","6","In cloud computing, microservices architecture has become the preferred choice for many applications. Accordingly, several small and decoupled containerized services hosted on different servers communicate through the network. Therefore, communication latency significantly impacts end-to-end latency. Kubernetes, the de facto standard for container orchestration, cannot reduce this overhead due to its lack of awareness of service interactions.We present LEAD, a Latency-Efficient Application Deployment framework that integrates with Kubernetes without modifying its core components. LEAD considers the inter-service relationships and resource constraints, improving service placement to reduce end-to-end latency. The idea behind LEAD is straightforward: keep the cooperating services close to each other to exploit faster in-node communication and automate this process. The proposed idea is realized by leveraging a scoring algorithm and monitoring framework to achieve dynamic improvement of service placement. Our experimental results show an average 20% improvement in the 99th percentile latency compared to Kubernetes default scheduler.","","979-8-3503-6088-2","10.1109/ICAC61394.2024.10718812","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10718812","Cloud computing;Microservices architecture;Tail-latency;Resource management;Container placement","Heart;Heuristic algorithms;Microservice architectures;Computer architecture;Tail;Lead;Syntactics;Servers;Monitoring;Standards","","","","22","IEEE","23 Oct 2024","","","IEEE","IEEE Conferences"
"Demonstration of Container-Based Microservices SDN Control platform for Open Optical Networks","Q. Pham Van; H. Tran-Quang; D. Verchere; P. Layec; H. -T. Thieu; D. Zeghlache","NOKIA Bell Labs France, Nozay, France; Telecom-Sudparis, Evry, France; NOKIA Bell Labs France, Nozay, France; NOKIA Bell Labs France, Nozay, France; NOKIA Bell Labs France, Nozay, France; Telecom-Sudparis, Evry, France",2019 Optical Fiber Communications Conference and Exhibition (OFC),"25 Apr 2019","2019","","","1","3","We demonstrate a microservices SDN control platform that provides network control plane as a service with the capabilities to instantiate, upgrade, automated and on-demand deployment of the control components such as the controller and its applications.","","978-1-943580-53-8","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8696900","","Optical switches;Optical fiber networks;Software;Streaming media;Computer architecture;Optical devices","","2","","7","","25 Apr 2019","","","IEEE","IEEE Conferences"
"Research on Edge Computing Access Platform Architecture and components","H. Yang; X. Sun; J. Wang; Z. Dong","China Electronics Standardization Institute, Beijing, China; China Electronics Standardization Institute, Beijing, China; China Electronics Standardization Institute, Beijing, China; China Electronics Standardization Institute, Beijing, China","2023 International Conference on Networking, Informatics and Computing (ICNETIC)","6 Sep 2023","2023","","","235","239","This paper is introducing the research on edge computing access platform architecture, components, the key techniques as well as the implementation, it is to show that this architecture could help to access devices through different protocols especially in the IIoT scenarios.","","979-8-3503-1331-4","10.1109/ICNETIC59568.2023.00055","Research and Development; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10236662","edge computing;IoT;IIoT","Protocols;Data acquisition;Computer architecture;Informatics;Edge computing;Industrial Internet of Things","","","","19","IEEE","6 Sep 2023","","","IEEE","IEEE Conferences"
"Automatic Measurement of Microservice Architecture Quality with Cohesion, Coupling, and Complexity Metrics","A. Wilta; A. I. Kistijantoro","School of Electrical Engineering and Informatics, Institut Teknologi Bandung, Bandung, Indonesia; School of Electrical Engineering and Informatics, Institut Teknologi Bandung, Bandung, Indonesia","2023 10th International Conference on Advanced Informatics: Concept, Theory and Application (ICAICTA)","16 Jan 2024","2023","","","1","6","Microservice architecture has gained popularity as a solution to overcome challenges associated with a monolithic architecture, providing benefits such as ease of large-scale development and scalability. However, the quality of microservices is still overlooked, with current measurements primarily focused on the migration phase from monolithic systems. Furthermore, the dynamic nature of microservices causes the quality of its architecture to fluctuate. Therefore, there is a need for an automated process to measure the quality of microservices during development and maintenance. Based on these issues, this paper proposes a tool named MicroQA that automates the measurement of microservice quality that perform static analysis and dynamic analysis on the system based on cohesion, coupling, and complexity metric with CI/CD integration. By comparing the values of each quality aspect, it is possible to determine the improvement or decline in quality during development.","","979-8-3503-2991-9","10.1109/ICAICTA59291.2023.10390525","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10390525","microservice;quality assessment;complexity;cohesion;coupling;CI/CD;static analysis;dynamic analysis","Measurement;Couplings;Current measurement;Scalability;Microservice architectures;Static analysis;Complexity theory","","1","","24","IEEE","16 Jan 2024","","","IEEE","IEEE Conferences"
"Kuber: Cost-Efficient Microservice Deployment Planner","H. Kadiyala; A. Misail; J. Rubin","Univ. of British Columbia, Canada; Univ. of British Columbia, Canada; Univ. of British Columbia, Canada","2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)","21 Jul 2022","2022","","","252","262","The microservice-based architecture - a SOA-inspired principle of dividing backend systems into indepen-dently deployed components that communicate with each other using language-agnostic APIs - has gained increased popularity in industry. Realistic microservice-based applications contain hundreds of services deployed on a cloud. As cloud providers typically offer a variety of virtual machine (VM) types, each with its own hardware specification and cost, picking a proper cloud configuration for deploying all microservices in a way that satisfies performance targets while minimizing the deployment costs becomes challenging. Existing work focuses on identifying the best VM types for recurrent (mostly high-performance computing) jobs. Yet, identifying the best VM type for the myriad of all possible service combinations and further identifying the optimal subset of combinations that minimizes deployment cost is an intractable problem for applications with a large number of services. To address this problem, we propose an approach, called Kuber, which utilizes a set of strategies to efficiently sample the neces-sary subset of service combinations and VM types to explore. Comparing Kuber with baseline approaches shows that Kuber is able to find the best deployment with the lowest search cost.","1534-5351","978-1-6654-3786-8","10.1109/SANER53432.2022.00040","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9825903","microservices;cloud computing;cloud cost optimization;software release engineering","Industries;Cloud computing;Release engineering;Costs;High performance computing;Microservice architectures;Virtual machining","","1","","48","IEEE","21 Jul 2022","","","IEEE","IEEE Conferences"
"Study and Evaluation of a hybrid architecture to optimize resources in the 5G core network","A. M. Saley; M. Ndiaye; K. Niane; A. Raimy; P. N. Ba","Dept. Mathematics and Computer Science, University Cheikh Anta Diep (UCAD), Dakar, Senegal; Dept. Mathematics and Computer Science, University Cheikh Anta Diop (UCAD), Dakar, Senegal; Dept. Mathematics and Computer Science, University Cheikh Anta Diop (UCAD), Dakar, Senegal; Dept. Mathematics and Computer Science, University Cheikh Anta Diop (UCAD), Dakar, Senegal; Dept. Mathematics and Computer Science, Higher Polytechnic School, University (ESP)), Dakar, Senegal","2022 2nd International Conference on Innovative Research in Applied Science, Engineering and Technology (IRASET)","25 Mar 2022","2022","","","1","5","Previous cellular generations have had the main objective of providing fast and reliable cellular data services to diverse network users. 5G has historically expanded this scope to offer a wide range of wireless services, delivered to the user across multiple access platforms and via multi-layer networks. As 5G offers a coherent, flexible and dynamic platform for multiple advanced technologies supporting a wide range of applications, it is of paramount importance to design and optimize a network architecture model from a QoS perspective. Thus. There are several service architectures the dedicated architecture or the shared architecture. The objective of the paper is to appreciate the best quality of service in terms of latency provided according to the type of architecture chosen. The objectives of the convergence architecture in the 5G era will be addressed in this paper, with a look at the capabilities of function reuse, resource pooling for real optimization. This research work will also allow to make a comparison with the industrial world and precisely with the telecom operators and to make technical proposals to bring an answer to the stakes that are the optimization of the costs, the quality of the experience and the quality of services to boost the innovation. to carry out the practice research, this paper uses a multi-agent system framework based on Python, the osBrain environment. Evaluating the results of the simulation, the hybrid architecture proposes more efficiency by its reliability, low latency and scalability and therefore the most optimal in terms of value creation.","","978-1-6654-2209-3","10.1109/IRASET52964.2022.9737784","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9737784","component;5G;API;NGS Middleware;SOA;OTTs;MEC","Wireless communication;Technological innovation;Costs;5G mobile communication;Scalability;Quality of service;Telecommunications","","","","17","IEEE","25 Mar 2022","","","IEEE","IEEE Conferences"
"Conceptual and Comparative Analysis of Application Metrics in Microservices","L. E. G. Pulcinelli; D. F. Pedroso; S. M. Bruschi","ICMC - Institute of Computer Sciences and Mathematics USP - Universidade de São Paulo, São Carlos, Brazil; ICMC - Institute of Computer Sciences and Mathematics USP - Universidade de São Paulo, São Carlos, Brazil; ICMC - Institute of Computer Sciences and Mathematics USP - Universidade de São Paulo, São Carlos, Brazil",2023 International Symposium on Computer Architecture and High Performance Computing Workshops (SBAC-PADW),"8 Nov 2023","2023","","","123","130","Cloud computing represents an extensively implemented paradigm for provisioning distributed services, offering a significant degree of scalability for global applications. Nonetheless, when confronted with the necessity to scale, the system encounters monitoring challenges, as it must contend with an increased volume of requests while simultaneously accommodating fluctuating demands across various geographic regions. Aside from that, detecting errors in such a model becomes increasingly difficult, because of the many abstraction layers and interconnected microservices a cloud solution has. In that context, metrics can be used to identify errors and monitor the system's state. The substantial diversity in the types of services and the metrics themselves introduces a formidable complexity to the analysis of an entire cluster. Therefore, it is important to identify the essential metrics in microservices that can be used to recognize issues or bottlenecks. In pursuit of this objective, a cloud-based solution was implemented within an Amazon Web Services Kubernetes cluster to emulate the functionality of an online retail store and an automated testing framework was made to inject errors in different parts of this application while its metrics were obtained. In that way, it was possible to identify the effects that errors have on the metrics of components in the system, rendering the monitoring of the cluster a more direct process and reducing the amount of data to be analyzed in order to identify the presence of errors in a cloud environment.","","979-8-3503-8160-3","10.1109/SBAC-PADW60351.2023.00028","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10305981","Cloud computing;Chaos engineering;Microservice;Observability","Measurement;Cloud computing;Web services;Scalability;High performance computing;Microservice architectures;Rendering (computer graphics)","","1","","11","IEEE","8 Nov 2023","","","IEEE","IEEE Conferences"
"A Cloud-Based Service for Digitally Certifying Online Content","M. Marian; A. Cusman; A. Toma; D. Popescu","Dept. of Computers and IT, University of Craiova, Craiova, Romania; CERT DIGITAL, Centrul de Calcul S.A., Tg. Jiu, Romania; CERT DIGITAL, Centrul de Calcul S.A., Tg. Jiu, Romania; Dept. of Automation and Electronics, University of Craiova, Craiova, Romania",2024 25th International Carpathian Control Conference (ICCC),"1 Jul 2024","2024","","","1","6","The paper presents a cloud-based prototype service for digitally signing online-available content. This is a functionality that can be incorporated within particular online scenarios in which the processed information needs to be traceable and proved genuine. The solution for the digital certification of (text-type) contents available online (OCC) consists of two elements that complement each other: the Portal which represents a web interface through which users interact with the system and the Portal. API which implements the actual logic ensuring the necessary functionalities. Given the existence of a set of microservices that expose certain basic functionalities, the Portal. API component will use them (by transmitting operation request events and consuming response events through the central communication component – which is a Kafka-based event bus), thus becoming independent of their implementation. With this approach, the established functionalities are decomposed into smaller functionalities, already exposed by microservices in the cloud-based middleware architecture, and so, the Portal. API has the exclusive role of using and integrating them. Next, the most important UML diagrams associated with the Portal. API component will be presented. They contain the logic on which the certification service for content available online is based.","","979-8-3503-5070-8","10.1109/ICCC62069.2024.10569825","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10569825","cloud computing;electronic signature;microservices","Uniform resource locators;Unified modeling language;Web pages;Prototypes;Microservice architectures;Rendering (computer graphics);Web servers","","","","7","IEEE","1 Jul 2024","","","IEEE","IEEE Conferences"
"Component-Based Refinement and Verification of Information-Flow Security Policies for Cyber-Physical Microservice Architectures","C. Gerking; D. Schubert","Heinz Nixdorf Institute, Paderborn University, Paderborn, Germany; Software Engineering and IT Security, Fraunhofer IEM, Paderborn, Germany",2019 IEEE International Conference on Software Architecture (ICSA),"2 May 2019","2019","","","61","70","Since cyber-physical systems are inherently vulnerable to information leaks, software architects need to reason about security policies to define desired and undesired information flow through a system. The microservice architectural style requires the architects to refine a macro-level security policy into micro-level policies for individual microservices. However, when policies are refined in an ill-formed way, information leaks can emerge on composition of microservices. Related approaches to prevent such leaks do not take into account characteristics of cyber-physical systems like real-time behavior or message passing communication. In this paper, we enable the refinement and verification of information-flow security policies for cyber-physical microservice architectures. We provide architects with a set of well-formedness rules for refining a macro-level policy in a way that enforces its security restrictions. Based on the resulting micro-level policies, we present a verification technique to check if the real-time message passing of microservices is secure. In combination, our contributions prevent information leaks from emerging on composition. We evaluate the accuracy of our approach using an extension of the CoCoME case study.","","978-1-7281-0528-4","10.1109/ICSA.2019.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8703909","security;microservices;cyber-physical systems","Security;Cyber-physical systems;Protocols;Servers;Computer architecture;Message passing;Perturbation methods","","10","","38","IEEE","2 May 2019","","","IEEE","IEEE Conferences"
"Efficient Architecture Design for Software as a Service in Cloud Environments","P. Seda; P. Masek; J. Sedova; M. Seda; J. Krejci; J. Hosek","Department of Telecommunications, Brno University of Technology, Brno, Czech Republic; Department of Telecommunications, Brno University of Technology, Brno, Czech Republic; Department of Law, Masaryk University, Czech Republic; Institute of Automation and Computer Science, Brno University of Terchnology, Brno, Czech Republic; Department of Telecommunications, Brno University of Technology, Brno, Czech Republic; Department of Telecommunications, Brno University of Technology, Brno, Czech Republic",2018 10th International Congress on Ultra Modern Telecommunications and Control Systems and Workshops (ICUMT),"3 Feb 2019","2018","","","1","6","With the increasing popularity of Software as a Service (SaaS) clouds, software architects face new challenges in software architecture design, e.g. efficiently integrating those chosen web services into clouds. In this respect, early quality evaluation of the designed SaaS cloud application is crucial to mitigate the risk of later architectural changes due to a violation of quality requirements (such as response time, network throughput and scalability). Architects need to navigate in a rich set of offered services, a variability of the SaaS cloud environments, which makes it difficult to predict the general approach without time-consuming implementation of application prototypes (using GraphQL, Representational State Transfer (REST), Simple Object Access Protocol (SOAP), and Application Programming Interfaces (APIs) approaches). In this paper, we present an abstract application model designed to select the details with a high level of scalability and efficient interactions between service components. This model is reusable and provides new way of thinking about cloud architecture.","2157-023X","978-1-5386-9361-2","10.1109/ICUMT.2018.8631237","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8631237","cloud computing;GraphQL;SaaS;sofware architecture;REST;web services","Cloud computing;Computer architecture;Servers;Service-oriented architecture;Computational modeling;Software as a service","","2","","31","IEEE","3 Feb 2019","","","IEEE","IEEE Conferences"
"A Runtime Trust Evaluation Mechanism in the Service Mesh Architecture","R. Alboqmi; S. Jahan; R. F. Gamble","Tandy School of Computer Science, University of Tulsa, Tulsa, OK, USA; Department of Computer Science, Oklahoma State University, Stillwater, OK, USA; Tandy School of Computer Science, University of Tulsa, Tulsa, OK, USA",2023 10th International Conference on Future Internet of Things and Cloud (FiCloud),"29 Jan 2024","2023","","","242","249","With the advancement of cloud-native computing, enterprise software is shifting towards a microservice architecture (MSA). In a MSA, the application is built as a composite of microservices (also called services) where each service is dedicated to providing specific functionalities and communicating via APIs. The service mesh is a dedicated infrastructure layer serving as a service-to-service communication platform. It is introduced to alleviate the complexity, manageability, and interoperability challenges involved in a MSA. Even though the service mesh includes APIs to secure service-to-service communication, more functionality is needed to handle the perimeter-less and dynamic cloud environment. The existing APIs enable security measures based on a pre-defined configuration. However, there is no mechanism for dynamic trust evaluation of the participating services, which is necessary to protect the application from potential attacks. Attackers can exploit a vulnerability caused by a rouge service as a backdoor to compromise the application. Thus, there is a need for a trust evaluation mechanism in the service mesh to follow zero-trust architecture (ZTA) principles. This paper introduces a runtime trust evaluator (RTE) incorporated as a component within the service mesh control plane. A RTE can evaluate the trustworthiness of services at runtime before establishing service-to-service communications. The core functionality of a RTE is to assess the new service invocation requests initiated by a service to evaluate the trustworthiness of that service. The RTE collects the services’ invocation history and other telemetric data to determine the services’ criticality level for single-point failure. The RTE assesses service invocation request attributes to determine the existence of an unauthorized request and the impact on the requested service’s criticality level. The result is an evaluation of the initiator service’s trustworthiness. We demonstrate our approach on an open source microservice application from the Google Cloud team called Online Boutique. The environment setup uses Kubernetes as an orchestration solution and Istio as the service mesh platform.","","979-8-3503-1635-3","10.1109/FiCloud58648.2023.00043","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10410687","Service mesh;microservice architecture;runtime trust evaluation;zero trust architecture","Cloud computing;Runtime;Microservice architectures;Computer architecture;Telemetry;Risk management;History","","3","","34","IEEE","29 Jan 2024","","","IEEE","IEEE Conferences"
"Where and What do Software Architects blog? : An Exploratory Study on Architectural Knowledge in Blogs, and their Relevance to Design Steps","M. Soliman; K. Gericke; P. Avgeriou","Bernoulli Institute for Mathematics, Computer Science and Artificial Intelligence, University of Groningen, Groningen, The Netherlands; Bernoulli Institute for Mathematics, Computer Science and Artificial Intelligence, University of Groningen, Groningen, The Netherlands; Bernoulli Institute for Mathematics, Computer Science and Artificial Intelligence, University of Groningen, Groningen, The Netherlands",2023 IEEE 20th International Conference on Software Architecture (ICSA),"24 Apr 2023","2023","","","129","140","Software engineers share their architectural knowledge (AK) in different places on the Web. Recent studies show that architectural blogs contain the most relevant AK, which can help software engineers to make design steps. Nevertheless, we know little about blogs, and specifically architectural blogs, where software engineers share their AK. In this paper, we conduct an exploratory study on architectural blogs to explore their types, topics, and their AK. Moreover, we determine the relevance of architectural blogs to make design steps. Our results support researchers and practitioners to find and re-use AK from blogs.","","979-8-3503-9749-9","10.1109/ICSA56044.2023.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10092642","Architecture knowledge;Architecture design decisions;blog articles","Knowledge engineering;Software architecture;Blogs;Computer architecture;Software","","","","64","IEEE","24 Apr 2023","","","IEEE","IEEE Conferences"
"Back to the future: N-Versioning of Microservices","A. M. Espinoza; R. Wood; S. Forrest; M. Tiwari","Biodesign Center for Biocomputing, Security and Society, Arizona State University, Tempe, AZ; Dep. of Electrical and Computer Engineering, The University of Texas at Austin, Austin, TX; Biodesign Center for Biocomputing, Security and Society, Arizona State University, Tempe, AZ; Dep. of Electrical and Computer Engineering, The University of Texas at Austin, Austin, TX",2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN),"25 Jul 2022","2022","","","415","427","Microservices are the dominant architecture used to build internet-scale applications today. Being internet-facing, their most critical attack surfaces are the OWASP top 10 Web Application Security Risks. Many of the top 10 OWASP attack types—injection, cross site scripting, broken access control and security misconfigurations—have persisted for many years despite major investments in code analysis and secure development patterns. Because microservices decompose monolithic applications into components using clean APIs, they lend themselves to practical application of a classic security/resilience principle, N-versioning. The paper introduces RDDR, a principled approach for applying N-versioning to microservices to improve resilience to data leaks. RDDR applies N-versioning to vulnerable microservices, requiring minimal code changes and with low performance impact beyond the cost of replicating microservices. Our evaluation demonstrates RDDR mitigating vulnerabilities of the top 5 of the top 10 OWASP types by applying diversity and redundancy to individual microservices.","2158-3927","978-1-6654-1693-1","10.1109/DSN53405.2022.00049","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9833760","N-versioning;Microservice protection;Multi variant execution","Surface cleaning;Costs;Codes;Architecture;Redundancy;Buildings;Microservice architectures","","3","","68","IEEE","25 Jul 2022","","","IEEE","IEEE Conferences"
"Synthetic Runtime Monitoring of Microservices Software Architecture","C. Phipathananunth; P. Bunyakiati","University of the Thai Chamber of Commerce, Krungthep, Thailand; University of the Thai Chamber of Commerce, Krungthep, Thailand",2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC),"22 Jun 2018","2018","02","","448","453","This paper describes Pink, a framework for synthetic runtime monitoring of microservices software systems which allows developers to specify the interactions of services using a UML component diagram, the assertions for the global properties of the microservices using OCL specifications, and the steps for interactions using UML sequence diagrams. Pink generates from the component diagram a set of object diagrams, selects them according to the OCL specifications and synthesises monitoring scripts by using the sequence diagrams as templates referencing to the objects. Pink supports monitoring of microservices for their operability regarding a range of non-functional properties such as session management, caching and security.","0730-3157","978-1-5386-2667-2","10.1109/COMPSAC.2018.10274","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8377902","microservices;monitoring;software test automation","Monitoring;Unified modeling language;Runtime;Tools;Testing;Software;Servers","","4","","21","IEEE","22 Jun 2018","","","IEEE","IEEE Conferences"
"Runtime Microservice Self-distribution for Fine-grain Resource Allocation","R. S. Dias; R. R. Filho; L. F. Bittencourt; F. M. Costa","Institute of Informatics, Federal University of Goiás, Goiânia-GO, Brazil; Institute of Computing, University of Campinas, Campinas-SP, Brazil; Institute of Computing, University of Campinas, Campinas-SP, Brazil; Institute of Informatics, Federal University of Goiás, Goiânia-GO, Brazil",2022 IEEE/ACM 15th International Conference on Utility and Cloud Computing (UCC),"14 Mar 2023","2022","","","234","239","The development of systems using microservices as buildingblocks have gained! major popularity in the industry in the past few years. Widely used services, such as Netflix and Uber, have been built entirely as microservice architectures. Due to the modularity and self-containedness of microservices, coupled with the use of elastic deployment infrastructures, a number of tools to assist the scalability of such systems have been created. However, these tools are limited to act at a fixed granularity, being able to replicate, relocate and provide access to extra resources only at the level of the entire microservice, even when only one of its parts actually demands more resources. In this paper, we propose the use of the concepts of adaptive component models, emergent microservices, and self-distributing systems to explicitly define the internal micro-architecture of microservices. In this approach, a microservice is built as a dynamic configuration of components, which can be seamlessly adapted and distributed on top of an elastic cloud infrastructure by the underlying platform. We evaluate the benefits of the approach by exploring different scenarios that entail the use of dynamic adaptation and self-distribution to perform vertical and horizontal scaling of microservices at a fine granularity. We analyze the involved tradeoffs and discuss how the approach can be further explored.","","978-1-6654-6087-3","10.1109/UCC56403.2022.00043","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10061807","Microservices;Self-distribution","Cloud computing;Adaptation models;Runtime;Costs;Adaptive systems;Scalability;Architecture","","2","","12","IEEE","14 Mar 2023","","","IEEE","IEEE Conferences"
"Research and Application of Battery Production Data Management System Based on Microservice","J. Zhou; L. Li; N. Zhou","School of Information Engineering, Wuhan University of Technology, Wuhan, Hubei Province, China; School of Information Engineering, Wuhan University of Technology, Wuhan, Hubei Province, China; School of Information Engineering, Wuhan University of Technology, Wuhan, Hubei Province, China",2019 IEEE 9th International Conference on Electronics Information and Emergency Communication (ICEIEC),"5 Aug 2019","2019","","","1","5","The software system based on micro-service architecture has the advantages of good scalability and agile development, and can quickly respond to the personalized and customized requirements of manufacturing enterprises. Based on existing battery Manufacturing Execution System (MES), a supplementary extension scheme founded on microservice architecture is proposed to meet the needs of battery production data management. Without making any changes to the battery MES, the scheme realized the unified authentication of the microservice system and the existing battery MES, achieved the integration of related components of the routing, monitoring and data management of the microservice system, and accomplished the design and development of the battery production data management system.","2377-844X","978-1-7281-1190-2","10.1109/ICEIEC.2019.8784670","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8784670","microservice architecture;battery production data management;MES;unified certification","Batteries;Production;Computer architecture;Logic gates;Manufacturing;Authentication;Monitoring","","1","","10","IEEE","5 Aug 2019","","","IEEE","IEEE Conferences"
"Microservice Based Edge Computing Architecture for Internet of Things","S. Nisansala; G. L. Chandrasiri; S. Prasadika; U. Jayasinghe","Department of Computer Engineering, University of Peradeniya, Sri Lanka; Department of Computer Engineering, University of Peradeniya, Sri Lanka; Department of Computer Engineering, University of Peradeniya, Sri Lanka; Department of Computer Engineering, University of Peradeniya",2022 2nd International Conference on Advanced Research in Computing (ICARC),"14 Apr 2022","2022","","","332","337","Distributed computation and AI processing at the edge has been identified as an efficient solution to deliver real-time IoT services and applications compared to cloud-based paradigms. These solutions are expected to support the delay-sensitive IoT applications, autonomic decision making, and smart service creation at the edge in comparison to traditional IoT solutions. However, existing solutions have limitations concerning distributed and simultaneous resource management for AI computation and data processing at the edge; concurrent and real-time application execution; and platform-independent deployment. Hence, first, we propose a novel three-layer architecture that facilitates the above service requirements. Then we have developed a novel platform and relevant modules with integrated AI processing and edge computer paradigms considering issues related to scalability, heterogeneity, security, and interoperability of IoT services. Further, each component is designed to handle the control signals, data flows, microservice orchestration, and resource composition to match with the IoT application requirements. Finally, the effectiveness of the proposed platform is tested and have been verified.","","978-1-6654-0741-0","10.1109/ICARC54489.2022.9753930","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9753930","Edge Computing;Distributed Computing;AI;Microservices;Fog;ROOF;Cloud","Cloud computing;Architecture;Scalability;Microservice architectures;Computer architecture;Real-time systems;Internet of Things","","3","","18","IEEE","14 Apr 2022","","","IEEE","IEEE Conferences"
"On Interfaces to Support Agile Architecting in Automotive: An Exploratory Case Study","R. Wohlrab; P. Pelliccione; E. Knauss; R. Heldal","Systemite AB, Gothenburg, Sweden; University of L'Aquila, L'Aquila, Italy; Chalmers| University of Gothenburg, Gothenburg, Sweden; Western Norway University of Applied Sciences, Bergen, Norway",2019 IEEE International Conference on Software Architecture (ICSA),"2 May 2019","2019","","","161","170","Practitioners struggle with creating and evolving an architecture when developing complex and safety-critical systems in large-scale agile contexts. A key issue is the trade-off between upfront planning and flexibility to embrace change. In particular, the coordination of interfaces is an important challenge, as interfaces determine and regulate the exchange of information between components, subsystems, and systems, which are often developed by multiple teams. In a fast-changing environment, boundary objects between teams can provide the sufficient stability to align software or systems, while maintaining a sufficient degree of autonomy. However, a better understanding of interfaces as boundary objects is needed to give practical guidance. This paper presents an exploratory case study with an automotive OEM to identify characteristics of different interfaces, from non-critical interfaces that can be changed frequently and quickly, to those that are critical and require more stability and a rigorous change process. We identify what dimensions impact how interfaces are changed, what categories of interfaces exist along these dimensions, and how categories of interfaces change over time. We conclude with suggestions for practices to manage the different categories of interfaces in large-scale agile development.","","978-1-7281-0528-4","10.1109/ICSA.2019.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8703906","large-scale agile development;agile architecture;interfaces;boundary objects;case study;architectural change;automotive;empirical software engineering","Computer architecture;Interviews;Software;Automotive engineering;Companies;Stability analysis;Safety","","5","","22","IEEE","2 May 2019","","","IEEE","IEEE Conferences"
"Exploiting Miscoordination of Microservices in Tandem for Effective DDoS Attacks","A. Bremler-Barr; M. Czeizler; H. Levy; J. Tavori",Tel Aviv University; Reichman University; Tel Aviv University; Tel Aviv University,IEEE INFOCOM 2024 - IEEE Conference on Computer Communications,"12 Aug 2024","2024","","","231","240","Today’s software development landscape has witnessed a shift towards microservices based architectures. Using this approach, large software systems are implemented by combining loosely-coupled services, each responsible for specific task and defined with separate scaling properties. Auto-scaling is a primary capability of cloud computing which allows systems to adapt to fluctuating traffic loads by dynamically increasing (scale-up) and decreasing (scale-down) the number of resources used.We observe that when microservices which utilize separate auto-scaling mechanisms operate in tandem to process traffic, they may perform ineffectively, especially under overload conditions, due to DDoS attacks. This can result in throttling (Denial of service - DoS) and over-provisioning of resources (Economic Denial of Sustainability - EDoS).This paper demonstrates how an attacker can exploit the tandem behavior of microservices with different auto-scaling mechanisms to create an attack we denote as the Tandem Attack. We demonstrate the attack on a typical Serverless architecture and analyze its economical and performance damages. One intriguing finding is that some attacks may make a cloud customer paying for service denied requests.We conclude that independent scaling of loosely coupled components might form an inherent difficulty and end-to-end controls might be needed.","2641-9874","979-8-3503-8350-8","10.1109/INFOCOM52122.2024.10621335","Israel Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10621335","Cloud security;Microservices architecture;Auto-scaling;Denial of service (DDoS) attacks;Economic Denial of Sustainability","Economics;Cloud computing;Microservice architectures;Computer architecture;Telecommunication traffic;Denial-of-service attack;Software systems","","","","27","IEEE","12 Aug 2024","","","IEEE","IEEE Conferences"
"Predicting the End-to-End Tail Latency of Containerized Microservices in the Cloud","J. Rahman; P. Lama","Dept. of Computer Science, University of Texas at San Antonio, San Antonio, Texas; Dept. of Computer Science, University of Texas at San Antonio, San Antonio, Texas",2019 IEEE International Conference on Cloud Engineering (IC2E),"8 Aug 2019","2019","","","200","210","Large-scale web services are increasingly adopting cloud-native principles of application design to better utilize the advantages of cloud computing. This involves building an application using many loosely coupled service-specific components (microservices) that communicate via lightweight APIs, and utilizing containerization technologies to deploy, update, and scale these microservices quickly and independently. However, managing the end-to-end tail latency of requests flowing through the microservices is challenging in the absence of accurate performance models that can capture the complex interplay of microservice workflows with cloudinduced performance variability and inter-service performance dependencies. In this paper, we present performance characterization and modeling of containerized microservices in the cloud. Our modeling approach aims at enabling cloud platforms to combine resource usage metrics collected from multiple layers of the cloud environment, and apply machine learning techniques to predict the end-to-end tail latency of microservice workflows. We implemented and evaluated our modeling approach on NSF Cloud's Chameleon testbed using KVM for virtualization, Docker Engine for containerization and Kubernetes for container orchestration. Experimental results with an open-source microservices benchmark, Sock Shop, show that our modeling approach achieves high prediction accuracy even in the presence of multi-tenant performance interference.","","978-1-7281-0218-4","10.1109/IC2E.2019.00034","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8790059","microservices;containers;cloud computing;performance modeling","Cloud computing;Containers;Interference;Computer architecture;Benchmark testing;Servers;Computational modeling","","29","","46","IEEE","8 Aug 2019","","","IEEE","IEEE Conferences"
"Wandering and getting lost: the architecture of an app activating local communities on dementia issues","N. S. Andersen; M. Chiarandini; J. Mauro","University of Southern Denmark, Odense, Denmark; University of Southern Denmark, Odense, Denmark; University of Southern Denmark, Odense, Denmark",2021 IEEE/ACM 3rd International Workshop on Software Engineering for Healthcare (SEH),"7 Jul 2021","2021","","","36","43","We describe the architecture of Sammen Om Demens (SOD), an application for portable devices aiming at helping persons with dementia when wandering and getting lost through the involvement of caregivers, family members, and ordinary citizens who volunteer.To enable the real-time detection of a person with dementia that has lost orientation, we transfer location data at high frequency from a frontend on the smartphone of a person with dementia to a backend system. The backend system must be able to cope with the high throughput data and carry out possibly heavy computations for the detection of anomalous behavior via artificial intelligence techniques. This sets certain performance and architectural requirements on the design of the backend.In the paper, we discuss our design and implementation choices for the backend of SOD that involve microservices and serverless services to achieve efficiency and scalability. We give evidence of the achieved goals by deploying the SOD backend on a public cloud and measuring the performance on simulated load tests.","","978-1-6654-4458-3","10.1109/SEH52539.2021.00014","TrygFonden; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9470894","System architecture;Serverless;Microservices;Data processing;Scalability;Load testing","Scalability;Conferences;Computer architecture;Medical services;Throughput;Real-time systems;High frequency","","1","","37","IEEE","7 Jul 2021","","","IEEE","IEEE Conferences"
"Preproduction Deploys: Cloud-Native Integration Testing","J. J. Carroll; P. Anand; D. Guo","Infrastructure, Coursera, Mountain View; Infrastructure, Coursera, Mountain View; Infrastructure, Coursera, Mountain View",2021 IEEE Cloud Summit (Cloud Summit),"29 Dec 2021","2021","","","41","48","The microservice architecture for cloud-based systems is extended to not only require each loosely coupled component to be independently deployable, but also to provide independent routing for each component. This supports canary deployments, green/blue deployments and roll-back. Both ad hoc and system integration test traffic can be directed to components before they are released to production traffic. Front-end code is included in this architecture by using server-side rendering of JS bundles. Environments for integration testing are created with preproduction deploys side by side with production deploys using appropriate levels of isolation. After a successful integration test run, preproduction components are known to work with production precisely as it is. For isolation, test traffic uses staging databases that are copied daily from the production databases, omitting sensitive data. Safety and security concerns are dealt with in a targeted fashion, not monolithically. This architecture scales well with organization size; is more effective for integration testing; and is better aligned with agile business practices than traditional approaches.","","978-1-6654-2582-7","10.1109/IEEECloudSummit52029.2021.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9658870","cloud computing;microservices;software architecture;software integration testing","Cloud computing;Databases;Software architecture;Microservice architectures;Production;Computer architecture;System integration","","2","","31","IEEE","29 Dec 2021","","","IEEE","IEEE Conferences"
"Anomaly Detection and Root Cause Analysis of Microservices Energy Consumption","M. S. Floroiu; S. Russo; L. Giamattei; A. Guerriero; I. Malavolta; R. Pietrantuono","Vrije Universiteit, Amsterdam, The Netherlands; Università di Napoli Federico II, Italy; Università di Napoli Federico II, Italy; Università di Napoli Federico II, Italy; Vrije Universiteit, Amsterdam, The Netherlands; Università di Napoli Federico II, Italy",2024 IEEE International Conference on Web Services (ICWS),"15 Oct 2024","2024","","","590","600","With the expansion of cloud computing and data centers, the need has arisen to tackle their environmental impact. The increasing adoption of microservice architectures, while offering scalability and flexibility, poses new challenges in the effective management of systems’ energy consumption.This study analyzes experimentally the effectiveness, with respect to energy consumption, of algorithms for Anomaly Detection (AD) and Root Cause Analysis (RCA) for (containerized) microservices systems. The study analyzes five AD and three RCA algorithms. Metrics to assess the effectiveness of AD algorithms are Precision, Recall, and F-Score. For RCA algorithms, the chose metric is Precision at level k. Two subjects of different complexity are used: Sock Shop and UNI-Cloud. Experiments use a cross-over paired comparison design, involving multiple randomized runs for robust measures.The experiments show that AD algorithms exhibit a relatively moderate performance. The mean adjusted Precision for Sock Shop is 61.5%, while it is 75% for the best-performing algorithms (BIRCH, KNN, and SVM) on UNI-Cloud. The Recall and F-Score for UNI-Cloud, for the same algorithms, are 75%, while for Sock Shop KNN yields the best outcome at roughly 45%. MicroRCA and RCD emerge as the top-performing algorithms for RCA.We found that the effectiveness of AD algorithms is strongly influenced by anomaly thresholds, emphasizing the importance of careful tuning such algorithms. RCA algorithms reveal promising results, particularly RCD and MicroRCA, which showed robust performance. However, challenges remain, as seen with the ϵ-diagnosis algorithm, suggesting the need for further refinement.For DevOps engineers, the findings highlight the need to carefully select and tune AD and RCA algorithms for energy, and to take into account system topology and monitoring configurations.","2836-3868","979-8-3503-6855-0","10.1109/ICWS62655.2024.00079","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10707452","Microservices;Energy consumption;Anomaly Detection;Root Cause Analysis","Measurement;Energy consumption;Root cause analysis;Web services;Software algorithms;Microservice architectures;Nearest neighbor methods;Topology;Anomaly detection;Tuning","","","","39","IEEE","15 Oct 2024","","","IEEE","IEEE Conferences"
"MI-FIWARE: A web component development method for FIWARE using microservices","J. A. Llopis; M. Mena; J. Criado; L. Iribarne","Applied Computing Group (TIC-211), University of Almería, Almería, Spain; Applied Computing Group (TIC-211), University of Almería, Almería, Spain; Applied Computing Group (TIC-211), University of Almería, Almería, Spain; Applied Computing Group (TIC-211), University of Almería, Almería, Spain","2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)","9 Sep 2021","2021","","","1058","1065","Within the smart solutions (Smart Industry, Smart Home and Smart City), the concept of Smart Cities is the one having the greatest growth, inducing an increment in the number of developers focused on carrying out this idea, and growth in the number of companies that contribute with solutions like IoT platforms. These platforms help in the development of smart solutions providing tools and services that automate some of the development processes and ease the creation of software for smart environments. To support the growth of smart cities, we propose MI-FIWARE, an architecture based on microservices (MI) and the IoT platform FIWARE. MI-FIWARE reduces developers from the back-end workload and the processing of context information, in a way that only the front-side has to be developed using a web component template proposed. MI- FIWARE architecture is based on microservices, taking advantage of FIWARE as a modular platform and establishing the possibility of using microservices to add extra functionality to the IoT platform, helping the developers in other development processes like security.","0730-3157","978-1-6654-2463-9","10.1109/COMPSAC51774.2021.00144","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9529687","smart city;microservice;web component;FI- WARE;Internet of Things","Industries;Smart cities;Conferences;Computer architecture;Smart homes;Companies;Tools","","2","","22","IEEE","9 Sep 2021","","","IEEE","IEEE Conferences"
"Trace-based Multi-Dimensional Root Cause Localization of Performance Issues in Microservice Systems","C. Zhang; Z. Dong; X. Peng; B. Zhang; M. Chen","Fudan University, China; Fudan University, China; Fudan University, China; Fudan University, China; Fudan University, China",2024 IEEE/ACM 46th International Conference on Software Engineering (ICSE),"14 Jun 2024","2024","","","1347","1358","Modern microservice systems have become increasingly complicated due to the dynamic and complex interactions and runtime environment. It leads to the system vulnerable to performance issues caused by a variety of reasons, such as the runtime environments, communications, coordinations, or implementations of services. Traces record the detailed execution process of a request through the system and have been widely used in performance issues diagnosis in microservice systems. By identifying the execution processes and attribute value combinations that are common in anomalous traces but rare in normal traces, engineers may localize the root cause of a performance issue into a smaller scope. However, due to the complex structure of traces and the large number of attribute combinations, it is challenging to find the root cause from the huge search space. In this paper, we propose TraceContrast, a trace-based multidimensional root cause localization approach. TraceContrast uses a sequence representation to describe the complex structure of a trace with attributes of each span. Based on the representation, it combines contrast sequential pattern mining and spectrum analysis to localize multidimensional root causes efficiently. Experimental studies on a widely used microservice benchmark show that TraceContrast outperforms existing approaches in both multidimensional and instance-dimensional root cause localization with significant accuracy advantages. Moreover, Trace-Contrast is efficient and its efficiency can be further improved by parallel execution.","1558-1225","979-8-4007-0217-4","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10549362","Microservice;Root Cause Analysis;Tracing","Location awareness;Runtime environment;Accuracy;Microservice architectures;Benchmark testing;Data mining;Spectral analysis","","1","","51","","14 Jun 2024","","","IEEE","IEEE Conferences"
"A Lightweight Architecture Analysis of a Monolithic Messaging Gateway","D. Brahneborg; W. Afzal","Infoflex Connect AB, Stockholm, Sweden; Mälardalens Högskola, Västerås, Sweden",2020 IEEE International Conference on Software Architecture Companion (ICSA-C),"19 May 2020","2020","","","25","32","Background: The Enterprise Messaging Gateway (EMG) from Infoflex Connect (ICAB) is a monolithic system used to deliver mobile text messages (SMS) world-wide. The companies using it have diverse requirements on both functionality and quality attributes and would thus benefit from more versatile customizations, e.g. regarding authorization and data replication. Objective: ICAB needed help in assessing the current architecture of EMG in order to find candidates for architectural changes as well as fulfilling the needs of variability in meeting the wide range of customer requirements. Method: We analysed EMG using a lightweight version of ATAM (Architectural Trade-off Analysis Method) to get a better understanding of how different architectural decisions would affect the trade-offs between the quality requirements from the identified stakeholders. Result: Using the results of this structured approach, it was easy for ICAB to identify the functionality that needed to be improved. It also became clear that the selected component should be converted into a set of microservices, each one optimized for a specific set of customers. Limitation: The stakeholder requirements were gathered intermittently during a long period of continuous engagement, but there is a chance some of their requirements were still not communicated to us. Conclusion: Even though this ATAM study was performed internally at ICAB without direct involvement from any external stakeholders, documenting elicited quality attribute requirements and relating them to the EMG architecture provided new, unexpected, and valuable understandings of the system with a rather small effort.","","978-1-7281-7415-0","10.1109/ICSA-C50368.2020.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9095659","Architecture;Monolith;ATAM;Microservice","Electromyography;Computer architecture;Logic gates;Stakeholders;Companies;Software","","1","","22","IEEE","19 May 2020","","","IEEE","IEEE Conferences"
"A layered framework for root cause diagnosis of microservices","A. Bento; J. Correia; J. Duraes; J. Soares; L. Ribeiro; A. Ferreira; R. Carreira; F. Araujo; R. Barbosa","Department of Informatics Engineering, Pinhal de Marrocos, University of Coimbra, CISUC, Coimbra, Portugal; Department of Informatics Engineering, Pinhal de Marrocos, University of Coimbra, CISUC, Coimbra, Portugal; Department of Informatics Engineering, Pinhal de Marrocos, University of Coimbra, CISUC, Coimbra, Portugal; Fiercely, Rua Pedro Nunes, Coimbra, Portugal; Fiercely, Rua Pedro Nunes, Coimbra, Portugal; Fiercely, Rua Pedro Nunes, Coimbra, Portugal; Virtual Power Solutions, Ladeira da Paula N.6, Coimbra, Portugal; Department of Informatics Engineering, Pinhal de Marrocos, University of Coimbra, CISUC, Coimbra, Portugal; Department of Informatics Engineering, Pinhal de Marrocos, University of Coimbra, CISUC, Coimbra, Portugal",2021 IEEE 20th International Symposium on Network Computing and Applications (NCA),"31 Jan 2022","2021","","","1","8","Microservice-based architectures feature function-ally independent, well-defined and fine-grained components suit-able for loosely coupled deployments and for building reli-able cloud-native applications. Despite the advantages of this approach, component interactions introduce complexity, thus turning boundary -spanning service operation into a daunting challenge. As systems grow in size, complexity can easily outgrow the cognitive capacity of human operators, who are unable to effectively diagnose faulty microservices. We address this problem by proposing a novel framework to diagnose faulty microservices. Through failure injection and an experimental assessment, our layered diagnosis framework using service response analysis, timing constraints, causality and a ranking algorithm from traces, is able to effectively diagnose faulty microservices. Empirical evaluation of the proposed approach, by examining 130 experi-ments in a representative microservice application in the presence of faults, shows that it can achieve approximately 89% specificity and 77% recall.","2643-7929","978-1-6654-9550-9","10.1109/NCA53618.2021.9685494","FCT - Foundation for Science and Tech-nology; European Social Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9685494","Cloud computing;microservices;failure diagno-sis;observability;root cause analysis","Architecture;Buildings;Microservice architectures;Computer architecture;Turning;Approximation algorithms;Complexity theory","","1","","22","IEEE","31 Jan 2022","","","IEEE","IEEE Conferences"
"Supply Chain Data Management for Web Services","S. K. Logesh; K. Kavin; S. A. Kumar; A. Manikandan; G. Sakthi; B. Adithya","Electrical and Electronics Engineering, Kongu Engineering College, Erode, Tamil Nadu; Electrical and Electronics Engineering, Kongu Engineering College, Erode, Tamil Nadu; Mechatronics Engineering, Kongu Engineering College, Erode, Tamil Nadu; Electrical and Electronics Engineering, Kongu Engineering College, Erode, Tamil Nadu; Electrical and Electronics Engineering, Kongu Engineering College, Erode, Tamil Nadu; Mechatronics Engineering, Kongu Engineering College, Erode, Tamil Nadu",2022 4th International Conference on Inventive Research in Computing Applications (ICIRCA),"29 Dec 2022","2022","","","1584","1589","Supply chain management is extremely importantin today's environment. The modern supply chain mustevolve to meet new demands and challenges. Consumerdemands, additional market channels, internationalproblems and other factors will lead to significant challengesin supply chain network. However, some components of thesupply chain are opaque, limiting agility and decisionmaking. Millions of dollars are lost due to poor data quality. The lack of governance rules and transparency raises thedanger. As a result, consumer's trust and loyalty aredependent on sustainable sourcing and traceability. Ourproject proposes a microservice based data managementsystem for optimizing the supply chain management in anefficient way. The major goal is to store data in the mostefficient and cost-effective way possible so that productionand maintenance costs are kept low. The proposed researchwork has utilized seven major domains, which are developedby using microservice based approach and Java Springframework with Mongo Atlas as its database. MicrosoftAzure is used as a cloud service to deploy the APIs and userinterface through GIT actions. Different testing andmonitoring strategies are performed to keep the app up andrunning under extreme conditions. Design patterns and bestpractises are followed during the development.","","978-1-6654-9707-7","10.1109/ICIRCA54612.2022.9985690","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9985690","Microservice;Supply chain;Angular;Spring boot;Master data","Supply chain management;Costs;Web services;Supply chains;Microservice architectures;Telecommunication traffic;Software","","","","15","IEEE","29 Dec 2022","","","IEEE","IEEE Conferences"
"A Microservice-Based Approach for Increasing Software Reusability in Health Applications","M. A. P. da Silva; V. C. Times; A. M. C. de Araújo; P. C. da Silva","Center for Informatics Federal University of Pernambuco, Recife, PE, Brazil; Center for Informatics, Federal University of Pernambuco, Recife, Brazil; Department of Information Systems, Federal University of Alagoas, Penedo, Brazil; Master Program in Computing Salvador University, Salvador, BA, Brazil",2019 IEEE/ACS 16th International Conference on Computer Systems and Applications (AICCSA),"16 Mar 2020","2019","","","1","8","Traditionally, legacy Health applications use software architecture models that make it difficult to reuse components. Reusability is an essential attribute in the software lifecycle, as it improves the quality of applications and reduces maintenance and development costs. This paper proposes the cloud tool Microservice4EHR, which dynamically generates reusable components from existing software artifacts (e.g., graphical interfaces), while conforming to the standards used in the healthcare domain. A software architecture based on Connectors and Microservice components is specified and made tangible by means of three algorithms. The use of both components is applied to a real-world scenario (a Brazilian blood donation center) and serves as an example. As a result, it is possible to notice that Health applications achieve greater reusability when they employ the microservice architecture. Thus, Microservice4EHR enables the use of reusable components in Health application architectures (for both new and legacy systems), increasing software reusability in this context.","2161-5330","978-1-7281-5052-9","10.1109/AICCSA47632.2019.9035229","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9035229","Software architecture;Microservice;OpenEHR Archetype;Health Application;Microservice4EHR","Computer architecture;Tools;Software;Software architecture;Computational modeling;Connectors;Standards","","3","","37","IEEE","16 Mar 2020","","","IEEE","IEEE Conferences"
"The Nanoservices Framework: Co-Locating Microservices in the Cloud-Edge Continuum","E. Caron; R. Gracia-Tinedo","Dell Research, Ottawa, Canada; Dell Research, Barcelona, Spain",2023 IEEE 31st International Conference on Network Protocols (ICNP),"20 Dec 2023","2023","","","1","6","Today, the microservices paradigm has emerged as one of the most widely adopted patterns to develop, package, and deploy software on a large scale. However, as they were originally designed for the cloud, the direct application of microservices DevOps practices to resource-constrained environments like the Edge may not be optimal. Specifically, deploying each piece of software as an individual microservice may result in a significant resource footprint (e.g., storage space and network bandwidth related to managing base images, CPU, and memory). In this work, we explore the concept of opportunistically grouping microservice code within the same container to reduce resource footprint when deploying multiple microservices at the Edge. To materialize this concept, we present the N anoservices framework: a framework that formalizes and provides practical means for developers to build and deploy groups of microservices on the same container (a.k.a., Nanoservices). Our early results show that with Nanoservices we can achieve a significant resource footprint reduction (base image storage, CPU, memory) with minimal effort from the developer's viewpoint.","2643-3303","979-8-3503-0322-3","10.1109/ICNP59255.2023.10355592","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10355592","Microservices;Edge;DevOps;Containers","Protocols;Codes;Image edge detection;Microservice architectures;Bandwidth;Containers;Software","","1","","32","IEEE","20 Dec 2023","","","IEEE","IEEE Conferences"
"Automated Mobile Trip Plan using Simulated Annealing in Microservices Architecture","K. Abram; S. M. Tedjojuwono","Information Systems Department, Business Information Systems Program, Faculty of Computing and Media, Bina Nusantara University, Jakarta, Indonesia; Information Systems Department, Business Information Systems Program, Faculty of Computing and Media, Bina Nusantara University, Jakarta, Indonesia",2020 International Conference on Information Management and Technology (ICIMTech),"2 Oct 2020","2020","","","421","426","The work is to provide a better experience on the needs of developing itinerary for travelers. This is achieved through an automated itinerary planning using artificial intelligence of simulated annealing technique. In contrast, planning the itinerary in detail with manual process would be time consuming, disorganized and incomplete which might affect the travel experience negatively. The work presents comparison of manual approach and the proposed automated itinerary on a mobile system application; as well as cloud-architecture that will support the application's overall functionality, including the cloud-services that is used to support each component of the application. The result of incorporating meta heuristic in building the recommendation system which in return improving the user experience of the leisure travelling industry is promising and will be presented at the end of the paper.","","978-1-7281-7071-8","10.1109/ICIMTech50083.2020.9211137","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9211137","user experience;meta heuristic;simulated annealing;artificial intelligence","Computer architecture;Google;Simulated annealing;Mathematical model;Cloud computing;Heuristic algorithms;Business","","","","20","IEEE","2 Oct 2020","","","IEEE","IEEE Conferences"
"Development of the Concept and Architecture of an Automated System for Updating Physical Knowledge for Information Support of Search Design","A. Bobunov; D. Korobkin; S. Fomenkov","CAD Department, Volgograd State Technical University, Volgograd, Russia; CAD Department, Volgograd State Technical University, Volgograd, Russia; CAD Department, Volgograd State Technical University, Volgograd, Russia",2023 International Russian Smart Industry Conference (SmartIndustryCon),"1 May 2023","2023","","","281","288","For developing an automated system for updating physical knowledge for information support of search design, it is necessary to choose a technology stack that would meet the implementation requirements. In view of the sanctions currently imposed on the Russian Federation, it is worth considering mainly open projects and/or domestic developments. We will highlight the main criteria that it is desirable to take into account when designing the architecture of an automated system to support the synthesis of new technical systems and technologies: (a) ability to store and process large amounts of data; (b) unification access for all data analysis procedures; (c) maximum automation of all stages; (d) modularity of the structure, focus on the expansion of functionality; (e) focus on open source solutions and software of domestic manufacturers, excluding rigid binding to paid foreign solutions. As a result of the work done, various aspects of the implementation of the required automated system were analyzed. A review of various software systems and cloud products showed that the concept of building data lakes (Data Lake) in conjunction with the distributed processing tools of the Apache Hadoop ecosystem is used for big data processing. An architecture framework based on a centralized data warehouse and Hadoop components is proposed. It will be possible to increase the functionality of the platform by adding new microservices that connect to the storage and distributed processing tools via the API, as well as using a single web service for managing and displaying data analysis results from these microservices.","","978-1-6654-6429-1","10.1109/SmartIndustryCon57312.2023.10110764","Russian Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10110764","architecture;physical knowledge;information support;search design","Distributed processing;Data analysis;Web services;Architecture;Ecosystems;Microservice architectures;Computer architecture","","2","","20","IEEE","1 May 2023","","","IEEE","IEEE Conferences"
"Towards Novel Security Architectures for Network Functions Virtualization","M. Repetto; A. Carrega; G. Lamanna","S2N Lab, CNIT Genoa, Italy; S2N Lab, CNIT Genoa, Italy; Infocom Srl Genoa, Italy",2019 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN),"19 Mar 2020","2019","","","1","5","The definition of elastic network services that can be orchestrated at run-time brings unprecedented agility and dynamicity in network operation, but also complicates security management. As a matter of fact, cyber-security appliances are still largely stuck to traditional paradigms, based on relatively static topologies and the security perimeter model. The uptake of service-oriented architectures and microservices is now suggesting to compose security services by orchestrating monitoring, inspection, and enforcement capabilities, which are natively implemented in each elementary component (virtual functions, software-defined network equipment). In this paper, we describe and evaluate a novel framework for monitoring, inspection and enforcement that provides a broad and heterogeneous security context for centralized analytics, correlation and detection. Our work represents the preliminary step towards the creation of true Security-as-a-Service (SecaaS) paradigms in virtualized environments, through programmatic composition of common capabilities available in each virtual function.","","978-1-7281-4545-7","10.1109/NFV-SDN47374.2019.9040068","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9040068","","Security;Inspection;Topology;Monitoring;Computer architecture;Servers;Correlation","","","","9","IEEE","19 Mar 2020","","","IEEE","IEEE Conferences"
"Legacy applications model integration to support scientific experiment","A. S. Trunov; L. I. Voronova; V. I. Voronov; D. I. Sukhachev; V. G. Strelnikov","Moscow Technical University of Communication and Informatics, Moscow, Russia; Moscow Technical University of Communication and Informatics, Moscow, Russia; Moscow Technical University of Communication and Informatics, Moscow, RU; Moscow Technical University of Communication and Informatics, Moscow, Russia; Moscow Technical University of Communication and Informatics, Moscow, Russia",2018 Systems of Signals Generating and Processing in the Field of on Board Communications,"30 Apr 2018","2018","","","1","7","The article describes the implementation of the integration model of legacy applications to support a scientific computer experiment. The model is based on the microservices architecture using the Docker containerization technology. The information system was developed on the basis of the proposed integration model. It integrates legacy applications through a unified interface that works on HTTP protocol and allows you to remotely manage complex, time-consuming and resource-based computer experiments remotely using a mobile application. The article also describes infrastructure services, in particular, a load forecasting service that automatically adds processing power in the case of a large number of requests from users, which makes the developed system stable and increases its fault tolerance.","","978-1-5386-5622-8","10.1109/SOSG.2018.8350641","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8350641","legacy applications;service-oriented microservice architecture;Docker containerization","Containers;Databases;Computer architecture;Logic gates;Software packages;Servers","","10","","14","IEEE","30 Apr 2018","","","IEEE","IEEE Conferences"
"Demo: Cloud-native Cyber Deception with Decepto","D. Santoro; M. Zambianco; C. Facchinetti; D. Siracusa","Center for Cybersecurity, Fondazione Bruno Kessler, Italy; Center for Cybersecurity, Fondazione Bruno Kessler, Italy; Center for Cybersecurity, Fondazione Bruno Kessler, Italy; Center for Cybersecurity, Fondazione Bruno Kessler, Italy",2024 IEEE Symposium on Computers and Communications (ISCC),"31 Oct 2024","2024","","","1","3","The disaggregation of monolithic applications in containerized microservices inevitably weaken their security posture. In this context, leveraging the cloning feature of containerized environments, we propose Decepto, a software platform that integrates a high-interaction cyber deception mechanism within cloud-native applications using Kubernetes (K8s). In particular, our deception solution automatically generates decoys as clones of production microservices and deploys them to look like legitimate microservices. Attackers that unknowingly interact with such deceptive artifacts are reliably detected and monitored. In this work, we first present Decepto technical implementation, then we demonstrate its functionalities and related computational performance overhead emulating a practical attack scenario on a real K8s cluster.","2642-7389","979-8-3503-5423-2","10.1109/ISCC61673.2024.10733585","Horizon Europe; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10733585","Cyber deception;cloud-native applications;Ku-bernetes","Computers;Microservice architectures;Cloning;Production;Software;Software reliability;Security;Monitoring","","","","5","IEEE","31 Oct 2024","","","IEEE","IEEE Conferences"
"An Agent-based System Architecture for Automated Guided Vehicles in Cloud-Edge Computing Environments","X. Ye; Z. Deng; Y. Shi; W. Shen","School of Mechanical Science and Engineering, Huazhong University of Science and Technology, Wuhan, China; School of Mechanical Science and Engineering, Huazhong University of Science and Technology, Wuhan, China; Department of Mechanical Engineering, Dalian University of Technology, Dalian, China; School of Mechanical Science and Engineering, Huazhong University of Science and Technology, Wuhan, China",2023 26th International Conference on Computer Supported Cooperative Work in Design (CSCWD),"22 Jun 2023","2023","","","23","28","Future smart factories need to use intelligent transport devices like automated guided vehicles (AGVs) for connecting intelligent production and logistics. To address the lack of edge side functions in the current AGV systems, this paper proposes an agent-based system architecture for AGVs in cloud-edge computing environments. The system is divided into three main components: the cloud center, edge nodes, and AGV agents. The cloud center is largely responsible for AGV transport route planning, while the edge nodes are in charge of AGV transport control and equipment management. The driving function and executing commands are handled by AGV agents. AGV agents can communicate and collaborate with each other to address emergent issues. The proposed approach has been validated through simulations.","2768-1904","979-8-3503-3168-4","10.1109/CSCWD57460.2023.10152739","Research and Development; Fundamental Research Funds for the Central Universities; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10152739","AGV scheduler;AGV agent;architecture;cloud-edge computing","Remotely guided vehicles;Federated learning;Computational modeling;Systems architecture;Production;Planning;Smart manufacturing","","","","16","IEEE","22 Jun 2023","","","IEEE","IEEE Conferences"
"Service computing system engineering life cycle","Suhardi; N. B. Kurniawan; J. Sembiring","Institut Teknologi Bandung, Bandung, Jawa Barat, ID; Institut Teknologi Bandung, Bandung, Jawa Barat, ID; Institut Teknologi Bandung, Bandung, Jawa Barat, ID","2017 4th International Conference on Electrical Engineering, Computer Science and Informatics (EECSI)","25 Dec 2017","2017","","","1","6","The development of service computing technology has triggered the need for organizations to build a service computing system. This system is able to deliver IT services that can meet the challenges and needs of business services. An understanding of the service computing systems engineering life cycle is necessary to model and build the systems. This paper conducts the study of the service computing systems concepts and proposes the life cycle of service computing system engineering. First, some publications relevant to the service computing systems are reviewed systematically in order to develop fundamental concepts and elements of the systems. Second, a metamodel of service computing systems is built based on those concepts. Third, the life cycle model of service computing systems engineering is proposed based on the metamodel. Finally, the verification of the life cycle is conducted by comparing the proposed life cycle to the life cycle of software engineering, service engineering, and service system engineering. The contribution of this paper is to provide a coincise understanding of the components that are needed to build such systems and show the interaction and collaboration between the components in the service computing systems.","","978-1-5386-0549-3","10.1109/EECSI.2017.8239136","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8239136","Service Computing;Service computing systems;Services computing system Engineering;Service Oriented Architecture;IT Services","Service computing;Service-oriented architecture;Organizations;Computer architecture;Computational modeling","","11","","31","IEEE","25 Dec 2017","","","IEEE","IEEE Conferences"
"COCOS: A Scalable Architecture for Containerized Heterogeneous Systems","L. Baresi; G. Quattrocchi","Dipartimento di Elettronica, Politecnico di Milano, Milan, Italy; Dipartimento di Elettronica, Politecnico di Milano, Milan, Italy",2020 IEEE International Conference on Software Architecture (ICSA),"27 May 2020","2020","","","103","113","Nowadays software systems are organized around several and heterogeneous components. For example, a modern application can be composed of different microservices, along with dedicated components for machine learning analytics and recurring batch processing jobs. While containers offer a means to deploy the system and tackle heterogeneity, these components have different execution models, can exploit different resource types (e.g., CPUs and GPUs) and result in completely different execution times (milliseconds vs hours). This complexity calls for a new, scalable architecture to allow the systems to operate efficiently. This paper presents COCOS, an architecture, based on containers and control-theory, that is able to manage large and heterogeneous software systems. The architecture is based on a three-level hierarchy of controllers that cooperatively enforce user-defined requirements on execution times and consumed resources. The paper also shows a prototype implementation of COCOS based on Kubernetes, a well-known container orchestrator. The evaluation shows the efficiency of COCOS when dealing with microservices, Spark jobs and machine learning applications.","","978-1-7281-4659-1","10.1109/ICSA47634.2020.00018","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9101324","containers, kubernetes, heterogeneous architectures, microservices, batch processing","Containers;Computer architecture;Scalability;Software systems;Resource management;Machine learning;Control theory","","10","","39","IEEE","27 May 2020","","","IEEE","IEEE Conferences"
"Design and implementation of a decentralized message bus for microservices","P. Kookarinrat; Y. Temtanapat","Computer Science Department, Thammasat University; Computer Science Department, Thammasat University",2016 13th International Joint Conference on Computer Science and Software Engineering (JCSSE),"21 Nov 2016","2016","","","1","6","A new software architecture, known as microservices, becomes rapidly popular recently. Microservices could help developers cope well with the problems of software complexity and demands on an adaptive development process that needs to respond to changes quickly. In this architecture, a single monolithic large application would be divided into small multiple isolated services. They are separately deployed and communicated to other services via remote calls. This architectural style allows any changes on one service not affecting the others. However, if services directly make remote calls, it would create interdependencies and tight couplings between them. To remove such problem, this paper proposes a decentralized message bus to use as a communication tool between services. Our message bus provides a framework for services to collaborate. It divides into four main components, public API, message bus, messaging and service discovery. The API uses the HTTP and RESTful style of communication. We use decentralized service discovery to avoid a single point of failure of the system. The messaging uses a simple TCP connection with only a header and body in its message. We also define three necessary communication messages for the services, viz. request/response, notification and publish/subscribe. The proposed framework is implemented and tested with a real-world scenario. It works correctly without any problem. Also, to realize how it could be scaled, we run the system continuously with incremental services and traffics. From the observation on the resource consumption of CPU, memory and network I/O, we found that the network consumption grows linearly while the CPU and memory usages have little change in consumption.","","978-1-5090-2033-1","10.1109/JCSSE.2016.7748869","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7748869","microservices;message bus;software architecture","Protocols;Complexity theory;Computer architecture;Scalability;Iris;Computer science;Load modeling","","4","","14","IEEE","21 Nov 2016","","","IEEE","IEEE Conferences"
"Building Systems for Automatic Control of Distributed Energy Resources on the Basis of Digital Platform","E. Boyko; P. Ilyushin; S. Filippov","Department of Research on the Relationship of Energy and the Economy, Energy Research Institute of the Russian Academy of Sciences, Moscow, Russia; Department of Research on the Relationship of Energy and the Economy, Energy Research Institute of the Russian Academy of Sciences, Moscow, Russia; Department of Research on the Relationship of Energy and the Economy, Energy Research Institute of the Russian Academy of Sciences, Moscow, Russia",2023 International Russian Automation Conference (RusAutoCon),"9 Oct 2023","2023","","","651","656","The large-scale development of distributed energy resources (DER), integrated in the medium- and low-voltage distribution networks of energy systems requires the building of the mode automatic control systems (ACS). This is due to the variety of possible circuit-mode situations that arise depending on the generation and consumption modes at a certain moment in time. These conditions make impossible the manual control of the modes of the DER distributed networks based on the visual recognition. Developing the individual DER ACS requires the correct integration and interaction with related ACSs and distribution management systems (DMS), which, according to the existing practice, seems to be quite complicated. Using the platform approach to DER control allows obtaining the optimal technical and economic control solution, including by means of the optimization algorithm application. The article describes the functional, information, software and technical architecture of the digital platform, their purpose and main functions. It reviews the features and advantages of the digital platform use for building DER ACS, describes seven main subsystems, their purpose, as well as the composition and the data flows intensity. The article also presents the objectives, components and features of the simulation modelling. Using a digital platform facilitates effective DER control, reliable functioning of the DER-based distribution networks and uninterrupted power supply to consumers.","2836-614X","979-8-3503-4555-1","10.1109/RusAutoCon58002.2023.10272760","Russian Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10272760","distributed energy resources;digital platform;automatic control system;functional and information architecture;software and technical architecture;simulation modeling","Economics;Visualization;Power supplies;Buildings;Software algorithms;Distribution networks;Computer architecture","","1","","24","IEEE","9 Oct 2023","","","IEEE","IEEE Conferences"
"Threat Intelligence Sharing Component in the Service Mesh Architecture","R. Alboqmi; S. Jahan; R. Gamble","Tandy School of Computer Science, University of Tulsa, Tulsa, OK, USA; Department of Computer Science, Oklahoma State University, Stillwater, OK, USA; Tandy School of Computer Science, University of Tulsa, Tulsa, OK, USA",2023 10th International Conference on Future Internet of Things and Cloud (FiCloud),"29 Jan 2024","2023","","","320","327","The service mesh is a dedicated infrastructure layer in a microservice architecture (MSA) to handle service-to-service communication through application programming interface (API) calls. The service mesh employs features for continuous monitoring and ensuring delivery of service requests among services securely and reliably. The service mesh should enable threat intelligence sharing among the services at runtime as a part of continuous monitoring so that services are aware of potential threats and adapt to mitigate the threats. Threat intelligence contains detailed descriptions of attack tactics, techniques, and procedures (TTP) that are analyzed for countermeasure deployment. In this paper, we introduce threat intelligence sharing (TIS) into the control plane of the service mesh to enable the sharing of threat intelligence among services in an automated manner. It requires a structured format to specify threat intelligence and a well-defined protocol for sharing intelligence. We adopt a structured threat information expression (STIX) schema to specify threat intelligence and use the trusted automated exchange of intelligence information (TAXII) as a defined protocol to share threat intelligence as STIX documents. The advantage of including a TIS component in the service mesh is that it can generate threat intelligence using available telemetry data and enable sharing among the services without forcing services to modify their functionalities to support the process. We experiment with the TIS component’s effectiveness using an open-source MSA application called Online Boutique, which uses the service mesh platform, Istio, and Kubernetes as the orchestration solution.","","979-8-3503-1635-3","10.1109/FiCloud58648.2023.00054","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10410702","microservice application;threat intelligence;service mesh;runtime;telemetry data","Protocols;Runtime;Microservice architectures;Telemetry;Reliability;Monitoring;Application programming interfaces","","2","","28","IEEE","29 Jan 2024","","","IEEE","IEEE Conferences"
"Run-Time Prediction of Power Consumption for Component Deployments","J. von Kistowski; M. Deffner; S. Kounev",Universität Würzburg; Universität Würzburg; Universität Würzburg,2018 IEEE International Conference on Autonomic Computing (ICAC),"21 Oct 2018","2018","","","151","156","The Power consumption of servers in data centers depends greatly on the software running on each server and how it interacts with the hardware. Different deployments of distributed software components on heterogeneous servers can lead to significant differences in power consumption, depending on the server allocation and the current workload. As workloads and load intensity change, components may be re-deployed or exchanged in order to reduce the power consumption for the current load profile. The decision on which component to place on which server during run-time remains difficult as the power consumption that would result from such a placement remains unknown. Existing work on component deployment optimization at run-time focuses on maximizing performance or considers power in the context of static design time decisions. In this paper, we introduce a model to predict the power consumption of component placements at run-time based on the load and power profile collected for a running distributed application in a heterogeneous environment. In addition, we present a model that enables the use of our approach without dedicated power measurement devices, predicting power consumption based on load intensity and performance counters. We show that we can predict the power consumption of two different distributed web applications with a mean absolute percentage error of 2.21% and with an error of 1.04% when predicting a previously unobserved load level.","2474-0756","978-1-5386-5139-1","10.1109/ICAC.2018.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8498136","Power;Energy;Prediction;Server;Regression;SERT;Component;Service;Microservice","Predictive models;Power demand;Load modeling;Servers;Throughput;Data models;Software","","12","","23","IEEE","21 Oct 2018","","","IEEE","IEEE Conferences"
"Moving Toward the Obsolescence of Obsolescence: A Walk in the Clouds","R. Griffin; N. Henson","Field Applications NI, Phoenix, Arizona; Professional Services NI, Denver, Colorado",2022 IEEE AUTOTESTCON,"23 Dec 2022","2022","","","1","8","Many software methodologies advanced by cloud computing can be applied to automatic test software to mitigate test system obsolescence challenges. Classical monolithic test, measurement, and automation systems have traditional challenges when test system components become out-of-date. Distributed computing technologies provide incremental and modular updates that can be applied proactively or reactively to handle equipment failures, shifts in hardware (HW) and software (SW) dependencies, and improved HW and SW components. Advances in cloud computing have driven software technologies that can unlock scaling across hardware systems, introduce service architectures, open new performance possibilities, and decouple historically interlocked components. This paper will address aerospace and defense software challenges, introduce cloud computing, both service-oriented architecture (SOA) and cloud-native microservices, explain underlying principles and tenets, and craft a practical path forward. The cloud will be brought down to earth by showing how some underlying principles and tenets can be used today. These include the single responsibility principle (SRP), DevOps, and gRPC, “a modern open-source high-performance Remote Procedure Call (RPC) framework that can run in any environment.” [1] These practices enable architectures that make obsolescence issues smaller and more approachable. For instance, test hardware and software evolve as available hardware, and the development team's skillsets change over the lifetime of the tester and Unit Under Test (UUT). Using SRP allows individual engineers to troubleshoot isolated portions of complex systems without understanding the entire technology stack. Additionally, partitioning measurement tasks into measurement and analysis subtasks can maximize CPU power by offloading analysis from point-of-use test stations to higher-performance computers. This enables cost savings by removing number crunching from expensive testers and leveraging optimized high-performance computing for analysis tasks. We also show how gRPC natively incorporates low latency, security, and cross-platform interoperability between services. While it is impossible to prevent software, parts, and skills from becoming obsolete, it is possible to mitigate the risks to production through planning, procurement, and system design, including system software design. By walking in the footsteps of cloud computing, we can apply various techniques and technologies from the cloud to automated systems.","","978-1-7281-5400-8","10.1109/AUTOTESTCON47462.2022.9984719","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9984719","Obsolescence;Cloud;Cloud Native;Service;Service Oriented Architecture","Cloud computing;Power measurement;Computer architecture;Production;Aging;Software;Hardware","","1","","14","IEEE","23 Dec 2022","","","IEEE","IEEE Conferences"
"Placing Multi-Component Applications in the Multi-Access Edge Computing","A. Papamichail; A. Tsipis; K. Oikonomou","Department of Informatics, Ionian University, Corfu, Greece; Dept. of Digital Media & Communication, Ionian University, Kefalonia, Greece; Department of Informatics, Ionian University, Corfu, Greece","2023 8th South-East Europe Design Automation, Computer Engineering, Computer Networks and Social Media Conference (SEEDA-CECNSM)","21 Mar 2024","2023","","","1","6","Multi-access Edge Computing resolves the problem of the transportation of enormous amounts of data via the Internet by localizing the computation and the storage of data near the user. The offloading of applications to the MEC Servers must be done in a way that minimizes the latency while considering their limited resources. Additionally, there is a trend for applications to be separated into microservices that run on different MEC Servers. This adds complexity to the placement of applications on the MEC Servers because it has to take into consideration the dependencies of its microservices. This problem is defined in the literature as the multi-component application placement problem. This paper proposes an algorithm to tackle this problem efficiently, while the dependencies of services are linear, i.e., a chain of microservices. The algorithm starts with the allocation of the 1-medlan of the backhaul network. Then, the proposed algorithm extends outwards and moves around until the score function stops improving. In order to evaluate the proposed algorithm a Mixed-integer Quadratic Program is formulated. The results showed that the proposed algorithm achieved great performance in various cases.","","979-8-3503-8367-6","10.1109/SEEDA-CECNSM61561.2023.10470571","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10470571","Multi-access Edge Computing;multi-component application placement problem;1-median;microservices","Multi-access edge computing;Social networking (online);Heuristic algorithms;Microservice architectures;Transportation;Europe;Market research","","","","14","IEEE","21 Mar 2024","","","IEEE","IEEE Conferences"
"A Microservice-based Approach to Facilitate Multi-Services in Smart Space","J. Sun; M. Jin; Y. Wang","Shenzhen Institutes of Advanced Technology, University of Chinese Academy of Sciences, Shenzhen, China; Shenzhen Institutes of Advanced Technology, University of Chinese Academy of Sciences, Shenzhen, China; Shenzhen Institutes of Advanced Technology, University of Chinese Academy of Sciences, Shenzhen, China",2021 7th International Conference on Big Data and Information Analytics (BigDIA),"6 Dec 2021","2021","","","366","374","Smart space refers to the integration of compute resources, information equipment and multi-modal sensing devices in the work or living space so that diverse services can be shared between different users in a smart way. Such a form of pervasive computing can not only make compute resources and information services universally available in such a way suitable for people's special uses but also bridge the digital information space and the physical world. However, given the properties of the smart space-each service with different resource requirements and goals, the smart space could cause resource conflicts in uses between different services and participants, and thus lead to the resource contention. In order to solve this problem while fulfilling the requirements of variable services in the smart space, in this paper, we leverage the concept of microservice to propose a universal resource scheduling and a process-evolution method for multiple concurrent services in the smart space. At the same time, to ensure that the microservice-based method is easy to implement, we also design a corresponding scheduling architecture based on the docker engine, which can functionally decompose application into a set of collaborative services. Finally, we carry out a experiment to show that the proposed architecture can achieve reasonable resource allocation, resolve resource contention, and exhibit the virtue of closed loop within different scenes and cross-scenario linkages.","","978-1-6654-2466-0","10.1109/BigDIA53151.2021.9619593","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9619593","Smart space;Microservice;Resource scheduling;Process evolution","Pervasive computing;Couplings;Microservice architectures;Information services;Collaboration;Computer architecture;Sensors","","","","21","IEEE","6 Dec 2021","","","IEEE","IEEE Conferences"
"Implementation of Serverless E-Commerce Mobile Application","S. Athreya; S. Kurian; A. Dange; S. Bhatsangave","Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Navi Mumbai, India; Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Navi Mumbai, India; Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Navi Mumbai, India; Department of Computer Engineering, Fr. Conceicao Rodrigues Institute of Technology, Navi Mumbai, India",2022 2nd International Conference on Intelligent Technologies (CONIT),"18 Aug 2022","2022","","","1","5","In recent years, the internet ecosystem has improved many folds giving rise to multiple avenues for businesses to reach their customers. Technology adoption in the global arena has exponentially increased due to the evolution of smartphones. Due to the above-mentioned factors, E-Commerce has become one of the most widely used transaction methods worldwide to purchase products and services. Traditional Established Businesses can manage E-Commerce without a technology team with the help of EaaS (E-Commerce as a Service) Providers like Shopify, WooCommerce, BigCommerce and Magento which have very high development, subscription and ongoing cloud costs. Small and Medium Scale businesses need a cost-effective, high-performance solution to build the business. To build such a system we have performed research and analysis on available technology paradigms (monolith vs microservices) and Cloud paradigm (IaaS vs PaaS) for finalizing the architecture of the E-Commerce application. In this paper, we showcase the analysis results and elaborate on the implementation of our E-Commerce Application.","","978-1-6654-8407-7","10.1109/CONIT55038.2022.9847829","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9847829","AWS;Cloud Computing;eCommerce;Development","Cloud computing;Costs;Ecosystems;Microservice architectures;Computer architecture;Mobile applications;Electronic commerce","","1","","8","IEEE","18 Aug 2022","","","IEEE","IEEE Conferences"
"Evaluation of an SDN-based Microservice Architecture","A. Hölscher; M. Asplund; F. Boeira","Department of Computer and Information Science, Linköping University, Sweden; Department of Computer and Information Science, Linköping University, Sweden; Department of Computer and Information Science, Linköping University, Sweden",2022 IEEE 8th International Conference on Network Softwarization (NetSoft),"3 Aug 2022","2022","","","151","156","Microservice architectures decompose applications into individual components for enhanced maintainability and horizontal scaling, but also comes with an increased cost for orchestrating the services. Software-Defined Networks (SDNs) enables the dynamic configuration of network switches using controllers. In this paper we propose a microservice architecture that leverages SDN to orchestrate the microservices with the goal of reducing the orchestration latency cost. We perform a set of experiments using Mininet in which we implement a tailor-made microservice application that uses SDN for orchestration in combination with a set of different controllers and load balancers. Our results show that our proposed architecture performs in the same order of magnitude as a corresponding monolithic system.","2693-9789","978-1-6654-0694-9","10.1109/NetSoft54395.2022.9844094","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9844094","microservices;software-defined networking;latency;OpenFlow;load balancing","Costs;Conferences;Microservice architectures;Load management;Control systems;Approximation algorithms;Time factors","","2","","15","IEEE","3 Aug 2022","","","IEEE","IEEE Conferences"
"Active Prewarning Technology for Smart Grid Based on Unsupervised Learning","R. Qu; X. Tian; S. Chen","State Grid Liaoning Information and Communication Company, Shenyang, China; State Grid Liaoning Information and Communication Company, Shenyang, China; State Grid Liaoning Information and Communication Company, Shenyang, China",2024 4th International Conference on Machine Learning and Intelligent Systems Engineering (MLISE),"19 Sep 2024","2024","","","383","387","This paper proposes an early warning technology for power grid cloud platform microservice architecture alarm information based on unsupervised learning, discovers potential abnormal patterns and rules, sends out early warning signals in a timely manner, and improves the ability to identify and process power grid cloud platform microservice architecture alarms. According to the above steps, based on the establishment of the power grid business microservice operation alarm log alarm information knowledge base, this article will study the cloud platform operation monitoring data scoring algorithm, classify the cloud platform monitoring information, and then filter out the suspected abnormal data. For different business types of complex scenarios, research on abnormal information classification mining technology based on statistical models, proximity, clustering and classification, apply improved K-means clustering[1] and LOF outlier detection technology[2] to establish a combined detection model, and detect anomalies The data is clustered and outliers detected to achieve active early warning technology of unsupervised learning.","","979-8-3503-7507-7","10.1109/MLISE62164.2024.10674102","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10674102","smart grid;unsupervised learning;K-means clustering;LOF","Knowledge based systems;Microservice architectures;Clustering algorithms;Data models;Smart grids;Classification algorithms;Unsupervised learning","","","","13","IEEE","19 Sep 2024","","","IEEE","IEEE Conferences"
"Edge-Based Microservices Architecture for Internet of Things: Mobility Analysis Case Study","T. Leppanen; C. Savaglio; L. Loven; T. Jarvenpaa; R. Ehsani; E. Peltonen; G. Fortino; J. Riekki","Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Department of Informatics, Modeling, Electronics and Systems, University of Calabria, Italy; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Finland; Department of Informatics, Modeling, Electronics and Systems, University of Calabria, Italy; Center for Ubiquitous Computing, University of Oulu, Finland",2019 IEEE Global Communications Conference (GLOBECOM),"27 Feb 2020","2019","","","1","7","In this paper, we describe how the microservices paradigm can be used to design and implement distributed edge services for Internet of Things applications. As a case study, traditionally monolithic user mobility analysis service is developed, with distributed and extendable microservices, for the standardized ETSI MEC system reference architecture. In each of the edge system three tiers, microservices implement the service logic with components for movement trace analysis, movement prediction and visualization of the results. The distributed service is implemented with Docker containers and evaluated on real-world settings with low capacity edge servers and real user mobility data. The results show that the edge promise of low latency can be met in such as implementation. The integration of a software development technology with a standardized edge system provides solid background for further development.","2576-6813","978-1-7281-0962-6","10.1109/GLOBECOM38437.2019.9014273","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9014273","","Computer architecture;Containers;Computational modeling;Edge computing;Software;Quality of service;Virtualization","","13","","20","IEEE","27 Feb 2020","","","IEEE","IEEE Conferences"
"An improved method for increasing maintainability in terms of serverless architecture application","V. Lakhai; O. Kuzmych; M. Seniv","Institute of Computer Sciences and Information Technology, Lviv Polytechnic National University, Lviv, Ukraine; Institute of Computer Sciences and Information Technology, Lviv Polytechnic National University, Lviv, Ukraine; Institute of Computer Sciences and Information Technology, Lviv Polytechnic National University, Lviv, Ukraine",2023 IEEE 18th International Conference on Computer Science and Information Technologies (CSIT),"27 Nov 2023","2023","","","1","4","The use of new and improvement of existing software development methods becomes a necessity due to high quality requirements, complexity and importance of ease of maintenance. Based on the most common software development approach that improves maintainability, this paper develops a proprietary approach to improve maintainability and demonstrates its advantages over the existing approach.","2766-3639","979-8-3503-6046-2","10.1109/CSIT61576.2023.10324273","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10324273","Software engineering;maintainability;complexity;reliability;flexibility;methodologies;approaches","Measurement;Computer science;Computer architecture;Maintenance engineering;Information filters;Software;Complexity theory","","1","","12","IEEE","27 Nov 2023","","","IEEE","IEEE Conferences"
"Derm: SLA-aware Resource Management for Highly Dynamic Microservices","L. Chen; S. Luo; C. Lin; Z. Mo; H. Xu; K. Ye; C. Xu",University of Macau; Yale University; University of Macau; University of Macau; University of Macau; Shenzhen Institute of Advanced Technology; University of Macau,2024 ACM/IEEE 51st Annual International Symposium on Computer Architecture (ISCA),"1 Aug 2024","2024","","","424","436","Ensuring efficient resource allocation while providing service level agreement (SLA) guarantees for end-to-end (E2E) latency is crucial for microservice applications. Although existing studies have made significant contributions towards achieving this objective, they primarily concentrate on static graphs. However, microservice graphs are inherently dynamic during runtime in production environments, necessitating more effective and scalable resource management solutions.In this paper, we present Derm, a new resource management system designed for microservice applications with highly dynamic graphs. Our principal finding is that prioritizing different microservice graphs can lead to a substantial reduction in resource allocation. To take advantage of this opportunity, we develop three main components. The first is a performance model that describes uncertainties of microservice latency through a conditional exponential distribution. The second is a probabilistic quantification of the dynamics of microservice graphs. The third is an optimization method for adjusting the resource allocation of microservices to minimize resource usage. We evaluate Derm in our cluster using real microservice benchmarks and production traces. The results highlight that Derm reduces the resource usage by $68.4 \%$ and lowers SLA violation probability by $6.7 \times$, compared to existing approaches.","","979-8-3503-2658-1","10.1109/ISCA59077.2024.00039","Science and Technology Development Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10609698","Dynamic Microservice Graph;Resource Scaling;Uncertainty","Uncertainty;Runtime;Exponential distribution;Microservice architectures;Optimization methods;Production;Dynamic scheduling","","","","45","IEEE","1 Aug 2024","","","IEEE","IEEE Conferences"
"Microservice Architecture of Modern eLearning Application","A. Schukin; N. Scerbakov; E. Rezedinova","Institute of Computer Science and Cybersecurity, Peter the Great St. Petersburg Polytechnic University, St. Petersburg, Russia; Institute of Interactive Systems and Data Science, Graz University of Technology, Graz, Austria; Institute of Computer Science and Cybersecurity, Peter the Great St. Petersburg Polytechnic University, St. Petersburg, Russia","2024 5th International Conference on Communications, Information, Electronic and Energy Systems (CIEES)","31 Dec 2024","2024","","","1","4","Learning Management Systems (LMS) have been integral to educational institutions for over 20 years. Technically, an LMS consists of functional components designed to deliver, discuss, explain educational materials, and assess user knowledge through various paradigms such as uploading assignments and online questionnaires. The prolonged and intensive use of such systems emphasizes the importance of their maintainability, allowing the accommodation of new components and the replacement of outdated ones. Over the years, the technological foundation of LMS components has transitioned from early versions of PHP to advanced Java, Python, and JavaScript packages. Data repositories have evolved from local relational databases to shared NoSQL databases. Communication technologies have shifted from NNTP news servers to multiple social applications like WhatsApp and Telegram.In this paper, we present architectural solutions implemented in a modern LMS called WBT-Master. This architecture specifically addresses the maintainability of modern LMS, ensuring they evolve alongside emerging Internet technologies. The practical significance of our work lies in its ability to support very heterogeneous components within a logically unified LMS framework. By discussing the architecture of WBT-Master, we offer a method for incorporating both old and new technological platforms into a single system. Additionally, we use this architecture to interface with cloud services, foster social interactions, and optimize user experience. This contributes to the evolution of E-Learning platforms, offering enhanced and more interactive educational experiences for both learners and educators.","","979-8-3503-5286-3","10.1109/CIEES62939.2024.10811386","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10811386","software architecture;e-Learning;learning management system;cloud service","Training;Java;Electronic learning;Computer architecture;Relational databases;User interfaces;User experience;Servers;Usability;Python","","","","14","IEEE","31 Dec 2024","","","IEEE","IEEE Conferences"
"Smart Agent Edge Microservices Deployment Approach","B. E. Khalyly; M. Banane; A. Erraissi; A. Belangour","Faculty of sciences Ben M'sik, Laboratory of Information Technology and Modeling, Hassan II University, Casablanca, Morocco; Faculty of sciences Ben M'sik, Laboratory of Information Technology and Modeling, Hassan II University, Casablanca, Morocco; Faculty of sciences Ben M'sik, Laboratory of Information Technology and Modeling, Hassan II University, Casablanca, Morocco; Faculty of sciences Ben M'sik, Laboratory of Information Technology and Modeling, Hassan II University, Casablanca, Morocco",2020 International Conference on Decision Aid Sciences and Application (DASA),"15 Jan 2021","2020","","","697","701","Smart agents are essential elements in an Internet of Things ecosystem. Smart agents are made up of sensors and actuators linked to a micro-controller. These smart agents are programmed through applications that are deployed at the microcontroller level. These programs can be modified or replaced or deleted. Also, the components of these smart agents may change, ie it may be that we add or remove a sensor and actuator. These smart agents must continue to operate without having to stop them and deploy new programs. In this case, we need tools that ensure deployment and continuous integration. Devops offers a continuous deployment chain. We offer an automation solution for the deployment and continuous integration of Edge microservice in microcontrollers. These systems are based on microservices. The microservices deployed are in the form of a Docker container. This solution allows the Internet of Things developer to install, modify, and delete containers at the microcontroller level and to control microcontrollers remotely while maintaining the continuity of operation of the microcontrollers.","","978-1-7281-9677-0","10.1109/DASA51403.2020.9317202","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9317202","Docker;Microcontroller;Microservices;Smart Agent;Devops","Microcontrollers;Actuators;Sensors;Containers;Intelligent sensors;Internet of Things;Temperature sensors","","1","","22","IEEE","15 Jan 2021","","","IEEE","IEEE Conferences"
"Optimal Resource Provisioning for Data-intensive Microservices","R. Mark Erdei; L. Toka","MTA-BME Network Softwarization Research Group, Faculty of Electrical Engineering and Informatics, Budapest University of Technology and Economics, Hungary; MTA-BME Network Softwarization Research Group, Faculty of Electrical Engineering and Informatics, Budapest University of Technology and Economics, Hungary",NOMS 2022-2022 IEEE/IFIP Network Operations and Management Symposium,"9 Jun 2022","2022","","","1","6","With the continuous progress of cloud computing, many microservices and complex multi-component applications arise for which resource planning is a great challenge. For example, when it comes to data-intensive cloud-native applications, the tenant might be eager to provision cloud resources in an economical manner while ensuring that the application performance meets the requirements in terms of data throughput. However, due to the complexity of the interplay between the building blocks, adequately setting resource limits of the components separately for various data rates is nearly impossible. In this paper, we propose a comprehensive approach that consists of measuring the resource footprint and data throughput performance of such a microservices-based application, analyzing the measurement results by data mining techniques, and finally formulating an optimization problem that aims to minimize the allocated resources given the performance constraints. We illustrate the benefits of the proposed approach on Cortex, an extension to Prometheus for storing monitored metrics data. The data-intensive nature of this illustrative example stems from real-time monitoring of metrics exposed by a multitude of applications running in a data center and the continuous analysis performed on the collected data that can be fetched from Cortex. We present Cortex’s performance vs resource footprint trade-off, and then we build regression models to predict the microservices’ resource consumption and draw a mathematical programming formulation to optimize the most important configuration parameters. Our most important finding is the linear relationship between resource consumption and application performance, which allows for applying linear regression and linear programming models. After the optimization, we compare our results to Cortex’s recommendation, leading to a CPU reservation reduced by 50-80%.","2374-9709","978-1-6654-0601-7","10.1109/NOMS54207.2022.9789857","Innovation Fund; Innovation Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9789857","cloud-native;microservices;performance;re-source footprint;optimization","Measurement;Cloud computing;Biological system modeling;Microservice architectures;Quality of service;Throughput;Brain modeling","","1","","15","IEEE","9 Jun 2022","","","IEEE","IEEE Conferences"
"Flexible, scalable, and robust architecture for industrial automation applications with real-time requirements","S. L. C. Rodriguez; D. M. Castro","Facultad de Ingeniería, Universidad Autónoma de Occidente, Cali, Colombia; Facultad de Ingeniería, Universidad Autónoma de Occidente, Cali, Colombia",2023 IEEE 6th Colombian Conference on Automatic Control (CCAC),"6 Dec 2023","2023","","","1","6","With the outbreak of the fourth industrial revolution, industrial automation applications demand a more flexible, scalable, and robust architecture than the one proposed in the ISA-95 standard. In addition, the high availability demanded by industrial processes hinders maintenance and updating tasks that go against information security policies. To address these challenges, some frameworks supported by virtualization and information distribution technologies have been generated for industrial automation systems. However, these proposals lack the means to implement real-time task scheduling algorithms, so it is difficult to migrate developments already implemented under these requirements. In this work, we present a microservices-based architecture that integrates virtualization technologies, a robust middleware for the communication layer, and a priority-based task scheduler. It also describes the implementation of this architecture using low-cost hardware components and free software, to be subsequently tested on a pressure control process in a laboratory setting. The obtained results confirm the effectiveness of the proposed architecture and meeting of real-time requirements, which enables supporting the diverse current industrial automation applications requirements, addressing the challenges of migration to Industry 4.0, and incorporating new functionalities.","2694-393X","979-8-3503-2472-3","10.1109/CCAC58200.2023.10333842","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10333842","Industrial automation;real-time;virtualization;interoperability;middleware;Industry 4.0","Process control;Microservice architectures;Computer architecture;Pressure control;Real-time systems;Fourth Industrial Revolution;Task analysis","","","","24","IEEE","6 Dec 2023","","","IEEE","IEEE Conferences"
"RAMSES: an Artifact Exemplar for Engineering Self-Adaptive Microservice Applications","V. Riccio; G. Sorrentino; E. Zamponi; M. Camilli; R. Mirandola; P. Scandurra","Politecnico di Milano, Milano, Italy; Politecnico di Milano, Milano, Italy; Politecnico di Milano, Milano, Italy; Politecnico di Milano, Milano, Italy; Karlsruhe Institute of Technology, Karlsruhe, Germany; University of Bergamo, Bergamo, Italy",2024 IEEE/ACM 19th Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),"19 Jun 2024","2024","","","161","167","This paper introduces RAMSES, an exemplar tailored for both practitioners and researchers working on self-adaptive microservice applications. By emphasizing a clear separation of concerns between the application and its adaptation logic, RAMSES realizes a reusable autonomic manager that implements a MAPE-K feedback loop whose components are microservices themselves. Its primary focus lies in addressing user-defined QoS attributes at runtime, like availability and performance. To illustrate its usage, we provide a practical example showing its mechanics in an e-food microservice application. Initial experiments indicate the advantages of utilizing RAMSES, as shown by a comparative analysis of the quality properties of a microservice application with and without self-adaptation.","2157-2321","979-8-4007-0585-4","10.1145/3643915.3644110","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10556141","Microservice applications;self-adaptation;MAPE-K;exemplar","Feedback loop;Runtime;Adaptive systems;Autonomous systems;Microservice architectures;Quality of service;Logic","","","","14","CCBY","19 Jun 2024","","","IEEE","IEEE Conferences"
"Grunt Attack: Exploiting Execution Dependencies in Microservices","X. Gu; Q. Wang; J. Liu; J. Wei",Louisiana State University; Louisiana State University; Louisiana State University; University of North Carolina at Charlotte,2024 54th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN),"30 Aug 2024","2024","","","115","128","Loosely-coupled and lightweight microservices running in containers are likely to form complex execution dependencies inside the system. The execution dependency arises when two execution paths partially share component microservices, resulting in potential runtime blocking effects. In this paper, we present Grunt Attack - a novel low-volume DDoS attack that takes advantage of the execution dependencies of microservice applications. Grunt Attack utilizes legitimate HTTP requests to accurately profile the internal pairwise dependencies of all supported execution paths in the target system. By grouping and characterizing all the execution paths based on their pairwise dependencies, the Grunt attacker can target only a few execution paths to launch a low-volume DDoS attack that achieves large performance damage to the entire system. To increase the attack stealthiness, the Grunt attacker avoids creating a persistent bottleneck by alternating the target execution paths within their dependency group. We validate the effectiveness of Grunt attack through experiments of open-source microservices benchmark applications on real clouds (e.g., EC2, Azure) equipped with state-of-the-art IDS/IPS systems and live attack scenarios. Our results show that Grunt attack consumes less than 20% additional CPU resource of the target system while increasing its average response time by over 10x.","2158-3927","979-8-3503-4105-8","10.1109/DSN58291.2024.00025","NSF(grant numbers:CNS-2000681); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10646949","Microservices;DDoS attack;SLA violations","Degradation;Runtime;Microservice architectures;Benchmark testing;Containers;Denial-of-service attack;HTTP","","","","61","IEEE","30 Aug 2024","","","IEEE","IEEE Conferences"
"Microservices-based software architecture and approaches","K. Bakshi","Cisco Systems Inc, Herndon, VA",2017 IEEE Aerospace Conference,"8 Jun 2017","2017","","","1","8","In the last few years, a revised software architecture style has been developed to design new software applications. This architecture style is particularly suited for use cases in the aerospace industry, from an independently deployable software service. The microservices architectural style develops a single application as a suite of small services, each running in its own process and communicating with lightweight mechanisms. These services are built around business and mission capabilities and independently deployable by fully automated machinery. With microservices, some types of applications become easier to build and maintain when they are broken down into smaller, composable pieces that work together. Each component is then developed separately, and the application is then simply the sum of its constituent components. This is in contrast to a traditional, “monolithic” application which is all developed in one piece. This paper will discuss, several aspects of microservices-based architecture, including several potential use cases for the aerospace industry. The characteristics of microservice-based architecture such as componentization, organization, endpoints and messaging mechanisms. The technical implementation of microservices by reviewing containerization, services communication and related architectural components. Specific open source projects and components that can be utilized to build microservices-based architecture. A sample set of use cases.","","978-1-5090-1613-6","10.1109/AERO.2017.7943959","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7943959","","Computer architecture;Software;Databases;Production;Tools;Organizations","","26","3","6","IEEE","8 Jun 2017","","","IEEE","IEEE Conferences"
"Design and Implementation of High-availability PaaS Platform Based on Virtualization Platform","Z. Wen; Y. Liang; G. Li","Institute of Computer Application, CAEP, Mianyang, China; Institute of Computer Application, CAEP, Mianyang, China; College of Computer Science, Sichuan University, Chengdu, China",2020 IEEE 5th Information Technology and Mechatronics Engineering Conference (ITOEC),"16 Jul 2020","2020","","","1571","1575","In view of the problems of the virtual platform failure migration mechanism under the cloud model and microservice architecture platform, the demand for redundant resources is large, and the failure recovery time is long. The key components such as the operating components, resource pools and middleware of the PaaS platform are analyzed, combined with virtualization The platform deployment application is practical. The PaaS platform high-availability architecture is designed to realize the PaaS platform high-availability deployment mode, which effectively improves the robustness of the PaaS platform and guarantees the business continuity of the application system running on the PaaS platform. This paper first analyzes the functional architecture and role positioning of the PaaS platform; secondly, it proposes high-availability design of operating components, resource pools and middleware, and at the same time maps the design to the physical deployment mode, the experimental results show that the design is feasible and effective.","","978-1-7281-4323-1","10.1109/ITOEC49072.2020.9141564","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9141564","Cloud model;Microservices;PaaS platform;High availability architecture;Robustness","Middleware;Computer architecture;Virtualization;Business;Servers;Redundancy;Monitoring","","3","","9","IEEE","16 Jul 2020","","","IEEE","IEEE Conferences"
"TDD4Fog: A Test-Driven Software Development Platform for Fog Computing Systems","R. Li; X. Liu; X. Zheng; C. Zhang; H. Liu","School of Information Technology Deakin University, Geelong, Australia; School of Information Technology Deakin University, Geelong, Australia; Department of Computing, Macquarie University, Sydney, Australia; School of Information Technology Deakin University, Geelong, Australia; School of Software and Electrical Engineering, Swinburne University of Technology, Melbourne, Australia","2020 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing (CCGRID)","14 Jul 2020","2020","","","673","676","As an ideal infrastructure for smart services, Fog Computing is becoming the next wave of IT investment harnessing the successful models of Cloud Computing and latest technologies such as 5G and Internet of Things (IoT). However, the development of Fog Computing systems is a big challenge due to its complex, heterogeneous and distributed nature. Currently, there are a few SDKs released by some public Cloud service providers to support the development of Fog services in a top-down fashion as the key motive is to leverage their business Cloud services. However, Fog Computing systems are usually designed in a bottom-up fashion as the major functionalities are centred around the Edge Nodes and the End Devices. Meanwhile, significant efforts are required to verify the conformance of software behaviours as the collaboration between the End Devices, Edge Nodes and Cloud Servers is vital to the success of a Fog Computing System. Therefore, a holistically designed software development platform is urgently required. In this paper, we propose TDD4Fog, a test-driven software development platform for Fog Computing systems. Following the Test-Driven Development (TDD) methodology and a bottom-up design fashion, TDD4Fog supports the microservice architecture and provides the Test-Driven utilities such as metamorphic testing, mutation testing and random testing for the whole software development lifecycle of Fog Computing systems. To demonstrate the feasibility of TDD4Fog, we have presented some preliminary results on the key components of TDD4Fog and discussed some important future research directions.","","978-1-7281-6095-5","10.1109/CCGrid49817.2020.00-25","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9139723","Test-Driven Development;DevOps;Microservices;Fog Computing;Smart Services","Edge computing;Testing;Cloud computing;Software;Autonomous vehicles;Computer architecture;Servers","","4","","9","IEEE","14 Jul 2020","","","IEEE","IEEE Conferences"
"A Deployment Management of High-Availability Microservices for Edge Computing","H. -M. Chen; S. -Y. Chen; Z. -X. Zheng; T. -W. Huang; C. -Y. Huang","Dept. of Computer Science and Information Engieering, National Taichung University of Science and Technology, Taichung, Taiwan (R.O.C); Dept. of Computer Science and Information Engieering, National Taichung University of Science and Technology, Taichung, Taiwan (R.O.C); Dept. of Computer Science and Information Engieering, National Taichung University of Science and Technology, Taichung, Taiwan (R.O.C); Dept. of Computer Science and Information Engieering, National Taichung University of Science and Technology, Taichung, Taiwan (R.O.C); Dept. of Engineering Science, National Cheng Kung University, Tainan, Taiwan (R.O.C)","2020 International Symposium on Computer, Consumer and Control (IS3C)","8 Apr 2021","2020","","","110","113","In recent years, due to the emergence of Edge Computing architecture, the microservice computing originally located in the cloud has been extended to the edge to reduce network latency. At the same time, the data transmission bandwidth is dispersed on the edge, reducing the usage of network bandwidth, and thus shortening the response time of the service. In addition, the way which the cloud manages the edge is called cloud-edge collaboration. This is the unified management of microservice operations at the edge by the cloud. And, cloud-edge collaboration can also reduce maintenance costs. KubeEdge is an open source cloud-edge collaboration architecture by using the cloud to manage multiple edge microservices. However, if there are multiple microservices that need to be continuously deployed and updated, a more complete solution is still needed in microservice management. Hence, this study proposes an edge computing architecture that apply additional component to KubeEdge to deploy and manage containerized microservices automatically.","","978-1-7281-9362-5","10.1109/IS3C50286.2020.00036","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9394019","Edge Computing;Microservice;Deployment;KubeEdge","Collaboration;Computer architecture;Bandwidth;User interfaces;Maintenance engineering;Time factors;Edge computing","","2","","6","IEEE","8 Apr 2021","","","IEEE","IEEE Conferences"
"Dynamic Micro-Frontends","J. Kičić; M. Ljubojević; M. Savić","Faculty of Electrical Engineering, University of Banja Luka, Banja Luka, Bosnia and Herzegovina; Faculty of Electrical Engineering, University of Banja Luka, Banja Luka, Bosnia and Herzegovina; Faculty of Electrical Engineering, University of Banja Luka, Banja Luka, Bosnia and Herzegovina","2024 11th International Conference on Electrical, Electronic and Computing Engineering (IcETRAN)","3 Sep 2024","2024","","","1","5","Economic and business related demands of decreasing time to market and efficient production in an ever more efficient manner have manifested themselves in software development as well. They are most visible in the use of streamlined development approaches and production of aggressively reusable components, on both server and client sides of modern applications. On the server side, the modern development is dominated by tendency to use microservice based architectures, while on the client side, the same idea is realized through the use of micro-frontends. Micro-frontend applications represent a natural counterpart to numerous segmented and compartmentalized backend services. One of the issues related to micro-fronted approach is relatively low support for rapid deployment and evolution of individual components. In this paper we present a novel approach that enables fully dynamic use and deployment of micro-frontends, synchronized with their respective micro-services, both in development and in production stages. We also show possible use cases beyond classic scenarios present in existing practice of micro-frontend applications.","","979-8-3503-8699-8","10.1109/IcETRAN62308.2024.10645144","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10645144","microservice architecture;micro-frontend applications;shadow-dom;software testing","Economics;Microservice architectures;Time to market;Production;Aerodynamics;Servers;Synchronization","","","","14","IEEE","3 Sep 2024","","","IEEE","IEEE Conferences"
"A microservices-based iterative development approach for usable, reliable and explainable A.I.-infused medical applications using R.U.P","D. P. Panagoulias; M. Virvou; G. A. Tsihrintzis","Department of Informatics, University of Piraeus, Piraeus, Greece; Department of Informatics, University of Piraeus, Piraeus, Greece; Department of Informatics, University of Piraeus, Piraeus, Greece",2022 IEEE 34th International Conference on Tools with Artificial Intelligence (ICTAI),"18 Apr 2023","2022","","","1028","1035","The Rational Unified Process (R.U.P.) is an iterative Software Engineering Process, that ensures alignment between engineers and stakeholders through optimized and detailed partinionalised steps within predefined constraints [1]. The independently deployable services that are components of distributed systems are called microservices. They are part of applications and are easier to manage and scale. Each microservice serve different purpose and has a unique responsibility making it easier to understand manage and collaborate on. Medical applications are created to assist in treatment, disease prevention and health optimization. However patients' needs and abilities vary and patients' requirements and definitions on the usability aspect of an application are different and should be acknowledged for the application to be successful and for the patients/users to benefit from it. In this study the development of an A.I.-infused medical application, is outlined through the R.U.P. methodology and built using microservices, where the patients' needs and requirements are at the center of continuous development process focused on improvements.","2375-0197","979-8-3503-9744-4","10.1109/ICTAI56018.2022.00157","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10098026","Biomarkers;nutritional biomarkers;microservices;rational unified process;user experience;explainable A.I.","Biomedical equipment;Microservice architectures;Medical services;Iterative methods;Stakeholders;Reliability;Usability","","4","","31","IEEE","18 Apr 2023","","","IEEE","IEEE Conferences"
"An improved approach to the development of software with increased requirements for flexibility and reliability in terms of creating small and medium-sized projects","V. Lakhai; O. Kuzmych; M. Seniv","Institute of Computer Sciences and Information Technology, Lviv Polytechnic National University, Lviv, Ukraine; Institute of Computer Sciences and Information Technology, Lviv Polytechnic National University, Lviv, Ukraine; Institute of Computer Sciences and Information Technology, Lviv Polytechnic National University, Lviv, Ukraine",2022 IEEE 17th International Conference on Computer Sciences and Information Technologies (CSIT),"2 Jan 2023","2022","","","474","477","The use of new and improved software development approaches is becoming a necessity due to high quality requirements and increasing development complexity. This paper analyzes the most common approaches to the development of flexible and reliable software as well as determines their weaknesses and strengths. Based on the analysis, possible improvements to the existing approaches were proposed and the idea of an improved approach to software development with increased requirements for flexibility and reliability was formed. This approach, unlike the existing ones, provides comprehensive recommendations to software developers regarding the use of the most common practices in the conditions of creating small and medium-sized projects.","2766-3639","979-8-3503-3431-9","10.1109/CSIT56902.2022.10000787","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10000787","Software engineering;complexity;reliability;flexibility;methodologies;approaches","Microservice architectures;Computer architecture;Reliability engineering;Software;Software reliability;Complexity theory;Information technology","","4","","12","IEEE","2 Jan 2023","","","IEEE","IEEE Conferences"
"CrowdSensing for smart mobility through a service-oriented architecture","A. Melis; S. Mirri; C. Prandi; M. Prandini; P. Salomoni; F. Callegati","Department of Electrical and Information Engineering, Università di Bologna, Italy; Department of Computer Science and Engineering, Università di Bologna, Italy; Department of Computer Science and Engineering, Università di Bologna, Italy; Department of Computer Science and Engineering, Università di Bologna, Italy; Department of Computer Science and Engineering, Università di Bologna, Italy; Department of Electrical and Information Engineering, Università di Bologna, Italy",2016 IEEE International Smart Cities Conference (ISC2),"3 Oct 2016","2016","","","1","2","Crowdsensing is a powerful approach to build representations of specific aspects of reality which are of interest for citizens in smart cities, and in particular for people with special needs. In this work, we present an application of the microservice paradigm to create a mobility services platform. By exposing each part of the process as a microservice, we achieve the ability of developing applications as orchestration of available components. Moreover, we leverage the possibility of sharing data between different applications in a controlled environment.","","978-1-5090-1846-8","10.1109/ISC2.2016.7580861","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7580861","MaaS;Microservices;Sensing;Data Quality","Sensors;Quality management;Conferences;Reliability;Smart cities;Biological system modeling;Prototypes","","31","","8","IEEE","3 Oct 2016","","","IEEE","IEEE Conferences"
"On Monolithic and Microservice Deployment of Network Functions","S. Sharma; N. Uniyal; B. Tola; Y. Jiang","NEC Laboratories Europe, Heidelberg; NEC Laboratories Europe, Heidelberg; NTNU, Norway; NTNU, Norway",2019 IEEE Conference on Network Softwarization (NetSoft),"22 Aug 2019","2019","","","387","395","Network Function Virtualization (NFV) has recently attracted telecom operators to migrate network functionalities from expensive bespoke hardware systems to virtualized IT infrastructures where they are deployed as software components. Scalability, up-gradation, fault tolerance and simplified testing are important challenges in the field of NFV. In order to overcome these challenges, there is significant interest from research communities to scale or decompose network functions using the monolithic and microservice approach. In this paper, we compare the performance of both approaches using an analytic model and implementing test-bed experiments. In addition, we calculate the number of instances of monoliths or microservices in which a network function could be scaled or decomposed in order to get the maximum or required performance. Single and multiple CPU core scenarios are considered. Experimentation is performed by using an open source network function, SNORT and running monoliths and microservices of SNORT as Docker containers on bare metal machines. The experimental results compare the performance of monolith and microservice approaches and are used to estimate the validity of the analytic model. The results also show the effectiveness of our approach in finding the number of instances (monoliths or microservices) required to maximize performance.","","978-1-5386-9376-6","10.1109/NETSOFT.2019.8806705","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8806705","Network Functions;Performance;VNF Monoliths;VNF Microservices;VNF decomposition","","","7","","28","IEEE","22 Aug 2019","","","IEEE","IEEE Conferences"
"A service orchestration architecture for Fog-enabled infrastructures","M. S. de Brito; S. Hoque; T. Magedanz; R. Steinke; A. Willner; D. Nehls; O. Keils; F. Schreiner","Architekturen der Vermittlungsknoten (AV), Technische Universität, Berlin, Germany; Architekturen der Vermittlungsknoten (AV), Technische Universität, Berlin, Germany; Architekturen der Vermittlungsknoten (AV), Technische Universität, Berlin, Germany; Software-based Infrastructures (NGNI), Fraunhofer FOKUS, Berlin, Germany; Software-based Infrastructures (NGNI), Fraunhofer FOKUS, Berlin, Germany; Software-based Infrastructures (NGNI), Fraunhofer FOKUS, Berlin, Germany; Software-based Infrastructures (NGNI), Fraunhofer FOKUS, Berlin, Germany; Software-based Infrastructures (NGNI), Fraunhofer FOKUS, Berlin, Germany",2017 Second International Conference on Fog and Mobile Edge Computing (FMEC),"15 Jun 2017","2017","","","127","132","The development of Fog Computing technology is crucial to address the challenges to come with the mass adoption of Internet Of Things technology, where the generation of data tends to grow at an unprecedented pace. The technology brings computing power to the surrounds of devices, to offer local processing, filtering, storage and analysis of data and control over actuators. Orchestration is a requirement of Fog Computing technology to deliver services, based on the composition of microservices. It must take into consideration the heterogeneity of the IoT environment and device's capabilities and constraints. This heterogeneity requires a different approach for orchestration, be it regarding infrastructure management, node selection and/or service placement. Orchestrations shall be manually or automatically started through event triggers. Also, the Orchestrator must be flexible enough to work in a centralized or distributed fashion. Orchestration is still a hot topic and can be seen in different areas, especially in the Service Oriented Architectures, hardware virtualization, in the Cloud, and in Network Virtualization Function. However, the architecture of these solutions is not enough to handle Fog Requirements, specially Fog's heterogeneity, and dynamics. In this paper, we propose an architecture for Orchestration for the Fog Computing environment. We developed a prototype to prof some concepts. We discuss in this paper the implementation, and the tools chose, and their roles. We end the paper with a discussion on performance indicators and future direction on the evaluation of non-functional aspects of the Architecture.","","978-1-5386-2859-1","10.1109/FMEC.2017.7946419","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7946419","Fog Computing;Orchestration;Infrastructure Management","Containers;Computer architecture;Edge computing;Cloud computing;Virtualization;Mobile communication;Context","","58","","18","IEEE","15 Jun 2017","","","IEEE","IEEE Conferences"
"AIBench Scenario: Scenario-Distilling AI Benchmarking","W. Gao; F. Tang; J. Zhan; X. Wen; L. Wang; Z. Cao; C. Lan; C. Luo; X. Liu; Z. Jiang","State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences; State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences; State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences; State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences; State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences; Alibaba; State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences; State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences; Alibaba; State Key Laboratory of Computer Architecture, Institute of Computing Technology, Chinese Academy of Sciences",2021 30th International Conference on Parallel Architectures and Compilation Techniques (PACT),"18 Oct 2021","2021","","","142","158","Modern real-world application scenarios like Internet services consist of a diversity of AI and non-AI modules with huge code sizes and long and complicated execution paths, which raises serious benchmarking or evaluating challenges. Using AI components or micro benchmarks alone can lead to error-prone conclusions. This paper presents a methodology to attack the above challenge. We formalize a real-world application scenario as a Directed Acyclic Graph-based model and propose the rules to distill it into a permutation of essential AI and non-AI tasks, which we call a scenario benchmark. Together with seventeen industry partners, we extract nine typical scenario benchmarks. We design and implement an extensible, configurable, and flexible benchmark framework. We implement two Internet service AI scenario benchmarks based on the framework as proxies to two real-world application scenarios. We consider scenario, component, and micro benchmarks as three indispensable parts for evaluating. Our evaluation shows the advantage of our methodology against using component or micro AI benchmarks alone. The specifications, source code 11Zenodo: https://doi.org/10.5281/zenodo.5158715 GitHub: https://github.com/BenchCouncil/aibench_scenario, testbed, and results are publicly available from https://www.benchcouncil.org/aibench/scenario/.","","978-1-6654-4278-7","10.1109/PACT52795.2021.00018","Chinese Academy of Sciences(grant numbers:BZ201800001); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9563026","AI;Scenario;Benchmark","Industries;Codes;Web and internet services;Benchmark testing;Parallel architectures;Complexity theory;Artificial intelligence","","6","","76","IEEE","18 Oct 2021","","","IEEE","IEEE Conferences"
"The case for serverless mobile networking","M. Gramaglia; P. Serrano; A. Banchs; G. Garcia-Aviles; A. Garcia-Saavedra; R. Perez","University Carlos III of Madrid, Madrid, Spain; University Carlos III of Madrid, Madrid, Spain; University Carlos III of Madrid IMDEA Networks Institute, Madrid, Spain; University Carlos III of Madrid IMDEA Networks Institute, Madrid, Spain; NEC Laboratories Europe, Heidelberg, Germany; Telcaria Ideas S.L., University Carlos III of Madrid, Madrid, Spain",2020 IFIP Networking Conference (Networking),"17 Jul 2020","2020","","","779","784","The softwarization of communication networks provides notable benefits, such as flexibility, improved resource efficiency, and commoditization. In exchange, softwarization requires an increased management overhead and the need to re-design network operation. While the mobile networking ecosystem is currently adapting this new paradigm with other network-related aspects (e.g., network slicing), cloud computing already addressed such problems with the introduction of serverless architectures, also known as Function as a Service (FaaS). With this approach, the software is decomposed into its minimum building blocks, i.e., functions, maximizing scalability, resource efficiency, and flexibility. In this paper, we analyze the potential adoption of the FaaS paradigm by the mobile networking ecosystem, discussing the implicit advantages, the challenges to address, and some solutions to overcome them.","","978-3-903176-28-7","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9142747","Network Slicing;Network Softwarization;Serverless computing","Cloud computing;Software;Computer architecture;Hardware;Servers;Scalability;5G mobile communication","","2","","21","","17 Jul 2020","","","IEEE","IEEE Conferences"
"Cache Replacement Algorithm Based on Dynamic Constraints in Microservice Platform","L. Li; C. Ye; H. Zhou","School of Computer Science and Technology, Hainan University, Haikou, China; School of Computer Science and Technology, Hainan University, Haikou, China; School of Computer Science and Technology, Hainan University, Haikou, China",2022 International Conference on Service Science (ICSS),"24 Aug 2022","2022","","","167","174","Distributed cache is one of the most important components in cloud computing and microservice systems. Adding cache components to the microservice system can significantly improve the concurrency and throughput of the whole microservice framework, and effectively promote the overall performance of the microservice system. However, traditional caching algorithm can easily lead to the imbalance of cache resource allocation in microservice system, thus affecting the performance of the microservice system. We study the basic architecture of cache in microservice platform, and propose the mathematical model of distributed cache and the probability distribution model of data access in microservice platform. Next, based on the above mathematical model, we design a cache replacement algorithm based on dynamic constraints in microservice platform. The algorithm can effectively solve a series of problems of traditional algorithms in microservice platform, making the algorithm more suitable for the environment of microservice architecture. We evaluate and verify the algorithm on the simulation software platform. Experimental results show that the algorithm meets the performance requirements of high cache hit rate, high concurrency and high throughput in the microservice platform, and is significantly better than the traditional cache algorithms.","","978-1-6654-9861-6","10.1109/ICSS55994.2022.00033","National Key Research and Development Program of China; Research and Development; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9860193","Cloud Computing;Microservices;Distributed Cache;Cache Replacement","Concurrent computing;Heuristic algorithms;Software algorithms;Microservice architectures;Distributed databases;Prediction algorithms;Throughput","","1","","27","IEEE","24 Aug 2022","","","IEEE","IEEE Conferences"
"Runtime Orchestration of Distributed Control System Services with TOSCA, Kubernetes, and GitOps","S. Linsbauer; R. Hark; H. Koziolek; N. Eskandani",ABB Corporate Research Center Germany; ABB Corporate Research Center Germany; ABB Corporate Research Center Germany; ABB Corporate Research Center Germany,2024 IEEE 21st International Conference on Software Architecture Companion (ICSA-C),"21 Aug 2024","2024","","","40","47","Runtime orchestration of cloud-native microservice systems remains a challenge with many technology options, such as Kubernetes for managing containers and OASIS TOSCA, a standard for orchestrating cloud services. Researchers and practitioners have proposed different approaches on how the benefits of Kubernetes and TOSCA could be combined, but followed different design philosophies and did not reach consensus. An analysis of the different combinations is missing and existing TOSCA and Kubernetes combinations do not consider the integration of real-time embedded controllers without container workloads, nor a safeguarding of configuration changes, which can be achieved using the GitOps paradigm. In this experience report, we describe and analyze different options for combining TOSCA and Kubernetes. Following one of the options, we have enhanced an existing TOSCA orchestrator to demonstrate software updates across heterogeneous software services as well as a GitOps extension for TOSCA service models. We found that TOSCA workflows are well suited for updates spanning different technologies and that a custom GitOps operator is needed in case not all components are orchestrated by Kubernetes.","2768-4288","979-8-3503-6625-9","10.1109/ICSA-C63560.2024.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10628307","Software architecture;microservices;software containers;deployment;OASIS TOSCA;Kubernetes;distributed control systems;case study;modeling;GitOps","Runtime;Software architecture;Security management;Decentralized control;Process control;Containers;Software","","","","19","IEEE","21 Aug 2024","","","IEEE","IEEE Conferences"
"Latency-Optimal Network Microservice Architecture Deployment in SDN","J. L. Herrera; D. Scotece; J. Galán-Jiménez; J. Berrocal; G. Di Modica; L. Foschini","Dept. of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Dipartamento di Informatica Scienza e Ingegneria, University of Bologna, Italy; Dept. of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Dept. of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Dipartamento di Informatica Scienza e Ingegneria, University of Bologna, Italy; Dipartamento di Informatica Scienza e Ingegneria, University of Bologna, Italy",GLOBECOM 2023 - 2023 IEEE Global Communications Conference,"26 Feb 2024","2023","","","5202","5207","The Software-Defined Networking (SDN) paradigm enables network administrators to manage the behavior of the network thanks to a centralized control plane. By programming network-level applications, it is possible to determine how traffic flows must be handled programmatically. In the same manner that computing applications have evolved from monolithic to microservice-based architectures, network-level applications are expected to evolve into microservice-based SDN controllers, implementing each application as a replicable and individually deployable component of the SDN controller. In such a scenario, the Quality of Service (QoS) experienced by traffic flows depends on how these microservices are placed and deployed through the network topology. In this work, we provide a system to optimize the QoS of the traffic in microservice-based SDN networks by optimally placing and replicating the network-level microservices. Experimental results show the effectiveness of the proposed solution over a real network topology with varying traffic loads.","2576-6813","979-8-3503-1090-0","10.1109/GLOBECOM54140.2023.10436838","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10436838","Software-Defined Networking;Service Oriented Computing;Micro-services;Quality of Service","Network topology;Microservice architectures;Quality of service;Computer architecture;Telecommunication traffic;Programming;Software defined networking","","","","14","IEEE","26 Feb 2024","","","IEEE","IEEE Conferences"
"Transition of Cloud Computing from Traditional Applications to the Cloud Native Approach","D. Bharadwaj; B. S. Premananda","Department of Electronics and Telecommunication, RV College of Engineering, Bengaluru, India; Department of Electronics and Telecommunication, RV College of Engineering, Bengaluru, India",2022 IEEE North Karnataka Subsection Flagship International Conference (NKCon),"26 May 2023","2022","","","1","8","A cloud-native application hosted in the cloud and are designed to capitalize on the inherent characteristics of a cloud computing software delivery model. Applications that are cloud-native use a microservice design, which effectively distributes resources to each service they require, allowing them to be flexible and adaptive to a cloud architecture. This paper discusses cloud native approach in detail and compares with the traditional approach to designing, building and deploying applications and highlights the need to switch to cloud native. The four major components of Cloud native architecture are microservices, devops, continuous delivery and containers. The various factors to consider during the design of a cloud native application and the development stack required to do so, are also discussed in detail. Tools such as the 12 factor application, API based design, and microservices, which are essential for cloud native applications, are examined. Some of the other challenges that come with cloud computing are resolved by cloud-native applications. Cloud native solutions, from an economic perspective, provide the full value of the cloud by enabling applications to scale and change more quickly than before. This scalability gives the company new chances to grow their revenue, become more efficient, or provide better customer service.","","978-1-6654-5342-4","10.1109/NKCon56289.2022.10126871","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10126871","Cloud Native;Containers;Continuous Delivery;Microservices;12 Factor Application","Economics;Cloud computing;Architecture;Scalability;Customer services;Microservice architectures;Computer architecture","","","","18","IEEE","26 May 2023","","","IEEE","IEEE Conferences"
"Research on Dynamic Analysis Technology of Economic Evaluation of Power Grid Digital Technology","G. Wang; A. Dong; J. Pan","Global Energy Interconnection Research Institute Co., Ltd, Nanjing, Jiangsu, China; State Grid Key Laboratory of Information & Network Security, Changchun, China; State Grid Key Laboratory of Information & Network Security, Changchun, China",2021 3rd International Conference on Applied Machine Learning (ICAML),"18 Feb 2022","2021","","","505","509","Digitization plays a more and more important role in the development of power grid. Traditional technical and economic evaluation methods are difficult to meet the needs of Digital Construction Evaluation under the new situation. Based on Zachman and other enterprise architecture theories, aiming at the business demand scenarios such as basic resource operation, power data value-added services, digital platform ecological construction, this paper studies the optimization technology of power grid digital architecture meta model, including business architecture, data architecture, application architecture, technology architecture meta model optimization, etc. Research on dynamic analysis technology of intelligent quantitative control, including technology and economic analysis and evaluation technology of digital economic benefits of power grid enterprises for multi application scenarios, digital technology and economic evaluation model based on multi-dimensional index sensitivity analysis, technology and economic analysis model of multi-source correlation between business demand scenarios and digital architecture, and dynamic analysis model technology of intelligent quantitative control. This paper innovatively studies the relevance of business demand scenarios, technical and economic analysis rules and enterprise digital architecture, and constructs a multi-source digital benefit analysis model based on the integration of variables and factors. According to the different business scenarios such as basic resource operation, power data value-added services, and digital platform ecological construction, this paper analyzes the relationship between business demand scenarios and digital architecture, Dynamic adjustment of technical and economic evaluation index and weight can more accurately complete the digital economic benefit evaluation of power grid enterprises.","","978-1-6654-2125-6","10.1109/ICAML54311.2021.00112","State Grid Corporation of China(grant numbers:5700-202129180A-0-0-00); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9711951","digital project;technical and economic evaluation;enterprise architecture;Digital architecture;sensitivity analysis;intelligent quantization","Economics;Analytical models;Biological system modeling;Power system dynamics;Dynamic scheduling;Power grids;Data models","","","","6","IEEE","18 Feb 2022","","","IEEE","IEEE Conferences"
"SparseRCA: Unsupervised Root Cause Analysis in Sparse Microservice Testing Traces","Z. Yao; H. Ye; C. Pei; G. Cheng; G. Wang; Z. Liu; H. Chen; H. Cui; Z. Li; J. Li; G. Xie; D. Pei","Tsinghua University; Ant Group; Computer Network Information Center, Chinese Academy of Sciences; Ant Group; Ant Group; Ant Group; Ant Group; Computer Network Information Center, Chinese Academy of Sciences; Bytedance Inc.; Computer Network Information Center, Chinese Academy of Sciences; Computer Network Information Center, Chinese Academy of Sciences; Tsinghua University",2024 IEEE 35th International Symposium on Software Reliability Engineering (ISSRE),"3 Dec 2024","2024","","","391","402","Microservice architecture has become a predominant paradigm in the software industry. This architecture necessitates robust end-to-end testing to ensure seamless integration of all components before deployment. Rapidly pinpointing issues when test cases fail is crucial for enhancing software development efficiency. However, in testing environments, the available trace is often sparse, and the system is continuously upgrading, which renders existing microservice-based root cause analysis (RCA) ineffective. To address these challenges, we propose SparseRCA. By assessing the abnormality of the exclusive latency, SparseRCA directly determines the probability of the root cause, solving the challenge of not being able to fully obtain the fault propagation information, such as call relationships in sparse trace scenarios. At the same time, by reconstructing the exclusive latency using the decoupled atomic span units, it solves the problem of latency prediction for new traces caused by frequent upgrades. We evaluate SparseRCA on real-world datasets from a large e-commerce system’s testing environment, where it demonstrates significant improvements over existing models. Our findings underscore the effectiveness of SparseRCA in addressing the challenges of RCA in microservice testing environments.","2332-6549","979-8-3503-5388-4","10.1109/ISSRE62328.2024.00045","National Natural Science Foundation of China; National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10771488","root cause analysis;software testing;microservice traces","Root cause analysis;Heuristic algorithms;Software algorithms;Microservice architectures;Computer architecture;Software;Software reliability;Electronic commerce;Testing;Software development management","","","","57","IEEE","3 Dec 2024","","","IEEE","IEEE Conferences"
"A Multi-Agent Deep-Reinforcement Learning Approach for Application-Agnostic Microservice Scaling","B. Fodor; Á. Jakub; G. Szűcs; B. Sonkoly","Department of Telecommunications and Media Informatics, Faculty of Electrical Engineering and Informatics, Budapest University of Technology and Economics, Hungary; Department of Telecommunications and Media Informatics, Faculty of Electrical Engineering and Informatics, Budapest University of Technology and Economics, Hungary; Department of Telecommunications and Media Informatics, Faculty of Electrical Engineering and Informatics, Budapest University of Technology and Economics, Hungary; Department of Telecommunications and Media Informatics, Faculty of Electrical Engineering and Informatics, Budapest University of Technology and Economics, Hungary",2023 IEEE Virtual Conference on Communications (VCC),"26 Mar 2024","2023","","","139","144","Efficient cloud-based microservice scaling needs to take into account the inter-dependencies between application components to avoid bottlenecks and to swiftly adapt to dynamically changing environments or user demands. Most of today's solutions are not adaptive enough especially to handle large-scale microservices. In this paper, we propose a novel solution leveraging Multi-Agent Deep Reinforcement Learning (MADRL). First, we define our model for horizontal scaling of microservices and formalize the problem. Second, we propose an algorithm based on Multi-Agent Deep Deterministic Policy Gradient (MADDPG) to solve it. Third, a dedicated simulation environment is presented, where arbitrary microservices can be created for testing purposes, and we carry out a comprehensive evaluation. We analyze the performance of the model for microservices of different sizes, investigating its ability to optimize scaling while considering efficient resource utilization and application stability. Results show that our MADDPG-based RL algorithm outperforms the industry standard approach provided by Kubernetes' HPA by at least 14% in terms of resource usage cost.","","979-8-3503-1880-7","10.1109/VCC60689.2023.10474695","National Research, Development and Innovation Fund(grant numbers:FK_20); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10474695","cloud computing;multi-agent reinforcement learning;auto-scaling;microservice scaling","Training;Industries;Machine learning algorithms;Microservice architectures;Clustering algorithms;Deep reinforcement learning;Stability analysis","","","","19","IEEE","26 Mar 2024","","","IEEE","IEEE Conferences"
"Visualization Tool for Designing Microservices with the Monolith-First Approach","R. Nakazawa; T. Ueda; M. Enoki; H. Horii","IBM Research - Tokyo, Tokyo, Japan; IBM Research - Tokyo, Tokyo, Japan; IBM Research - Tokyo, Tokyo, Japan; IBM Research - Tokyo, Tokyo, Japan",2018 IEEE Working Conference on Software Visualization (VISSOFT),"11 Nov 2018","2018","","","32","42","The microservice architecture is essential for agile development and deployment of the application components; however, designing microservices for a web application is not a straight-forward task. One of the best ways to design microservices is to decompose a monolithic prototype of an application into microservices on the basis of both the complexity in engineering and the component boundaries of the application in the early phase of development. We propose a visualization tool allowing developers to interactively design microservice applications on the basis of the characteristics of source codes and the behaviors of a monolithic prototype. This visualization tool first constructs a calling-context tree from profile data taken in a dry-run of the application. Next, it generates an initial microservice design while considering keyword features in the source codes or amount of function calls between components. Developers can interactively refine this design via this visual interface by taking four-choice actions to revise boundaries of microservices while considering expected communications between them. This interaction will have a significant impact on runtime performance. Case studies of two open-source benchmark applications demonstrate the proposed tool enables interactive design of microservices. The results of the demonstration show that compared to the official microservice designs of the applications, the proposed tool can effectively design microservice applications.","","978-1-5386-8292-0","10.1109/VISSOFT.2018.00012","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8530129","Software visualization;microservices;monolithic application;calling context;call graph","Tools;Visualization;Data visualization;Prototypes;Computer architecture;Software;Measurement","","16","1","40","IEEE","11 Nov 2018","","","IEEE","IEEE Conferences"
"Performance and Scalability Testing Strategy Based on Kubemark","Q. Lei; W. Liao; Y. Jiang; M. Yang; H. Li","University of International Business and Economics, Beijing, China; Shepherd University, Shepherd town, USA; University of Nevada, Las Vegas Las Vegas, USA; University of Nevada, Las Vegas Las Vegas, USA; PineCone Tech",2019 IEEE 4th International Conference on Cloud Computing and Big Data Analysis (ICCCBDA),"30 May 2019","2019","","","511","516","The technology of container orchestration dramatically speeds up the extension of applications architected on microservices. As the complexity of those applications continues to increase, the orchestration system needs to resolve performance challenge to deploy thousands of coexisting applications to work cooperatively, and to reach the requirements of efficiency and scalability of microservices architectures. The Kubernetes is an open source project to implement container orchestration, and more popular than the others. For performance testing, the Kubernetes provides Kubemark as a deployment tool, which can simulate a large- scale Kubenetes clusters. Kubemark supports the performance evaluation of cluster scale much larger than the real cluster scale. This paper addresses performance issues of microservices structure, describes the architecture of Kubernetes to implement schedule of resource, and finally proposes a method of performance testing with Kubemark.","","978-1-7281-1410-1","10.1109/ICCCBDA.2019.8725658","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8725658","Microservices;Kubernetes;Kubemark;End-to- end(e2e);performance testing","Monitoring;Measurement;Containers;Testing;Cloud computing;Computer architecture;Business","","3","","14","IEEE","30 May 2019","","","IEEE","IEEE Conferences"
"Unleashing GPUs for Network Function Virtualization: an open architecture based on Vulkan and Kubernetes","J. Haavisto; T. Cholez; J. Riekki","Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; CNRS, Inria, LORIA, Université de Lorraine, Nancy, France; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland",NOMS 2022-2022 IEEE/IFIP Network Operations and Management Symposium,"9 Jun 2022","2022","","","1","8","General-purpose computing on graphics processing units (GPGPU) is a promising way to speed up computationally intensive network functions, such as performing real-time traffic classification based on machine learning. Recent studies have focused on integrated graphics units and various performance optimizations to address bottlenecks such as latency. However, these approaches tend to produce architecture-specific binaries and lack the orchestration of functions. A complementary effort would be a GPGPU architecture based on standard and open components, which allows the creation of interoperable and orchestrable network functions.This study describes and evaluates such open architecture based on the cross-platform Vulkan API, in which we execute hand-written SPIR-V code as a network function. We also demonstrate a multi-node orchestration approach for our proposed architecture using Kubernetes. We validate our architecture by executing SPIR-V code performing traffic classification with random forest inference. We test this application both on discrete and integrated graphics cards and on x86 and ARM. We find that in all cases the GPUs are faster than the baseline Cython code.","2374-9709","978-1-6654-0601-7","10.1109/NOMS54207.2022.9789822","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9789822","","Graphics;Codes;Graphics processing units;Computer architecture;Optimal scheduling;Programming;Software","","1","","27","IEEE","9 Jun 2022","","","IEEE","IEEE Conferences"
"MicroMatic: Fully Automated Microservices Identification Approach from Monolithic Systems","I. Trabelsi; B. Popa; J. Péreyrol; P. -O. Beaulieu; N. Moha","École de technologie supérieure ÉTS, Montréal, QC, Canada; École de technologie supérieure ÉTS, Montréal, QC, Canada; École de technologie supérieure ÉTS, Montréal, QC, Canada; École de technologie supérieure ÉTS, Montréal, QC, Canada; École de technologie supérieure ÉTS, Montréal, QC, Canada",2024 IEEE/ACM 6th International Workshop on Software Engineering Research & Practices for the IoT (SERP4IoT),"27 Aug 2024","2024","","","7","13","The Internet of Things (IoT) revolution is transforming system interactions and functionalities, necessitating more adaptable, scalable, and responsive systems architectures. These IoT systems build on recent advances in software architectures, particularly Microservices Architecture (MSA), enabling scalability, facilitating cloud deployment, and supporting seamless integration with DevOps practices. While new IoT applications can seamlessly integrate Microservices Architecture from their design, the migration of existing mono-lithic IoT systems to MSA is essential to leverage its benefits yet it remains a challenging and costly process. To facilitate this migration, we propose Micromatic, a tooled fully automated microser-vices identification approach that is based on static-relationship analyses between code elements as well as semantic analyses of the source code. Our approach relies on Machine Learning (ML) techniques and uses service types to guide the identification of microservices from IoT monolithic systems. We validate the effectiveness of our tool through a detailed case study, comparing our results with established ground truths. This process included a quantitative evaluation of the microservices generated, focusing on their business capabilities. Our findings demonstrate the efficiency of Micromatic in automating one of the most labour-intensive aspects of migrating legacy systems to a microservices framework, successfully identifying architecturally significant microservices with 62.5% precision and 45.5% recall.","","979-8-4007-0578-6","10.1145/3643794.3648283","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10647210","Migration;Microservices;Service Types;Machine learning;Semantic Analysis;Automation;Tool","Training;Software architecture;Source coding;Semantics;Microservice architectures;Systems architecture;Computer architecture","","","","29","","27 Aug 2024","","","IEEE","IEEE Conferences"
"Granularity Cost Analysis for Function Block as a Service","A. Homay; A. Zoitl; M. d. Sousa; M. Wollschlaeger; C. Chrysoulas","Faculty of Computer Science, Technische Universität Dresden, Dresden, Germany; LIT | CPS Lab, Johannes Kepler University Linz, Linz, Austria; Faculty of Enigineering, University of Porto, Porto, Portugal; Faculty of Computer Science, Technische Universität Dresden, Dresden, Germany; Faculty of Engineering, London South Bank University, London, United Kingdom",2019 IEEE 17th International Conference on Industrial Informatics (INDIN),"30 Jan 2020","2019","1","","1199","1204","The main challenge of exposing IEC61499 or IEC61131-3 Function Blocks as a service remains in adopting service-oriented concepts in function block programming. Implementing an IEC61499 or IEC61131-3 Function Block that is being accessed via service-oriented protocols is straight forward. The main challenge remains in modeling a Function Block as a service. Adopting service-oriented concepts like Service Oriented Architecture or Microservice Architecture requires tackling challenges like service granularity, (de)composition, etc. For instance, too coarse-grained services could lead to significant drawbacks, while too fine-grained services could increase the system's overall complexity, introducing semantic tight coupling and bringing about communication overhead. Therefore, understanding whether a service (de)composition is adding any value could help us to identify the best service granularity. Finding the best service granularity means knowing how many Function Blocks could be exposed into one service. This could undeniable lead to improvement in resource consumption especially in constraint environments. In this paper we design a cost analysis function for calculating the overhead of service decomposition. This work will help to answer one of the most important aspects of the service-oriented approach, called service granularity in the scope of Function Block as a Service.","2378-363X","978-1-7281-2927-3","10.1109/INDIN41052.2019.8972205","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8972205","Flexible Automation;SOA;Microservices;Granularity;Architecture","","","7","","38","IEEE","30 Jan 2020","","","IEEE","IEEE Conferences"
"CASPA: A Platform for Comparability of Architecture-Based Software Performance Engineering Approaches","T. F. Düllmann; R. Heinrich; A. van Hoorn; T. Pitakrat; J. Walter; F. Willnecker","University of Stuttgart, Germany; Karlsruhe Institute of Technology, Germany; Universitat Stuttgart, Stuttgart, Germany; University of Stuttgart, Germany; University of Würzburg, Germany; Fortiss GmbH, Germany",2017 IEEE International Conference on Software Architecture Workshops (ICSAW),"26 Jun 2017","2017","","","294","297","Setting up an experimental evaluation for architecture-based Software Performance Engineering (SPE) approaches requires enormous efforts. This includes the selection and installation of representative applications, usage profiles, supporting tools, infrastructures, etc. Quantitative comparisons with related approaches are hardly possible due to limited repeatability of previous experiments by other researchers. This paper presents CASPA, a ready-to-use and extensible evaluation platform that already includes example applications and state-of-the-art SPE components, such as monitoring and model extraction. The platform explicitly provides interfaces to replace applications and components by custom(ized) components. The platform builds on state-of-the-art technologies such as container-based virtualization.","","978-1-5090-4793-2","10.1109/ICSAW.2017.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7958509","","Monitoring;Tools;Containers;Load modeling;Analytical models;Generators;Predictive models","","4","","19","IEEE","26 Jun 2017","","","IEEE","IEEE Conferences"
"Design of Doctor-Patient Management Platform Based on Microservice Architecture","X. Wang; Y. Chen; J. Wang; A. Yu","The 5th Outpatient Department Dispatched by General, Hospital of Eastern Theater Command, PLA Nanjing, China; The 5th Outpatient Department Dispatched by General, Hospital of Eastern Theater Command, PLA Nanjing, China; School of Management Science and Engineering, Nanjing University of information science &Technology, Nanjing, China; The Army Engineering University of PLA, Nanjing, Chin",2020 2nd International Conference on Applied Machine Learning (ICAML),"23 Nov 2021","2020","","","99","102","For the common medical area in the process of diagnosis and treatment of chronic diseases, the patient's medical history information is not comprehensive, which leads to the practical problems that cannot provide effective medical guidance to patients. This paper proposes to make full use of mobile Internet technology and micro service system to integrate the medical data of patients, and design and implement a hierarchical structure of doctor-patient management platform. Through the construction of the platform, it solves the problem that the primary health care units do not fully obtain the patient diagnosis and treatment data, which leads to insufficient understanding of the disease and poor diagnosis and treatment effect, and closely connects the hospital, doctors and patients. In the process of patients' treatment, doctors can quickly master the patient's history, diagnosis and treatment, medication and physical characteristics, which greatly improves the treatment effect of patients","","978-1-7281-9264-2","10.1109/ICAML51583.2020.00028","Primary Research & Development Plan of Jiangsu Province(grant numbers:BE2018754); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9607180","Component;Doctor patient system;microservice;JSON","Hospitals;Process control;Medical services;Machine learning;Real-time systems;Internet;Medical diagnosis","","2","","8","IEEE","23 Nov 2021","","","IEEE","IEEE Conferences"
"A Cloud-Edge Artificial Intelligence Framework for Sensor Networks","G. Loseto; F. Scioscia; M. Ruta; F. Gramegna; S. Ieva; C. Fasciano; I. Bilenchi; D. Loconte; E. D. Sciascio","LUM University “G. Degennaro”, Casamassima, Italy; Polytechnic University of Bari, Bari, Italy; Polytechnic University of Bari, Bari, Italy; Polytechnic University of Bari, Bari, Italy; Polytechnic University of Bari, Bari, Italy; Polytechnic University of Bari, Bari, Italy; Polytechnic University of Bari, Bari, Italy; Polytechnic University of Bari, Bari, Italy; Polytechnic University of Bari, Bari, Italy",2023 9th International Workshop on Advances in Sensors and Interfaces (IWASI),"3 Jul 2023","2023","","","149","154","Internet of Things devices allow building increasingly large-scale sensor networks for gathering heterogeneous high-volume data streams. Artificial Intelligence (AI) applications typically collect them into centralized cloud infrastructures to run computationally intensive Machine Learning (ML) tasks. According to the emerging edge computing paradigm, instead, data preprocessing, model training and inference can be distributed among devices at the border of the local network, exploiting data locality to improve response latency, bandwidth usage and privacy, at the cost of suboptimal model accuracy due to smaller training sets. The paper proposes a cloud-edge framework for sensor-based AI applications, enabling a dynamic trade-off between edge and cloud layers by means of: (i) a novel containerized microservice architecture, allowing the execution of both model training and prediction either on edge or on cloud nodes; (ii) flexible automatic migration of tasks between the edge and the cloud, based on opportunistic management of resources and workloads. In order to facilitate implementations, a scouting of compatible device platforms for field sensing and edge computing nodes has been carried out, as well as a selection of suitable open-source off-the-shelf software tools. Early experiments validate the feasibility and core benefits of the proposal.","2836-7936","979-8-3503-3694-8","10.1109/IWASI58316.2023.10164335","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10164335","sensor networks;cloud-edge intelligence;machine learning;microservice architecture","Training;Cloud computing;Computational modeling;Microservice architectures;Computer architecture;Predictive models;Data models","","","","24","IEEE","3 Jul 2023","","","IEEE","IEEE Conferences"
"Shimmy: Accelerating Inter-Container Communication for the IoT Edge","M. Khasgiwale; V. Sharma; S. Mishra; B. Thadichi; J. John; R. Khanna","Department of Computer Science, University of Colorado, Boulder, USA; Department of Computer Science, University of Colorado, Boulder, USA; Department of Computer Science, University of Colorado, Boulder, USA; Department of Computer Science, University of Colorado, Boulder, USA; Intel Corporation, Oregon, USA; Intel Corporation, Oregon, USA",GLOBECOM 2023 - 2023 IEEE Global Communications Conference,"26 Feb 2024","2023","","","4461","4466","Cloud-native technologies consisting of containers, microservices, and service meshes bring the traditional advantages of Cloud Computing like scalability, composability, and rapid deployability to the IoT Edge. An application built on the microservices architecture relies on a collection of individual containerized components offering modular services via REST or gRPC interfaces over the network. Compared to a monolithic application, the magnitude of data and control exchange between the components of a microservices application is several orders higher. Studies have shown that overheads caused by such inter-container communication are a significant hurdle in achieving the sub-50ms latencies required for 5G enabled network Edges comprised of a much smaller compute cluster, unlike the Cloud. In this paper, we present Shimmy - a shared memory-based communication interface for containers that is cleanly integrated into the Kubernetes orchestration architecture while offering significant acceleration for microservices. Results have shown a consistent 3-4x latency improvement over UDP and TCP, as much as 20x latency improvement over RabbitMQ, while significantly reducing memory and CPU usage in large data transfers as well as real-time video streaming.","2576-6813","979-8-3503-1090-0","10.1109/GLOBECOM54140.2023.10437823","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10437823","microservice;IoT;Cloud-native;intercontainer latencymicroservice;intercontainer latency","TCP;Cloud computing;Protocols;Microservice architectures;Computer architecture;Containers;Central Processing Unit","","","","20","IEEE","26 Feb 2024","","","IEEE","IEEE Conferences"
"Design and implementation of automatic encryption and decryption system in configuration center based on etcd","X. Zhang; J. Wang; N. Li; Y. Xu","School of Information Technology, Xi’an Eurasia University, Xi’an, China; School of Information Technology, Xi’an Eurasia University, Xi’an, China; School of Information Technology, Xi’an Eurasia University, Xi’an, China; School of Information Technology, Xi’an Eurasia University, Xi’an, China",2024 4th International Symposium on Computer Technology and Information Science (ISCTIS),"4 Oct 2024","2024","","","321","324","This With the wide application of microservice technology and container technology, the configuration management of distributed system becomes very important. As an open source, distributed and reliable key-value storage system, etcd is often used as a configuration center. However, etcd does not provide data encryption and decryption by default, which may expose configuration information to security risks during transmission and storage. In order to solve this problem, this paper designs and implements an automatic encryption and decryption system based on etcd configuration center. The etcd client encapsulates an automatic encryption and decryption layer to encrypt and decrypt the configuration information stored in etcd, thus ensuring the security of the configuration information.","","979-8-3503-5456-0","10.1109/ISCTIS63324.2024.10699101","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10699101","component;etcd;automatic encryption;automatic decryption;configuration center","Information science;Scalability;Microservice architectures;Configuration management;Containers;Reliability engineering;Encryption;Servers;Computer security;Business","","","","7","IEEE","4 Oct 2024","","","IEEE","IEEE Conferences"
"End-to-End Policy Monitoring and Enforcement for Service-Oriented Architecture","M. Azarmi; B. Bhargava","Department of Computer Science, Purdue University, West Lafayette, Indiana; Department of Computer Science, Purdue University, West Lafayette, Indiana",2017 IEEE 10th International Conference on Cloud Computing (CLOUD),"11 Sep 2017","2017","","","58","65","A service-oriented architecture (SOA)-based application is composed of a number of distributed and loosely-coupled services which are interconnected to accomplish a more complex functionality. The main security challenge in SOA is that we cannot trust the participating services in a service composition to behave as expected all the time. Moreover, the chain of all services involved in an end-to-end invocation may not be visible to the clients. As a result, any violation of the client's policies could remain undetected. To address these challenges in SOA, we propose the following contributions. First, we propose a new end-to-end security architecture for SOA based on a dynamic composite trust model. To maintain the dynamic trust, we designed a trusted-third party service called trust manager component, which collects and processes feedbacks from the actual execution of services. Second, we developed an end-to-end inter-service policy monitoring and enforcement framework (PME framework), which is able to dynamically intercept the interactions between services at runtime and react to the potentially malicious activities according to the client's policies. Third, we design an intra-service policy monitoring and enforcement framework based on taint analysis mechanism to monitor the flow of information within services and detect and prevent information disclosure attacks. These two frameworks together can provide an end-to-end visibility and security in SOA. Finally, we have extensively studied the correctness and performance of the proposed security frameworks based on a realistic SOA case study in a cloud environment. All experimental studies validate that the practicality and effectiveness of the presented solutions.","2159-6190","978-1-5386-1993-3","10.1109/CLOUD.2017.17","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8030572","End-to-End Security;Service-Oriented Architecture;Security Policy","Security;Monitoring;Service-oriented architecture;Engines;Computer architecture;Companies;Cloud computing","","4","","14","IEEE","11 Sep 2017","","","IEEE","IEEE Conferences"
"A Microservice Architecture for the Design of Computer-Interpretable Guideline Processing Tools","M. Chapman; V. Curcin","Department of Population Health Sciences, King’s College London, London, U.K; Department of Population Health Sciences, King’s College London, London, U.K",IEEE EUROCON 2019 -18th International Conference on Smart Technologies,"11 Oct 2019","2019","","","1","6","Several tools exist that are designed to process computer interpretable guidelines (CIGs), each with a distinct purpose, such as detecting interactions or patient personalisation. While it is desirable to use these tools as part of larger decision support systems (DSSs) doing so is often not straightforward, as their design does not often support external interoperability or account for the fact that other CIG tools may be running in parallel, a situation that will become increasingly more prevalent with the increased adoption of CIGs in different parts of the health system. This results in an integration overhead, system redundancy and a lack of flexibility in how these tools can be combined. To address these issues, we define a blueprint architecture to be used in the design of guideline processing tools, based on the conceptualisation of key components as RESTful microservices. In addition, we define the types of data endpoints that each component should expose, for both the communication between internal components and communication with external components that exist as a part of a DSS. To demonstrate the utility of our architecture, we show how an example guideline processing tool can be restructured according to these principles, in order to enable it to be flexibly integrated into the DSS used in the CONSULT project.","","978-1-5386-9301-8","10.1109/EUROCON.2019.8861830","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8861830","","Guidelines;Tools;Software;Computer architecture;Decision support systems;Interoperability;Graphical user interfaces","","3","","21","IEEE","11 Oct 2019","","","IEEE","IEEE Conferences"
"Restructuring hospital payment systems using middle platform technology","H. Wang; R. Xu; Y. Song; L. -N. Fan; Y. Sun; Y. Xiao","The 900th Hospital Of Joint Logistic Support Force, Fuzhou, China; The 900th Hospital Of Joint Logistic Support Force, Fuzhou, China; The 900th Hospital Of Joint Logistic Support Force, Fuzhou, China; The 900th Hospital Of Joint Logistic Support Force, Fuzong Clinical Medical College of Fujian Medical University, Fuzhou, China; The 900th Hospital Of Joint Logistic Support Force, Fuzhou, China; The 900th Hospital Of Joint Logistic Support Force, Fuzong Clinical Medical College of Fujian Medical University, Fuzhou, China",2022 3rd International Conference on Computer Science and Management Technology (ICCSMT),"8 Jun 2023","2022","","","395","399","In order to reshape the medical payment service system, we have designed a component based on the middle platform architecture. Our purpose is to standardized settlement and enhance work efficiency. Firstly, we Analyzed the application scenario of middle platform in hospital medical payment. Secondly, striped off the common functional modules, encapsulated the independent business interface. Thirdly, provided the ability to provide shared services, and expanded the application scenario of intelligent payment. After all this very fruitful work, the operation efficiency of the hospital payment system is improved, the coupling degree of the system is reduced, the cohesion is improved, and good results are obtained in practice. We think that the middle platform architecture can be combined according to the application requirements of the hospital, and it can also be extended for individual modules, which can meet the needs of hospital construction.","","979-8-3503-2040-4","10.1109/ICCSMT58129.2022.00090","Technology Development; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10143899","business middle platform;data middle platform;healthcare payment;information technology;big data","Technological innovation;Hospitals;Data security;Systems architecture;Computer architecture;Medical information systems;Demand response","","","","11","IEEE","8 Jun 2023","","","IEEE","IEEE Conferences"
"RobotKube: Orchestrating Large-Scale Cooperative Multi-Robot Systems with Kubernetes and ROS","B. Lampe; L. Reiher; L. Zanger; T. Woopen; R. van Kempen; L. Eckstein","Institute for Automotive Engineering (ika), RWTH Aachen University, Aachen, Germany; Institute for Automotive Engineering (ika), RWTH Aachen University, Aachen, Germany; Institute for Automotive Engineering (ika), RWTH Aachen University, Aachen, Germany; Institute for Automotive Engineering (ika), RWTH Aachen University, Aachen, Germany; Institute for Automotive Engineering (ika), RWTH Aachen University, Aachen, Germany; Institute for Automotive Engineering (ika), RWTH Aachen University, Aachen, Germany",2023 IEEE 26th International Conference on Intelligent Transportation Systems (ITSC),"13 Feb 2024","2023","","","2719","2725","Modern cyber-physical systems (CPS) such as Cooperative Intelligent Transport Systems (C-ITS) are increasingly defined by the software which operates these systems. In practice, microservice architectures can be employed, which may consist of containerized microservices running in a cluster comprised of robots and supporting infrastructure. These microservices need to be orchestrated dynamically according to ever changing requirements posed at the system. Additionally, these systems are embedded in DevOps processes aiming at continually updating and upgrading both the capabilities of CPS components and of the system as a whole. In this paper, we present RobotKube, an approach to orchestrating containerized microservices for large-scale cooperative multi-robot CPS based on Kubernetes. We describe how to automate the orchestration of software across a CPS, and include the possibility to monitor and selectively store relevant accruing data. In this context, we present two main components of such a system: an event detector capable of, e.g., requesting the deployment of additional applications, and an application manager capable of automatically configuring the required changes in the Kubernetes cluster. By combining the widely adopted Kubernetes platform with the Robot Operating System (ROS), we enable the use of standard tools and practices for developing, deploying, scaling, and monitoring microservices in C-ITS. We demonstrate and evaluate RobotKube in an exemplary and reproducible use case that we make publicly available at github.com/ika-rwth-aachen/robotkube.","2153-0017","979-8-3503-9946-2","10.1109/ITSC57777.2023.10422370","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10422370","","Microservice architectures;Detectors;Computer architecture;Software;Robots;Monitoring;Standards","","4","","35","IEEE","13 Feb 2024","","","IEEE","IEEE Conferences"
"Context-aware IoT Service Recommendation: A Deep Collaborative Filtering-based Approach","Z. Wang; C. -A. Sun; M. Aiello","School of Computer and Communication Engineering, University of Science and Technology Beijing, Beijing, China; School of Computer and Communication Engineering, University of Science and Technology Beijing, Beijing, China; Department of Service Computing, IAAS University of Stuttgart, Stuttgart, Germany",2022 IEEE International Conference on Web Services (ICWS),"16 Sep 2022","2022","","","150","159","The advantages of Service-Oriented Architecture (SOA) combined with the emerging and diffusion of the Internet of Things (IoT) instances have given birth to a new paradigm for IoT components integration, i.e., Service-Oriented IoT. Microservices especially have been widely used to deliver IoT services due to their lightweight implementation and distributed nature. With the continuous increase in IoT services available on the Internet, the selection of services becomes difficult. Furthermore, IoT services are often featured with rich contexts and OpenAPI descriptions, which impede service recommendation approaches that are designed for WSDL-based Web services or mashup services. To address this challenging issue, we propose a context-aware IoT service recommendation approach called DFORM for proactive service provision. DFORM considers both functional features of OpenAPI descriptions and contextual features of IoT environments, and leverages a deep collaborative filtering-based recommendation model to learn the feature representations and capture the interactions between users and services. We conduct a series of experiments to evaluate the recommendation performance of DFORM and the experimental results show that DFORM is effective in IoT service recommendation and outperforms state-of-the-art techniques.","","978-1-6654-8143-4","10.1109/ICWS55610.2022.00035","National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9885270","service recommendation;Internet of Things;IoT services;context-awareness;microservice architecture","Mashups;Collaboration;Microservice architectures;Information filters;Internet of Things;Context modeling","","6","","35","IEEE","16 Sep 2022","","","IEEE","IEEE Conferences"
"Hardware-Software Complex to Diagnostic and Rehabilitation the Patients with Damages of Cervical-Thoracic Spine and Hand Nerves","V. Shurbin; I. Zhuravska; V. Polianichkin; M. Hnezdilov; A. Boiko; V. Burenko","Software Engin. Dept., Petro Mohyla Black Sea National Univ., Mykolaiv, Ukraine; Dept. of Computer Engin., Petro Mohyla Black Sea National Univ., Mykolaiv, Ukraine; Software Engin. Dept., Petro Mohyla Black Sea National Univ., Mykolaiv, Ukraine; Software Engin. Dept., Petro Mohyla Black Sea National Univ., Mykolaiv, Ukraine; Dept. of Computer Engin., Petro Mohyla Black Sea National Univ., Mykolaiv, Ukraine; Sci. and Res. Dept., Petro Mohyla Black Sea National Univ., Mykolaiv, Ukraine",2020 IEEE 40th International Conference on Electronics and Nanotechnology (ELNANO),"7 May 2020","2020","","","493","498","After the damages of the cervical-thoracic spine and hand nerves, the motor and/or sensory functions are impaired, especially fine motor skills of each finger individually or a group of fingers. In the paper is proposed a method of constructing a “green zone” (optimal for patient training mode), and “red zone” (dangerous training mode), which correspond to the model of quantitative dependence the time fulfill several sequential actions patient based on the moving average. A decrease of muscle spasticity of the arm in scores following the Modified Ashworth Scale (MAS) was used as a criterion of optimality. For medical studies and training the diagnostic and training (DT) devices of the “Reflex-Txx” series were developed, which has in-built Hall sensors or touch sensors. The results of each individual's training are accumulated, displayed and analyzed on the microservices of the developed hardware and software complex and available on the user's gadgets. The electronic components and architecture of the developed devices based on a cost-effective Arduino platform hardware implementation.","","978-1-7281-9713-5","10.1109/ELNANO50318.2020.9088866","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9088866","cervical-thoracic spine damage;hand nerves injury;physical rehabilitation;optimal training mode;diagnostic and training devices;Arduino platform;microservice architecture software","","","","","23","IEEE","7 May 2020","","","IEEE","IEEE Conferences"
"Web APIs Structures and Data Models Analysis","S. Serbout; F. D. Lauro; C. Pautasso","Software Institute Università Della Svizzera Italiana, Lugano, Switzerland; Software Institute Università Della Svizzera Italiana, Lugano, Switzerland; Software Institute Università Della Svizzera Italiana, Lugano, Switzerland",2022 IEEE 19th International Conference on Software Architecture Companion (ICSA-C),"25 May 2022","2022","","","84","91","Microservice architectures emphasize keeping components small, to foster autonomy, low coupling and independent evolution. In this large-scale empirical study we measure the size of Web API specifications mined from open source repositories. These APIs are modeled using the OpenAPI Specification (OAS), which, in addition to documenting the offered operations, also contain schemas definitions for the data exchanged with the API request and response message payloads. This study has as a goal to build empirical knowledge about: (1) How big and diverse are real-world web APIs both in terms of their operations and data, (2) How different API structures use and reuse schema definitions. By mining public software repositories on Github, we gathered 42,194 valid OAS specifications published between 2014-2021. These specifications include descriptions of Web APIs of well-known services providers such as Google, VMware (Avi Networks), Twilio, Amazon. After measuring the size of API structures and their data model schemas, we found that most APIs are rather small. Also there is a medium correlation between the size of the APIs’ functional structures and their data models. API developers do reuse schema definitions within the same API model.","2768-4288","978-1-6654-9493-9","10.1109/ICSA-C54293.2022.00059","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9779839","Web API;OpenAPI;Data Model Schemas;API Size Metrics;API Structure","Knowledge engineering;Software architecture;Microservice architectures;Size measurement;Data models;Software;Internet","","6","","21","IEEE","25 May 2022","","","IEEE","IEEE Conferences"
"Smart Healthcare Monitoring System For Healthy Driving in Public Transportation","P. Maximino; R. S. Cruz; M. L. Pardal","INESC-ID, Universidade de Lisboa, Instituto Superior Técnico, Lisboa, Portugal; INESC-ID, Lisboa, Portugal; INESC-ID, Universidade de Lisboa, Instituto Superior Técnico, Lisboa, Portugal",2023 18th Iberian Conference on Information Systems and Technologies (CISTI),"15 Aug 2023","2023","","","1","4","In an age where citizens are constantly moving between different places, transport demand is extremely high, and so, it is important to have sophisticated public transportation systems in place to ensure a sustainable development of urban areas and meet the needs of citizens. Public transport operators consequently need to provide reliable services in order to minimize disruption events that can affect the vehicles and their drivers, such as breakdowns, accidents or illnesses. The project here described focuses on the type of events and approaches related with the vehicle drivers and the identification of both their performance profiles and health condition while in operation. For that purpose, existing nonintrusive technologies present on the vehicle are leveraged, able to collect data related to physiological measurements taken in realtime. Such sensitive data will be processed, stored and shared in a secure manner, using blockchain-based technologies, so that only authenticated and authorized parties will be able to access the data, according to their clearance level, through an Application Programming Interface (API) designed for that purpose. The architecture of the system will be microservices-based, with components deployed at different infrastructure levels—from On Board Units (OBUs) in vehicles up to cloud-based subsystems.","2166-0727","978-989-33-4792-8","10.23919/CISTI58278.2023.10211847","Fundação para a Ciência e a Tecnologia; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10211847","Blockchain;Public Transportation;Security;Reliability;Performance Profile;Microservices","Urban areas;Medical services;Real-time systems;Reliability;Biomedical monitoring;Virtualization;Sustainable development","","","","13","","15 Aug 2023","","","IEEE","IEEE Conferences"
"A cloud-based architecture for an interoperable, resilient, and scalable C2 information system","N. Bau; S. Endres; M. Gerz; F. Gökgöz","Information Technology for Command and Control, Fraunhofer FKIE, Wachtberg, Germany; Information Technology for Command and Control, Fraunhofer FKIE, Wachtberg, Germany; Information Technology for Command and Control, Fraunhofer FKIE, Wachtberg, Germany; Information Technology for Command and Control, Fraunhofer FKIE, Wachtberg, Germany",2018 International Conference on Military Communications and Information Systems (ICMCIS),"28 Jun 2018","2018","","","1","7","Recent advancements in Cloud Computing pave the way for a new generation of C2 Information Systems (C2IS) that provide better scalability and resilience and improved decision support through big data analytics and artificial intelligence. In this paper, we present a cloud-based system architecture for a C2IS. We explain how the cloud architecture ensures system functioning even when critical components fail temporarily. In our architecture, C2 data are not mapped onto a single data model and persisted in a central data store; instead, the design allows for a variety of distinct stores for different purposes and interoperability standards. The concepts have been implemented in a C2IS prototype at the Fraunhofer FKIE. We illustrate how semantically rich interoperability standards support a modeldriven development approach.","","978-1-5386-4559-8","10.1109/ICMCIS.2018.8398692","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8398692","C2 Information System;C2IS;Cloud Computing;Resilience;Scalability;Adaptability;Interoperability;Cloud-Native Design;Model-Driven Software Development;Model-Driven Architecture;MDA;MIP4-IES","Cloud computing;Resilience;Computer architecture;Standards;Scalability;Software as a service","","7","","26","IEEE","28 Jun 2018","","","IEEE","IEEE Conferences"
"Architectural Vision of Cloud Computing in the Indian Government","N. V. Choudhari; A. B. Sasankar","RTM, Nagpur University,Department of Electronics and Computer Science,Nagpur,India; New Arts Commerce and Science College, Wardha RTM, Nagpur University,Nagpur,India",2021 International Conference on Innovative Trends in Information Technology (ICITIIT),"14 Apr 2021","2021","","","1","7","The GI (Govt. of India) cloud started in 2014 is built on the state of art technologies and rich architecture with the nationwide network infrastructure and Data Centres located across the country on National and State data centres. This paper investigates, study and analyze the cloud architecture of Govt. of India and suggests modifications that need to be adapted for sustainable development as per the global changing scenario and fulfill the future needs with improved service delivery, increased throughput, and increased efficiency to provide secured cloud services and to minimize the gap between the cloud service providers and end-users. The cloud services are designed for centralized storage and processing. The cloud data centers are generally located thousands of miles away from the end-users where the data is actually generated. The physical distance between the cloud infrastructure and the data source at edge level end-users produces latency for the real-time processing of the huge amount of data generated at the source level. In recent years the automation scenario is changing globally with various emerging technologies such as the Internet of Things (IoT), Wireless Fidelity 6 (Wi-Fi 6), Fifth Generation Mobile Network connectivity (5G), Artificial Intelligence (AI), and Machine Learning, etc. Emerging technologies like IoT, Wi-Fi 6, 5G gives large scope for boundary level computing and generates a very huge amount of data at the data source level produced by the end-users. These technologies require agile real-time processing and analysis of the data at the source level. Edge computing and Fog computing are the distributed architectures that work together, for reduced latency and speedy real-time processing where the data is actually generated by the end-user. According to the new implementation demands, various emerging cloud technologies such as Mobile Cloud Apps, Containers, Serverless, Microservices, Development and Information Technology Operations (DevOps), BlockChain, Fog computing, Edge Computing, and Software-Defined Infrastructure (SDI), etc are proposed for implementation.","","978-1-6654-0467-9","10.1109/ICITIIT51526.2021.9399598","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9399598","GI Cloud Architecture;VMware Technology Stack;Open Stack-based cloud technology;emerging cloud architectures","Cloud computing;Data centers;Computer architecture;Real-time systems;Security;Internet of Things;Edge computing","","","","21","IEEE","14 Apr 2021","","","IEEE","IEEE Conferences"
"Poster: Processing of Latency- and Deadline-Aware Big Data Approaches at the Edge","U. Gropengießer; F. Brandherm; M. Mühlhäuser","Technical University of Darmstadt, Darmstadt, Germany; Technical University of Darmstadt, Darmstadt, Germany; Technical University of Darmstadt, Darmstadt, Germany",2023 IEEE/ACM Symposium on Edge Computing (SEC),"7 Feb 2024","2023","","","255","257","Time-critical requests are becoming increasingly important for microservice service chains. For such service chains, a late response may be worthless or cause failures. Previous works proposed to prevent late responses by trading computation time for result quality, depending on the available resources. However, determining the Quality of Result (QoR) for each operation in a service chain ahead of time, as is the state of the art, cannot prevent requests that are currently processing from being late if resource availability changes, e.g., due to resource sharing at inelastic Edge sites. Therefore, we present a framework to control the QoR online by replanning QoR values whenever resource changes are detected.","2837-4827","979-8-4007-0123-8","10.1145/3583740.3626623","German Research Foundation (DFG); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10419309","Edge Computing;Approximate Computing;Quality of Result","Image edge detection;Microservice architectures;Big Data;Time factors;Resource management;Edge computing","","","","22","","7 Feb 2024","","","IEEE","IEEE Conferences"
"Towards Transforming an Industrial Automation System from Monolithic to Microservices","S. Sarkar; G. Vashi; P. P. Abdulla","ABB Corp. Research India, India; ABB Corp. Research India, India; ABB Corp. Research India, India",2018 IEEE 23rd International Conference on Emerging Technologies and Factory Automation (ETFA),"25 Oct 2018","2018","1","","1256","1259","Container technology enables designers to build (micro)service-oriented systems with on-demand scalability and availability easily, provided the original system has been well-modularized to begin with. Industry automation applications, built a long time ago, aim to adopt this technology to become more flexible and ready to be a part of the internet of thing based next-generation industrial system. In this paper, we share our work-in-progress experience of transforming a complex, distributed industrial automation system to a microservice based containerized architecture. We propose a containerized architecture of the “to-be” system and observe that despite being distributed, the “as-is” system tend to follow a monolithic architecture with strong coupling among the participating components. Consequently it becomes difficult to achieve the proposed microservice based architecture without a significant change. We also discuss the workload handling, resource utilization and reliability aspects of the “to-be” architecture using a prototype implementation.","1946-0759","978-1-5386-7108-5","10.1109/ETFA.2018.8502567","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8502567","docker;container;migration;industrial system;microservice;modularity","Containers;Computer architecture;Microsoft Windows;Prototypes;Servers;Automation;Linux","","16","","12","IEEE","25 Oct 2018","","","IEEE","IEEE Conferences"
"Data Processing Unit (DPU) Based Network Process Offloading for Efficient Service Meshes","K. M. Hasanth; S. Basu; D. Nadig","Dept. of Computer and Information Technology, Purdue University, West Lafayette, IN; Dept. of Computer and Information Technology, Purdue University, West Lafayette, IN; Dept. of Computer and Information Technology, Purdue University, West Lafayette, IN",2024 IEEE 10th International Conference on Network Softwarization (NetSoft),"10 Jul 2024","2024","","","319","321","As the software development landscape transitions from monolithic applications to agile, cloud-native microservices, new challenges in communication have emerged, necessitating the evolution of network service meshes to effectively manage these complexities. While addressing these communication challenges, implementing service mesh solutions introduces higher resource utilization, primarily due to deploying an additional per-microservice infrastructure known as the “sidecar” container. A sidecarless approach, as exemplified by Cilium, leverages extended Berkeley packet filter (eBPF) technology to minimize operational overhead and optimize resource utilization. The advent of data processing units (DPU) represents a crucial evolution in cloud accelerators, designed to offload and accelerate networking, security, and storage tasks traditionally handled by server CPUs. This demonstration integrates DPU technology with Cilium’s sidecarless architecture and proposes to offload Cilium’s control plane to DPUs. Our proposed approach improves system efficiency by deploying Cilium’s control plane components on DPUs in a separate host mode. Further, our approach conserves CPU cycles on the primary hosts and shifts network processing tasks to the DPU. This strategic offload aims to enhance throughput, reduce latency, and unburden CPUs from network processing tasks to improve the performance of service mesh architectures for cloud-native ecosystems.","2693-9789","979-8-3503-6958-8","10.1109/NetSoft60951.2024.10588912","National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10588912","DPU;Cilium;eBPF;Service Mesh;Sidecar-less","Microservice architectures;Computer architecture;Data processing;Throughput;Resource management;Servers;Security","","1","","10","IEEE","10 Jul 2024","","","IEEE","IEEE Conferences"
"Expert System for Kubernetes Cluster Autoscaling and Resource Management","L. S. Hettiarachchi; S. V. Jayadeva; R. A. V. Bandara; D. Palliyaguruge; U. S. S. S. Arachchillage; D. Kasthurirathna","Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka; Department of Computer Science and Software Engineering, Sri Lanka Institute of Information Technology, Sri Lanka",2022 4th International Conference on Advancements in Computing (ICAC),"31 Jan 2023","2022","","","174","179","The importance of orchestration tools such as Kubernetes has become paramount with the popularity of software architectural styles such as microservices. Furthermore, advancements in containerization technologies such as Docker has also played a vital role when it comes to advancements in the field of DevOps, enabling developers and system engineers to deploy are manage applications much more effectively. However, infrastructure configuration and management of resources are still challenging due to the disjointed nature of the infrastructure and resource management tools’ failure to comprehend the deployed applications and create a holistic view of the services. This is partly due to the extensive knowledge required to operate these tools or due to the inability to perform specific tasks. As a result, multiple tools and platforms need to conFigure together to automate the deployment, monitoring and management processes to provide the optimal deployment strategy for the applications. In response to this issue, this research proposes an expert system that creates a centralized approach to cluster autoscaling and resource management, which also provides an automated low-latency container management system and resiliency evaluation for dynamic systems. Furthermore, the time series load prediction is done using a BiLSTM and periodically creates an optimized autoscaling policy for cluster performance, thus creating a seamless pipeline from deployment, monitoring scaling, and troubleshooting of distributed applications based on Kubernetes.","","979-8-3503-9809-0","10.1109/ICAC57685.2022.10025077","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10025077","Auto-scaling;Containerization;Docker;Chaos engineering;Kubernetes;Load prediction;Machine Learning;Microservices","Time series analysis;Pipelines;Microservice architectures;Software;Resource management;Expert systems;Task analysis","","2","","22","IEEE","31 Jan 2023","","","IEEE","IEEE Conferences"
"A Microservice Based Architecture Topology for Machine Learning Deployment","J. L. Ribeiro; M. Figueredo; A. Araujo; N. Cacho; F. Lopes","Department of Informatics and Applied Mathematics, Federal University of Rio Grande do Norte, Natal, Brazil; Department of Informatics and Applied Mathematics, Federal University of Rio Grande do Norte, Natal, Brazil; Department of Informatics and Applied Mathematics, Federal University of Rio Grande do Norte, Natal, Brazil; Department of Informatics and Applied Mathematics, Federal University of Rio Grande do Norte, Natal, Brazil; Department of Informatics and Applied Mathematics, Federal University of Rio Grande do Norte, Natal, Brazil",2019 IEEE International Smart Cities Conference (ISC2),"20 Apr 2020","2019","","","426","431","Smart solutions that make use of machine learning and data analyses are on the rise. Big Data analysis is attracting more and more developers and researchers, and at least five requirements (Velocity, Volume, Value, Variety, and Veracity) show challenges in deploying such solutions. Across the globe, many Smart City initiatives are using Big Data Analytics as a tool for doing predictive analytics which can be helpful to human well being. This work presents a generic architecture named Machine Learning in Microservices Architecture (MLMA) that provides design patterns to transform a monolithic architecture of machine learning pipelines in microservices with separate roles. We present two case studies deployed to a Smart City initiative, where we discuss how each component of the architecture applied in specific applications that use predictions with machine learning. Among the benefits of this architecture, we argue prediction performance, scalability, code maintenance and reusability makes such transition a natural trend in Big Data and machine learning applications.","2687-8860","978-1-7281-0846-9","10.1109/ISC246665.2019.9071708","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9071708","microservices;machine learning;design patterns;recommendation systems;predictive policing","Feature extraction;Machine learning;Computer architecture;Smart cities;Data mining;Monitoring;Containers","","6","","21","IEEE","20 Apr 2020","","","IEEE","IEEE Conferences"
"A Proposal of ClouEdge (Cloud-Edge) Architecture by Using JYAGUCHI Computing Framework","B. P. Gautam; B. Amit; N. Shiratori","Department of Economic Informatics, Kanazawa Gakuin University, Kanazawa, Ishikawa, Japan; NA; Chuo University, Research and Development Initiative, Tokyo, Japan",2022 International Conference on Networking and Network Applications (NaNA),"30 Dec 2022","2022","","","338","344","Cloud computing is a widely researched area; however, it has some challenges such as lacking the dynamic service delivery feature that can support both edge and cloud computing environment. To address such kind of challenges, we proposed an enhanced JYAGUCHI architecture, a service delivery platform implemented in our previous work that guarantees the secured and dynamic service delivery in both cloud and edge computing environment. In this research, we enhanced JYAGUCHI platform by designing a new architectural component that augments the services as per the granularity of the applications and also ensure the access control for secured service delivery over the Internet. We evaluated our system by testing the performance of each component in terms of resource consumption, latency and network bandwidth metrics within and outside the edge.","","978-1-6654-6131-3","10.1109/NaNA56854.2022.00064","Japan Society for the Promotion of Science (JSPS)(grant numbers:19H04101,18K11273); Cooperative Research Project Program of the Research Institute of Electrical Communication, Tohoku University, Japan; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9985173","JYAGUCHI;Cloud Computing;Edge Computing;Service Delivery;Access Control","Measurement;Access control;Cloud computing;Computer architecture;Bandwidth;Network resource management;Proposals","","","","25","IEEE","30 Dec 2022","","","IEEE","IEEE Conferences"
"Visual Web-Oriented Environment for Dynamic Control of Data Flow in Campus SDN1 The work is performed at the support of the RFBR Grant (16-47-620300 p_a) and the Scholarship of the President of the Russian Federation (CI-505.2016.5)","V. Koryachko; D. Perepelkin; M. Ivanchikova; V. Byshov; I. Tsyganov","Faculty of Computer Science, Ryazan State Radio Engineering University, Ryazan, Russia; Faculty of Computer Science, Ryazan State Radio Engineering University, Ryazan, Russia; Faculty of Computer Science, Ryazan State Radio Engineering University, Ryazan, Russia; Faculty of Computer Science, Ryazan State Radio Engineering University, Ryazan, Russia; Faculty of Computer Science, Ryazan State Radio Engineering University, Ryazan, Russia",2018 International Scientific and Technical Conference Modern Computer Network Technologies (MoNeTeC),"13 Dec 2018","2018","","","1","6","Nowadays new innovative approaches based on the technology of software defined networks (SDN) are gaining popularity in the field of computer networks (CN). SDN provide a flexible approach to the processing and control of data flows in CN by separating the control plane and data plane, as well as centralizing the representation of the entire network. In this paper we propose a software infrastructure and a visual web-oriented environment (SIVE) for dynamic control of data flows in campus SDN based on OpenFlow protocol. It was proposed to use the SIVE as an integrated segment of the campus network of Ryazan State Radio Engineering University. The aim of the work is the development of the SIVE architecture in the form of UML class diagram description, as well as the creation of software methods for organizing effective network interaction of various software systems in SDN based on OpenFlow protocol. A hardware-software test bench based on HP Aruba 2920-24G equipment was developed to confirm the efficiency and reliability of the proposed SIVE. The offered SIVE is the basis for the development of a large class of software systems and SDN components based on OpenFlow protocol.","","978-1-5386-9456-5","10.1109/MoNeTeC.2018.8572166","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8572166","software defined networks;software infrastructure;visual web-oriented environment;OpenDayLight;SIVE;SDN Topology;network interaction;network component","Switches;Network topology;Topology;Software;Protocols;Routing;Measurement","","3","","34","IEEE","13 Dec 2018","","","IEEE","IEEE Conferences"
"A Layered Architecture Enabling Metaverse Applications in Smart Manufacturing Environments","A. Bujari; A. Calvio; A. Garbugli; P. Bellavista","Department of Computer Science and Engineering, University of Bologna, Bologna, Italy; Department of Computer Science and Engineering, University of Bologna, Bologna, Italy; Department of Computer Science and Engineering, University of Bologna, Bologna, Italy; Department of Computer Science and Engineering, University of Bologna, Bologna, Italy","2023 IEEE International Conference on Metaverse Computing, Networking and Applications (MetaCom)","6 Oct 2023","2023","","","585","592","The steady rollout of Industrial IoT (IIoT) technology in the manufacturing domain embodies the potential to implement smarter and more resilient production processes. To this end, it is expected that there will be a strong reliance of manufacturing processes on cloud/edge services so as to act intelligently and flexibly. While automation is necessary to handle the environment’s complexity, human-in-the-loop design approaches are paramount. In this context, Digital Twins play a crucial role by allowing human operators to inspect and monitor the environment to ensure stability and reliability. Integrating the IIoT with the Metaverse enhances the system’s capabilities even further, offering new opportunities for efficiency and collaboration while enabling integrated management of assets and processes. This article presents a layered conceptual architecture as an enabler for smart manufacturing metaverse environments, targeting real-time data collection and representations from shopfloor assets and processes. At the bottom layer, our proposal relies on middleware technology, serving differentiated Quality of Service (QoS) needs of the Operation Technology (OT) monitoring processes. The latter contributes to feeding a virtual layer where data processes reside, creating representations of the monitored phenomena at different timescales. Metaverse applications can consume data by tapping into the metaverse engine, a microservice-oriented and accelerated Platform as a Service (PaaS) layer tasked with bringing data to life. Without loss of generality, we profile different facets of our proposal by relying on two different proof-of-concept inspection applications aimed at real-time monitoring of the network fabric activity and a visual asset monitoring one.","","979-8-3503-3333-6","10.1109/MetaCom57706.2023.00103","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10271839","Smart Manufacturing;Digital Twin;Metaverse;Industrial IoT;Middleware","Visualization;Metaverse;Quality of service;Computer architecture;Real-time systems;Proposals;Task analysis","","4","","21","IEEE","6 Oct 2023","","","IEEE","IEEE Conferences"
"Webalyt: Implemetation of architecture for capturing web user behaviours with feedback propagation","P. Filip; L. Čegan","Faculty of Electrical Engineering and Informatics, University of Pardubice, Pardubice, Czech Republic; Faculty of Electrical Engineering and Informatics, University of Pardubice, Pardubice, Czech Republic",2018 28th International Conference Radioelektronika (RADIOELEKTRONIKA),"11 Jun 2018","2018","","","1","5","In the world of the Internet where people are consuming web-content, more and more emphasis is placed on user friendliness of web-pages. It means increasing web-page usability and better user-experience. Increasing quality of user-experience (UX) is the task of UX developers. They should always base their work on the best practices and research. Each webpage has its own specificity and it leads to new challenges for the UX developers. One of the biggest issues is the problematic view of a web-page on specific devices with specific web-browser versions. Tools for capturing user behaviour are available, but there are issues with data ownership and with the development of new functionality. Actually, there are no free easily scalable and extendable products for user data gathering on the market. In this paper, implementation of architecture (based on Spring Boot microservices) for capturing web user behaviours with feedback propagation is introduced. Architecture implementation is easily scalable and extendable. All of the components are described in detail. At the end of this paper, summary and limitation of created architecture is discussed. Webalyt is helpful for understanding user behaviour and improving user-experience.","","978-1-5386-2485-2","10.1109/RADIOELEK.2018.8376409","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8376409","User-Experience;Web User Behaviour;Analytical Tool;Microservices;Spring Boot","Computer architecture;Tools;Real-time systems;Software;Servers;Data processing;Mice","","1","","24","IEEE","11 Jun 2018","","","IEEE","IEEE Conferences"
"DESK: Distributed Observability Framework for Edge-Based Containerized Microservices","M. Usman; S. Ferlin; A. Brunstrom; J. Taheri","Department of Mathematics and Computer Science, Karlstad University, Karlstad, Sweden; Department of Mathematics and Computer Science, Karlstad University, Karlstad, Sweden; Department of Mathematics and Computer Science, Karlstad University, Karlstad, Sweden; Department of Mathematics and Computer Science, Karlstad University, Karlstad, Sweden",2023 Joint European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit),"26 Jul 2023","2023","","","617","622","Modern information technology (IT) infrastructures are becoming more complex to meet the diverse demands of emerging technology paradigms such as 5G/6G networks, edge, and internet of things (IoT). The intricacy of these infrastructures grows further when hosting containerized workloads as microservices, resulting in the challenge to detect and troubleshoot performance issues, incidents or even outages of critical use cases like industrial automation processes. Thus, fine-grained measurements and associated visualization are essential for operation observability of these IT infrastructures. However, most existing observability tools operate independently without systematically covering the entire data workflow. This paper presents an integrated design for multi-stage observability workflows, denoted as DistributEd obServability frameworK (DESK). The proposed framework aims to improve observability workflows for measurement, collection, fusion, storage, visualization, and notification. As a proof of concept, we deployed the framework in a Kubernetes-based testbed to demonstrate the successful integration of various components and usability of collected observability data. We also conducted a comprehensive study to determine the caused overhead by DESK agents at the reasonably powerful edge node hardware, which shows on average a CPU and memory overhead of around 2.5 % of total available hardware resource.","2575-4912","979-8-3503-1102-0","10.1109/EuCNC/6GSummit58263.2023.10188344","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10188344","Edge Computing;Internet of Things (IoT);Microservices;Monitoring;Observability;5G/6G","Image edge detection;Microservice architectures;Data visualization;Integrated design;Hardware;Internet of Things;Observability","","1","","15","IEEE","26 Jul 2023","","","IEEE","IEEE Conferences"
"An Anomaly Monitoring and Early Warning Method for Power Grid Microservice Network Based on Log Visualisation and Analysis","R. Lu; X. Zhu; X. Li; N. Long; G. Zhang","Information Center of Guizhou Power Grid Co., Ltd, Guiyang, Guizhou, China; Information Center of Guizhou Power Grid Co., Ltd, Guiyang, Guizhou, China; Information Center of Guizhou Power Grid Co., Ltd, Guiyang, Guizhou, China; Information Center of Guizhou Power Grid Co., Ltd, Guiyang, Guizhou, China; Information Center of Guizhou Power Grid Co., Ltd, Guiyang, Guizhou, China",2024 5th International Conference on Machine Learning and Computer Application (ICMLCA),"21 Nov 2024","2024","","","584","590","With the increasing complexity of power grid microservice networks, monitoring and detecting anomalies in real-time has become a significant challenge. Traditional methods struggle to capture the sequential and contextual relationships in log data. To address this, we propose a novel anomaly monitoring and early warning method based on the Bi-LSTM-ATT architecture, which integrates bidirectional long short-term memory (Bi-LSTM) networks and an attention mechanism. This model effectively captures both forward and backward dependencies in log sequences while focusing on critical features related to anomalies. The proposed method was tested using real-world log data from power grid microservices, and the experimental results show that it significantly outperforms traditional approaches such as PCA, Invariant Mining (IM), and N-gram in terms of precision, recall, and F1-score. The Bi-LSTM-ATT model provides a robust and accurate approach for real-time anomaly detection, contributing to enhanced operational stability and reliability in power grid systems.","","979-8-3315-3033-4","10.1109/ICMLCA63499.2024.10753853","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10753853","Anomaly Detection;Power Grid Microservices;Bi-LSTM-ATT;Log Analysis;Attention Mechanism","Attention mechanisms;Accuracy;Microservice architectures;Power grids;Real-time systems;Stability analysis;Reliability;Monitoring;Anomaly detection;Principal component analysis","","","","12","IEEE","21 Nov 2024","","","IEEE","IEEE Conferences"
"Research on Integrated Editing of Metro Passenger Service Information","W. Zhao; T. Sun","Institute of Computing Technologies, China Academy of Railway Sciences Corporation Limited, Beijing, China; Institute of Computing Technologies, China Academy of Railway Sciences Corporation Limited, Beijing, China","2024 IEEE 7th Advanced Information Technology, Electronic and Automation Control Conference (IAEAC)","25 Apr 2024","2024","7","","593","597","Aiming to improve the quality of passenger information services in metro, an integrated editing method has been proposed to provide passengers with diversified information services. Firstly, abstract descriptions of passenger information display elements are designed to construct a component library for display layout editing. The visual editing of component layout, event correlation, and attribute extension is achieved through component drag and drop. Secondly, the models of playlist associated task, event triggered task, and attribute update task were defined to achieve programmable display logic control. Multiple task combinations based on the time series were set up according to the terminal display requirements. Finally, the editing results, including the components and their interrelationships, should be semantically described to get an arrangement protocol file that can be parsed by service terminals and achieve the broadcasting.","2689-6621","979-8-3503-3916-1","10.1109/IAEAC59436.2024.10503820","China Academy of Railway Sciences; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10503820","passenger service information;display layout;components;visual editing;metro","Rails;Visualization;Protocols;Correlation;Layout;Time series analysis;Libraries","","","","5","IEEE","25 Apr 2024","","","IEEE","IEEE Conferences"
"An IoT Solution for Air Quality Monitoring and Hazard Identification for Smart City Development","R. E. Ogu; I. E. Achumba; C. D. Okoronkwo; G. A. Chukwudebe; N. Chukwuchekwa","Dept of Software Engineering, Federal University of Technology, Owerri, Nigeria; Dept. of Electrical and Electronic Engineering, Federal University of Technology, Owerri, Nigeria; Dept of Software Engineering, Federal University of Technology, Owerri, Nigeria; Dept. of Electrical and Electronic Engineering, Federal University of Technology, Owerri, Nigeria; Dept. of Electrical and Electronic Engineering, Federal University of Technology, Owerri, Nigeria",2022 IEEE Nigeria 4th International Conference on Disruptive Technologies for Sustainable Development (NIGERCON),"27 Jun 2022","2022","","","1","5","Many IoT solutions are focused on air quality monitoring. The applicability of IoT to the entire process of hazard identification has not been fully harnessed. This paper conceptualized a smart IoT architecture for air quality monitoring and hazard identification. Notably, a data governance layer is part of the proposed cloud centric database architecture, to tackle the concerns about data governance. For the architecture, JavaScript Object Notation was adopted as a standard for data exchange to enable interoperability among components from different service providers and device manufacturers. As a proof of concept, an IoT node for air quality monitoring was prototyped. A web application with crowdsourcing capability was developed to provide a platform through which users can report and be notified of hazardous incidents. The results obtained during the testing phases of the two architectural components developed herein shows that the proposed architecture is characterized with adequate interoperability. Specifically, the air quality node logged air quality data to two different cloud databases: Google Firebase and Thingspeak platform. Subsequently, the air quality data was tunneled from the databases and visualized on the Web Application developed herein. By developing a solution for hazard identification, this research has contributed towards smart city development.","2377-2697","978-1-6654-7978-3","10.1109/NIGERCON54645.2022.9803129","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9803129","Air Pollution Control;Crowdsourcing Web Application;Environmental monitoring;IoT Architecture;Risk Management","Crowdsourcing;Smart cities;Data visualization;Air pollution;Hazards;Service-oriented architecture;Data governance","","2","","24","IEEE","27 Jun 2022","","","IEEE","IEEE Conferences"
"Exploration and practice of intelligent campus infrastructure architecture based on Application Integration","H. Yuange; L. Jie","Information Network Center, Xi’an University of Science and Technology, Xi’an, China; Clean Group Samsung(China) Semiconductor, Xi’an, China",2021 2nd International Conference on Big Data and Informatization Education (ICBDIE),"21 Jun 2021","2021","","","406","410","Education informatization has experienced the construction of digital campus, which promotes the teaching, scientific research and management of the school to a great extent, but also brings many management and technical problems, the paper discusses the concept of smart campus construction, and expounds four driving modes of smart campus construction: technology driven, business driven, knowledge driven and integration driven.At the design level, based on the concept of integrated application, this paper proposes an exploratory multi- party cooperation mechanism, constructed a basic support platform including four functional components of integrated development tools, public facilities components, platform basic capabilities and management console, and takes it as the core architecture of the whole smart campus.Among them, the integrated development tools mainly include visual interface designer, coding and debugging; the public facilities components use the micro service architecture to provide functional components to meet the deployment and release of application services; the basic capabilities of the platform are open based on capability services, business services and data services.At the practical level, this paper discusses the implementation process of smart campus based on the basic platform of integrated application, which is a relatively complete solution of smart campus after experimental verification, and can be used for reference and promotion.","","978-1-6654-3870-4","10.1109/ICBDIE52740.2021.00098","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9457332","university informatization;integrated application;smart campus;basic platform;SOA","Visualization;Technological innovation;Education;Computer architecture;Big Data;Tools;Systems engineering and theory","","1","","11","IEEE","21 Jun 2021","","","IEEE","IEEE Conferences"
"Software-Defined Networking Integrated with Cloud Native and Proxy Mechanism: Detection and Mitigation System for TCP SYN Flooding Attack","C. -I. Fan; J. -H. Wang; C. -H. Shie; Y. -L. Tsai","Department of Computer Science and Engineering, Information Security Research Center, Intelligent Electronic Commerce Research Center, National Sun Yat-sen University, Kaohsiung, Taiwan; Department of Computer Science and Engineering, National Sun Yat-sen University, Kaohsiung, Taiwan; Department of Computer Science and Engineering, National Sun Yat-sen University, Kaohsiung, Taiwan; Information and Communication Security Technical Laboratories Telecommunication Laboratories Chunghwa Telecom, Taoyuan, Taiwan",2023 17th International Conference on Ubiquitous Information Management and Communication (IMCOM),"8 Feb 2023","2023","","","1","8","SDN is a new network architecture that still faces traditional network attacks. Among the attacks, Distributed-Denial-of-Service is one of the most severe attacks, especially the TCP SYN Flooding attack, which has a more significant impact. This paper is mainly to mitigate the impact of the SYN Flood attack and will combine Kubernetes and design a unique component: SDN Controller Manager, which exists in K8s as a microservices. The proxy mechanism is used to resist the SYN Flooding attack, and the K8s feature is further utilized. If the SDN Controller Manager is attacked and the service is terminated abnormally, K8s will automatically create a new SDN Controller Manager component to continue to provide services.","","978-1-6654-5348-6","10.1109/IMCOM56909.2023.10035614","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10035614","SDN;Kubernetes;Proxy;TCP syn flooding attack","Microservice architectures;Resists;Network architecture;Load management;Information management;Floods;Software defined networking","","","","12","IEEE","8 Feb 2023","","","IEEE","IEEE Conferences"
"A Systematic Review of the Software Architectures for the Development of Mobile Applications in Education","D. H. Concepción Patiño; L. Muñoz; V. Villarreal; C. Pardo","Maestría en Ciencias y Computación Móvil, Universidad Tecnológica de Panamá, Panamá, Panamá; Grupo de Investigación en Tecnologías Computacionales Emergentes (GITCE), Panamá, Panamá; Grupo de Investigación en Tecnologías Computacionales Emergentes (GITCE), Panamá, Panamá; Grupo de Investigación GTI, Universidad del Cauca, Popayán, Colombia","2022 8th International Engineering, Sciences and Technology Conference (IESTEC)","16 Feb 2023","2022","","","231","237","Currently, mobile devices have gone from being objects of entertainment and socialization, to become work tools, powered by applications that facilitate the fulfillment of these tasks. This means not only understanding the problem to be solved, but also the schematization of the software components that will be involved. For this purpose, there are software architectures, which are guidelines that allow organizing and structuring the construction of applications for different devices and environments. Following this context, the following review article will evaluate the most used architectures in educational environments that implement technologies such as cloud, microservices, networks and others. Using the methodology proposed by Barbara Kitchenham and Okoli for literature extraction, from which 11 scientific articles were obtained, who talk about architectures such as n-tier, for augmented reality, client-server, cloud and microservices. As a result, of the 5 architectures that were implemented in the educational projects, the one with the highest rate of development is the client-server with 36.36% of implementations, while the least developed is the microservices with 9.09%, not leaving aside the possibility of combining these structures to achieve a better framework for the construction and development of mobile applications.","","978-1-6654-9843-2","10.1109/IESTEC54539.2022.00042","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10040833","Applications;architecture;infrastructure;mobile technologies","Software;Computer architecture;Mobile applications;Microservice architectures;Education;Software architecture;Web servers","","","","","IEEE","16 Feb 2023","","","IEEE","IEEE Conferences"
"A Cyber Risk Based Moving Target Defense Mechanism for Microservice Architectures","K. A. Torkura; M. I. H. Sukmana; A. V. D. M. Kayem; F. Cheng; C. Meinel","Hasso-Plattner-Institute, University of Potsdam, Potsdam, Germany; Hasso-Plattner-Institute, University of Potsdam, Potsdam, Germany; Hasso-Plattner-Institute, University of Potsdam, Potsdam, Germany; Universitat Potsdam, Potsdam, Brandenburg, DE; Universitat Potsdam, Potsdam, Brandenburg, DE","2018 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Ubiquitous Computing & Communications, Big Data & Cloud Computing, Social Computing & Networking, Sustainable Computing & Communications (ISPA/IUCC/BDCloud/SocialCom/SustainCom)","21 Mar 2019","2018","","","932","939","Microservice Architectures (MSA) structure applications as a collection of loosely coupled services that implement business capabilities. The key advantages of MSA include inherent support for continuous deployment of large complex applications, agility and enhanced productivity. However, studies indicate that most MSA are homogeneous, and introduce shared vulnerabilites, thus vulnerable to multi-step attacks, which are economics-of-scale incentives to attackers. In this paper, we address the issue of shared vulnerabilities in microservices with a novel solution based on the concept of Moving Target Defenses (MTD). Our mechanism works by performing risk analysis against microservices to detect and prioritize vulnerabilities. Thereafter, security risk-oriented software diversification is employed, guided by a defined diversification index. The diversification is performed at runtime, leveraging both model and template based automatic code generation techniques to automatically transform programming languages and container images of the microservices. Consequently, the microservices attack surfaces are altered thereby introducing uncertainty for attackers while reducing the attackability of the microservices. Our experiments demonstrate the efficiency of our solution, with an average success rate of over 70% attack surface randomization.","","978-1-7281-1141-4","10.1109/BDCloud.2018.00137","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8672278","Security Risk Assessment, Security Metrics, Moving Target Defense, Microservices Security, Application Container Security","Security;Risk analysis;Measurement;Software;Logic gates;Indexes;Transforms","","18","","37","IEEE","21 Mar 2019","","","IEEE","IEEE Conferences"
"A Novel Integrated Architecture for Ambient Assisted Living Systems","A. Kunnappilly; A. Sorici; I. A. Awada; I. Mocanu; C. Seceleanu; A. M. Florea","Mälardalen University, Sweden; Politehnica University, Romania; Politehnica University, Romania; Politehnica University, Romania; Mälardalen University, Sweden; Politehnica University, Romania",2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC),"11 Sep 2017","2017","1","","465","472","The increase in life expectancy and the slumping birth rates across the world result in lengthening the average age of the society. Therefore, we are in need of techniques that will assist the elderly in their daily life, while preventing their social isolation. The recent developments in Ambient Intelligence and Information and Communication Technologies have facilitated a technological revolution in the field of Ambient Assisted Living. At present, there are many technologies on the market that support the independent life of older adults, requiring less assistance from family and caregivers, yet most of them offer isolated services, such as health monitoring, reminders etc, moreover none of current solutions incorporates the integration of various functionalities and user preferences or are formally analyzed for their functionality and quality-of-service attributes, a much needed endeavor in order to ensure safe mitigations of potential critical scenarios. In this paper, we propose a novel architectural solution that integrates necessary functions of an AAL system seamlessly, based on user preferences. To enable the first level of the architecture's analysis, we model our system in Architecture Analysis and Design Language, and carry out its simulation for analyzing the end-to-end data-flow latency, resource budgets and system safety.","0730-3157","978-1-5386-0367-3","10.1109/COMPSAC.2017.28","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029645","Ambient Intelligence;Ambient Assisted Living;Architecture Analysis and Design Language","Analytical models;Computer architecture;Senior citizens;Data models;Fires;Sensor systems","","6","","11","IEEE","11 Sep 2017","","","IEEE","IEEE Conferences"
"Embedding security and privacy into the development and operation of cloud applications and services","Tran Quang Thanh; S. Covaci; T. Magedanz; P. Gouvas; A. Zafeiropoulos","Technical University Berlin and Fraunhofer FOKUS, Berlin, Germany; Technical University Berlin and Fraunhofer FOKUS, Berlin, Germany; Technical University Berlin and Fraunhofer FOKUS, Berlin, Germany; Ubitech Ltd, Athens, Greece; Ubitech Ltd, Athens, Greece",2016 17th International Telecommunications Network Strategy and Planning Symposium (Networks),"24 Nov 2016","2016","","","31","36","This paper introduces an approach allowing cloud application developers, service providers to consider security and privacy requirements across the application lifecycle. Specifically, a DevOps framework has been described that took into account several emerging technologies such as Network Functions Virtualization (NFV) and Microservice Pattern Design. As an illustration, a proof-of-concept application in the healthcare domain is presented to support such direction.","","978-1-4673-8991-4","10.1109/NETWKS.2016.7751149","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7751149","Cloud Computing;Microservice;NFV;Security","Security;Cloud computing;Computer architecture;Privacy;Measurement;Context","","4","","30","IEEE","24 Nov 2016","","","IEEE","IEEE Conferences"
"MFRL-CA: Microservice Fault Root Cause Location based on Correlation Analysis","Y. Chen; N. Chen; W. Xu; L. Lian; H. Tu","College of Computer and Electronics Information, Guangxi University, Nanning, China; College of Computer and Electronics Information, Guangxi University, Nanning, China; College of Computer and Electronics Information, Guangxi University, Nanning, China; College of Computer and Electronics Information, Guangxi University, Nanning, China; College of Computer and Electronics Information, Guangxi University, Nanning, China",2021 8th International Conference on Dependable Systems and Their Applications (DSA),"1 Dec 2021","2021","","","90","101","With the expansion of the scale of microservice applications, its dynamic update and complex dependency call relations increase the probability of failure and the difficulty of diagnosis. How to ensure the stable operation of applications and QoS is crucial. At present, there are some researches on fault diagnosis of microservices, but there are still deficiencies in fault propagation and root cause localization. In this paper, a Microservice Fault Root cause Location Method Based on Correlation Analysis (MFRL-CA) is designed to reduce the time consumption of fault detection and root positioning. This method constructs the Microservice Fault Propagation Graph (MFPG) by collecting the correlation between dependent call data and historical fault data, and accurately infers and locates the fault causes through a new anomaly score measurement and random walk algorithm. Experiments show that this method can effectively detect faults and accurately locate the fault causes, and the accuracy is 12.75% higher than that of the benchmark method.","2767-6684","978-1-6654-4391-3","10.1109/DSA52907.2021.00018","Research and Development; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9622769","Microservice;Fault root cause location;Root cause analysis;Fault propagation graph","Location awareness;Fault diagnosis;Correlation;Fault detection;Microservice architectures;Quality of service;Maintenance engineering","","3","","22","IEEE","1 Dec 2021","","","IEEE","IEEE Conferences"
"Unsupervised Anomaly Detection on Distributed Log Tracing through Deep Learning","D. A. Khudyakov; G. E. Yakhyaeva","Department of Information Technologies, Novosibirsk State University, Novosibirsk, Russia; Department of Information Technologies, Novosibirsk State University, Novosibirsk, Russia",2024 IEEE 25th International Conference of Young Professionals in Electron Devices and Materials (EDM),"5 Aug 2024","2024","","","1830","1833","Large modern software systems have a distributed microservice architecture. Such systems are built from loosely connected and independently deployable components - microservices. Microservices interact with each other with the help of various protocols, forming a sequence of internal calls in order to process a request that comes to the system. This interaction is recorded in the form of logs, which are produced by services at various points of execution and contain useful debugging information. Distributed tracing links individual logs into traces. Thanks to this, it is possible to analyze all logs related to one specific request. Traces are extremely convenient for analyzing incidents that occur during system operation. This work is dedicated to the automatic analysis of log traces to identify abnormal behavior in the operation of distributed systems. The solution is based on the application of deep machine learning methods for analyzing log sequences. The logs are cleaned and vectorized, and then used to train a model based on the long short-term memory autoencoder. The solution is tested on the TraceBench open dataset. As a result, high values of precision and recall metrics were obtained.","2325-419X","979-8-3503-8923-4","10.1109/EDM61683.2024.10615125","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10615125","microservices;log analysis;anomaly detection;distributed tracing;unsupervised deep learning;LSTM;autoencoder","Protocols;Systems operation;Microservice architectures;Prototypes;Computer architecture;Software systems;Task analysis","","","","20","IEEE","5 Aug 2024","","","IEEE","IEEE Conferences"
"Process Implications of Executable Domain Models for Microservices Development","B. Wang; B. W. Boehm","University of Southern California, Los Angeles, California; University of Southern California, Los Angeles, California",2020 IEEE/ACM International Conference on Software and System Processes (ICSSP),"24 Jul 2023","2020","","","41","50","Microservice architecture has been recognized as an important enabler for continuous development of many cloud-based systems. Code generation has been tried in the tool chain of building microservices. However, most existing tools generally do not consider the risks from continuous development.We have been developing a toolkit which generates microservices from application domain models. Our approach aligns development process to this toolkit and coordinates domain modeling activity over project life cycles. In this paper, we describe its framework and corresponding development process which eliminates delays brought by the uncertainty of a project at a relatively early stage. Several minimum viable products have been built upon the proposed approach during the past years, including automated generation of code from domain decomposition. Our result shows 10% saving of effort and fewer issues. Effort saving increases to 30% under an extreme condition with high-rate personnel turnover. We also discuss our findings on running these projects and raise discussion and questions for future enhancement.","","978-1-4503-7512-2","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10186494","microservices;code generation;domain modeling;continuous development;agile","Software prototyping;Codes;Uncertainty;Spirals;Software architecture;Software as a service;Microservice architectures","","","","38","","24 Jul 2023","","","IEEE","IEEE Conferences"
"Application of Containerized Microservice Approach to Airline Sentiment Analysis","S. Malik; H. El-Sayed; M. A. Khan; H. Alexander","College of IT, UAE University, Al Ain, UAE; College of IT, UAE University, Al Ain, UAE; College of IT, UAE University, Al Ain, UAE; College of IT, UAE University, Al Ain, UAE",2020 14th International Conference on Innovations in Information Technology (IIT),"25 Dec 2020","2020","","","215","220","Containers are getting more popularity than the virtual machines by offering the benefits of virtualization along with the performance nearby bare metal. Standardizing support of Docker containers among various cloud providers has made them a trendy solution for developers. In this paper, we elaborate on containerized microservice, leveraging the lightweight Docker container technology. The evolution of microservice architecture allows applications to be structured into independent modular components making them easier to manage and scale. As a special case, the containerized sentiment analysis microservice is deployed using popular classification approaches. We implement and compare eight machine learning algorithms: Multinomial Naive Bayes, Decision Tree, Random Forest, K-Nearest Neighbour, AdaBoost, Support Vector Machine, Multilayer Perceptron, and Stochastic Gradient Descent to analyze and classify the tweets into positive, negative, and neutral sentiments. Experimental results procured for the Twitter US Airline Sentiment dataset show that Support Vector Machine, Multinomial Naive Bayes, Stochastic Gradient Descent, and Random Forest outperform the other algorithms. We believe that this research study will assist companies and organizations to improve their services by precisely analyzing Twitter data.","2325-5498","978-1-7281-8184-4","10.1109/IIT50501.2020.9299043","United Arab Emirates University; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9299043","container;docker;sentiment analysis;machine learning","Containers;Sentiment analysis;Machine learning algorithms;Social networking (online);Random forests;Computer architecture;Support vector machines","","","","25","IEEE","25 Dec 2020","","","IEEE","IEEE Conferences"
"Microservice Based Tool Support for Business Process Modelling","S. Alpers; C. Becker; A. Oberweis; T. Schuster","FZI Forschungszentrum Informatik, Karlsruhe, Germany; FZI Forschungszentrum Informatik, Karlsruhe, Germany; FZI Forschungszentrum Informatik, Karlsruhe, Germany; Esentri AG, Ettlingen, Germany",2015 IEEE 19th International Enterprise Distributed Object Computing Workshop,"29 Oct 2015","2015","","","71","78","The rise of micro services as architectural pattern creates a bunch of interesting opportunities for software architectures of modelling editors and additional services. Main advantages are the scalability in collaborative distributed scenarios and enhanced possibilities regarding service development and operation. Throughout this article, we will illustrate how modelling editors and additional services can be build based on micro services. Our tooling will focus on business process modelling. We will also strive to highlight how architectures of this kind can enact collaborative modelling techniques, increase reuse of utilized service components and improve their integration into lightweight user interfaces, for example in mobile devices.","2325-6605","978-1-4673-9331-7","10.1109/EDOCW.2015.32","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7310673","microservice;business process;modelling;architecture","Business;Analytical models;Computer architecture;Data models;Computational modeling;Petri nets;Software architecture","","14","1","22","IEEE","29 Oct 2015","","","IEEE","IEEE Conferences"
"Service-based integration of modular control components in digital manufacturing platforms","J. Fuchs; R. Schneider; S. J. Oks; J. Franke","Institute for Factory Automation and Production Systems, Erlangen, Germany; Institute for Factory Automation and Production Systems, Erlangen, Germany; Chair of Information Systems, Innovation and Value Creation, Nuremberg, Germany; Institute for Factory Automation and Production Systems, Erlangen, Germany",2021 IEEE 19th International Conference on Industrial Informatics (INDIN),"11 Oct 2021","2021","","","1","7","Due to increasing complexity on the shop floor associated with the digital transformation and growing penetration of modern production environments with smart services, the operational phase of automated production facilities is gaining additional importance. The growing range of hybrid service bundles, i.e., the combination of digital services and cyber-physical production systems (CPPS), is expanding the scope of utilization and requires the application of platform-based solutions for service integration. Efficient, scalable IT infrastructures as well as technological flexibility and independence are premises for the successful implementation of these platforms. The availability of ubiquitous communication for seamless networking of all entities also plays a central role. These prerequisites enable the vertical integration of automation components on the shop floor up to the context of strategic business processes based on continuous data and information models. This paper presents an approach for integrating CPPS elements into scalable, highly available service platforms and shows how modern control approaches can be successfully linked with smart service concepts. The exemplary use case for this is a test bench for electric drives.","","978-1-7281-4395-8","10.1109/INDIN45523.2021.9557380","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9557380","Smart Service;Service Bundle;Service Orchestration;Cyber-Physical Microservices;Cyber-Physical Production Systems","Production systems;Digital transformation;Conferences;Production facilities;Data models;Manufacturing;Complexity theory","","2","","26","IEEE","11 Oct 2021","","","IEEE","IEEE Conferences"
"Enriching Cloud-native Applications with Sustainability Features","M. Vitali; P. Schmiedmayer; V. Bootz","DEIB, Politecnico di Milano, Milan, Italy; Department of Informatics, Technical University of Munich, Munich, Germany; Department of Informatics, Technical University of Munich, Munich, Germany",2023 IEEE International Conference on Cloud Engineering (IC2E),"6 Nov 2023","2023","","","21","31","Due to the ever-growing demand for computational resources, the environmental impact of data centers is continuously increasing. Recently, a great effort has been made to mitigate this impact, while the demand for computational resources has continued to grow. Current mitigation strategies focus on the infrastructure perspective, while the application perspective has been neglected. This paper aims to engage application designers and developers on the path to greener application design. Following the Sustainable Application Design Process (SADP) methodology, we introduce a Sustainable Application Design Architecture (SADA) for enriching cloud-native application components with sustainability features that can be exploited to adapt the application workflow to the environmental context. The architecture enables synergies from design to deployment between all stakeholders involved in the application management. The paper focuses on enriching the application with sustainability features in the design and development phases. We also present and discuss a prototype that can translate design-level sustainability features into development features.","2694-0825","979-8-3503-4394-6","10.1109/IC2E59103.2023.00011","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10305842","cloud-native applications;green IS;application design;adaptive workflow;microservices","Green products;Prototypes;Microservice architectures;Computer architecture;Quality of service;Energy efficiency;Stakeholders","","","","51","IEEE","6 Nov 2023","","","IEEE","IEEE Conferences"
"On the creation of a robotics software architecture for AI-based advanced applications","I. A. Astorquia; A. T. Iglesias; B. S. Urquijo; J. -I. Vazquez; I. P. López","DeustoTech, Deusto Institute of Technology, University of Deusto, Bilbao, Spain; Computer Science, Electronics and Communication Tecnologies, University of Deusto, Bilbao, Spain; Computer Science, Electronics and Communication Tecnologies, University of Deusto, Bilbao, Spain; Computer Science, Electronics and Communication Tecnologies, University of Deusto, Bilbao, Spain; Computer Science, Electronics and Communication Tecnologies, University of Deusto, Bilbao, Spain",2022 IEEE 27th International Conference on Emerging Technologies and Factory Automation (ETFA),"25 Oct 2022","2022","","","1","6","Digital industry has revolutionized how typical industrial problems of manufacturing and component assembly are tackled.This new digitization of industry enables the creation of robotics-based manufacturing systems that are much more flexible and reconfigurable, meeting the needs of today’s systems.However, this new work paradigm has highlighted the need for advanced software architectures that can provide solutions to the specific problems of this new way of manufacturing. This research work defines a software architecture for industrial robotic systems, which enables the programming of modern manufacturing systems in an efficient and fast way to meet the current demands of the industry.","","978-1-6654-9996-5","10.1109/ETFA52439.2022.9921495","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9921495","Advanced robotics;software architecture;industrial AI","Industries;Service robots;Software architecture;Reinforcement learning;Production;Programming;Artificial intelligence","","","","15","IEEE","25 Oct 2022","","","IEEE","IEEE Conferences"
"MicroValid: A Validation Framework for Automatically Decomposed Microservices","M. Cojocaru; A. Uta; A. -M. Oprescu","Universiteit van Amsterdam; Vrije Universiteit Amsterdam; Universiteit van Amsterdam, Amsterdam, Netherlands",2019 IEEE International Conference on Cloud Computing Technology and Science (CloudCom),"28 Jan 2020","2019","","","78","86","In a dynamic world of software development, the architectural styles are continuously evolving, adapting to new technologies and trends. Microservice architecture (MSA) is gaining adoption among industry practitioners due to its advantages compared to the monolithic architecture. Although MSA builds on the core concepts of Service Oriented Architecture (SOA), it pushes for a finer granularity, with stricter boundaries. Due to cost rationale, numerous companies choose to migrate from the monolithic style instead of developing from scratch. Recently, semi-automatic decomposition tools assist the migration process, yet a crucial part is still missing: validation. The current study focuses on providing a validation framework for microservices decomposed from monolithic applications and complete the puzzle of architectural migrations. From previous work we select quality attributes of microservices that may be assessed using static analysis. We then provide an implementation specification of the validation framework. We use five applications to evaluate our approach, and the results show that our solution is scalable while providing insightful measurements of the assessed quality attributes of microservices.","2330-2186","978-1-7281-5011-6","10.1109/CloudCom.2019.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8968869","microservices, decomposition, validation, coefficient of variation, granularity, coupling, cohesion","","","11","","28","IEEE","28 Jan 2020","","","IEEE","IEEE Conferences"
"Distributed Artificial Intelligence with Multi-Agent Systems for MEC","T. Leppanen","Center for Ubiquitous Computing, University of Oulu, Finland",2019 28th International Conference on Computer Communication and Networks (ICCCN),"26 Sep 2019","2019","","","1","8","In this paper, the Multi-access Edge Computing (MEC) system architecture, as defined by the ETSI standards, is modeled as a multi-agent system. MEC system management services and application execution components are designed as software agents, facilitating distributed artificial intelligence capabilities in their operation and cooperation. Further, the integration of current agent technologies into the standardized MEC system is discussed. Lastly, a case study is presented on how to integrate an existing Internet of Things agent framework and agent-based edge application seamlessly to the MEC system.","2637-9430","978-1-7281-1856-7","10.1109/ICCCN.2019.8846960","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8846960","","Edge computing;Cloud computing;Computer architecture;Software agents;Virtualization;Systems architecture;Multi-agent systems","","8","","32","IEEE","26 Sep 2019","","","IEEE","IEEE Conferences"
"helyOS: A customized off-the-shelf solution for autonomous driving applications in delimited areas","C. V. Barbosa; N. Belov; F. Keppler; J. Kolb; G. Nitzsche; S. Wagner","Fraunhofer Institute for Transportation and Infrastructure Systems IVI, Dresden, Germany; Fraunhofer Institute for Transportation and Infrastructure Systems IVI, Dresden, Germany; Fraunhofer Institute for Transportation and Infrastructure Systems IVI, Dresden, Germany; Fraunhofer Institute for Transportation and Infrastructure Systems IVI, Dresden, Germany; Fraunhofer Institute for Transportation and Infrastructure Systems IVI, Dresden, Germany; Fraunhofer Institute for Transportation and Infrastructure Systems IVI, Dresden, Germany",2023 IEEE/SICE International Symposium on System Integration (SII),"15 Feb 2023","2023","","","1","6","Microservice Architectures (MSA), known to successfully handle complex software systems, are emerging as the new paradigm for automotive software. The design of an MSA requires correct subdivision of the software system and implementation of the communication between components. These tasks demand both software expertise and domain knowledge. In this context, we developed an MSA framework pre-tailored to meet the requirements of autonomous driving applications in delimited areas - the helyOS framework. The framework decomposes complex applications in predefined microservice domains and provides a communication backbone for event messages and data. This paper demonstrates how such a tailored MSA framework can accelerate the development by prompting a quick start for the integration of motion planning algorithms, device controllers, vehicles simulators and web-browser interfaces.","2474-2325","979-8-3503-9868-7","10.1109/SII55687.2023.10039276","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10039276","Yard automation;autonomous driving;helyOS;microservices","Microservice architectures;System integration;Computer architecture;Software systems;Planning;Task analysis;Autonomous vehicles","","","","24","IEEE","15 Feb 2023","","","IEEE","IEEE Conferences"
"Detection and Repair of Architectural Inconsistencies in Java","N. Ghorbani; J. Garcia; S. Malek","School of Information and Computer Sciences, University of California, Irvine, USA; School of Information and Computer Sciences, University of California, Irvine, USA; School of Information and Computer Sciences, University of California, Irvine, USA",2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE),"26 Aug 2019","2019","","","560","571","Java is one of the most widely used programming languages. However, the absence of explicit support for architectural constructs, such as software components, in the programming language itself has prevented software developers from achieving the many benefits that come with architecture-based development. To address this issue, Java 9 has introduced the Java Platform Module System (JPMS), resulting in the first instance of encapsulation of modules with rich software architectural interfaces added to a mainstream programming language. The primary goal of JPMS is to construct and maintain large applications efficiently-as well as improve the encapsulation, security, and maintainability of Java applications in general and the JDK itself. A challenge, however, is that module declarations do not necessarily reflect actual usage of modules in an application, allowing developers to mistakenly specify inconsistent dependencies among the modules. In this paper, we formally define 8 inconsistent modular dependencies that may arise in Java-9 applications. We also present DARCY, an approach that leverages these definitions and static program analyses to automatically (1) detect the specified inconsistent dependencies within Java applications and (2) repair those identified inconsistencies. The results of our experiments, conducted over 38 open-source Java-9 applications, indicate that architectural inconsistencies are widespread and demonstrate the benefits of DARCY in automated detection and repair of these inconsistencies.","1558-1225","978-1-7281-0869-8","10.1109/ICSE.2019.00067","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812079","Java Platform Module System;Architectural Inconsistencies;Static Program Analysis;Software Architecture;Module;Detection;Repair;Security;Maintainability;Encapsulation;Software Bloat;Java","Java;Computer architecture;Software;Bars;Encapsulation;Security;Maintenance engineering","","9","","74","IEEE","26 Aug 2019","","","IEEE","IEEE Conferences"
"Using Serverless FaaS for Invoking Long-Running Jobs","M. W. Adain; A. Tanveer","Arcesium (The DE Shaw Group), Hyderabad, India; Department of Computer Science Illinois, Institute of Technology, Chicago, Illinois",2023 IEEE 6th International Conference on Cloud Computing and Artificial Intelligence: Technologies and Applications (CloudTech),"29 Dec 2023","2023","","","01","06","Function-as-a-Service (FaaS) is a popular computing model which abstracts out a lot of infrastructure intricacies from developers for building serverless applications, supported by all major cloud providers and many open-source software frameworks. Albeit, the numerous advantages a FaaS platform entails with it, there are a few perils associated with it as well, one of which is a timeout. Every function invocation has a default timeout, after which if the program running in the FaaS platform is still running, is terminated by the FaaS platform. This makes it's a difficult to run long running jobs/batches on a FaaS platform. This document depicts exploiting the usage of Function as a Service (FaaS) platforms for triggering and long running jobs and batches, and post processing the output of the jobs/batches.","","979-8-3503-0306-3","10.1109/CloudTech58737.2023.10366063","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10366063","Function as a Service (FaaS);Serverless;batch;callback;job;Amazon Web Services(AWs);Google Cloud Platform(GCP);Azure;Lambda;Functions;Simple Storage Service (S3);AWS Cognito","Uniform resource locators;Cloud computing;Costs;Computational modeling;Buildings;Microservice architectures;Browsers","","","","22","IEEE","29 Dec 2023","","","IEEE","IEEE Conferences"
"Enabling Auto-Heal Micro-Service Framework (AHMF) Based on APM Audit And Proactive Fault Discovery in Cloud Monitoring","S. Varadharajan; L. Florence","SERVICE RELIABILITY ENGINEER, MANULIFE SINGAPORE; ADHIYAMAAN COLLEGE OF ENGINEERING, INDIA",2023 16th International Conference on Developments in eSystems Engineering (DeSE),"21 Mar 2024","2023","","","162","167","In Computer Science paradigm, at any domain, Data is a crucial component and it becomes highly sensitive when it is handled within financial domains. Technology domain companies heavily rolling out on Cloud-Native applications and legacy business domain companies also started adapting into Cloud based platforms. So, there is a lot of data movement happening in Cloud services. In terms of Data integrity and availability this possesses a greater challenge. This study will enable the auto-healing of Transactional data loss or incorrect data caused by many internal and external factors by developing the AHMF which is a framework that can be plug-in to any microservice design solutions available in Cloud. This study is mainly focuses on Insurance domain as use case which handles highly sensitive payment data. This framework also helps to monitor and trace all the transactions using the Audit functions which can be a critical factor in understanding the data movement within Microservices. Though the lost data or incorrect data is being fixed by any system, with a real-time system the transactional time also plays a vital role in critical applications like payments. Hence this study also emphasizes the importance of keeping System SLA with marginal SLA breaches.","","979-8-3503-8134-4","10.1109/DeSE60595.2023.10469486","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10469486","Cloud Computing;Cloud services;Microservices;Microservice framework","Computer science;Data integrity;Microservice architectures;Insurance;Companies;Real-time systems;Monitoring","","","","24","IEEE","21 Mar 2024","","","IEEE","IEEE Conferences"
"PMDC: Programmable Mobile Device Clouds for Convenient and Efficient Service Provisioning","Z. Song; E. Tilevich","Virginia Tech, Software Innovations Lab, VA; Virginia Tech, Software Innovations Lab, VA",2018 IEEE 11th International Conference on Cloud Computing (CLOUD),"11 Sep 2018","2018","","","202","209","Modern mobile devices feature ever increasing computational, sensory, and network resources, which can be shared to execute tasks on behalf of nearby devices. Mobile device clouds (MDCs) facilitate such distributed execution by exposing the collective resources of a set of nearby mobile devices through a unified programming interface. However, the true potential of MDCs remains untapped, as they fail to provide practical programming support for developers to execute distributed functionalities. To address this problem, we introduce a microservice-based Programmable MDC architecture (PMDC), highly customized for the unique features of MDC environments. PMDC conveniently provisions functionalities as microservices, which are deployed on MDC devices on demand. PMDC features a novel domain specific language that provides abstractions for concisely expressing fine-grained control over the procedures of device capability sharing and microservice execution. Furthermore, PMDC introduces a new system component-the microservice gateway, which reconciles the supply of available device capabilities and the demand for microservice execution to distribute microservices within an MDC. Our evaluation shows that MDCs, expressed by developers through the PMDC declarative programming interface, exhibit low energy consumption and high performance.","2159-6190","978-1-5386-7235-8","10.1109/CLOUD.2018.00033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8457801","Mobile device clouds;Programming model;Microservice","Logic gates;Mobile handsets;Cloud computing;Task analysis;Runtime;Performance evaluation;Computer architecture","","4","","33","IEEE","11 Sep 2018","","","IEEE","IEEE Conferences"
"Performance Study of Kubernetes Cluster Deployed on Openstack,VMs and BareMetal","Y. S. D. Reddy; P. S. Reddy; N. Ganesan; B. Thangaraju","International Institute of Information Technology, Bangalore, India; International Institute of Information Technology, Bangalore, India; International Institute of Information Technology, Bangalore, India; International Institute of Information Technology, Bangalore, India","2022 IEEE International Conference on Electronics, Computing and Communication Technologies (CONECCT)","30 Aug 2022","2022","","","1","5","Kubernetes is an OpenSource Orchestration tool used for deploying and managing containerized applications at scale. Kubernetes easily manages the cluster with a master and worker nodes in which the Pods are been hosted. Nowadays many Cloud Infrastructure Providers like AWS, GoogleCloud, and Microsoft Azure understand the importance of Kubernetes and have added these services to their products. Openstack is a novel and highly manageable OpenSource cloud IaaS platform where the components manage huge pools of compute, storage, and networking resources. In this experimental work we studied and compared the local deployment of Kubernetes Cluster using minikube with the VM deployment and OpenStack deployment. A demo application with microservices Architecture has been taken for this study in which we compare the CPU and Memory Usage on the deployment of the cluster in OpenStack, VMs and BareMetal. The preliminary results show that the bare-metal deployment outperforms the other deployments in both Computing and Memory intensive applications.","2766-2101","978-1-6654-9781-7","10.1109/CONECCT55679.2022.9865718","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9865718","OpenStack;Docker;Containers;Kubernetes;MicroServices;Software Defined Networking (SDN)","Microservice architectures;Computer architecture;Communications technology","","5","","15","IEEE","30 Aug 2022","","","IEEE","IEEE Conferences"
"Control as a Service Architecture to Support Cloud-Based and Event-Driven Control Application Development","M. Lyu; F. Biennier; P. Ghodous","dept. Computer Science University of Lyon CNRS, INSA-Lyon LIRIS UMR5205, Lyon, France; dept. Computer Science University of Lyon CNRS, INSA-Lyon LIRIS UMR5205, Lyon, France; dept. Computer Science University of Lyon CNRS, INSA-Lyon LIRIS UMR5205, Lyon, France",2019 IEEE International Congress on Internet of Things (ICIOT),"29 Aug 2019","2019","","","41","49","Taking advantage of IoT, services and Cloud technologies, the development of Cloud of Things (CoT) changes the way control applications are engineered and developed. CoT helps to move from a dedicated design and development of control applications to a Control as a Service vision, relying on Cyber Physical System (CPS) composition and orchestration. This vision requires developing a new architecture to provide a loosely coupled way to interconnect objects and control software, mixing both logical and physical constraints. To fit this challenge, we propose a Control as a Service model, extending the Cloud XaaS model to automation. To this end, we design a Control Service, gathering both functional and non functional specifications to describe each component of the system. By this way, control applications can be implemented by selecting and composing these control services associated to the different sensors, controllers and actuators. Fitting the loosely coupled principle of the service oriented architecture, we introduce a data manager component used to store the information produced and exchanged by control components (sensors and controllers) and an event manager, in charge of invoking the services when all the necessary input information are available. A prototype hosting a simulated smart city control application, distributed on different machines, is presented.","","978-1-7281-2714-9","10.1109/ICIOT.2019.00019","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8815664","Control as a Service;Service Oriented Control Architecture;control service;Cloud of Things;event driven;smart transportation","Internet of Things;Cloud computing;Actuators;Sensor phenomena and characterization;Sensor systems","","2","","33","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"Comparison of zero downtime based deployment techniques in public cloud infrastructure","C. K. Rudrabhatla","Sony Pictures Entertainment, Los Angeles, USA","2020 Fourth International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC)","10 Nov 2020","2020","","","1082","1086","The ever-metamorphosing nature of modern businesses demand changes to be rapidly deployed to the production environments without causing any major outages. Cloud computing in conjunction with containerization and orchestration technologies has undoubtedly contributed to the development and proliferation of quicker and light weight deployment strategies. Of late, Micro service architecture (MSA) has become the de-facto standard for building such lightweight containers, which made the deployments even quicker. Though public cloud technologies and MSA based containers helped in rapid deployments, continuous deployment with zero downtime is not something which comes out of the box. It needs the implementation of Blue Green (BG) deployment techniques to achieve the zero downtime with no disruption to end users while applying the patches. But there are multiple ways to implement the BG deployment pattern. This research paper aims to address three things - (i) Explore Blue Green, Canary and Rolling deployment techniques possible in the cloud platforms (ii) Perform a research project, to simulate the BG deployment strategies using DNS routing swap versus Load Balancer swap versus newer image switch techniques(iii) Draw the comparisons and elucidate which deployment strategy is suitable for which scenario.","","978-1-7281-5464-0","10.1109/I-SMAC49090.2020.9243605","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9243605","component;Cloud computing;Containerization;Orchestration;Microservices;Blue Green strategy;Canary strategy;Zero downtime;Rapid deployments","Cloud computing;Green buildings;Switches;Production;Containers;Routing;Standards","","8","","17","IEEE","10 Nov 2020","","","IEEE","IEEE Conferences"
"Intelligent Software Mining with Business Intelligence Tools for Automation of Micro services in SOA: A Use Case for Analytics","D. P. Wangoo","IGDTUW, New Delhi, INDIA",2020 7th International Conference on Computing for Sustainable Global Development (INDIACom),"4 May 2020","2020","","","98","101","Business Intelligence as a platform is of great assistance to software engineers for analyzing and amassing data to search for information through queries. Object oriented business engineering advances reusability by considering reusable components at the business level. Systematic reuse is the major factor governing the success of an object-oriented software business. Software mining or mining of software engineering data is the successful mining of software engineering data. The integration of mining of software engineering data and Business Intelligence tools gives rise to automation of software services at business level. Automation is the key to Industry 4.0 that we witness today. Therefore, automation of software intelligence is the need of the hour for service delivery. Today's cloud-based applications are working on delivery of Anything as a Service (XaaS) that accounts for provision of anything as a service like database, software, microservices, security on the cloud platform. Service-oriented Architecture (SoA) is based on Software as a Service (SaaS) of the cloud computing. Software intelligence is the form of artificial intelligence which automates the process of mining software engineering data for useful business applications. Not only it integrates the amalgamation of the above fields but at the same time associates the field with industry standards. The aim of this paper is to analyze the various Business Intelligence tools available for promoting intelligence at the business level with benefits to the SoA services particularly microservices for the cloud platform. With the analysis the goal of Business Oriented Software Engineering is enhanced with the analysis and proper usage of business intelligence tools at all the levels of software development process.","","978-93-80544-38-0","10.23919/INDIACom49435.2020.9083682","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9083682","microservices;business intelligence;artificial intelligence;cloud computing","","","1","","21","","4 May 2020","","","IEEE","IEEE Conferences"
"Dev-for-Operations and Multi-sided Platform for Next Generation Platform as a Service","B. Berde; S. Van Rossem; A. Ramos; M. Orrù; A. Shatnawi",Nokia Bell-Labs France; Ghent University-imec; ATOS Spain; University of Milano-Bicocca; University of Milano-Bicocca,2018 European Conference on Networks and Communications (EuCNC),"23 Aug 2018","2018","","","1","5","This paper presents two new challenges for the Telco ecosystem transformation in the era of cloud-native microservice-based architectures. (1) Development-for-Operations (Dev-for-Operations) impacts not only the overall workflow for deploying a Platform as a Service (PaaS) in an open foundry environment, but also the Telco business as well as operational models to achieve an economy of scope and an economy of scale. (2) For that purpose, we construct an integrative platform business model in the form of a Multi-Sided Platform (MSP) for building Telco PaaSes. The proposed MSP based architecture enables a multi-organizational ecosystem with increased automation possibilities for Telco-grade service creation and operation. The paper describes how the Dev-for-Operations and MSP lift constraints and offers an effective way for next-generation PaaS building, while mutually reinforcing each other in the Next Generation Platform as a Service (NGPaaS) framework.","2575-4912","978-1-5386-1478-5","10.1109/EuCNC.2018.8443272","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8443272","microservice;DevOps;MSP;platform;Dev-for-Operations","Software;Buildings;Business;Production;Biological system modeling;Hardware","","1","","8","IEEE","23 Aug 2018","","","IEEE","IEEE Conferences"
"Automated Testing and Resilience of Microservice’s Network-link using Istio Service Mesh","R. R. Karn; R. Das; D. R. Pant; J. Heikkonen; R. Kanth","Khalifa University, Abu Dhabi, UAE; Pokhra University, Nepal; Tribhuvan University, Nepal; University of Turku, Turku, Finland; Savonia University of Applied Sciences, Kuopio, Finland",2022 31st Conference of Open Innovations Association (FRUCT),"11 May 2022","2022","","","79","88","Microservices technology has gained considerable popularity in software design to deploy complex applications in the form of micro-modular microservice components. Each service is implemented as an autonomous system, and its internal constituent data can be accessed via a network interface. Such architecture increases the complexity of the network because each module is a separate entity for development and operations. A fault in any service affects the operation of another service and could completely break the application. It is, therefore, necessary to create a framework for the systematic testing and resilience of the network link in microservices, independent of the programming language and business logic. It helps the network administrator track the cause of the fault. In this paper, we have shown the use of the service mesh Istio to monitor communication between microservices and to develop automated testing and resilience. Istio provides various types of fault injectors for communication links between services. A Locust load testing tool is used to exert a microservice load. The faulty link is located via the Jaeger and Grafana dashboard within the Istio frame. For resilience or correction of the fault, a new connection is temporarily established between the affected microservice by deploying redundant services. In addition, microservices scaling and the implementation of the circuit breaker have been shown to remedy network congestion. The setup is demonstrated in the Kubernetes cluster with the Hipster shop e-commerce application.","","978-952-69244-7-2","10.23919/FRUCT54823.2022.9770890","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9770890","","Technological innovation;Systematics;Circuit breakers;Microservice architectures;Computer architecture;Circuit faults;Monitoring","","8","","34","","11 May 2022","","","IEEE","IEEE Conferences"
"Comparison of Runtime Testing Tools for Microservices","J. P. Sotomayor; S. C. Allala; P. Alt; J. Phillips; T. M. King; P. J. Clarke","School of Computing and Information Sciences, Florida International University, Miami, FL, USA; School of Computing and Information Sciences, Florida International University, Miami, FL, USA; Ultimate Software, Weston, Florida; Ultimate Software, Weston, Florida; School of Computing and Information Sciences, Florida International University, Miami, FL, USA; School of Computing and Information Sciences, Florida International University, Miami, FL, USA",2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC),"9 Jul 2019","2019","2","","356","361","Recently there has been an increase in the number of software applications using the microservices architectural pattern. This is due to the benefits derived over the more traditional N-tier patterns that use monolithic designs for each of the tiers. The value of using the microservices architectural pattern, particularly in the cloud, has been pioneered by companies such as Netflix and Google. These companies have created protocols and tools to support the development of cloud-based applications. However, the testing of microservices applications continues to be challenging due to the added complexity of network communication between the collaborating services. In this paper we provide a comparison of several open-source tools used to support the testing of microservices, describe polyglot Ridesharing microservices reference prototype, and present the results of a study that measures the overhead to test the Ridesharing application. We also describe our experiences in configuring and running the testing tools on the prototype.","0730-3157","978-1-7281-2607-4","10.1109/COMPSAC.2019.10232","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8754337","Software testing, testing tools, microservices testing","Tools;Contracts;Computer architecture;Runtime;Software testing;Java","","9","","32","IEEE","9 Jul 2019","","","IEEE","IEEE Conferences"
"Heterogeneity-aware Load Balancing in Serverless Computing Environments","S. Heidari; S. Azizi","Department of Computer Engineering, University of Zanjan; Department of Computer Engineering, University of Kurdistan",2023 7th International Conference on Internet of Things and Applications (IoT),"22 Dec 2023","2023","","","1","7","The current trend in cloud computing is the growing adoption of microservices. Microservices are specialized components of an application that can be deployed and scaled individually, potentially replacing monolithic applications. To meet this demand, cloud providers offer function-as-a-service (FaaS) or serverless computing. Additionally, there is an increasing use of containerized environments in Internet of Things (IoT) applications. It has been shown that implementing serverless computing at the edge of an IoT network for executing tasks can reduce the overall execution time of these tasks. In cloud and edge computing environments, the infrastructure typically exhibits heterogeneity, and this heterogeneity can significantly impact the performance of different invocations of a FaaS function. This paper addresses infrastructure heterogeneity by partitioning a heterogeneous cluster into homogeneous pools based on similar resource characteristics and profiling function performance. The key contributions of this paper are: (1) a serverless architecture design that extends the function placement and load-balancing capabilities of current serverless platforms to effectively manage infrastructure heterogeneity, (2) a load-balancing approach that efficiently utilizes multi-core hardware, and (3) an implementation of the architecture, thereby evaluating the impact of the extended capabilities.","","979-8-3503-6941-0","10.1109/IoT60973.2023.10365354","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10365354","Cloud Computing;Edge Computing;function-as-a-service (FaaS);Internet of Things (IoT);infrastructure heterogeneity","Multicore processing;Serverless computing;Microservice architectures;Computer architecture;Market research;Load management;Hardware","","1","","27","IEEE","22 Dec 2023","","","IEEE","IEEE Conferences"
"Microservices Upgrade in Clouds: Dynamic Management of Version Dependencies and User Load","A. Azhdari; A. Ebrahimzadeh; C. Mouradian; R. Szabó; R. H. Glitho","CIISE, Concordia University, Montréal, QC, Canada; CIISE, Concordia University, Montréal, QC, Canada; Ericsson Research, Montréal, QC, Canada; Ericsson Research, Budapest, Hungary; CIISE, Concordia University, Montréal, QC, Canada",2024 IEEE 13th International Conference on Cloud Networking (CloudNet),"31 Dec 2024","2024","","","1","8","In today's cloud computing environments, where scalability, agility, and resiliency are paramount, microservices architecture stands out as a fundamental keystone of modern software development. While microservices are designed as independent components communicating through well-defined APIs, maintaining and upgrading them pose unique challenges, including version compatibility, dependency management, and service continuity. These challenges become intricate when multiple instances of a specific microservice are deployed, utilizing load balancing to distribute users and offering different functionalities simultaneously. This paper proposes a heuristic algorithm to address the microservices upgrading problem. The proposed algorithm migrates users gradually and effectively by managing version dependencies, user load, considering propagation impact, multiple instances, and resource constraints. The simulation results demonstrate the superiority of our algorithm over existing benchmarks in terms of resource usage cost and the number of new version instances.","2771-5663","979-8-3503-7656-2","10.1109/CloudNet62863.2024.10815869","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10815869","Cloud Computing;Microservices;Version De-pendency;Version Compatibility;User Load;Propagation Impact","Cloud computing;Costs;Heuristic algorithms;Simulation;Scalability;Microservice architectures;Load management;Optimization;Software development management;Resilience","","","","15","IEEE","31 Dec 2024","","","IEEE","IEEE Conferences"
"Graph Attention Networks and Deep Q-Learning for Service Mesh Optimization: A Digital Twinning Approach","M. G. Khan; J. Taheri; A. Kassler; A. B. Asl","Dep. of Mathematics and Computer Science, Karlstad University, Karlstad, Sweden; School of Electronics, Electrical Eng. and Computer Science, Queen's University Belfast, Belfast, United Kingdom; Faculty of Computer Science, Deggendorf Institute of Technology, Deggendorf, Germany; School of Eng. Sciences in Chemistry, Biotech. and Health KTH Royal Inst. of Technology, Stockholm, Sweden",ICC 2024 - IEEE International Conference on Communications,"20 Aug 2024","2024","","","2913","2918","In the realm of cloud native environments, Ku-bernetes has emerged as the de facto orchestration system for containers, and the service mesh architecture, with its interconnected microservices, has become increasingly prominent. Efficient scheduling and resource allocation for these microservices play a pivotal role in achieving high performance and maintaining system reliability. In this paper, we introduce a novel approach for container scheduling within Kubernetes clusters, leveraging Graph Attention Networks (GATs) for representation learning. Our proposed method captures the intricate dependencies among containers and services by constructing a representation graph. The deep Q-learning algorithm is then employed to optimize scheduling decisions, focusing on container-to-node placements, CPU request-response allocation, and adherence to node affinity and anti-affinity rules. Our experiments demonstrate that our GATs-based method outperforms traditional scheduling strategies, leading to enhanced resource utilization, reduced service latency, and improved overall system throughput. The insights gleaned from this study pave the way for a new frontier in cloud native performance optimization and offer tangible benefits to industries adopting microservice-based architectures.","1938-1883","978-1-7281-9054-9","10.1109/ICC51166.2024.10622616","Karlstad University; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10622616","component;formatting;style;styling;insert","Industries;Cloud computing;Job shop scheduling;Q-learning;Microservice architectures;Computer architecture;Containers","","","","40","IEEE","20 Aug 2024","","","IEEE","IEEE Conferences"
"Extracting Micro Service Dependencies Using Log Analysis","A. O. R. Ishida; K. Kontogiannis; C. Brealey","Computer Science Department, Western University, London, ON, Canada; Computer Science Department, Western University, London, ON, Canada; IBM Toronto Lab IBM Canada, Markham, ON, Canada",2022 IEEE 29th Annual Software Technology Conference (STC),"18 Nov 2022","2022","","","82","92","Microservice architecture is an architectural style that supports the design and implementation of very scalable systems by distributing complex functionality to highly granular components. These highly granular components are referred to as microservices and can be dynamically deployed on Docker containers. These microservice architecture systems are very extensible since new microservices can be added or replaced as the system evolves. In such highly granular architectures, a major challenge that arises is how to quickly identify whether any changes in the system’s structure violates any policies or design constraints. Examples of policies and design constraints include whether a microservice can call or pass data to another microservice, and whether data handled by one microservice can be stored in a specific database. In order to perform such type of analysis a model that denotes call and data dependencies between microservices must be constructed. In this paper, we present a technique that is based on log analysis and probabilistic reasoning to yield a labeled, typed, directed multigraph that represents call and data exchanges between microservices in a given deployment. This dependency graph can serve as input to analysis engines to be used for identifying design and policy violations as the system evolves or being updated. The proposed dependency graph creation approach has been applied to a medium size open source microservice system with very promising results.","","978-1-6654-8864-8","10.1109/STC55697.2022.00020","Natural Sciences and Engineering Research Council of Canada; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9951030","Microservices;log analysis;component dependencies;reasoning;formal concept analysis","Source coding;Microservice architectures;Process control;Markov processes;Probabilistic logic;Cognition;Servers","","1","","17","IEEE","18 Nov 2022","","","IEEE","IEEE Conferences"
"Network Security Mechanism Optimization Strategy in Cloud Native Scenario","S. Sheng; K. Che; A. Mi; X. Wan","Zenitera Co. Ltd, Shanghai, China; Zenitera Co. Ltd, Shanghai, China; National Computer Network Emergency Response Technical Team/Coordination Center of China, Shanghai Branch, Shanghai, China; National Computer Network Emergency Response Technical Team/Coordination Center of China, Shanghai Branch, Shanghai, China",2023 6th International Conference on Electronics Technology (ICET),"15 Aug 2023","2023","","","614","618","Risk assessors and managers face many difficult challenges related to the new network system. These challenges include the continuous changes in the nature of network systems caused by technological progress, their distribution in the fields of physics, information and social cognition, and the complex network structure that usually includes thousands of nodes. Here, we review the probability and risk-based decision technology applied to network systems, and conclude that the existing methods can not solve all the components of the risk assessment triad (threat, vulnerability, consequence), and lack the ability to integrate across multiple areas of network systems, thus providing guidance for enhancing network security. We propose a cloud native security chain architecture and network topology reconstruction technology link based on the full link of microservices. The network security performance is quantified by multi-layer filtering mechanism and setting different fitness index functions. The method proposed in this paper solves the problems of packet loss, load balancing and distributed delay of network security mechanism in the global network to a certain extent.","2768-6515","979-8-3503-3769-3","10.1109/ICET58434.2023.10211737","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10211737","Network security;Cloud native;Micro service;loophole","Filtering;Microservice architectures;Packet loss;Network security;Load management;Delays;Indexes","","","","15","IEEE","15 Aug 2023","","","IEEE","IEEE Conferences"
"Deployment and Automatic Registration of REST APIs using Jenkins, Spring Boot and WSO2 API Manager","M. B. Guayuan; J. C. Mello-Román; R. F. P. Heikel; M. L. Cremona; M. A. Aquino; I. G. Yegros; C. M. Wenninger","Ministerio de Hacienda, Dirección de Informática y Comunicaciones, Asunción, Paraguay; Ministerio de Hacienda, Dirección de Informática y Comunicaciones, Asunción, Paraguay; Ministerio de Hacienda, Dirección de Informática y Comunicaciones, Asunción, Paraguay; Ministerio de Hacienda, Dirección de Informática y Comunicaciones, Asunción, Paraguay; Ministerio de Hacienda, Dirección de Informática y Comunicaciones, Asunción, Paraguay; Ministerio de Hacienda, Dirección de Informática y Comunicaciones, Asunción, Paraguay; Ministerio de Hacienda, Dirección de Informática y Comunicaciones, Asunción, Paraguay",2023 18th Iberian Conference on Information Systems and Technologies (CISTI),"15 Aug 2023","2023","","","1","7","The API Gateway is a fundamental component within a large-scale microservices architecture, as it centralizes all the applications consumed by the different clients in a single access point. This is responsible for managing and administering security as a policy enforcement point, as well as the API lifecycle. The basic function of the API Gateway is to intercept all incoming requests that are sent through the API management system. Managing APIs in large systems requires a lot of effort to maintain the API lifecycle. To address this issue, we created a project that automatically manages the registration and deployment of APIs, using the starter provided by the Spring Boot framework, which is normally used to solve dependency management, WSO2 API Gateway and Jenkins as a tool for automating deployment tasks. The testing and validation process of the API lifecycle management solution scheme was performed in a controlled environment with virtual machines and docker container for the API Gateway.","2166-0727","978-989-33-4792-8","10.23919/CISTI58278.2023.10211716","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10211716","API Gateway;APIs;Spring boot;WSO2 API Manager;Jenkins","Process control;Microservice architectures;Logic gates;Containers;Virtual machining;Security;Springs","","","","0","","15 Aug 2023","","","IEEE","IEEE Conferences"
"Scheme design of one-stop tracing service center","S. Wang; Z. Fan; H. Ma; P. Zhang","Research Institute Aisino Corporation, Beijing, China; Research Institute Aisino Corporation, Beijing, China; Research Institute Aisino Corporation, Beijing, China; Research Institute Aisino Corporation, Beijing, China","2022 3rd International Conference on Computer Vision, Image and Deep Learning & International Conference on Computer Engineering and Applications (CVIDL & ICCEA)","18 Jul 2022","2022","","","878","881","The one-stop tracking service platform is a production and marketing service center established in a completely decentralized network environment. Based on scattered enterprise information applications, it provides enterprises with a complete set of PAAS platform solutions of cloud application development platform and cloud application governance platform through container technology and micro service architecture","","978-1-6654-5911-2","10.1109/CVIDLICCEA56201.2022.9824595","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9824595","one-stop tracking service platform;PaaS platform;fragmented enterprise informatization application;visualization component","Computer languages;Codes;Collaboration;Production;Maintenance engineering;Containers;Monitoring","","","","17","IEEE","18 Jul 2022","","","IEEE","IEEE Conferences"
"Rethinking Simulation Engineering Process for MSaaS","P. Bocciarelli; A. D’Ambrogio; U. Durak; T. Panetti","Dept. of Enterprise Engineering, University of Tor Vergata, Rome, Italy; Dept. of Enterprise Engineering, University of Tor Vergata, Rome, Italy; Institute of Flight Systems, German Aerospace Center (DLR), Braunschweig, Germany; Dept. of Enterprise Engineering, University of Tor Vergata, Rome, Italy",2020 IEEE 29th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE),"1 Feb 2021","2020","","","88","93","The adoption of modeling and simulation based approaches brings several benefits in various domains. However, as the simuland and the simulation technologies got more and more complicated, the modeling and simulation became a complex task which eventually required a systems engineering approach. IEEE 1730-2010 Distributed Simulation Engineering and Execution Process (DSEEP) has been published in 2010 as a process framework to help systems engineers in the execution of the several technical and organizational activities which encompass the simulation development life-cycle. It includes a set of high-level best practices and guidelines, particularly for component based distributed simulations. Recent advances in cloud technologies and service-oriented architecture led to Modeling and Simulation as a Service (MSaaS) - a ground breaking paradigm shift from component based technologies that is now changing how we model and simulate. This paper not only presents a critical review, but also proposes revision to DSEEP for supporting the systems engineering effort for modeling and simulation in a cloud-based and service-oriented context.","2641-8169","978-1-7281-6975-0","10.1109/WETICE49692.2020.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9338493","Simulation Engineering;DSEEP;MSaaS;Simulation Life-Cycle","Computational modeling;Service-oriented architecture;Stakeholders;Modeling;Task analysis;Standards;Context modeling","","2","","23","IEEE","1 Feb 2021","","","IEEE","IEEE Conferences"
"G-Cause: Parameter-free Global Diagnosis for Hyperscale Web Service Infrastructures","X. Jiang; Y. Zhang; T. Bi; X. Shen; Y. Zhang; Y. Pan; M. Ma; L. Han; F. Wang; X. Liu; P. Wang","School of Software and Microelectronics, Peking University, Beijing, China; ByteDance Inc., Beijing, China; School of Software and Microelectronics, Peking University, Beijing, China; ByteDance Inc., Beijing, China; ByteDance Inc., Beijing, China; School of Computer Science, Peking University, Beijing, China; National Engineering Research Center for Software Engineering, Peking University, Beijing, China; ByteDance Inc., Beijing, China; ByteDance Inc., Beijing, China; ByteDance Inc., Beijing, China; National Engineering Research Center for Software Engineering, Peking University, Beijing, China",2024 IEEE International Conference on Web Services (ICWS),"15 Oct 2024","2024","","","1003","1014","Hyperscale web service infrastructures are becoming increasingly complex and facing a variety of threats, raising the demand for more sophisticated automated operations and diagnosis solutions. Existing anomaly root cause localization approaches often focus on Service-level components without drilling down to the lower-level resources where services are deployed, hindering the implementation of fine-grained failure fix measures. This paper introduces a challenging task called global diagnosis and addresses it by proposing a technique called G-Cause, which is applicable to both Service-level and host-level root cause analysis scenarios. G-Cause builds a highly adaptive diagnostic framework based on the frequency-domain and time-domain characteristics of monitoring metrics, allowing it to handle global diagnosis requirements from app to host with minimal parameter adjustments. We deploy and validate our approach in two typical scenarios: homogeneous metric diagnosis from app to microservice, and heterogeneous metric diagnosis for various host resources. The results demonstrate that G-Cause outperforms state-of-the-art diagnosis algorithms while providing strong interpretability. Our approach helps operators understand the core mechanism of anomaly propagation and adjust their management strategies more effectively. With these strengths, G-Cause successfully services our global product operations and also makes an impressive contribution in many other workflows.","2836-3868","979-8-3503-6855-0","10.1109/ICWS62655.2024.00119","National Natural Science Foundation of China; Innovation Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10707492","Anomaly diagnosis;Root cause analysis;Frequency analysis;Granger Causality;Microservice architecture","Measurement;Root cause analysis;Social networking (online);Heuristic algorithms;Transportation;Microservice architectures;Prediction algorithms;Maintenance;Time-domain analysis;Monitoring","","","","48","IEEE","15 Oct 2024","","","IEEE","IEEE Conferences"
"A microservices-based IoT applications in Edge computing environments","S. K. Agarwal; S. M. Ramesh; A. A. Kumar; S. Yadav; M. Nagalakshmi; P. Singh","S. S. Jain Subodh P.G. College, Rajasthan, India; KPR Institute of Engineering and Technology, Coimbatore, India; Marri Laxman Reddy Institute of Technology and Management, Dundigal, Hyderabad, India; G L Bajaj Institute of Technology and Management, Greater Noida, Uttar Pradesh, India; Marri Laxman Reddy Institute of Technology and Management, Dundigal, Hyderabad, India; Bennett University, Greater Noida, India",2022 2nd International Conference on Innovative Sustainable Computational Technologies (CISCT),"22 Feb 2023","2022","","","1","5","With the improvement of Internet of Things, the scope of local area devices is expanding, and the cloud data center burden builds; some deferral delicate contributions can’t be answered to opportune, which outcomes in a brought down good of transporter (QoS). Edge computing (EC) supports the utilization of its contributions with low idleness, place perception and versatility help to compensate for the risks of distributed computing, and has gotten a colossal energy as of late. Notwithstanding, the powerfully modifying fine of transporter (QoS) may also outcome in screw ups of QoS-mindful guidance and organization of EC administrations, which strikingly debases clients’ pride and nullifies the gifts of MEC. To handle this issue, with the guide of pondering client related and administration related context-oriented components and an assortment of EC contributions booking situations, we suggest two setting mindful QoS expectation plans for EC administrations. The main plan is intended for the circumstances when EC contributions are planned for continuous, which conveys two setting mindful constant QoS assessment strategies. One strategy can assess the ongoing multi-QoS of EC contributions and the different procedure can appraise the continuous outfitted QoS of EC administrations. The 2d plan is intended for the circumstances when EC contributions are planned for what is in store. This plan comprises of two setting mindful QoS expectation strategies. One method can anticipate the multi-QoS of EC contributions and the different procedure can foresee the furnished QoS of EC administrations. At long last, versatile QoS expectation strategies are created in the gentle of qualities of the proposed QoS forecast techniques. As indicated by these systems, the most stunning QoS forecast approach can be planned. Broad investigations are completed to approve our proposed strategies and to display their exhibition.","","978-1-6654-7416-0","10.1109/CISCT55310.2022.10046492","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10046492","Edge resources;Edge computing;Resource maintenance;QoS;IoT system","Data centers;Cloud computing;Microservice architectures;Quality of service;Organizations;Fasteners;Internet of Things","","","","26","IEEE","22 Feb 2023","","","IEEE","IEEE Conferences"
"Microservice-Based Unsupervised Anomaly Detection Loop for Optical Networks","C. Natalino; C. Manso; L. Gifre; R. Muñoz; R. Vilalta; M. Furdek; P. Monti","Electrical Engineering Department, Chalmers University of Technology, Gothenburg, Sweden; Centre Tecnologic de Telecomunicacions de Catalunya (CTTC/CERCA), Spain; Centre Tecnologic de Telecomunicacions de Catalunya (CTTC/CERCA), Spain; Centre Tecnologic de Telecomunicacions de Catalunya (CTTC/CERCA), Spain; Centre Tecnologic de Telecomunicacions de Catalunya (CTTC/CERCA), Spain; Electrical Engineering Department, Chalmers University of Technology, Gothenburg, Sweden; Electrical Engineering Department, Chalmers University of Technology, Gothenburg, Sweden",2022 Optical Fiber Communications Conference and Exhibition (OFC),"13 Apr 2022","2022","","","01","03","Unsupervised learning (UL) is a technique to detect previously unseen anomalies without needing labeled datasets. We propose the integration of a scalable UL-based inference component in the monitoring loop of an SDN-controlled optical network. © 2022 The Author(s)","","978-1-55752-466-9","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9748370","","Microservice architectures;Optical fiber networks;Time factors;Monitoring;Anomaly detection;Unsupervised learning","","","","10","","13 Apr 2022","","","IEEE","IEEE Conferences"
"Improving Industry 4.0 Readiness: Monolith Application Refactoring using Graph Attention Networks","T. Rathod; C. T. Joseph; J. P. Martin","School of Computer Science and Engineering (SCOPE), Vellore Institute of Technology, Vellore, India; Department of Computer Science and Engineering, Indian Institute of Information Technology, Kottayam, India; Department of Computer Science and Engineering, Indian Institute of Information Technology, Kottayam, India","2023 IEEE/ACM 23rd International Symposium on Cluster, Cloud and Internet Computing Workshops (CCGridW)","19 Jul 2023","2023","","","223","230","Industry 4.0 utilizes cyber-physical systems to bridge the technological gap for the implementation of smart manufacturing techniques. This encompasses the use of advanced technologies like artificial intelligence, cloud and edge computing, and augmented reality. Machines need to work in harmony in order to achieve enhanced speeds and productivity. This harmony can be effectuated via the synchronization among machines using APIs to modernize their legacy systems. In other words, the long-existing monolithic frameworks in factory environments must be refactored into microservices. Software systems can be naturally represented as graphs. Software entities and their dependencies can be portrayed as nodes and edges, respectively. So, the task of refactoring can be condensed into a graph based clustering task. A novel graph attention based network is proposed in this work, to detect outliers to delineate the top refactor candidates, as well as to recommend clusters of microservices. Industrial microservice benchmarks have been identified to validate our model. Results show that our graph attention network improves state-of-the-art performance when compared to existing graph representation based refactoring techniques.","","979-8-3503-0208-0","10.1109/CCGridW59191.2023.00046","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10181169","Microservice;Refactoring;Monolith applications;Attention Networks;Convolutional Neural Networks;Graph Data","Measurement;Training;Stacking;Microservice architectures;Aging;Transformers;Fourth Industrial Revolution","","","","45","IEEE","19 Jul 2023","","","IEEE","IEEE Conferences"
"Towards More Effective and Explainable Fault Management Using Cross-Layer Service Topology","D. R. Mathews; M. Verma; J. Lakshmi; P. Aggarwal","IISc, India; IBM Research, India; IISc, India; IBM Research, India",2022 IEEE 15th International Conference on Cloud Computing (CLOUD),"24 Aug 2022","2022","","","94","96","As microservice architecture becomes prominent, existing fault management techniques to deal with service disruption become limiting mainly due to the amount of data needed to be analyzed. This paper emphasizes the need to consider the cross-layer topology of the cloud service to intelligently identify and correlate the observability data and assist in implementing efficient and more accurate fault management techniques that can provide better explainability. Towards this goal, the paper presents a tool that discovers the cross-layer topology for a cloud microservice application and discusses the benefits of using cross-layer service topology to implement effective fault management.","2159-6190","978-1-6654-8137-3","10.1109/CLOUD55607.2022.00026","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9861017","Cloud Application Services;Cross-Layer Topology Discovery;Monitoring;Fault Management","Fault diagnosis;Cloud computing;Cross layer design;Limiting;Microservice architectures;Computer architecture;Topology","","2","","16","IEEE","24 Aug 2022","","","IEEE","IEEE Conferences"
"A Retrospective Engineering Analysis of Human-AI Teams Using the Sidekick Principles","S. Bruni","Aptima, Inc., Johnson City, TN",SoutheastCon 2024,"24 Apr 2024","2024","","","1368","1369","The speed of development of Artificial Intelligence (AI) capabilities outpaces that of human systems engineering, particularly for the integration of human-AI teams (HAT) in production-level software. The emergence of frameworks for the principled design and development of hybrid systems offers opportunities to close this gap: They can help identify which common HAT components should be built and matured to accelerate the engineering of such hybrid systems. Leveraging the sidekick principles of human-AI teaming in a review of recent efforts, we identified a prioritized list of system requirements for reusable HAT components. We share these insights with a specific emphasis on the analytical microservices we believe are key to instantiating the sidekick principles.","1558-058X","979-8-3503-1710-7","10.1109/SoutheastCon52093.2024.10500218","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10500218","human-AI teaming;human-computer collaboration;user interactions;user experience;sidekick","Reviews;Microservice architectures;Systems engineering and theory;Software;Artificial intelligence;Business","","","","10","IEEE","24 Apr 2024","","","IEEE","IEEE Conferences"
"ML and Network Traces to M.A.R.S","W. Cruz; L. D. Michel; B. Drozdenko; S. Roodbeen","CSE Department, University of Connecticut, Storrs, Connecticut, USA; CSE Department, University of Connecticut, Storrs, Connecticut, USA; Cybersecurity Division Naval Undersea Warfare Center Division Newport, Newport, Rhode Island, USA; Cybersecurity Division Naval Undersea Warfare Center Division Newport, Newport, Rhode Island, USA",2023 IEEE International Conference on Cyber Security and Resilience (CSR),"28 Aug 2023","2023","","","240","245","MARS is a Microservice Architecture Recovery Solution that uses Machine Learning and lightweight Network Traces to recover the architecture of applications in order to deploy network security policies and protect the organization against complex threats that may exploit several vulnerabilities to breach an application and either exfiltrate sensitive data or carry out denial of service attacks. The adoption of such security policies is often hindered by the lack of suitable documentation. This paper describes a novel methodology that uses machine learning on captured network traces to recover application architectures.","","979-8-3503-1170-9","10.1109/CSR57506.2023.10224950","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10224950","ML;Network;Trace;SoA;analysis;optimization","Statistical analysis;Instruments;Microservice architectures;Machine learning;Organizations;Documentation;Network security","","","","22","IEEE","28 Aug 2023","","","IEEE","IEEE Conferences"
"A Microservice-Based Architecture for the Development of Accessible, Crowdsensing-Based Mobility Platforms","A. Melis; S. Mirri; C. Prandi; M. Prandini; P. Salomoni","Department of Electrical and Information Engineering, University of Bologna; Department of Computer Science and Engineering, University of Bologna; Department of Electrical and Information Engineering, University of Bologna; Department of Electrical and Information Engineering, University of Bologna; Department of Electrical and Information Engineering, University of Bologna",2016 International Conference on Collaboration Technologies and Systems (CTS),"6 Mar 2017","2016","","","498","505","Crowdsensing is a powerful approach to collaboratively build representations of specific aspects of reality which are of great interest for people with special needs. In this paper, we present an evolution of the classical, vertical approach to detect urban barriers and other features to later exploit this knowledge in accessible route planning. By exposing every single part of the process as a microservice, we achieve the ability to develop novel applications as orchestration of available components. Moreover, in the resulting platform, we leverage the possibility to share data between different applications in a controlled environment.","","978-1-5090-2300-4","10.1109/CTS.2016.0093","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7871031","smart city;accessible and smart mobility;crowd-sensing;crowdsourcing;service oriented architecture","Sensors;Prototypes;Crowdsourcing;Context;Accelerometers;Smart cities","","3","","35","IEEE","6 Mar 2017","","","IEEE","IEEE Conferences"
"A microservices architecture for collaborative document editing enhanced with face recognition","C. Gadea; M. Trifan; D. Ionescu; M. Cordea; B. Ionescu","School of Electrical Engineering and Computer Science, University of Ottawa, Ottawa, Ontario, Canada; School of Electrical Engineering and Computer Science, University of Ottawa, Ottawa, Ontario, Canada; School of Electrical Engineering and Computer Science, University of Ottawa, Ottawa, Ontario, Canada; Mgestyk Technologies Inc., Ottawa, Ontario, Canada; Mgestyk Technologies Inc., Ottawa, Ontario, Canada",2016 IEEE 11th International Symposium on Applied Computational Intelligence and Informatics (SACI),"9 Jul 2016","2016","","","441","446","Modern web applications can now provide rich and dynamic user experiences, such as allowing multiple users to collaboratively edit rich-text documents in real-time from multiple devices. Application architectures are evolving to support the development and deployment of such interactive functionality by decoupling software components into microservices. This paper introduces the architecture and the implementation of a collaborative rich-text editor that makes use of microservices to enable and enhance its scalable co-editing functionality. This includes microservices for synchronizing unstructured text using operational transformations, for chat functionality, and for detecting and recognizing faces in images added to the editor. The architecture makes use of Docker to allow for the development and testing of individual services as separate containers enabling seamless deployment across the available network of computers and other computing devices. The system will be demonstrated by showing how microservices make it possible for multiple users to co-edit a document where images containing faces are added and recognized as part of the document content, thereby supporting the document creation process.","","978-1-5090-2380-6","10.1109/SACI.2016.7507409","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7507409","collaborative editing;real-time web;microservices;docker;groupware;face detection;face recognition","Collaboration;Databases;Face recognition;Real-time systems;Computer architecture;Face;Google","","5","","22","IEEE","9 Jul 2016","","","IEEE","IEEE Conferences"
"Interoperability Between ROS and OPC UA: A Local Cloud-Based Approach","A. Tripathy; J. van Deventer; C. Paniagua; J. Delsing","Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden",2022 IEEE 5th International Conference on Industrial Cyber-Physical Systems (ICPS),"18 Jul 2022","2022","","","1","5","Today's manufacturing industries use a large suite of protocols and technologies to operate heterogeneous devices and software modules. Some of the most widely used technologies in industrial production are OPC UA (Open Platform Communications Unified Architecture) and ROS (Robot Operating System). Hence, enabling interoperability across these technologies is critical to ensure a smooth production flow. We propose a local cloud-based approach to achieve interoperability between ROS and OPC UA by integrating them with the Eclipse Arrowhead Framework. This integration allows these technologies to operate as independent systems while communicating securely at runtime. In addition to achieving interoperability, this integration supports important industrial aspects such as loose coupling, late binding, and cyber-security, making it a flexible solution.","","978-1-6654-9770-1","10.1109/ICPS51978.2022.9816962","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9816962","ROS;OPC UA;Eclipse Arrowhead Framework","Manufacturing industries;Couplings;Runtime;Protocols;Operating systems;Conferences;Production","","5","","14","IEEE","18 Jul 2022","","","IEEE","IEEE Conferences"
"Towards a Continuous Feedback Loop for Service-Oriented Environments","K. Martin; U. Ömer; M. Florian","Technische Universitat Munchen, Munchen, Bayern, DE; Technische Universitat Munchen, Munchen, Bayern, DE; Technische Universitat Munchen, Munchen, Bayern, DE",2018 11th International Conference on the Quality of Information and Communications Technology (QUATIC),"27 Dec 2018","2018","","","126","134","Agile software engineering practices aim at unifying software development (Dev) and software operation (Ops) in order to quickly release new software and gather feedback on new features in the latest version. The feedback loop gets closed mostly after new releases are deployed to production. During development, engineers do not receive feedback whether their changes are still aligned with the requirements and the formalized concept. This increases the risk of removing implemented code and decreases productivity. In this paper, we propose a tool for closing the feedback loop after each continuous deployment stage i.e. development, test and production. The continuous feedback is provided via a dependency model that represents the current software architecture on early stages. Hereby, each deployment phase and final release are compared against each other in order to uncover inconsistencies in regard to the predefined requirements.","","978-1-5386-5841-3","10.1109/QUATIC.2018.00026","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8590179","devops, feedback loop, continuous delivery, continuous delivery pipeline, continuous deployment, microservice, monitoring, architecture discovery, service discovery, distributed tracing, application performance monitoring","Computer architecture;Software;Production;Pipelines;Monitoring;Databases;Business","","","","28","IEEE","27 Dec 2018","","","IEEE","IEEE Conferences"
"Performace Testing Approach for Enterprise Application comprising Serverless Component","D. Khatri; S. K. Khatri; D. Mishra","Amity University, Noida, India; Amity University Tashkent, Uzbekistan; NTNU, Norway",2021 International Conference on Intelligent Technologies (CONIT),"4 Aug 2021","2021","","","1","4","Performance testing validates non-functional requirement covering load test, scalability test, stress test etc. Performance testing of an application, which is using micro service base architecture and deployed part of the functionalities on serverless computing, need to be validated at system level for specified business scenarios. Various performance testing strategies are being used to simulate and measure the performance for serverless computing architecture.Serverless computing is trending nowadays, where developer needs to focus on his code rather than worrying about server management. In serverless computing, Application is nothing but collection of one or more functions, written for specific business functionality, which triggers on an event. The developer just needs to upload the code for execution. The performance of the serverless computing may vary due to dynamic configuration of the solution, technologies and different technology used by the service provider. [1] This paper is based on performance testing experiment conducted of a real business application built on complex architecture containing serverless component. Various past and recent work was also reviewed for performance testing approach of serverless computing application. It demonstrates the performance testing and monitoring of serverless computing application.","","978-1-7281-8583-5","10.1109/CONIT51480.2021.9498446","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9498446","Performance Testing;Serverless Computing;Performance tuning;performance monitoring;Performance Optimization","Scalability;Computer architecture;Service-oriented architecture;Servers;Time factors;Monitoring;Stress","","","","7","IEEE","4 Aug 2021","","","IEEE","IEEE Conferences"
"Towards a Modular Architecture for Industrial HMIs","M. Shakil; A. Zoitl","LIT CPS Lab, Johannes Kepler University Linz, Linz, Austria; LIT CPS Lab, Johannes Kepler University Linz, Linz, Austria",2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),"5 Oct 2020","2020","1","","1267","1270","This paper presents a work in progress on a modular architecture design of industrial HMIs. The proposed approach is based on a micro frontend architecture style for developing web applications. It allows developers and integration engineers to build an HMI from distributed and modular shop-floor components called micro frontend. Each micro frontend is end-to-end integrated from its data acquisition to the user interfaces. This approach introduces an agile and modular development style of an industrial HMI for a modular and adaptive production system.","1946-0759","978-1-7281-8956-7","10.1109/ETFA46521.2020.9212011","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9212011","micro-services;HMI;modular production systems;Cyber-Physical System","Couplings;Production systems;Runtime;Philosophical considerations;Conferences;Data acquisition;Organizations","","6","","17","IEEE","5 Oct 2020","","","IEEE","IEEE Conferences"
"A Petri Net-based Formal Modeling for Microservices Auto-scaling","S. Merkouche; C. Bouanaka; E. Benkhelifa","LIRE Laboratory, University of Constantine 2- Abdelhamid Mehri, Constantine, Algeria; LIRE Laboratory, University of Constantine 2- Abdelhamid Mehri, Constantine, Algeria; Smart Systems, AI and Cybersecurity Research Centre, Staffordshire University, Stoke-on-Trent, Staffordshire, UK",2023 20th ACS/IEEE International Conference on Computer Systems and Applications (AICCSA),"2 Apr 2024","2023","","","1","8","Microservices auto-scaling is an attracking research domain focusing on the dynamic definition of strategies to optimize system efficiency and performance while minimizing service cost. An efficient auto-scaling strikes a balance between individual microservices quality requirements while collaborating to uphold the overall system quality. Maintaining such balance needs a formal method to establish relevant parameters to ensure quality attributes and enable prior accuracy and efficiency verification. To that end, we extend the Petri net model to define Hierarchical Parallel Petri nets (HPPNs) to correctly model both autonomy and cooperation of microservices. Unlike conventional Petri nets, HPPNs consider trade-offs between tokens during transitions, enabling the computation of compromises between multiple quality dimensions and the adaptation strategies. Additionally, preliminary testing mechanisms define the qualities of individual components, providing a solid foundation for assessing microservices’ performance and quality attributes.","2161-5330","979-8-3503-1943-9","10.1109/AICCSA59173.2023.10479351","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10479351","Microservices;Auto-scaling;Formal methods;Petri nets","Measurement;Adaptation models;Processor scheduling;Computational modeling;Petri nets;Microservice architectures;Focusing","","1","","17","IEEE","2 Apr 2024","","","IEEE","IEEE Conferences"
"Synthetic to Real-World: Insights on Microservices-Based Application Benchmarks","M. S. Rashmi; R. Vismaya; A. Patil; G. R. Rani; T. N. Borkade; P. Auradkar","Department of Computer Science, PES University, Bengaluru, Karnataka, India; Department of Computer Science, PES University, Bengaluru, Karnataka, India; Department of Computer Science, PES University, Bengaluru, Karnataka, India; Department of Computer Science, PES University, Bengaluru, Karnataka, India; Department of Computer Science, PES University, Bengaluru, Karnataka, India; Department of Computer Science, PES University, Bengaluru, Karnataka, India","2024 IEEE International Conference on Information Technology, Electronics and Intelligent Communication Systems (ICITEICS)","22 Aug 2024","2024","","","1","8","This paper focuses on implementing a realis-tic microservice-based application from DeathStarBench into μBench and the challenges associated with it. Unlike traditional monolithic applications, microservice apps comprise multiple smaller components that are comparatively complex. This makes benchmarking essential. Benchmarking is a process of evaluating and comparing the performance of a system, such as efficiency, effectiveness, quality, or cost, to assess how well a particular entity is performing compared to a reference point, often referred to as a benchmark. A benchmarking tool that employs near real-world applications, extending beyond the capabilities of the existing tools. The inclusion of configuring the microservices from scratch allows for a more comprehensive understanding of application performance, which is crucial for today's complex cloud-based applications [1]. Through synthetic benchmarking, μBench simulates real-world conditions, offering a more com-plete performance analysis. In this paper, we expand the tool μBench to effectively demonstrate its proficiency in deploying and benchmarking a diverse range of microservice applications by mimicking real-world applications like DeathStarBench and Teastore, analysing the performance and resource utilisation through various tools like Kiali, Prometheus and Jaeger.","","979-8-3503-8269-3","10.1109/ICITEICS61368.2024.10625221","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10625221","Monolithic;microservices;benchmarking;syn-thetic benchmarking","Electric potential;Systematics;Costs;Social networking (online);Communication systems;Microservice architectures;Benchmark testing","","","","10","IEEE","22 Aug 2024","","","IEEE","IEEE Conferences"
"An Approach to Designing Intelligent RAN Controller Services","I. Atanasov; E. Pencheva","Faculty of Telecommunications, Technical University of Sofia, Sofia, Bulgaria; Faculty of Communications and Electrical Equipment in Transport, ""Todor Kableshkov"" University of Transport, Sofia, Bulgaria","2023 3rd International Conference on Electrical, Computer, Communications and Mechatronics Engineering (ICECCME)","22 Sep 2023","2023","","","1","7","The concept of Open Radio Access Network (O-RAN) drives the RAN transition toward intellectualization, virtualization, and interoperability. The core of O-RAN is the separation of near real time intelligent control from the non-real time one, and the open interfaces between virtualized components. While some O-RAN trails are being deployed, there are some open issues related to the design of intelligent solutions and extension of open interfaces. The paper presents an approach to software design of virtualized O-RAN functionality following the principles of Service Based Architecture. The RAN Intelligent Controller (RIC) functions are designed as microservices which enable application management and Machine Learning (ML) model management. To illustrate the approach feasibility, the ML model lifecycle is modelled from ML model designer and O-RAN point of views. Models are formally described and verified.","","979-8-3503-2297-2","10.1109/ICECCME57830.2023.10252220","Bulgarian National Science Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10252220","Open Radio Access Network;RAN Intelligent Controller;microservice;concurrent processing","Software design;Scalability;Microservice architectures;Process control;Computer architecture;Mathematical models;Real-time systems","","","","13","IEEE","22 Sep 2023","","","IEEE","IEEE Conferences"
"MicroDiag: Fine-grained Performance Diagnosis for Microservice Systems","L. Wu; J. Tordsson; J. Bogatinovski; E. Elmroth; O. Kao","Elastisys AB, Umeå, Sweden; Elastisys AB, Umeå, Sweden; Distributed and Operating Systems Group, TU Berlin, Berlin, Germany; Elastisys AB, Umeå, Sweden; Department of Computing Science, Umeå University, Umeå, Sweden",2021 IEEE/ACM International Workshop on Cloud Intelligence (CloudIntelligence),"7 Sep 2021","2021","","","31","36","Microservice architecture has emerged as a popular pattern for developing large-scale applications for its benefits of flexibility, scalability, and agility. However, the large number of services and complex dependencies make it difficult and time-consuming to diagnose performance issues. We propose Micro-Diag, an automated system to localize root causes of performance issues in microservice systems at a fine granularity, including not only locating the faulty component but also discovering detailed information for its abnormality. MicroDiag constructs a component dependency graph and performs causal inference on diverse anomaly symptoms to derive a metrics causality graph, which is used to infer root causes. Our experimental evaluation on a microservice benchmark running in a Kubernetes cluster shows that MicroDiag localizes root causes well, with 97% precision of the top 3 most likely root causes, outperforming state-of-the-art methods by at least 31.1%.","","978-1-6654-4563-4","10.1109/CloudIntelligence52565.2021.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9527007","Performance diagnosis;Microservice system;Causal inference;Data-driven;Fine-grained root cause","Measurement;Scalability;Conferences;Benchmark testing;Feature extraction;Internet;Engines","","23","","23","IEEE","7 Sep 2021","","","IEEE","IEEE Conferences"
"SmartOClock: Workload- and Risk-Aware Overclocking in the Cloud","J. Stojkovic; P. A. Misra; Í. Goiri; S. Whitlock; E. Choukse; M. Das; C. Bansal; J. Lee; Z. Sun; H. Qiu; R. Zimmermann; S. Samal; B. Warrier; A. Raniwala; R. Bianchini",University of Illinois at Urbana Champaign; Microsoft; Microsoft; Microsoft; Microsoft; Microsoft; Microsoft; Microsoft; Microsoft; University of Illinois at Urbana Champaign; University of Texas at Austin; Microsoft; Microsoft; Microsoft; Microsoft,2024 ACM/IEEE 51st Annual International Symposium on Computer Architecture (ISCA),"1 Aug 2024","2024","","","437","451","Operating server components beyond their voltage and power design limit (i.e., overclocking) enables improving performance and lowering cost for cloud workloads. However, overclocking can significantly degrade component lifetime, increase power draw, and cause power capping events, eventually diminishing the performance benefits. In this paper, we characterize the impact of overclocking on cloud workloads by studying their profiles from production deployments. Based on the characterization insights, we propose SmartOClock, the first distributed overclocking management platform specifically designed for cloud environments. SmartOClock is a workload-aware scheme that relies on power predictions to heterogeneously distribute the power budgets across its servers based on their needs and then enforce budget compliance locally, per-server, in a decentralized manner. SmartOClock reduces the tail latency by 9%, application cost by 30% and total energy consumption by 10% for latencysensitive microservices on a 36-server deployment. Simulation analysis using production traces show that SmartOClock reduces the number of power capping events by up to 95% while increasing the overclocking success rate by up to 62%. We also describe lessons from building a first-of-its-kind overclockable cluster in Microsoft Azure for production experiments.","","979-8-3503-2658-1","10.1109/ISCA59077.2024.00040","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10609684","","Energy consumption;Costs;Buildings;Microservice architectures;Production;Tail;Computer architecture","","","","102","IEEE","1 Aug 2024","","","IEEE","IEEE Conferences"
"A MBSE Framework for the Design and Analysis of Complex Automotive Systems Using SysML and PCE","T. Kaloor; I. I. Barosan","Eindhoven University of Technology, Eindhoven, The Netherlands; Eindhoven University of Technology, Eindhoven, The Netherlands",2024 IEEE 21st International Conference on Software Architecture Companion (ICSA-C),"21 Aug 2024","2024","","","191","198","The development of automotive systems has become more complex due to the growing demand for sophisticated features, the necessity for smooth integration of technology, and faster production schedules, leading to numerous challenges in their development. To tackle some of these challenges, this paper introduces a practical method designed to simplify the early design and assessment stages of complex automotive systems through the use of sophisticated systems engineering methodolo-gies. It details the combination of Systems Modeling Language (SysML) and IBM Rational Rhapsody's Parametric Constraint Evaluator (PCE) within an improved Model-Based Systems Engineering (MBSE) framework aimed at the development of complex systems. This fusion enables the virtual evaluation of parametric constraints and the analysis of engineering performance for different system configurations, thus enhancing the process of engineering analysis. We demonstrate the practicality and effectiveness of this approach using a generic automotive powertrain case study. This involves modeling a system based on specific requirements and evaluating its performance across predetermined configurations. Furthermore, the versatility of the MBSE framework is highlighted, showing its applicability beyond the automotive industry to encompass a wide range of engineering domains. This study aims to pave the way for more efficient and manageable development processes in the face of growing system complexity.","2768-4288","979-8-3503-6625-9","10.1109/ICSA-C63560.2024.00042","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10628178","Model-Based Systems Engineering;Complex System Modeling;SysML;PCE;Parametric Evaluation;Auto-motive","Industries;Analytical models;Schedules;Software architecture;Production;Mechanical power transmission;Systems Modeling Language","","","","27","IEEE","21 Aug 2024","","","IEEE","IEEE Conferences"
"Self Adjusting Log Observability for Cloud Native Applications","D. Pathak; M. Verma; A. Chakraborty; H. Kumar","Indian Institute of Technology Hyderabad; IBM Research, India; IBM Research, India; IBM Research, India",2024 IEEE 17th International Conference on Cloud Computing (CLOUD),"28 Aug 2024","2024","","","482","493","With the increasing complexity of modern applications, particularly those relying on microservices architectures, the volume of observability data, encompassing logs, metrics, traces, etc., has surged significantly. This is further exacerbated by extensive cloud deployments, where observability is crucial for comprehending the health and performance of these systems, leading operations teams to collect as much data as possible for the “fear of missing out”. However, the collection, storage, and analysis of observability data entail significant costs, both in terms of resources and finances. Specifically, logs comprise the most substantial portion of observability data volume, thus exerting the greatest impact on observability cost. Moreover, logs also exhibit unstructured and noisy characteristics, where the efficacy of downstream AI for IT operations (AIOps tasks or Day-2 operations), such as fault classification, fault diagnosis, log anomaly detection etc., can be negatively impacted by log data volume. Hence, striking a balance between the verbosity of log observability and its impact on day-2 operations and debuggability is essential. In this paper, we introduce an autonomous system named SALO, which stands for Self-Adjusting Log Observability. SALO selectively collects logs based on real-time necessity, location, and granularity, as opposed to the conventional practice of collecting indiscriminately from all the components continuously. Our experiments show that SALO drastically decreases the log volume, by as much as 95 %, while still maintaining data quality for downstream AIOps usage, especially for post-hoc diagnosis tasks. Operating on a reduced volume of log data not only decreases storage, transfer, and retention costs but also streamlines observability pipelines, making them leaner, more efficient, and less resource-hungry.","2159-6190","979-8-3503-6853-6","10.1109/CLOUD62652.2024.00061","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10643920","Observability;Log Volume;AIOps","Fault diagnosis;Cloud computing;Costs;Data integrity;Pipelines;Microservice architectures;Real-time systems","","","","45","IEEE","28 Aug 2024","","","IEEE","IEEE Conferences"
"MV4MS: A Spring Cloud based Framework for the Co-Deployment of Multi-Version Microservices","L. Liu; X. He; Z. Tu; Z. Wang","School of Computer Science and Technology, Harbin Institute of Technology; School of Computer Science and Technology, Harbin Institute of Technology; School of Computer Science and Technology, Harbin Institute of Technology; School of Computer Science and Technology, Harbin Institute of Technology",2020 IEEE International Conference on Services Computing (SCC),"11 Dec 2020","2020","","","194","201","Agile development and the loose coupling of microservices, make continuous delivery/deployment of large, complex service systems become much easier. The microservices are upgraded and released independently and have their own independent version trees. For compatibility, multiple versions of one microservice are to be deployed in the same system to offer slightly different functionalities to different users simultaneously. However, loosely-coupling does not mean multiple microservices keep absolutely independent but there are more or less dependencies among them, and such dependencies occur not only on functionalities but also on the version issue, too. Existing microservice frameworks have no enough capability for multi-version co-deployment and the corresponding version-oriented dependency management. In this paper, a Spring Cloud based framework called MV4MS is introduced for this challenge. It extracts version information from source codes of microservices, builds version dependencies, packs and deploys requisite versions of microservices, and routes user requests to desired versions at run-time. Architecture of MV4MS and detailed design of its components are elaborately introduced. Experiments are conducted in AWS cloud environment, and results show that our framework could reduce the complexity of multi-version microservice co-deployment and ensure the correctness of routing between multi-version microservice.","2474-2473","978-1-7281-8789-1","10.1109/SCC49832.2020.00033","Research and Development; National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284506","Microservices;Multi-Version Co-Deployment;Version Dependency;Spring Cloud;Routing;DevOps","Couplings;Conferences;Service computing;Computer architecture;Routing;Data mining;Springs","","7","","15","IEEE","11 Dec 2020","","","IEEE","IEEE Conferences"
"A System Architecture for Smart Farming on Mushroom Cultivation","V. Moysiadis; C. Karaiskou; G. Kokkonis; I. D. Moscholios; P. Sarigiannidis","Dept. of Electrical and Computer Engineering, University of Western Macedonia, Kozani, Greece; Dept. of Electrical and Computer Engineering, University of Western Macedonia, Kozani, Greece; Dept. of Business Administration, University of Western Macedonia, Grevena, Greece; Dept. of Informatics and Telecommunications, University of Peloponnese, Tripolis, Greece; Dept. of Electrical and Computer Engineering, University of Western Macedonia, Kozani, Greece",2022 5th World Symposium on Communication Engineering (WSCE),"25 Oct 2022","2022","","","89","94","Collecting data for various parameters in the agriculture domain aims to help farmers and agronomists to take proper decisions regarding the health and the status of the cultivation. Mushrooms are becoming one of the most valuable ingredients in nowadays diet, giving additional vitamins and flavour without sodium or fat. Moreover, various mushroom species can grow in greenhouses under restricted controlled conditions. Furthermore, atmospheric parameters in the greenhouse and parameters from the substrate are of paramount importance in mushroom cultivation. Therefore, measuring and controlling these parameters using modern approaches based on Internet of Things technologies might leverage production. In addition, a decision support system based on aggregated data can help mushroom farmers in everyday decisions. In this manuscript, we propose a system architecture for data acquisition and decision-making for a greenhouse with mushrooms based on innovative technologies. Besides, we provide directions for wild mushroom hunting based on UAVs and sensors deployed in forests.","","978-1-6654-5057-7","10.1109/WSCE56210.2022.9916047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9916047","Mushrooms;Smart Farming;UAV;Microservices;LoRa","Decision support systems;Technological innovation;Atmospheric measurements;Sodium;Systems architecture;Greenhouses;Forestry","","2","","14","IEEE","25 Oct 2022","","","IEEE","IEEE Conferences"
"Auto Scaling Infrastructure with Monitoring Tools using Linux Server on Cloud","S. S; S. C; D. K; P. L; R. M; N. C","Department of CSE, Kongu Engineering College, Perundurai, India; Department of CSE, Kongu Engineering College, Perundurai, India; Department of CSE, Kongu Engineering College, Perundurai, India; Department of CSE, Kongu Engineering College, Perundurai, India; Department of CSE, Kongu Engineering College, Perundurai, India; Department of CSE, Kongu Engineering College, Perundurai, India",2023 7th International Conference on Computing Methodologies and Communication (ICCMC),"4 Apr 2023","2023","","","45","52","Cloud computing is the term that has gained widespread usage over these last few years. Due to the rapid increase in the use of information in the digital age of the 21st century, it is increasingly becoming a more attractive option for individuals and organizations to manage all their essential data, projects, and collaborations, rather than relying solely on in-house computers. The user's requirement for hardware and software is reduced via cloud computing. The interface software of cloud computing systems, typically as simple as a web browser, is the only thing the user must operate, and the Cloud network handles the rest. To decrease operational costs, both business and government organizations are adopting cloud computing, seeking a flexible and adaptable solution for the supply and delivery of their product services. Microservices and decoupled apps are becoming more popular. These container-based architectures make it easier to build sophisticated SaaS apps quickly, but managing and creating microservices can be a daunting task. Managing and creating microservices that involve a wide range of diverse functions, including handling and storing information, and performing predictive and prescriptive analysis, can be a challenging undertaking. Establishing auto scaling infrastructure on doud can be challenging due to several reasons, some of which are: understanding the application architecture, setting up monitoring, scaling policies, cost optimization and implementation complexity. Server farms include the tremendous and heterogeneous virtualized frameworks, which are continually extending and broadening after sometime are the essential starting point for registering specialized organizations. These solutions also need to be integrated into existing systems while adhering to Quality of Service (QoS) requirements. The principal objective of this work is to propose an on-premise design to leverage Kubernetes and Docker containers to improve the quality of service based on resource usage and Service Level Objectives (SLOs). The Prometheus Administrator set up is used to perform namespace checking. Normally, doud providers enable their own monitoring tools (like CloudWatch) for monitoring CPU, storage and network usage, service component, however these tools cannot monitor the service component. Additionally, the advancements have restricted the capacity to follow QoS highlights at the application level (like security and execution) since the main focus will be dedicated towards the equipment assets. These types of node-level monitoring make it difficult to scale requests and deploy pods to match the demand. Infrastructure monitoring should enable runtime changes to monitor the requirements or metric operationalization should be done on those criteria without modifying the underlying infrastructure.","","978-1-6654-6408-6","10.1109/ICCMC56507.2023.10083635","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10083635","Software as a Service;Service-Level Objective;Prometheus;Microservices;Monitoring tool;Quality of Service","Cloud computing;Costs;Linux;Software as a service;Microservice architectures;Quality of service;Planning","","1","","20","IEEE","4 Apr 2023","","","IEEE","IEEE Conferences"
"A Framework for Monitoring Microservice-Oriented Cloud Applications in Heterogeneous Virtualization Environments","A. Noor; D. N. Jha; K. Mitra; P. P. Jayaraman; A. Souza; R. Ranjan; S. Dustdar","Newcastle University, Newcastle upon Tyne, UK; Newcastle University, Newcastle upon Tyne, UK; Luleå University of Technology, Skellefteå, Sweden; Swinburne University of Technology, Melbourne, Australia; Federal University of Rio, Grande do Norte, Brazil; Newcastle University, Newcastle upon Tyne, UK; TU, Wien, Austria",2019 IEEE 12th International Conference on Cloud Computing (CLOUD),"29 Aug 2019","2019","","","156","163","Microservices have emerged as a new approach for developing and deploying cloud applications that require higher levels of agility, scale, and reliability. To this end, a microservice-based cloud application architecture advocates decomposition of monolithic application components into independent software components called ""microservices"". As the independent microservices can be developed, deployed, and updated independently of each other, it leads to complex run-time performance monitoring and management challenges. To solve this problem, we propose a generic monitoring framework, Multi-microservices Multi-virtualization Multi-cloud (M3) that monitors the performance of microservices deployed across heterogeneous virtualization platforms in a multi-cloud environment. We validated the efficacy and efficiency of M3 using a Book-Shop application executing across AWS and Azure.","2159-6190","978-1-7281-2705-7","10.1109/CLOUD.2019.00035","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8814569","microservices, monitoring, container, VM, cloud computing","Monitoring;Cloud computing;Containers;Virtualization;Databases;Data centers;Software","","27","","25","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"Unification architecture of cross-site 5G testbed resources for PPDR verticals","D. Arampatzis; K. C. Apostolakis; G. Margetis; C. Stephanidis; E. Atxutegi; M. Amor; N. Di Pietro; J. Henriques; L. Cordeiro; J. Carapinha; H. Khalili; A. Rehman","Institute of Computer Science, Foundation for Research and Technology Hellas, Heraklion, Greece; Institute of Computer Science, Foundation for Research and Technology Hellas, Heraklion, Greece; Institute of Computer Science, Foundation for Research and Technology Hellas, Heraklion, Greece; Institute of Computer Science, Foundation for Research and Technology Hellas, Heraklion, Greece; Nemergent Solutions SL, Bilbao, Spain; Nemergent Solutions SL, Bilbao, Spain; SSI Department, Athonet Srl, Bolzano Vicentino, Italy; OneSource, Coimbra, Portugal; OneSource, Coimbra, Portugal; Altice Labs, Aveiro, Portugal; SMARTECH Department, Centre Tecnològic de Telecomunicacions de Catalunya (CTTC), Barcelona, Spain; SMARTECH Department, Centre Tecnològic de Telecomunicacions de Catalunya (CTTC), Barcelona, Spain",2021 IEEE International Mediterranean Conference on Communications and Networking (MeditCom),"23 Dec 2021","2021","","","13","19","A significant amount of fifth-generation (5G) experimentation facilities and testbeds have been proposed in the scientific literature over the past five years, each characterized by its unique setup of resources and control frameworks. Given the wide set of often contradicting requirements presented by the various classes of 5G use cases, the 5G-EPICENTRE project focuses on the provision of a truly open, multi-site 5G experimentation facility specifically tailored to the needs of public safety solution providers, which will leverage on, and extend the capabilities of 5G testbeds developed in, or resulting out of the 5G-PPP Projects (Phase 1-3). At its heart, 5G-EPICENTRE will encompass best practices derived from Cloud-Native implementations, providing a platform for automating and streamlining 5G experiment deployment inside flexible, easily reproducible environments packed in lightweight software containers. 5G-EPICENTRE will focus on the provision of an innovative, open and interoperable platform that aims to act as both a testbed, as well as a federation of existing 5G testbeds. Through an augmentation of experimentation facilities, 5G-EPICENTRE will define the necessary information models to interconnect testbeds partaking in the federation through simplified APIs, and will facilitate the orchestration of their resources to optimally service the needs and requirements of PPDR-centric applications.","","978-1-6654-4505-4","10.1109/MeditCom49071.2021.9647591","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9647591","","Heart;5G mobile communication;Conferences;Computer architecture;Containers;Software;Safety","","6","","14","IEEE","23 Dec 2021","","","IEEE","IEEE Conferences"
"Demonstration of Closed Loop AI-Driven RAN Controllers Using O-RAN SDR Testbed","N. H. Stephenson; A. J. Chiejina; N. B. Kabigting; V. K. Shah","NextG Wireless Lab@GMU George Mason University, Fairfax, USA; NextG Wireless Lab@GMU George Mason University, Fairfax, USA; NextG Wireless Lab@GMU George Mason University, Fairfax, USA; NextG Wireless Lab@GMU George Mason University, Fairfax, USA",MILCOM 2023 - 2023 IEEE Military Communications Conference (MILCOM),"25 Dec 2023","2023","","","241","242","Open Radio Access Network (O-RAN), a virtualized, modular, and disaggregated design paradigm for 5G/NextG cellular RANs, aims to integrate intelligence into cellular networks, enabling advanced deployment, operation and maintenance of the network. A key component of O-RAN is the RAN Intelligent Controller (RIC), which facilitates the controllability of RAN elements through data-driven, closed-loop, intelligent control using software microservices called extended Applications (xApps). In this demonstration, we showcase intelligent RAN control using a custom interference classification xApp hosted within the near-real-time RIC. This demonstration provides a tangible example for designing, testing, and experimenting with AI-driven RAN controllers and exploring various possibilities within the O-RAN system.","2155-7586","979-8-3503-2181-4","10.1109/MILCOM58377.2023.10356330","National Science Foundation; Commonwealth of Virginia; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10356330","5G;O-RAN;xApp;intelligent RAN control","Military communication;Cellular networks;Microservice architectures;Interference;Maintenance engineering;Controllability;Software","","2","","5","IEEE","25 Dec 2023","","","IEEE","IEEE Conferences"
"MLOps: Creating powerful AI pipelines by stitching together heterogeneous Machine Learning models","D. Panchal; I. Baran; D. Musgrove; D. Lu","AT&T, Middletown, NJ, USA; AT&T, Middletown, NJ, USA; AT&T, Middletown, NJ, USA; AT&T, Dallas, TX, USA","2023 IEEE International Conference on Technology Management, Operations and Decisions (ICTMOD)","21 Feb 2024","2023","","","1","6","As Machine Learning and Deep Learning are being widely adopted in different industries, in many cases there is also a need to use these models together to have a system or a solution that is capable of performing much better on a task than the individual models can. Or even perform tasks that the individual models cannot perform by themselves in isolation. We developed the Acumos AI Platform that provides capabilities to create powerful AI pipelines by stitching together heterogeneous Machine Learning models. We will demonstrate with multiple examples how we can create such powerful AI pipelines which we will call ‘composite ML solutions’ using the Acumos Design Studio. We will use some other components we developed i.e. Acumos Runtime Orchestrator, proto viewer, Data broker, Splitter, and Collator to deploy the aforementioned composite ML solutions as a set of communicating microservices. The individual ML models that are part of the composite solution may not necessarily have been created by the same person or same group or the same organization or have been created in a particular language or use a particular ML framework. But still, Acumos allows these models created in disparate languages and frameworks by different individuals or organizations to be stitched (subject to their compatibility) together to create composite solutions using a simple intuitive GUI and deploy them very easily to various cloud targets. In this paper, we will describe these novel capabilities that we have developed in Acumos and we will show how to create and deploy a composite ML solution or an AI pipeline using this toolset.","2159-5119","979-8-3503-1335-2","10.1109/ICTMOD59086.2023.10438133","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10438133","Machine Learning;Deep Learning;MLOps;ML Pipelines;Acumos;Open Source;Design Studio;AI4EU","Runtime;Technology management;Pipelines;Microservice architectures;Organizations;Data models;Task analysis","","2","","33","IEEE","21 Feb 2024","","","IEEE","IEEE Conferences"
"Poster: (Re)-Configuration Framework for Mission-Critical Applications in Edge Environments","U. Gropengießer; J. Liphardt; M. Matthé; M. Mühlhäuser","Technical University of Darmstadt, Darmstadt, Germany; Technical University of Darmstadt, Darmstadt, Germany; University of Stuttgart, Stuttgart, Germany; Technical University of Darmstadt, Darmstadt, Germany",2023 IEEE/ACM Symposium on Edge Computing (SEC),"7 Feb 2024","2023","","","264","266","Mission-critical applications, which must adhere to processing deadlines, can benefit from low latencies offered by the edge. Adapting the Quality of Result allows for targeted processing times by selecting various approximations. Feature models can be employed to manage the resulting multitude of possible configurations. However, the deployment and (re)-configuration process is very time-consuming, making it impractical for mission-critical applications. In this work, we introduce a processing pipeline with components that significantly accelerate online (re)-configuration based on changing latencies compared to the state-of-the-art. Additionally, we address the edge-specific discovery of potential microservice chains capable of executing the application.","2837-4827","979-8-4007-0123-8","10.1145/3583740.3626628","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10419282","Feature Model;Edge Computing;Approximate Computing;Quality of Result","Adaptation models;Computational modeling;Mission critical systems;Pipelines;Microservice architectures;Edge computing","","","","21","","7 Feb 2024","","","IEEE","IEEE Conferences"
"Web Application Security on Top of Public Cloud","M. K. S; G. S. R; J. V; J. B. J","KPR Institute of Engineering and Technology, Coimbatore, India; Department of CSE, KPR Institute of Engineering and Technology, Coimbatore, India; Department of CSE, KPR Institute of Engineering and Technology, Coimbatore, India; Department of CSE, KPR Institute of Engineering and Technology, Coimbatore, India",2022 Second International Conference on Interdisciplinary Cyber Physical Systems (ICPS),"10 Nov 2022","2022","","","210","215","The prevalence of Microservices has made it quintessential to build web applications in a Cloud-Native fashion. While building applications in a cloud-native way, almost the entire infrastructure of an organization relies on an arbitrary Cloud Service Provider’s data center as the individual components of the organization’s on-premise infrastructure are morphed into the modern Infrastructure as a Service(IaaS) model in pay-as-you-go strategy. In this scenario, every Cloud Service Provider(CSP) ensures that they are responsible for securing the data at rest. But the data in transit is left to the user’s responsibility. Some prominent Cloud Service Providers offer services to encrypt the data in-transit as well. But under such circumstances, a copy of our enciphering keys are in any way kept under their premises which in turn is undesirable for many individual users and organizations. So, the solution is to do Client Side Encryption(CSE) to ensure the security ourselves. We are proposing a cryptosystem such that it solidifies the integrity of in-transit data by implementing the Homomorphic encryption technique using a modified form of RSA algorithm. (A study on in-flight data security using cloud services is also done.)","","978-1-6654-7022-3","10.1109/ICPS55917.2022.00045","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9941229","Cloud Service Provider;In-transit Data;Cryptosystem;Client Side Encryption;Homomorphic Encryption;Encipher;Decipher;Public Key;Private Key;Computation","Industries;Cloud computing;Data centers;Standards organizations;Microservice architectures;Organizations;Data models","","","","5","IEEE","10 Nov 2022","","","IEEE","IEEE Conferences"
"Sparrow Tracer: Scalable Real Time Metrics from Event Log Pipelines at Twitter","R. Chakraborty; L. VijayaRenu; Z. Wang; P. Killamsetti","Twitter, Inc; Twitter, Inc; Twitter, Inc; Twitter, Inc",2022 International Conference on Computational Science and Computational Intelligence (CSCI),"25 Aug 2023","2022","","","623","627","Streaming event pipelines are one of the core components of Twitter's Data Infrastructure [1]. Twitter Sparrow is a project responsible for aggregating, processing and delivering user action generated events from microservices to data warehouses and data lakes in real time. User action generated events are converted into datasets used for data processing and data analytics use cases. This project is built using different on premise and cloud services. One of the important requirements of such a streaming event pipeline is the ability to measure important metrics such as latency, event count, event drop vs. success rate, and more. These metrics are responsible for defining the health of the streaming pipeline as well as providing valuable insights to users of the events. In this paper we introduce Sparrow Tracer which is a novel way to capture the event metrics using the concept of tracer events.","2769-5654","979-8-3503-2028-2","10.1109/CSCI58124.2022.00115","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10216558","real time analytics;streaming event pipeline;event tracing;large scale event infrastructure","Measurement;Social networking (online);Scientific computing;Pipelines;Blogs;Microservice architectures;Data visualization","","","","16","IEEE","25 Aug 2023","","","IEEE","IEEE Conferences"
"Research on Kubernetes Scheduler Optimization Based on real Load","X. Cheng; E. Fu; C. Ling; L. Lv","School of Software Technology, Zhejiang University, Ningbo, China; School of Software Technology, Zhejiang University, Ningbo, China; School of Software Technology, Zhejiang University, Ningbo, China; Shanghai Futuroscope Information Technology Co., Ltd, Shanghai, China",2023 3rd International Conference on Electronic Information Engineering and Computer Science (EIECS),"21 Feb 2024","2023","","","711","716","With the development of microservices, more and more companies are deploying applications in a containerized manner. Kubernetes is one of the most popular container orchestration tools currently available, which can effectively simplify container management. The scheduler is a core component of Kubernetes, which is responsible for scheduling containers to run on the most appropriate node. The main reference metric for the Kubernetes default scheduler is the resource request rate of the node. It prioritizes scheduling containers to run on nodes with low resource request rates. The resource application rate of a node is calculated by dividing the amount of resources requested by the node by the total amount of resources of the node. This scheduling strategy can meet business requirements in most cases, but it may have problems in certain scenarios. In a certain business scenario, the data processing module of the system needs to run multiple processing tasks on multiple nodes, and the computing resources required for these processing tasks vary. When using the default scheduler, it is difficult for users to predict their actual needs when applying for resources. Therefore, there may be significant differences between the resource application rate of nodes and the actual resource utilization rate of nodes, resulting in significant waste of cluster resources and uneven load. Therefore, this article refers to the relevant research results in the field of Kubernetes scheduling and implements a scheduler based on real load, aiming to solve the possible resource waste and load imbalance when scheduling Pods by default schedulers.","","979-8-3503-1667-4","10.1109/EIECS59936.2023.10435549","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10435549","Kubernetes;Scheduler;Scheduling policy","Processor scheduling;Microservice architectures;Containers;Resource management;Task analysis;Optimization;Business","","","","5","IEEE","21 Feb 2024","","","IEEE","IEEE Conferences"
"A Containerized Template Approach for Vendor-Friendly Smart Home Integration","J. Fleck; J. Sorgalla; F. Katzenberg; S. Sachweh","IDiAL Institute, University of Applied Sciences and Arts Dortmund, Dortmund, Germany; IDiAL Institute, University of Applied Sciences and Arts Dortmund, Dortmund, Germany; IDiAL Institute, University of Applied Sciences and Arts Dortmund, Dortmund, Germany; IDiAL Institute, University of Applied Sciences and Arts Dortmund, Dortmund, Germany",2023 IEEE 12th International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS),"21 Dec 2023","2023","1","","352","355","Smart home devices are often only connectable with devices from the same vendor. Various interoperability platforms exist on the market to overcome this vendor lock-in. However, some vendors are reluctant to make the necessary software details of their devices publicly available, in part because of the risk of losing sovereignty over the source code used to interact with their devices. To mitigate this problem, we propose a template approach based on containerization and gRPC, where vendors can not only provide the software, but also define the execution environment that controls their devices. We showcase the approach successfully in a small case study.","2770-4254","979-8-3503-5805-6","10.1109/IDAACS58523.2023.10348797","Federal Ministry of Education and Research(grant numbers:16SV8449); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10348797","smart home;containerization;interoperability;software architecture","Source coding;Data acquisition;Smart homes;Computer architecture;Software;Interoperability","","","","12","IEEE","21 Dec 2023","","","IEEE","IEEE Conferences"
"Infrastructure-as-Code for Data-Intensive Architectures: A Model-Driven Development Approach","M. Artac; T. Borovšak; E. Di Nitto; M. Guerriero; D. Perez-Palacin; D. A. Tamburri","XLAB - Ljubljana, Slovenia; DEEPSE group - DEIB - Politecnico di Milano, Milano, Italy; DEEPSE group - DEIB - Politecnico di Milano, Milano, Italy; DEEPSE group - DEIB - Politecnico di Milano, Milano, Italy; Computer Science Department - Linnaeus University, Sweden; DEEPSE group - DEIB - Politecnico di Milano, Milano, Italy",2018 IEEE International Conference on Software Architecture (ICSA),"23 Jul 2018","2018","","","156","15609","As part of the DevOps tactics, Infrastructure-as-Code (IaC) provides the ability to create, configure, and manage complex infrastructures by means of executable code. Writing IaC, however, is not an easy task, since it requires blending different infrastructure programming languages and abstractions, each specialized on a particular aspect of infrastructure creation, configuration, and management. Moreover, the more the architectures become large and complex (e.g. Data-Intensive or Microservice-based architectures), the more dire the need of IaC becomes. The goal of this paper is to exploit Model-Driven Engineering (MDE) to create language-agnostic models that are then automatically transformed into IaC. We focus on the domain of Data-Intensive Applications as these typically exploit complex infrastructures which demand sophisticated and fine-grained configuration and re-configuration - we show that, through our approach, called DICER, it is possible to create complex IaC with significant amounts of time savings, both in IaC design as well as deployment and re-deployment times.","","978-1-5386-6398-1","10.1109/ICSA.2018.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8417149","DevOps;Big Data;Model-Driven Engineering;Cloud;Infrastructure-as-Code;TOSCA","Unified modeling language;Computer architecture;Tools;Cloud computing;Big Data;Writing","","16","1","19","IEEE","23 Jul 2018","","","IEEE","IEEE Conferences"
"Multi-Service Electronic Library of Scientific and Technical Articles","I. Bikmullina; I. Valiullin","Kazan National Research Technical University named after A. N. Tupolev - KAI, KNRTU-KAI, Kazan, Russia; Kazan National Research Technical University named after A. N. Tupolev - KAI, KNRTU-KAI, Kazan, Russia",2020 International Multi-Conference on Industrial Engineering and Modern Technologies (FarEastCon),"8 Dec 2020","2020","","","1","5","In our world, there are a huge number of smart, talented people who can potentially be compared with scientists, scientific researchers in various fields without any framework and restrictions. In most cases, these people are junior and senior students. The works of many bright minds go unnoticed over time for a number of offensive, but logical reasons. A scientist will never become a scientist if the results of his research remain unknown to the public. Without publications, without proper design, without constructive criticism and discussion, all the works and discoveries of students disappear in huge amounts of archival information. Works simply do not lose their current value here and now. Based on this, the problem of popularization of science and scientific activity among students is very relevant. Creating an electronic library of scientific and technical articles can help in solving this problem. In this article, I will demonstrate how to create an information resource not only in providing students with the opportunity to publish, read, discuss scientific papers, but also in creating a community of students who are interested in scientific activities.","","978-1-7281-6951-4","10.1109/FarEastCon50210.2020.9271350","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9271350","scientific activities;scientific article;technical articles;electronic library","Databases;Libraries;Computer architecture;Containers;Relational databases;User interfaces;Servers","","2","","17","IEEE","8 Dec 2020","","","IEEE","IEEE Conferences"
"Data-Driven Edge Resource Provisioning for Inter-Dependent Microservices with Dynamic Load","R. Yu; S. -Y. Lo; F. Zhou; G. Xue","North Carolina State University, Raleigh, NC, USA; North Carolina State University, Raleigh, NC, USA; North Carolina State University, Raleigh, NC, USA; Arizona State University, Tempe, AZ, USA",2021 IEEE Global Communications Conference (GLOBECOM),"2 Feb 2022","2021","","","1","6","This paper studies how to provision edge computing and network resources for complex microservice-based applications (MSAs) in face of uncertain and dynamic geo-distributed demands. The complex inter-dependencies between distributed microservice components make load balancing for MSAs extremely challenging, and the dynamic geo-distributed demands exacerbate load imbalance and consequently congestion and performance loss. In this paper, we develop an edge resource provisioning model that accurately captures the inter-dependencies between microservices and their impact on load balancing across both computation and communication resources. We also propose a robust formulation that employs explicit risk estimation and optimization to hedge against potential worst-case load fluctuations, with controlled robustness-resource trade-off. Utilizing a data-driven approach, we provide a solution that provides risk estimation with measurement data of past load geo-distributions. Simulations with real-world datasets have validated that our solution provides the important robustness crucially needed in MSAs, and performs superiorly compared to baselines that neglect either network or inter-dependency constraints.","","978-1-7281-8104-2","10.1109/GLOBECOM46510.2021.9685155","NSF(grant numbers:1704092,2007391,2007469,2045539); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9685155","Edge computing;microservice;load balancing;resource provisioning;robustness;data-driven","Computational modeling;Microservice architectures;Estimation;Stochastic processes;Load management;Dynamic scheduling;Robustness","","","","30","IEEE","2 Feb 2022","","","IEEE","IEEE Conferences"
"Workload Management for Power Efficiency in Heterogeneous Data Centers","P. Ruiu; A. Scionti; J. Nider; M. Rapoport","Istituto Superiore Mario Boella (ISMB), Torino, Italy; Istituto Superiore Mario Boella (ISMB), Torino, Italy; IBM Haifa Research Labs, Haifa, Haifa, IL; IBM Research and Development, Haifa Research Lab","2016 10th International Conference on Complex, Intelligent, and Software Intensive Systems (CISIS)","22 Dec 2016","2016","","","23","30","The cloud computing paradigm has recently emerged as a convenient solution for running different workloads on highly parallel and scalable infrastructures. One major appeal of cloud computing is its capability of abstracting hardware resources and making them easy to use. Conversely, one of the major challenges for cloud providers is the energy efficiency improvement of their infrastructures. Aimed at overcoming this challenge, heterogeneous architectures have started to become part of the standard equipment used in data centers. Despite this effort, heterogeneous systems remain difficult to program and manage, while their effectiveness has been proven only in the HPC domain. Cloud workloads are different in nature and a way to exploit heterogeneity effectively is still lacking. This paper takes a first step towards an effective use of heterogeneous architectures in cloud infrastructures. It presents an in-depth analysis of cloud workloads, highlighting where energy efficiency can be obtained. The microservices paradigm is then presented as a way of intelligently partitioning applications in such a way that different components can take advantage of the heterogeneous hardware, thus providing energy efficiency. Finally, the integration of microservices and heterogeneous architectures, as well as the challenge of managing legacy applications, is presented in the context of the OPERA project.","","978-1-5090-0987-9","10.1109/CISIS.2016.107","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7791858","cloud computing;power efficiency;workload management;microservices;heterogeneous data center","Servers;Cloud computing;Hardware;Computer architecture;Power demand;Programming;Cooling","","12","","34","IEEE","22 Dec 2016","","","IEEE","IEEE Conferences"
"Using Distributed Tracing to Identify Inefficient Resources Composition in Cloud Applications","C. Cass&#x00E9;; P. Berthou; P. Owezarski; S. Josset","LAAS - CNRS, Universit&#x00E9; de Toulouse, CNRS, Orange, Toulouse, France; LAAS - CNRS, Universit&#x00E9; de Toulouse, UPS, Toulouse, France; LAAS - CNRS, Universit&#x00E9; de Toulouse, CNRS, Toulouse, France; Orange, Toulouse, France",2021 IEEE 10th International Conference on Cloud Networking (CloudNet),"29 Dec 2021","2021","","","40","47","Cloud-Applications are the new industry standard way of designing Web-Applications. With Cloud Computing, Applications are usually designed as microservices, and developers can take advantage of thousands of such existing microservices, involving several hundred of cross-component communications on different physical resources.Microservices orchestration (as Kubernetes) is an automatic process, which manages each component lifecycle, and notably their allocation on the different resources of the cloud infrastructure. Whereas such automatic cloud technologies ease development and deployment, they nevertheless obscure debugging and performance analysis. In order to gain insight on the composition of services, distributed tracing recently emerged as a way to get the decomposition of the activity of each component within a cloud infrastructure. This paper aims at providing methodologies and tools (leveraging state-of-the-art tracing) for getting a wider view of application behaviours, especially focusing on application performance assessment.In this paper, we focus on using distributed traces and allocation information from microservices to model their dependencies as a hierarchical property graph. By applying graph rewriting operations, we managed to project and filter communications observed between microservices at higher abstraction layers like the machine nodes, the zones or regions. Finally, in this paper we propose an implementation of the model running on a microservices shopping application deployed on a Zonal Kubernetes cluster monitored by OpenTelemetry traces. We propose using the flow hierarchy metric on the graph model to pinpoint cycles that reveal inefficient resource composition inducing possible performance issues and economic waste.","","978-1-6654-3538-3","10.1109/CloudNet53349.2021.9657140","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9657140","Distributed Tracing;Cloud Computing;Property Graph;Graph Rewriting;Hierarchical Model","Measurement;Cloud computing;Adaptation models;Computational modeling;Ecosystems;Microservice architectures;Debugging","","8","","32","IEEE","29 Dec 2021","","","IEEE","IEEE Conferences"
"The Design Method of Micro-Unit Cryptographic Service Framework","Q. Zhao; B. Tian; Y. Liu","Science and Technology on Communication Security Laboratory, Chengdu, China; Science and Technology on Communication Security Laboratory, Chengdu, China; Science and Technology on Communication Security Laboratory, Chengdu, China",2023 International Conference on Networking and Network Applications (NaNA),"24 Oct 2023","2023","","","698","704","In order to adapt to the rapid development of information technology in the digital age, it is necessary to build a general cryptographic service delivery capability to provide security protection for data exchange in various scenarios.Cryptographic services need to be combined with a variety of complex cryptographic technologies to establish a secure foundation. At the same time, the efficiency of implementation must be guaranteed. In order to meet this demand, a micro-unit cryptographic service framework is proposed. Based on microservices, plug-in, service engine and other technologies, a micro-unit crypto service platform supporting functional reconfiguration is designed. The programmable micro-unit crypto component can generate service links according to the quality of service, and provide flexible access methods for crypto service. The crypto function of the client and the server can be divided into fine-granularity units, which can be combined into a more flexible crypto system which can adapt to the rapid change of security requirements and deal with new security threats. Based on this framework, crypto service providers can quickly establish a scalable crypto service system that can adapt to various scenarios, meet different security levels and be easily expanded.","","979-8-3503-2738-0","10.1109/NaNA60121.2023.00120","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10284824","Cryptographic services;micro-unit;microservice;business engine;plug-in","Industries;Design methodology;Microservice architectures;Information security;Quality of service;Maintenance engineering;Information age","","","","18","IEEE","24 Oct 2023","","","IEEE","IEEE Conferences"
"Designing Secure AI-based Systems: a Multi-Vocal Literature Review","S. Schneider; A. Saha; E. Mezzi; K. Tuma; R. Scandariato","Hamburg University of Technology, Hamburg, Germany; Hamburg University of Technology, Hamburg, Germany; Vrije Universiteit Amsterdam, Amsterdam, The Netherlands; Vrije Universiteit Amsterdam, Amsterdam, The Netherlands; Hamburg University of Technology, Hamburg, Germany",2024 IEEE Secure Development Conference (SecDev),"30 Oct 2024","2024","","","13","19","AI-based systems leverage recent advances in the field of AI/ML by combining traditional software systems with AI components. Applications are increasingly being developed in this way. Software engineers can usually rely on a plethora of supporting information on how to use and implement any given technology. For AI-based systems, however, such information is scarce. Specifically, guidance on how to securely design the architecture is not available to the extent as for other systems.We present 16 architectural security guidelines for the design of AI-based systems that were curated via a multi-vocal literature review. The guidelines could support practitioners with actionable advice on the secure development of AI-based systems. Further, we mapped the guidelines to typical components of AI-based systems and observed a high coverage where 6 out of 8 generic components have at least one guideline associated to them.","","979-8-3503-9193-0","10.1109/SecDev61143.2024.00007","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10734054","AI;software architecture;security;guidelines","Bibliographies;Computer architecture;Software systems;Security;Artificial intelligence;Guidelines","","","","34","IEEE","30 Oct 2024","","","IEEE","IEEE Conferences"
"An Energy Efficiency Marketplace for Buildings: The ENERGATE System Architecture","P. Kapsalis; A. Papapostolou; K. Touloumis; I. Andreoulaki; Z. Mylona; H. Doukas","Decision Support Systems Laboratory, School of Electrical and Conputer Engineering, National Technical University of Athens, Athens, Greece; Decision Support Systems Laboratory, School of Electrical and Conputer Engineering, National Technical University of Athens, Athens, Greece; Decision Support Systems Laboratory, School of Electrical and Conputer Engineering, National Technical University of Athens, Athens, Greece; Decision Support Systems Laboratory, School of Electrical and Conputer Engineering, National Technical University of Athens, Athens, Greece; Holistic IKE, Athens, Greece; Decision Support Systems Laboratory, School of Electrical and Conputer Engineering, National Technical University of Athens, Athens, Greece","2023 14th International Conference on Information, Intelligence, Systems & Applications (IISA)","15 Dec 2023","2023","","","1","6","Nowadays it becomes evident that there is a lack of Information Technology systems that decision making as the creation of financing schemes for the building sector. In this context an information system acting as a marketplace enables data driven components that will be exploited by end users to perform bids and offers for building investments. This work focuses on the functional description of the EU-funded project ENERGATE marketplace for energy efficiency investments. ENERGATE System Architecture fosters data sharing, interoperability and the integration of data driven techniques, underlying the design principles to be followed having alignment with existing EU standards and protocols.","","979-8-3503-1806-7","10.1109/IISA59645.2023.10345882","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10345882","data space;energy efficiency;marketplace;energy efficiency data value chain;data analytics;Sustainable Financing","Protocols;Architecture;Buildings;Decision making;Standards organizations;Systems architecture;Energy efficiency","","1","","25","IEEE","15 Dec 2023","","","IEEE","IEEE Conferences"
"Hybrid Robot-as-a-Service (RaaS) Platform (Using MQTT and CoAP)","P. Bhavsar; S. H. Patel; T. M. Sobh","Department of Computer Science and Engineering, University of Bridgeport, Bridgeport, CT, USA; Department of Computer Science and Engineering, University of Bridgeport, Bridgeport, CT, USA; Department of Computer Science and Engineering, University of Bridgeport, Bridgeport, CT, USA","2019 International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)","21 Oct 2019","2019","","","974","979","Robots are evolving from factory work-horses to be the robot-companions. The future of robots will be as companions in the workplace functioning as interactive salespeople. In order to support this transition, it is important to combine service-oriented architecture and robotics. Service-oriented architecture and cloud computing have become dominant computing paradigms and adding a RaaS (Robot as a Service) unit as a part of this system will help the companies manage and develop robots more efficiently. The major components of RaaS will be the integration of RMS (Robot Management System) and ROC (Robot Operation Center). As more and more robots are increasing in the service industry, the inter-robot communication is very critical. This communication can be achieved by ROC and the robots can be monitored remotely or locally via RMS. The RaaS platform will comply with all the standards of SOA (Service Oriented Architecture) like the development platform and execution unit, thereby creating a flexible and more development-friendly process.","","978-1-7281-2980-8","10.1109/iThings/GreenCom/CPSCom/SmartData.2019.00171","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8875263","Robots, RaaS, RMS, ROC, SOA, Cloud Computing","Cloud computing;Robot sensing systems;Protocols;Servers;Computer architecture;Task analysis","","8","","21","IEEE","21 Oct 2019","","","IEEE","IEEE Conferences"
"nuhealthsoft: A Nutritional and Health Data Processing Software Tool from a patient’s perspective","D. P. Panagoulias; M. Virvou; G. A. Tsihrintzis","Department of Informatics, University of Piraeus, Piraeus, Greece; Department of Informatics, University of Piraeus, Piraeus, Greece; Department of Informatics, University of Piraeus, Piraeus, Greece",2022 16th International Conference on Signal-Image Technology & Internet-Based Systems (SITIS),"10 Apr 2023","2022","","","386","393","To ensure the alignment between developers, engineers and other stakeholders in the various steps of a production cycle, the utilisation of one of the many development methodologies is imperative for the successful transition from an idea to a useful and reliable end product. The rational unified process is the most precise and most cited iterative software engineering process that can ensure that alignment, trough comprehensive and simple separate steps, taken within pre - set restrictions [1].Modern software has to be easily managed and easy to scale. By scalable software, we refer to software, where functionality and processing power can be easily attached. For that reason more often than not, the software is divided in smaller components that serve different purposes and are tasked with different responsibilities. Those components can be deployed independently or as as part of greater distributed systems and are easier to collaborate on and to manage. This development framework is referred to as a microservices architecture.Medical applications for treatment, disease prevention and health optimisation can greatly benefit from machine learning and artificial intelligence. The success of such applications is better defined by its ability to include patients and users with different requirements and abilities.In this study we look into the development process of nuhealthsoft, an A.I infused medical application, that uses blood analysis and dieatary variables and other health data for the identification of health states and risk factors, such us metabolic syndrome and high blood pressure. The main characteristics of the application will be outlined through the R.U.P methodology. The microservices architecture and the patients’ needs and requirements are the key issues to be addressed in this paper, through the aforementioned methodology and are the forefront, all through the development cycle.","","978-1-6654-6495-6","10.1109/SITIS57111.2022.00065","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10090001","Biomarkers;nutritional biomarkers;microservices;rational unified process;user experience;explainable A.I","Microservice architectures;Production;Medical services;Reliability engineering;Software reliability;Stakeholders;Task analysis","","7","","31","IEEE","10 Apr 2023","","","IEEE","IEEE Conferences"
"Development of Energy Management System Based on a Digital Platform","F. Nepsha; N. Shubin; A. Andrievsky; A. Golovin","INTELAB, LLC, Moscow, Russia; INTELAB, LLC, Moscow, Russia; INTELAB, LLC, Moscow, Russia; INTELAB, LLC, Moscow, Russia",2021 Ural-Siberian Smart Energy Conference (USSEC),"31 Dec 2021","2021","","","120","124","Intelligent control systems are required to ensure the effective functioning of power grids with a large share of distributed energy resources (DERs). The goal of such systems is to integrate local energy management systems (EMSs) with external control systems such as a distributed energy resources management system (DERMS) to ensure the optimal operation of the power distribution network. To solve this problem, one of the possible approaches is the use of digital platforms. Its purpose is to provide a toolkit to reduce time-to-market for EMS. The paper discusses the digital platform architecture that allows creating an EMS at a minimal cost. The process of deployment of the control system based on a digital platform is considered in detail. To test the building energy management system (BEMS) based on the platform, the testbed was created, the architecture of which is considered and illustrated the effectiveness of the platform approach. The proposed solution allows reducing the cost and time-to-market for applied control systems and ensuring correct integration with external control systems such as DERMS.","","978-1-6654-3316-7","10.1109/USSEC53120.2021.9655765","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9655765","distributed energy systems;digital platform;building;energy management system;Cloud","Costs;Software architecture;Architecture;Software algorithms;Computer architecture;Control systems;Distributed power generation","","1","","10","IEEE","31 Dec 2021","","","IEEE","IEEE Conferences"
"A VNF-as-a-service design through micro-services disassembling the IMS","A. Boubendir; E. Bertin; N. Simoni","Convergent Network Control Architectures Department, Orange Labs, Chatillon, France; Unified Communications and Advanced Services Department, Orange Labs, Caen, France; Networking and Computer Science Department, Télécom ParisTech, Paris, France","2017 20th Conference on Innovations in Clouds, Internet and Networks (ICIN)","17 Apr 2017","2017","","","203","210","With the evolution of Telco systems towards 5G, new requirements emerge for delivering services. Network services are expected to be designed to allow greater flexibility. In order to cope with the new users' requirements, Telcos should rethink their complex and monolithic network architectures into more agile architectures. Adoption of NFV as well as micro-services patterns are opportunities promising such an evolution. However, to gain in flexibility, it is crucial to satisfy structural requirements for the design of VNFs as services. We present in this paper an approach for designing VNF-asa-Service. With this approach, we define design requirements for the service architecture and the service logic of VNFs. As Telcos have adopted IMS as the de facto platform for service delivery in 3G and even 4G systems, it is interesting to study its evolution for 5G towards a microservices-based architecture with an optimal design. Therefore, we consider IMS as a case of study to illustrate the proposed approach. We present new functional entities for IMS-as-a-Service through a functional decomposition of legacy network functions. We have developed and implemented IMS-as-a-Service with respect to the proposed requirements. We consider a service scenario where we focus on authentication and authorization procedures. We evaluate the involved microservices comparing to the state-of-the-art. Finally, we discuss our results and highlight the advantages of our approach.","2472-8144","978-1-5090-3672-1","10.1109/ICIN.2017.7899412","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7899412","NFV;Micro-Services;as-a-Service design;IMS;Functional Decomposition;Service Functional Components","Computer architecture;Authentication;Cloud computing;Virtualization;Authorization;Unified modeling language;Scalability","","9","","23","IEEE","17 Apr 2017","","","IEEE","IEEE Conferences"
"Development of a new server-to-server communication security approach","G. Leopizzi; A. Romanovs","Information Technology Institute, Riga Technical University, Riga, Latvia; Information Technology Institute, Riga Technical University, Riga, Latvia","2024 IEEE 11th Workshop on Advances in Information, Electronic and Electrical Engineering (AIEEE)","10 Jul 2024","2024","","","1","6","A crucial part of more prominent software architecture is communication among server hosts. Whether communicating with a database, a microservice, or an external service provider, integrity and confidentiality are essential guarantees that such a connection must provide. This paper aims to propose a new approach to secure the transport layer of such communications by creating a crafted protocol for this particular use case and by nullifying the need for extra measures and responsibilities that are now added at the application layer, as the analyzed state-of-the-art solutions disclose. As shown by the positive results of the already developed prototype, the authors believe this new approach can become a crucial and essential component in future server-to-server secure communications, considering how crucial secure data transmission is and will be.","2689-7342","979-8-3315-2776-1","10.1109/AIEEE62837.2024.10586625","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10586625","networking;TLS;integrity;confidentiality;server-to-server","Electrical engineering;Protocols;Software architecture;Databases;Conferences;Prototypes;Microservice architectures","","","","25","IEEE","10 Jul 2024","","","IEEE","IEEE Conferences"
"Synchronous Reconfiguration of Distributed Embedded Applications During Operation","K. Telschig; A. Knapp","Corporate Technology Siemens AG, Munich, Germany; Institute for Software and Systems Engineering, University of Augsburg, Germany",2019 IEEE International Conference on Software Architecture (ICSA),"2 May 2019","2019","","","121","130","Speed of adaptation to changing demand is a critical success factor in factory automation. The key to speed is to enable agile development by independent engineer offices and equipment producers with industrial-grade microservice architectures. The expensive drawback is: While software components evolve over time, manufacturers have to integrate and deploy more and more updates during costly production stops. To avoid production stops as much as possible, we propose reconfiguration extensions to a real-time container architecture proposed earlier. The original container approach addresses both the functional and nonfunctional aspects of integrating embedded software components in late engineering phases. The extended approach allows modifications of the running distributed embedded application even during operation, while continuously ensuring reactivity of the system. The agents running on each node prepare the reconfiguration in background and then synchronously perform the required modifications according to a detailed reconfiguration plan. We demonstrate our concept by describing a synchronous API change between two distributed software components of a running gesture recognition system. An evaluation shows the feasibility of the concepts, but also calls for further research.","","978-1-7281-0528-4","10.1109/ICSA.2019.00021","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8703907","","Containers;Real-time systems;Computer architecture;Software;Logic gates;Gesture recognition;Ethernet","","2","","19","IEEE","2 May 2019","","","IEEE","IEEE Conferences"
"Hierarchical Scaling of Microservices in Kubernetes","F. Rossi; V. Cardellini; F. L. Presti","DICII, University of Rome Tor Vergata, Italy; DICII, University of Rome Tor Vergata, Italy; DICII, University of Rome Tor Vergata, Italy",2020 IEEE International Conference on Autonomic Computing and Self-Organizing Systems (ACSOS),"15 Sep 2020","2020","","","28","37","In the last years, we have seen the increasing adoption of the microservice architectural style where applications satisfy user requests by invoking a set of independently deployable services. Software containers and orchestration tools, such as Kubernetes, have simplified the development and management of microservices. To manage containers' horizontal elasticity, Kubernetes uses a decentralized threshold-based policy that requires to set thresholds on system-oriented metrics (i.e., CPU utilization). This might not be well-suited to scale latency-sensitive applications, which need to express requirements in terms of response time. Moreover, being a fully decentralized solution, it may lead to frequent and uncoordinated application reconfigurations. In this paper, we present me-kube (Multi-level Elastic Kubernetes), a Kubernetes extension that introduces a hierarchical architecture for controlling the elasticity of microservice-based applications. At higher level, a centralized per-application component coordinates the run-time adaptation of subordinated distributed components, which, in turn, locally control the adaptation of each microservice. Then, we propose novel proactive and reactive hierarchical control policies, based on queuing theory. To show that me-kube provides general mechanisms, we also integrate reinforcement learning-based scaling policies. Using me-kube, we perform a large set of experiments, aimed to show the advantages of a hierarchical control over the default Kubernetes autoscaler.","","978-1-7281-7277-4","10.1109/ACSOS49614.2020.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9196461","Container;Elasticity;Hierarchical control;Kubernetes;Microservices;Self-adaptation","Elasticity;Containers;Scalability;Time factors;Monitoring;Queueing analysis;Tools","","31","","22","IEEE","15 Sep 2020","","","IEEE","IEEE Conferences"
"Characterization of Microservice Response Time in Kubernetes: A Mixture Density Network Approach","L. Manca; D. Borsatti; F. Poltronieri; M. Zaccarini; D. Scotece; G. Davoli; L. Foschini; G. Y. Grabarnik; L. Shwartz; C. Stefanelli; M. Tortonesi; W. Cerroni","University of Bologna, Bologna, Italy; University of Bologna, Bologna, Italy; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy; University of Bologna, Bologna, Italy; University of Bologna, Bologna, Italy; University of Bologna, Bologna, Italy; Department of Mathematics and Computer Science, St. John's University, Queens, NY, USA; Operational Innovation, IBM TJ Watson Research Center, NY, USA; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy; University of Bologna, Bologna, Italy",2023 19th International Conference on Network and Service Management (CNSM),"28 Nov 2023","2023","","","1","9","The use of microservice-based applications is becoming more prominent also in the telecommunication field. The current 5G core network, for instance, is already built around the concept of a “Service Based Architecture”, and it is foreseeable that 6G will push even further this concept to enable more flexible and pervasive deployments. However, the increasing complexity of future networks calls for sophisticated platforms that could help network providers with their deployments design. In this framework, a central research trend is the development of digital twins of the physical infrastructures. These digital representations should closely mimic the behavior of the managed system, allowing the operators to test new configurations, analyze what-if scenarios, or train their reinforcement learning algorithms in safe environments. Considering that Kubernetes is becoming the de-facto standard platform for container orchestration and microservice-based application lifecycle management, the implementation of a Kubernetes digital twin requires an accurate characterization of the microservice response time, possibly leveraging suitable Machine Learning techniques trained with measurement data collected in the field. In this paper we introduce a new methodology, based on Mixture Density Networks, to accurately estimate the statistical distribution of the response time of microservice-based applications. We show the improvement in performance with respect to simulation-based inference procedures proposed in literature.","2165-963X","978-3-903176-59-1","10.23919/CNSM59352.2023.10327842","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10327842","Service Management and Orchestration;Kubernetes;Simulation;Optimization;Digital twins","Runtime;Microservice architectures;Statistical distributions;Training data;Time measurement;Digital twins;Behavioral sciences","","5","","23","","28 Nov 2023","","","IEEE","IEEE Conferences"
"Assessing Security Risks of Software Supply Chains Using Software Bill of Materials","E. O'Donoghue; A. M. Reinhold; C. Izurieta","Gianforte School of Computing Montana State University, Bozeman, USA; Gianforte School of Computing Montana State University, Bozeman, USA; Gianforte School of Computing Montana State University Pacific Northwest National Laboratory Idaho National Laboratory, Bozeman, USA","2024 IEEE International Conference on Software Analysis, Evolution and Reengineering - Companion (SANER-C)","15 Aug 2024","2024","","","134","140","The software supply chain is composed of a growing number of components including binaries, libraries, tools, and microservices necessary to meet the requirements of modern software. Products assembled by software vendors are usually comprised of open-source and commercial components. Software supply chain attacks are one of the largest growing categories of cybersecurity threats and the large number of dependencies of a vendor's product makes it possible for a single vulnerability to propagate to many vendor products. Additionally, the software supply chain offers a large attack surface that allows vulnerabilities in upstream transitive dependencies to affect the core software. Software Bill Of Materials (SBOM) is an emerging technology that can be used in tandem with analysis tools to detect and mitigate security vulnerabilities in software supply chains. In this research, we use open-source tools Trivy and Grype to assess the security of 1,151 SBOMs mined from third-party software repositories of various domains and sizes. We explore the distribution of software vulnerabilities across SBOMs and look for the most vulnerable software components. We conclude that this research demonstrates the threat of security via software supply chain vulnerabilities as well as the viability of using SBOMs to help assess security in the software supply chain.","","979-8-3503-5157-6","10.1109/SANER-C62648.2024.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10621686","Software Supply Chain Security;Software Bill of Materials;Mining Software Repositories;Third Party Code","Supply chains;Bills of materials;Microservice architectures;Focusing;Static analysis;Software;Libraries","","4","","25","IEEE","15 Aug 2024","","","IEEE","IEEE Conferences"
"Ontology Driven High Performance Messaging System for Distributed Software Platforms","D. Delinschi; R. Erdei; O. Matei","R&D Department, HOLISUN SRL, Baia Mare, Romania; R&D Department, HOLISUN SRL, Baia Mare, Romania; Technical University of Cluj Napoca, North University Centre of Baia Mare, Baia Mare, Romania","2022 IEEE International Conference on Automation, Quality and Testing, Robotics (AQTR)","23 Jun 2022","2022","","","1","6","Async Messaging Systems tend to be ubiquitous nowadays. Their major drawback, however, lays in the limited usability with classic REST API’s, that cannot be easily integrated inside such a platform, but are readily available in all major programming languages. This article proposes an alternate approach, which is the design of an Ontology Driven Service Orchestration Layer, using Asynchronous POST HTTP calls, resulting in a complete, secure and fast messaging system. The system is based on a streamlined ontology, that is both flexible and lightweight, resulting in a simplified and improved architecture. This approach was successfully validated and can be used within any Service based system, without the need to switch languages, or to use third-party software components for any of the Services.","","978-1-6654-7933-2","10.1109/AQTR55203.2022.9802033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9802033","Async Communication;Distributed Software Platform;Message Based Communication;Microservice Architecture;Microservice Orchestration;Ontology;REST API","Computer architecture;Switches;Ontologies;Software;Stability analysis;Usability;Standards","","2","","28","IEEE","23 Jun 2022","","","IEEE","IEEE Conferences"
"Specification and design of an industrial manufacturing middleware","F. Gosewehr; J. Wermann; W. Borsych; A. W. Colombo","Department of Technology, University of Applied Sciences Emden/Leer, Germany; Department of Technology, University of Applied Sciences Emden/Leer, Germany; Department of Technology, University of Applied Sciences Emden/Leer, Germany; Department of Technology, University of Applied Sciences Emden/Leer, Germany",2017 IEEE 15th International Conference on Industrial Informatics (INDIN),"13 Nov 2017","2017","","","1160","1166","The European innovation project PERFoRM (Production harmonizEd Reconfiguration of Flexible Robots and Machinery) is aiming for a harmonized integration of research results in the area of flexible and reconfigurable manufacturing systems. Based on the cyber-physical system (CPS) paradigm, existing technologies and concepts are researched and integrated in an architecture which is enabling the application of these new technologies in real industrial environments. To implement such a flexible cyber-physical system, one of the core requirements for each involved component is a harmonized communication, which enables the capability to collaborate with each other in an intelligent way. But especially when integrating multiple already existing production components into such a cyber-physical system, one of the major issues is to deal with the various communication protocols and data representations coming with each individual cyber-physical component. To tackle this issue, the solution foreseen within PERFoRM's architecture is to use an integration platform, the PERFoRM Industrial Manufacturing Middleware, to enable all connected components to interact with each other through the Middleware and without having to implement new interfaces for each. This paper describes the basic requirements of such a Middleware and how it fits into the PERFoRM architecture and gives an overview about the internal design and functionality.","2378-363X","978-1-5386-0837-1","10.1109/INDIN.2017.8104937","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8104937","Middleware;Enterprise Service Bus;cyber-physical systems","Middleware;Computer architecture;Production;Cyber-physical systems;Tools","","11","","10","IEEE","13 Nov 2017","","","IEEE","IEEE Conferences"
"IoT Platform for Precision Positioning Service for Highly Autonomous Vehicles","S. K. Datta; J. Härri; C. Bonnet","EURECOM, Sophia Antipolis, France; EURECOM, Sophia Antipolis, France; EURECOM, Sophia Antipolis, France",2018 22nd International Computer Science and Engineering Conference (ICSEC),"13 May 2019","2018","","","1","6","This paper describes an IoT Platform for precision positioning service for highly autonomous driving (HAD). The platform fuses IoT with cooperative ITS technologies, protocols, and algorithms to achieve highly precise localization for future autonomous vehicles. The paper also offers an insight about the IoT Platform architecture, its functional components, prototype implementation, and best-practice guidelines.","","978-1-5386-8164-0","10.1109/ICSEC.2018.8712617","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8712617","IoT;Highly Autonomous Driving;Positioning Service;WoT","Cloud computing;Web services;Stakeholders;Automobiles;Data visualization;Computer architecture;Global navigation satellite system","","2","","6","IEEE","13 May 2019","","","IEEE","IEEE Conferences"
"A Secure Microservice Framework for IoT","D. Lu; D. Huang; A. Walenstein; D. Medhi","Arizona State University, Tempe, Arizona; Arizona State University, Tempe, Arizona; Center for High Assurance, Computing Excellence, BlackBerry; University of Missouri-Kansas City, Kansas City, Missouri",2017 IEEE Symposium on Service-Oriented System Engineering (SOSE),"8 Jun 2017","2017","","","9","18","The Internet of Things (IoT) has connected an incredible diversity of devices in novel ways, which has enabled exciting new services and opportunities. Unfortunately, IoT systems also present several important challenges to developers. This paper proposes a vision for how we may build IoT systems in the future by reconceiving IoT's fundamental unit of construction not as a ""thing"", but rather as a widely and finely distributed ""microservice"" already familiar to web service engineering circles. Since IoT systems are quite different from more established uses of microservice architectures, success of the approach depends on adaptations that enable them to met the key challenges that IoT systems present. We argue that a microservice approach to building IoT systems can combine in a mutually enforcing way with patterns for microservices, API gateways, distribution of services, uniform service discovery, containers, and access control. The approach is illustrated using two case studies of IoT systems in personal health management and connected autonomous vehicles. Our hope is that the vision of a microservices approach will help focus research that can fill in current gaps preventing more effective, interoperable, and secure IoT services and solutions in a wide variety of contexts.","","978-1-5090-6320-8","10.1109/SOSE.2017.27","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7943286","","Cloud computing;Access control;Containers;Medical services","","50","1","38","IEEE","8 Jun 2017","","","IEEE","IEEE Conferences"
"Linked Data Architecture for Plan Execution in Distributed CPS","A. Berezovskyi; J. El-khoury; E. Fersman","Machine Design Dept., ITM KTH Royal Institute of Technology, Stockholm, Sweden; Machine Design Dept., ITM KTH Royal Institute of Technology, Stockholm, Sweden; Machine Design Dept., ITM KTH Royal Institute of Technology, Stockholm, Sweden",2019 IEEE International Conference on Industrial Technology (ICIT),"8 Jul 2019","2019","","","1393","1399","Future cyber-physical systems (CPS) require their components to perform autonomously. To do that safely and efficiently, CPS components will need access to the global state of the whole CPS. These components will require near real-time updates to a subset of the global state to react to changes in the environment. A particular challenge is to monitor state updates from the distributed CPS components: one needs to ensure that only states consistent with the PDDL plan execution semantics can be observed within the system. In order to guarantee that, a component to monitor plan execution is proposed. Microservices based on Linked Data technologies are used to provide a uniform way to access component states, represented as Resource Description Framework (RDF) resources. To ensure the correct ordering of state updates, we present an extension of the OASIS OSLC TRS protocol. Specifically, we strengthen the ordering guarantees of state change events and introduce inlining of the state with the events to prevent state mismatch at the dereferencing stage.","2643-2978","978-1-5386-6376-9","10.1109/ICIT.2019.8755245","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8755245","Linked Data architecture;Cyber-Physical Systems;Planning Domain and Definition Language;Linked Data Platform;Open Services for Lifecycle Collaboration;messaging systems;message queues;REST;MQTT","Linked data;Robots;Planning;Semantics;Protocols;Belts","","1","","31","IEEE","8 Jul 2019","","","IEEE","IEEE Conferences"
"Weighing the Evidence: On Relationship Types in Microservice Extraction","L. J. Kirby; E. Boerstra; Z. J. C. Anderson; J. Rubin","Univ. of British Columbia, Vancouver, Canada; Univ. of British Columbia, Vancouver, Canada; Univ. of British Columbia, Vancouver, Canada; Univ. of British Columbia, Vancouver, Canada",2021 IEEE/ACM 29th International Conference on Program Comprehension (ICPC),"28 Jun 2021","2021","","","358","368","The microservice-based architecture - a SOA-inspired principle of dividing systems into components that communicate with each other using language-agnostic APIs - has gained increased popularity in industry. Yet, migrating a monolithic application to microservices is a challenging task. A number of automated microservice extraction techniques have been proposed to help developers with the migration complexity. These techniques, at large, construct a graph-based representation of an application and cluster its elements into service candidates. The techniques vary by their decomposition goals and, subsequently, types of relationships between application elements that they consider - structural, semantic term similarity, and evolutionary - with each technique utilizing a fixed subset and weighting of these relationship types.In this paper, we perform a multi-method exploratory study with 10 industrial practitioners to investigate (1) the applicability and usefulness of different relationships types during the microservice extraction process and (2) expectations practitioners have for tools utilizing such relationships. Our results show that practitioners often need a ""what-if"" analysis tool that simultaneously considers multiple relationship types during the extraction process and that there is no fixed way to weight these relationships. Our study also identifies organization- and application-specific considerations that lead practitioners to prefer certain relationship types over others, e.g., the age of the codebase and languages spoken in the organization. It outlines possible strategies to help developers during the extraction process, e.g., the ability to iteratively filter and customize relationships.","2643-7171","978-1-6654-1403-6","10.1109/ICPC52881.2021.00041","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9463006","microservices;decomposition;extraction;migration;architectural refactoring","Industries;Computer languages;Semantics;Organizations;Tools;Complexity theory;Task analysis","","11","","47","IEEE","28 Jun 2021","","","IEEE","IEEE Conferences"
"Forecasting Models for Self-Adaptive Cloud Applications: A Comparative Study","V. Podolskiy; A. Jindal; M. Gerndt; Y. Oleynik","Department of Computer Architecture and Parallel Systems, Technical University of Munich, Garching, Munich, Germany; Department of Computer Architecture and Parallel Systems, Technical University of Munich, Garching, Munich, Germany; Department of Computer Architecture and Parallel Systems, Technical University of Munich, Garching, Munich, Germany; Instana GmbH, San Mateo, CA",2018 IEEE 12th International Conference on Self-Adaptive and Self-Organizing Systems (SASO),"17 Jan 2019","2018","","","40","49","With the introduction of autoscaling, clouds have strengthened their position as self-adaptive systems. Nevertheless, the reactive nature of the existing autoscaling solutions provided by major Infrastructure-as-a-Service (IaaS) cloud services providers (CSP) heavily limits the ability of cloud applications for self-adaptation. The major reason of such limitations is the necessity for the manual configuration of the autoscaling rules. With the evolution of monitoring systems, it became possible to employ the data-driven approaches to derive the parameters of scaling rules in order to enable the autoscaling in advance, i.e. the predictive autoscaling. The change in the amount of requests to microservices could be considered as a reason to adapt the virtual infrastructure underlying the cloud application. By forecasting the amount of requests to cloud application, it is possible to estimate the upcoming demand to replicate the microservices in advance. Hence, anticipation of the demand on the cloud application helps to evolve its self-adaptive properties. In the scope of the paper, the authors have tested various extrapolation models on the real anonymized requests time series data for 261 microservices provided by the industry partner Instana. The tested models are: various seasonal ARIMA models with GARCH modifications and outliers detection, exponential smoothing models, singular spectrum analysis (SSA), support vector regression (SVR), and simple linear regression. In order to evaluate the accuracy of these models, an interval score was used. The time required to fit and use each model was also evaluated. Comparative results of this research and the classification of forecasting models based on the interval accuracy score and model fitting time are provided in the paper. The study provides an approach to evaluate the quality of forecasting models to be used for self-adapting cloud applications and virtual infrastructure.","1949-3681","978-1-5386-5172-8","10.1109/SASO.2018.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8614278","requests forecasting;self-adaptive cloud;microservice;seasonal ARIMA;GARCH;SSA;SVR","Forecasting;Time series analysis;Predictive models;Cloud computing;Mathematical model;Computational modeling;Smoothing methods","","8","","25","IEEE","17 Jan 2019","","","IEEE","IEEE Conferences"
"Research on a Universal and Scalable Simulation Software Integration Framework","Z. Tang; H. Tian; P. Wang","Aero-Engine Academy of China, Beijing, China; Aero-Engine Academy of China, Beijing, China; Aero-Engine Academy of China, Beijing, China",2023 IEEE 3rd International Conference on Computer Systems (ICCS),"6 Dec 2023","2023","","","43","50","Numerical simulation has a wide range of applications in various fields. In order to meet the advanced, efficient, comprehensive, and integrated engineering application requirements of industrial users for numerical simulation calculations, a universal and scalable simulation software integration framework has been designed, which can quickly integrate various capabilities of commercial and self-developed simulation software into components, allowing industrial users to freely combine and construct various simulation processes. The workflow engine efficiently schedules high-performance computing resources and automates various workflow tasks. Finally, an example of Fluid–structure interaction simulation calculation is completed to verify the framework’s ability of process construction, resource scheduling and automatic execution. By comparing the time consumption of the simulation process with the user’s spontaneous completion, it is proved that the framework can solidify the process and provide a stable and efficient scientific computing environment.","","979-8-3503-1366-6","10.1109/ICCS59700.2023.10335550","National Science and Technology Major Project; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10335550","integrated framework;numerical simulation;workflow;microservice","Schedules;Job shop scheduling;Scientific computing;Processor scheduling;High performance computing;Microservice architectures;Numerical simulation","","","","12","IEEE","6 Dec 2023","","","IEEE","IEEE Conferences"
"Towards a Unified Description Language for Simulations in Cloud Environments","N. Weiss; T. Preisler; W. Renz","Faculty of Engineering and Computer Science, Hamburg University of Applied Sciences, Hamburg, Germany; Faculty of Engineering and Computer Science, Hamburg University of Applied Sciences, Hamburg, Germany; Faculty of Engineering and Computer Science, Hamburg University of Applied Sciences, Hamburg, Germany",2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion),"10 Jan 2019","2018","","","341","348","In recent years, cloud infrastructures evolved into a flexible technology for computationally intense simulations. Container-based clouds provide scalability to scientists who develop large-scale distributed simulations, particularly when developed in microservice architecture. Automating configuration and deployment of such distributed simulations on container as a service (CaaS) platforms is a challenge that we approach in this paper. We will present a novel concept for a descriptive language, that allows for convenient execution and management of distributed simulations on cloud infrastructures using heterogeneous models run on CaaS platforms, supplemented by a software framework to implement functionality. This language will allow for reproducible simulation results and a reduction of necessary configuration for structural layers by providing an interface towards the simulation system. The configuration, deployment, conduction, roll-back and result collection of the simulation will be handled by the framework provided for this domain specific language (DSL).","","978-1-7281-0359-4","10.1109/UCC-Companion.2018.00078","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8605802","SIMaaS;CaaS;Cloud;Cloud computing;Simulation;cyber physical systems;distributed systems;microservice","Cloud computing;Containers;DSL;Computational modeling;Software;Tools;Computer architecture","","","","20","IEEE","10 Jan 2019","","","IEEE","IEEE Conferences"
"Performance Evaluation of Next-Generation Data Plane Architectures and their Components","S. Geißler; T. Hoßfeld","Chair of Communication Networks, University of Würzburg, Würzburg, Germany; Chair of Communication Networks, University of Würzburg, Würzburg, Germany",NOMS 2023-2023 IEEE/IFIP Network Operations and Management Symposium,"21 Jun 2023","2023","","","1","6","Modern services like video conferencing, video streaming or cloud gaming, but also technologies like the Internet of Things, are all relying on the availability of reliable, high speed network connectivity. The resulting requirements imposed on the underlying network infrastructure are highly complex, leading to the emergence of network softwarization with its instances Software-Defined Networking (SDN) and Network Function Virtualization (NFV). In this work, we develop mechanisms to assess the performance of software-based network components and architectures by means of measurements, simulation and numerical analysis. We develop tools and concepts to monitor, evaluate and optimize the performance of both single network components and complex interconnected systems.","2374-9709","978-1-6654-7716-1","10.1109/NOMS56928.2023.10154434","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10154434","","Performance evaluation;Analytical models;TV;Systems modeling;Streaming media;Network function virtualization;Software defined networking","","","","13","IEEE","21 Jun 2023","","","IEEE","IEEE Conferences"
"Preventing vendor lock-ins via an interoperable multi-cloud deployment approach","R. Pellegrini; P. Rottmann; G. Strieder","University of Applied Sciences, Eisenstadt; University of Applied Sciences, Eisenstadt; University of Applied Sciences, Eisenstadt",2017 12th International Conference for Internet Technology and Secured Transactions (ICITST),"10 May 2018","2017","","","382","387","A vendor lock-in makes customers dependent of a propriety product, service or technology provided by a vendor. In terms of cloud services, it is achieved by providing and developing services that are platform-dependent with proprietary technologies, interfaces or formats. This can be a huge barrier to adopt cloud services because customers are tied to specific vendors which prevent portability through proprietary or a limited set of interfaces. As consequence, customers are hindered to alternate venders easily without substantial migration costs. A multi-cloud strategy is one possible way to avoid vendor lock-ins. The scope of the is paper is to design and implement a solution-stack to provide web services which operate independent from proprietary cloud service provider technologies. We provide a solution stack prototype which will support key functionalities such as portability, interoperability and platform-independency by implementing modern technologies and standards.","","978-1-908320-93-3","10.23919/ICITST.2017.8356428","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8356428","Cloud Computing;Multi-cloud;Vendor lock-in","Cloud computing;Computer architecture;Containers;Interoperability;Databases;Standards organizations","","8","","23","","10 May 2018","","","IEEE","IEEE Conferences"
"An Architecture for Social Robot-assisted Subjective and Objective Health Monitoring","C. Neef; S. Schneider; A. Richert","Cologne Cobots Lab, TH Köln-University of Applied Sciences, Cologne, Germany; Cologne Cobots Lab, TH Köln-University of Applied Sciences, Cologne, Germany; Cologne Cobots Lab, TH Köln-University of Applied Sciences, Cologne, Germany",2022 IEEE International Conference on Advanced Robotics and Its Social Impacts (ARSO),"27 Jun 2022","2022","","","1","6","The population of the world is growing older, while the shortage of required health care workers is growing increasingly severe. To combat this situation and support the independence and autonomy of older adults while reducing the burden of their caregivers, we propose a health monitoring system to assess and monitor subjective and objective health data. The system includes a conversational AI integrated into a social robot, various connected health devices, and a mobile and web app to visualize all acquired data. We formulated system requirements based on expert interviews with health care workers and literature findings. In this paper, we present the resulting system architecture integrating all health monitoring components using individual microservices, along with an app designed for our target group of older adults and their caregivers. Our goal with the proposed system is to support older adults in taking charge of their own health, thus promoting healthy and positive aging.","2162-7576","978-1-6654-7966-0","10.1109/ARSO54254.2022.9802961","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9802961","","Conferences;Sociology;Systems architecture;Microservice architectures;Data visualization;Medical services;Older adults","","4","","39","IEEE","27 Jun 2022","","","IEEE","IEEE Conferences"
"Data security issues in MaaS-enabling platforms","F. Callegati; S. Giallorenzo; A. Melis; M. Prandini","Universita di Bologna, Bologna, Emilia-Romagna, IT; Department of Computer Science and Engineering, Universitá di Bologna, Italy; Department of Electrical and Information Engineering, Universitá di Bologna, Italy; Department of Computer Science and Engineering, Universitá di Bologna, Italy",2016 IEEE 2nd International Forum on Research and Technologies for Society and Industry Leveraging a better tomorrow (RTSI),"14 Nov 2016","2016","","","1","5","Mobility as a Service takes the concept of XaaS to transportation: a MaaS provider shall merge transport options from different mobility providers, seamlessly handling the whole experience of traveling, from providing information, to travel planning, and payments handling. To effectively support the creation of a market of MaaS providers, we envision the creation of ICT infrastructures based on microservices, a modern and renowned development model that fosters the creation of an ecosystem of reusable components. The flexibility of such platforms is their key advantage, yet it poses many security issues. In this paper, we look at these problems through the lens of our experience on one of such platforms, called SMAll. We classify the most relevant vulnerabilities related to data reliability, integrity, and authenticity, and we investigate directions for their mitigation.","","978-1-5090-1131-5","10.1109/RTSI.2016.7740624","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7740624","MaaS;Microservices;Integrity;Authentication;Provenance;Reputation","Context;Industries;Planning;Authentication;Real-time systems;Computer architecture","","10","","29","IEEE","14 Nov 2016","","","IEEE","IEEE Conferences"
"Root-Cause Metric Location for Microservice Systems via Log Anomaly Detection","L. Wang; N. Zhao; J. Chen; P. Li; W. Zhang; K. Sui","College of Intelligence and Computing, Tianjin University; Tsinghua University; College of Intelligence and Computing, Tianjin University; Tsinghua University; BizSeer; BizSeer",2020 IEEE International Conference on Web Services (ICWS),"22 Dec 2020","2020","","","142","150","Microservice systems are typically fragile and failures are inevitable in them due to their complexity and large scale. However, it is challenging to localize the root-cause metric due to its complicated dependencies and the huge number of various metrics. Existing methods are based on either correlation between metrics or correlation between metrics and failures. All of them ignore the key data source in microservice, i.e., logs. In this paper, we propose a novel root-cause metric localization approach by incorporating log anomaly detection. Our approach is based on a key observation, the value of root-cause metric should be changed along with the change of the log anomaly score of the system caused by the failure. Specifically, our approach includes two components, collecting anomaly scores by log anomaly detection algorithm and identifying root-cause metric by robust correlation analysis with data augmentation. Experiments on an open-source benchmark microservice system have demonstrated our approach can identify root-cause metrics more accurately than existing methods and only require a short localization time. Therefore, our approach can assist engineers to save much effort in diagnosing and mitigating failures as soon as possible.","","978-1-7281-8786-0","10.1109/ICWS49710.2020.00026","National Natural Science Foundation of China(grant numbers:61872263,U1836214,61802275,71502125); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9283922","","Measurement;Correlation;Web services;Benchmark testing;Time factors;Task analysis;Anomaly detection","","43","","29","IEEE","22 Dec 2020","","","IEEE","IEEE Conferences"
"Service Orchestration for Integrating Edge Computing and 5G Network: State of the Art and Challenges","Y. Guo; Q. Duan; S. Wang","State Key Lab of Networking and Switching Technology, Beijing University of Posts and Telecommunications; State Key Lab of Networking and Switching Technology, Beijing University of Posts and Telecommunications; Information Sciences & Technology Department, Pennsylvania State University",2020 IEEE World Congress on Services (SERVICES),"21 Dec 2020","2020","","","55","60","Edge computing as a highly distributed multi-tenant computing system relies on its effective interactions with the underlying 5G network to achieve its advantages in service provisioning. On the other hand, edge computing is also transforming 5G network via deploying more computing capabilities at network edge. In this paper, we advocate a holistic vision of service orchestration to facilitate integration of edge computing and 5G network. We attempt to sketch a big picture of the state of the art research enabling the integrated network-edge service architecture. We also discuss technical challenges and identify opportunities for future research in this area.","2642-939X","978-1-7281-8203-2","10.1109/SERVICES48979.2020.00026","National Key R&D Program of China(grant numbers:2018YFE0205503); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284190","Service orchestration;edge computing;5G networks;Service-Based Architecture (SBA);network function virtualization (NFV)","Cloud computing;5G mobile communication;Computational modeling;Computer architecture;Virtualization;Edge computing","","6","","23","IEEE","21 Dec 2020","","","IEEE","IEEE Conferences"
"An Architecture of a Web Application for Deploying Machine Learning Models in Healthcare Domain","M. -E. -O. Ursan; C. D. Căleanu; M. Bucos","Communications Department, Politehnica University Timişoara, Timişoara, România; Applied Electronics Department, Politehnica University Timişoara, Timişoara, România; Communications Department, Politehnica University Timişoara, Timişoara, România",2024 International Symposium on Electronics and Telecommunications (ISETC),"20 Dec 2024","2024","","","1","6","An important gap exists between advanced Deep Learning (DL) models developed for medical imaging and their insitu implementation in clinical environments. Our research proposes a scalable software architecture for a web-based computer-aided diagnosis (CAD) application that bridges the gap between research and production. The main goals are: (1) creating an intuitive interface for non-technical users and, (2) designating a feedback mechanism to enhance the Machine Learning (ML) models with medical expertise. The architecture assumes a microservices approach, containerization, and current web technologies to enable seamless deployment and user-friendliness. Key components include ONNX-based model conversion for cross- platform compatibility, asynchronous processing based on FastAPI, and a modular data handling system using PostgreSQL. Our proof-of-concept (PoC) shows the system's feasibility by deploying it on the Google Cloud Platform (GCP) and getting initial feedback from clinicians. Early findings indicate potential improvements in model usability and stakeholder engagement. Future actions will involve implementing continuous integration and delivery pipelines to improve system resilience and scalability.","2475-7861","979-8-3503-9086-5","10.1109/ISETC63109.2024.10797433","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10797433","Machine Learning Operations (MLOps);ML deployment;microservices;medical imaging;AI;Computer Aided Diagnosis (CAD) System;containerization;data modeling","Solid modeling;Analytical models;Software architecture;Computational modeling;Pipelines;Data models;Stakeholders;Usability;Standards;Monitoring","","","","12","IEEE","20 Dec 2024","","","IEEE","IEEE Conferences"
"Architecture of an interoperable IoT platform based on microservices","T. Vresk; I. Čavrak","Koncar elektronika i informatika, Zagreb, Croatia; Faculty of Electrical Engineering and Computing, University of Zagreb, Zagreb, Croatia","2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)","28 Jul 2016","2016","","","1196","1201","The vision of the Internet of Things enabled the development of a wide spectrum of services, applications and ecosystems, deemed infeasible not long ago. However, lack of standardization poses a number of questions still requiring proper addressing. Due to the need of supporting large number of users and significant data processing throughput, Internet of Things requires a specific approach towards the problem of providing sufficient scalability and performance, clearly pointing towards the distribution of effort among a large number of small and specialized services. Reflecting on the importance of coexistence of heterogeneous systems supporting the Internet of Things, this paper presents an overview of the specific problems inherent to the IoT and the proposal of an architecture of a microservice based middleware aimed at connecting heterogeneous IoT devices. The middleware functionality is achieved irrespective of the size and complexity of a given device network, both from the data model aspect and from the aspect of connecting existing and newly created middleware components.","","978-953-233-086-1","10.1109/MIPRO.2016.7522321","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7522321","","Internet of things;Data models;Protocols;Interoperability;Computer architecture;Standardization;Scalability","","49","","18","","28 Jul 2016","","","IEEE","IEEE Conferences"
"A Survey of Publish/Subscribe Middleware Systems for Microservice Communication","S. Kul; A. Sayar","Computer Engineering Kocaeli University, Kocaeli, Turkey; Computer Engineering Kocaeli University, Kocaeli, Turkey",2021 5th International Symposium on Multidisciplinary Studies and Innovative Technologies (ISMSIT),"19 Nov 2021","2021","","","781","785","In today's industrial and academic research area, the publish/subscribe (pub/sub) communication paradigm is gaining attention. Due to its capacity to decouple communication entities in time, space, and synchronization, it is a useful interaction mechanism for large-scale distributed systems. Rather than interacting directly with one another, services in the pub/sub pattern can communicate through a message broker. This approach separates the concerns of publishers and subscribers, allowing publishers to concentrate just on publishing and subscribers to concentrate solely on the publications to which they are subscribed. The resulting structure enables asynchronous message sending and receiving by a task-specific broker, which is one of the various approaches to construct event-based systems. Because of their unique qualities, including data-centricity, dynamicity, and many-to-many communications, the decoupling properties are well-suited for Microservices. Components of a monolithic application call each other using language-level method or function calls. A microservices-based application, on the other hand, is a distributed system that runs on numerous machines. Typically, each service instance is a process. There are numerous advantages to using the Microservices Architecture design. It begins by addressing the issue of complexity. It breaks down what would otherwise be a massive monolithic application into a series of services. While the overall functionality of the application has not changed, it has been divided into digestible parts or services. A significant disadvantage of microservices is the increased complexity that comes with being a distributed system. Developers must choose and implement a messaging or Remote procedure call-based interprocess communication mechanism. As a result, services must communicate through the interprocess communication (IPC) method. The Pub/Sub communication model, a powerful interprocess communication technique has been utilized in several studies. We examine the Pub/Sub interaction paradigm in the context of Communication for Microservices in this study.","","978-1-6654-4930-4","10.1109/ISMSIT52890.2021.9604746","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9604746","Publish/Subscribe Middleware;Microservices;Apache Kafka;Interprocess Communication;Distributed Systems","Publishing;Receivers;Throughput;Real-time systems;Complexity theory;Synchronization;Task analysis","","8","","40","IEEE","19 Nov 2021","","","IEEE","IEEE Conferences"
"CSRaaS: Composite Service Rendezvous as a Service for IoT-Based Smart Environments","B. Gooder; R. Khan; P. -R. Adrian; K. Sossoe","Northern Kentucky University, KY, USA; Northern Kentucky University, KY, USA; Babes Bolyai University, Cluj-Napoca, Romania; Northern Kentucky University, KY, USA",2021 IEEE 11th Annual Computing and Communication Workshop and Conference (CCWC),"17 Mar 2021","2021","","","0603","0609","Smart spaces incorporate a multitude of smart Internet-of-Things (IoT) objects to provide various services. Such devices immensely vary in their individual capabilities and are able to send/receive messages to coordinate among themselves to provide a non-intrusive smart experience for users. However, IoT-based services are limited to their individual features, which is induced due the lack of combinatorial capabilities for the IoT devices. As a result, smart spaces are restrained from the realization of a truly smart and connected world. In this paper, we propose the Composite Service Rendezvous as a Service (CSRaaS) middleware, which allows an immersive experience for users within a smart space. The CSRaaS component matches the service requests with the individual device capabilities, to create a new smart service by combining the features of multiple IoT devices. CSRaaS extends the notion of a conventional service matching scheme by coordinating the combination of published service capabilities to create new, unique, and on-demand service that best meets the user service request. We also present a prototype implementation which is used to perform experimental evaluation of the proposed scheme to justify the feasibility of CSRaaS in the real world.","","978-1-6654-1490-6","10.1109/CCWC51732.2021.9376162","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9376162","IoT;SoA;service composition;service rendezvous;smart space;microservice;dynamic composite service","Performance evaluation;Conferences;Prototypes;Immersive experience;Middleware;Smart spaces","","1","","28","IEEE","17 Mar 2021","","","IEEE","IEEE Conferences"
"Socially Assistive Robot’s Behaviors using Microservices","G. Ercolano; P. D. Lambiase; E. Leone; L. Raggioli; D. Trepiccione; S. Rossil","Department of Electrical Engineering and Information Technologies, Universitá degli Studi di Napoli Federico II, Napoli, Italy; Department of Electrical Engineering and Information Technologies, Universitá degli Studi di Napoli Federico II, Napoli, Italy; Department of Electrical Engineering and Information Technologies, Universitá degli Studi di Napoli Federico II, Napoli, Italy; Department of Electrical Engineering and Information Technologies, Universitá degli Studi di Napoli Federico II, Napoli, Italy; Department of Electrical Engineering and Information Technologies, Universitá degli Studi di Napoli Federico II, Napoli, Italy; Department of Electrical Engineering and Information Technologies, Universitá degli Studi di Napoli Federico II, Napoli, Italy",2019 28th IEEE International Conference on Robot and Human Interactive Communication (RO-MAN),"13 Jan 2020","2019","","","1","6","In this work, we introduce a set of robot's behavior aimed at being used for monitoring and interaction with elderly people affected by Alzheimer disease. Robot's behaviors for a low cost robotic device rely on the use of microservices running on a local server. A microservice is an independent, self-contained, self-scope, and self-responsibility component of the robotic system proposed for decoupling the implemented functions needed to obtain the proper robot behaviors. The developed robotic behaviors include navigation, interaction, and monitoring capabilities. The requests and the signals of the patients are handled and managed relying on event-based communications between the system components. The use of design patterns like this one increases the overall reliability of a service composition. The system is currently operating in a private house with an elderly couple.","1944-9437","978-1-7281-2622-7","10.1109/RO-MAN46459.2019.8956472","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8956472","","","","3","","19","IEEE","13 Jan 2020","","","IEEE","IEEE Conferences"
"Experience: Developing a Testbed for Ambient Sensing and in-Network Data Processing","A. Das; S. Chakraborty","Department of Computer Science and Engineering, Indian Institute of Information Technology, Guwahati, India; Department of Computer Science and Engineering, Indian Institute of Technology, Jodhpur, India",2022 14th International Conference on COMmunication Systems & NETworkS (COMSNETS),"13 Jan 2022","2022","","","691","699","With ubiquitous adaptation of IoT infrastructure, the smart applications these days are not confined within a single realm. Be it the boundary of a home environment or a city-scale infrastructure, multiple smart applications and associated services tend to serve the users by sharing a common sensing platform. Although the very purpose of this shared infrastructure motivates from the reduced installation and maintenance expenses, it offers a great deal in enabling faster cross-domain inference too. For instance, the same data reflecting room temperature and CO2 density can be taken into consideration by occupancy estimation service to feed the HVAC system, surveillance system as well as smart resource management system concurrently. Towards faster decision-making and automation it is imperative that the sensory data be pre-processed at the network edge. Now, the existing simulation platforms cannot account for the real-world dynamics affecting the performance of such edge-based sensing and data processing solutions for a shared IoT infrastructure. This work aims to document the practical lessons learnt while developing a testbed to evaluate the performance of such edge-based solutions to support ambient living. Along with the detailed description of system architecture, requirement analysis, design and development arrangement, we also provide a use case demonstration to unfold the inherent challenges and potential solution ideas to setup and conduct experiments on such a testbed environment.","2155-2509","978-1-6654-2104-1","10.1109/COMSNETS53615.2022.9668593","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9668593","Testbed;Ambient living;Smart infrastructure","Temperature sensors;Temperature distribution;Wearable computers;Surveillance;Zigbee;Systems architecture;Sensors","","","","15","IEEE","13 Jan 2022","","","IEEE","IEEE Conferences"
"Extending ETSI MEC Towards Stateful Application Relocation Based on Container Migration","F. Barbarulo; C. Puliafito; A. Virdis; E. Mingozzi","Department of Information Engineering, University of Pisa, Pisa, Italy; Department of Information Engineering, University of Pisa, Pisa, Italy; Department of Information Engineering, University of Pisa, Pisa, Italy; Department of Information Engineering, University of Pisa, Pisa, Italy","2022 IEEE 23rd International Symposium on a World of Wireless, Mobile and Multimedia Networks (WoWMoM)","9 Aug 2022","2022","","","367","376","Edge computing allows to run microservices in close proximity to end user devices. This proximity lets edge computing support emerging 5G application scenarios that need low latency and high bandwidth (e.g., augmented reality, autonomous vehicles). Given its interest, edge computing is fastly gaining momentum and is currently being standardised by the European Telecommunications Standards Institute (ETSI) as Multi-Access Edge Computing (MEC). Notwithstanding its strengths, edge computing is significantly challenged by device mobility, as this can reduce proximity to the edge microservice, putting edge computing benefits at risk. A way to solve this problem is to migrate the edge microservice across edge servers, to let it follow the application component running on the mobile device. Besides, if the microservice is stateful (i.e., it maintains a state associated to the user), its state needs to be migrated as well. Within ETSI MEC, this concept is expressed as stateful application relocation. The standard identifies three different high-level ways to transfer the application state. However, all of them assume that it is up to the application to actually relocate the state. In this work, we assume that applications at the edge run as containers, and we extend ETSI MEC to let it support stateful application relocation by leveraging container migration techniques. This approach allows to transfer the application state in a transparent way to the application itself. We implemented our solution and tested it over a small-scale edge computing testbed to extract initial results.","","978-1-6654-0876-9","10.1109/WoWMoM54355.2022.00035","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9842789","Edge computing;ETSI MEC;mobility;migration;QUIC","Wireless communication;Multi-access edge computing;ETSI;Microservice architectures;Containers;Mobile handsets;Servers","","9","","31","IEEE","9 Aug 2022","","","IEEE","IEEE Conferences"
"A Lightweight Container Design for Microservice-based Industrial Edge Applications","D. Yang; W. Dai","Departement of Automation, Shanghai Jiao Tong University, Shanghai, China; Departement of Automation, Shanghai Jiao Tong University, Shanghai, China",2022 IEEE 17th Conference on Industrial Electronics and Applications (ICIEA),"12 Jan 2023","2022","","","858","863","Industrial edge computing turns to run applications on containers for high flexibility and reusability. However, current application containers are not designed for industrial usage and are too heavy, leading to slow distribution speeds. This paper designs a series of rules to build a lightweight container and isolate hardware resources for industry IEC 61499 function blocks. The container works based on Kernel features and runs without unnecessary components for industry. Compared with current containers, such as Docker, this container is designed specifically to meet industrial requirements for real-time and reliable capability and takes up less space to enable industry users to remake and distribute functions more swiftly.","2158-2297","978-1-6654-0984-1","10.1109/ICIEA54703.2022.10006175","National Natural Science Foundation of China; National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10006175","edge computing;lightweight container;IEC 61499","Industries;Image edge detection;Microservice architectures;Containers;Reliability engineering;Real-time systems;Robustness","","4","","19","IEEE","12 Jan 2023","","","IEEE","IEEE Conferences"
"A Microservices-based IoT Monitoring System to Improve the Safety in Public Building","M. Mongiello; F. Nocera; A. Parchitelli; L. Riccardi; L. Avena; L. Patrono; I. Sergi; P. Rametta","Dipartimento di Ingegneria Elettrica e dell'Informazione, Politecnico di Bari, Bari, Italy; Dipartimento di Ingegneria Elettrica e dell'Informazione, Politecnico di Bari, Bari, Italy; Dipartimento di Ingegneria Elettrica e dell'Informazione, Politecnico di Bari, Bari, Italy; Dipartimento di Ingegneria Elettrica e dell'Informazione, Politecnico di Bari, Bari, Italy; Dipartimento di Ingegneria Elettrica e dell'Informazione, Politecnico di Bari, Bari, Italy; Dipartimento di Ingegneria dell'Innovazione, Università del Salento, Lecce, Italy; Dipartimento di Ingegneria dell'Innovazione, Università del Salento, Lecce, Italy; Dipartimento di Ingegneria dell'Innovazione, Università del Salento, Lecce, Italy",2018 3rd International Conference on Smart and Sustainable Technologies (SpliTech),"30 Aug 2018","2018","","","1","6","Safety of public buildings' users is an important issue, especially in buildings frequented by a great number of people. In such places, in case of an emergency, like a fire, rescue workers must intervene in a timely manner, directing their efforts towards places where there are people to be saved. This work presents an Internet of Things(IoT)-based framework, aiming at monitoring environmental parameters in order to support rescuers during emergencies. The microservices paradigm allows a pattern-based specification of system components that are refined and adapted on-the-fly depending on the specific execution context, based on the changing aspects such as, user's need and requirements, context variables, user's behavior, sensor data. First results related to the validation of the proposed system mainly concerning non-functional requirements of the implemented system through a proof-of-concept are reported and discussed.","","978-953-290-083-5","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8448334","","Buildings;Monitoring;Containers;Virtualization;Operating systems;Sensors;Hardware","","1","","20","","30 Aug 2018","","","IEEE","IEEE Conferences"
"Internet of Things Services Orchestration Framework Based on Kubernetes and Edge Computing","D. Ermolenko; C. Kilicheva; A. Muthanna; A. Khakimov","The Bonch-Bruevich State University of Telecommunication, St. Petersburg, Russian; The Bonch-Bruevich State University of Telecommunication, St. Petersburg, Russian; The Bonch-Bruevich State University of Telecommunication, St. Petersburg, Russian; Peoples’ Friendship University of Russia (RUDN University), Moscow, Russian",2021 IEEE Conference of Russian Young Researchers in Electrical and Electronic Engineering (ElConRus),"9 Apr 2021","2021","","","12","17","Presented work is fanalysis of how the microservices paradigm can be used to design and implement distributed edge services for Internet of Things (IoT) applications. Basically, IoT is a platform where integrated services are associated with the common network, thus all devices are able to gather and exchange data among each other. Typically, monolithic user mobility research services are developed for the unified ETSI MEC system reference architecture centers. ETSI MEC considers microservices as a tool for breaking monolithic applications into a set of loosely coupled distributed components. It is expected that this architecture will facilitate the dynamic adaptation during the application execution. However, increased modularity can also increase the burden on orchestration and system management. In MEC, user hardware is connected through gateways to microservices running on the edge host.There are three levels in each of the edge systems: 1) microservices perform a logical operation with components for motion track analysis, 2) movement foresight and 3) outcome visualization. The distributed service is realized with Docker containers and calculated on actual world adjustment with low capacity edge servers and real user mobility information. The results demonstrate the fact that the edge perspective of low latency may be encountered in this sort of implementation. The integration of a software creation technology with a standardized edge system supplies respectable basis for subsequent development. The paper considers the application of the boundary computing architecture and Kubernetes as an orchestration and management of network applications.","2376-6565","978-1-6654-0476-1","10.1109/ElConRus51938.2021.9396553","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9396553","Edge computing;Kubernetes;IoT;Clustering;Orchestration","Cloud computing;Tracking;Computer architecture;Internet of Things;Servers;Task analysis;Edge computing","","7","","19","IEEE","9 Apr 2021","","","IEEE","IEEE Conferences"
"Communication Infrastructure and Cloud Computing in Robotic Vessel as-a-Service Application","C. Delea; E. Coccolo; S. F. Covarrubias; F. Campagnaro; F. Favaro; R. Francescon; V. Schneider; J. Oeffner; M. Zorzi","Fraunhofer Center for Maritime Logistics and Service, Hamburg, Germany; Department of Information Engineering, University of Padova, Padova, Italy; Fraunhofer Center for Maritime Logistics and Service, Hamburg, Germany; Department of Information Engineering, University of Padova, Padova, Italy; Department of Information Engineering, University of Padova, Padova, Italy; Wireless and More srl, Padova, Italy; Fraunhofer Center for Maritime Logistics and Service, Hamburg, Germany; Fraunhofer Center for Maritime Logistics and Service, Hamburg, Germany; Department of Information Engineering, University of Padova, Padova, Italy",Global Oceans 2020: Singapore – U.S. Gulf Coast,"9 Apr 2021","2020","","","1","7","The current trend in robotics is to enhance robustness against uncertainties through complex modern control methods, applied to either single- or multi-agent systems. While indeed these approaches provide noticeable performance improvements, their implementation requires, among others, enclosed environments, where the operator has full access to the control systems of the robot during execution. With constant improvement of the Internet of Things, real-time systems needed different software architectures and communication systems to enable their remote operation, with the same degree of flexibility when operating the systems in-situ. The paradigm shifted towards cloud computing, which moved the computational effort needed for various real-time processing algorithms on the server-sided application and focused on having lightweight interfaces between components, with the exception of the lower-level control loops, which remained within the processing units of the robotic systems. This paper describes the software architecture and communication system for a state-of-the-art service to enable, support and monitor different robotics applications. The case study presents all features of a small-sized but scalable robotics application, having multiple challenges when building a service oriented platform: autonomous robots, over- and underwater long-distance communication, sensor fusion and command and control of multiple users. The goal is to create a centralised cloud computing environment, with decentralised microservices and redundant resources, supporting a plethora of port-specific operations conducted with the help of waterborne robotics with different equipment configurations, that can be remotely operated and monitored in real time over cross-platform, lightweight applications.","0197-7385","978-1-7281-5446-6","10.1109/IEEECONF38699.2020.9389285","German Federal Ministry of Economy (BMWi) and ERA-NET Cofund MarTERA(grant numbers:728053); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9389285","","Cloud computing;Software architecture;Communication systems;Robot sensing systems;Real-time systems;Robots;Monitoring","","3","","27","IEEE","9 Apr 2021","","","IEEE","IEEE Conferences"
"Container Mapping and its Impact on Performance in Containerized Cloud Environments","G. Ambrosino; G. B. Fioccola; R. Canonico; G. Ventre","CeSMA-Center of Advanced Measurement Services, University of Naples Federico II, Naples, Italy; NetCom Group S.p.A., Naples, Italy; DIETI Department, University of Naples Federico II, Naples, Italy; DIETI Department, University of Naples Federico II, Naples, Italy",2020 IEEE International Conference on Service Oriented Systems Engineering (SOSE),"1 Sep 2020","2020","","","57","64","The past few years have witnessed many software companies refactoring their monolithic applications into microservices to take advantage of containers in Cloud-native and DevOps-driven environments. Modern Cloud environments achieve high levels of scalability, flexibility, availability and business agility by combining two different kinds of virtualization: virtual machines and containers. The deployment of complex applications in such environments should be done by taking into account the interactions that may arise from the overlapping of these two different levels of virtualization. In this paper, we first describe a preliminary evaluation of a containerized application that has been obtained by refactoring a monolithic application into microservices. The application was deployed in a private Cloud system that relies on Kubernetes, which is a cluster management software for Docker containers that have been deployed on top of OpenStack-managed KVM virtual machines. Subsequently, in order to systematically investigate the possible interactions that can be produced when multiple containers running different kinds of workloads are activated on top of virtual machines, we present and analyze the results obtained by running different benchmarks in a testbed setup. From the analysis of the benchmark results, we derive some guidelines that should be taken into account by container schedulers when container orchestration platforms, such as Kubernetes, are deployed on top of a virtualized IaaS layer.","2642-6587","978-1-7281-6972-9","10.1109/SOSE49046.2020.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9183339","Cloud computing, containers, microservices","Containers;Cloud computing;Virtual machining;Software;Virtualization;Computer architecture;Scalability","","3","","21","IEEE","1 Sep 2020","","","IEEE","IEEE Conferences"
"Digital Security by Design: A Review of Combined Hardware-Software-Based CyberSecurity with Compartmentalization","R. Khan; K. Ghanem; F. Coffele","Power Networks Demonstration Center, University of Strathclyde, Glasgow, United Kingdom; Power Networks Demonstration Center, University of Strathclyde, Glasgow, United Kingdom; Power Networks Demonstration Center, University of Strathclyde, Glasgow, United Kingdom",2023 IEEE International Workshop on Technologies for Defense and Security (TechDefense),"8 Jan 2024","2023","","","181","186","Compartmentalization serves as a cornerstone for fortified hardware and software security. This technique encompasses memory isolation, trusted execution environments, and hardware-based security mechanisms. Software compartmentalization includes sandboxing, virtualization, microservices, and code isolation, collectively mitigating security breaches and vulnerabilities while enhancing resilience. Uniquely, this paper introduces the innovative fusion of the Morello board, distinguished for fine-grained compartmentalization, with CheriBSD. Positioned within the convergence of Operational Technology (OT) and Information Technology (IT), Morello bridges Real-Time Digital Simulators (RTDS) and Intelligent Electronic Devices (IEDs)/sensors. By orchestrating previously unexplored territory, this work underscores the novel potential of Morello and CheriBSD in fortifying security for OT/IT integration, yielding unprecedented outcomes in the realm of cybersecurity.","","979-8-3503-1939-2","10.1109/TechDefense59795.2023.10380808","Innovate UK; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10380808","Cheri;compartmentalization;cybersecurity;hardware security;software security;Morello","Manifolds;Codes;Microservice architectures;Software;Hardware;Real-time systems;Virtualization","","","","14","IEEE","8 Jan 2024","","","IEEE","IEEE Conferences"
"Optimization of MQTT Communication Between Microservices in the IoT Cloud","M. MATIC; M. ANTIC; I. PAPP; S. IVANOVIC","Institute for Computer-Based Systems, University of Novi Sad & RT-RK, Novi Sad, Serbia; Institute for Computer-Based Systems, University of Novi Sad & RT-RK, Novi Sad, Serbia; Institute for Computer-Based Systems, University of Novi Sad & RT-RK, Novi Sad, Serbia; Institute for Computer-Based Systems, University of Novi Sad & RT-RK, Novi Sad, Serbia",2021 IEEE International Conference on Consumer Electronics (ICCE),"13 May 2021","2021","","","1","3","Number of devices being connected to the Internet is increasing at an incredible rate forming the Internet of things (IoT). IoT cloud gathers data from physical devices, processes it and shares among IoT system components. To ensure the quality of service, cloud architecture has to be fault-tolerant. In this paper, we presented a highly available, fault-tolerant microservice cloud architecture, where services are communicating via MQTT (Message Queuing Telemetry Transport) protocol. The main focus of the research is to optimize communication between cloud microservices. Thus, we propose the message routing algorithm, which we will refer to as a balanced forwarding algorithm.","2158-4001","978-1-7281-9766-1","10.1109/ICCE50685.2021.9427602","Ministry of Education; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9427602","","Transport protocols;Cloud computing;Fault tolerance;Fault tolerant systems;Clustering algorithms;Receivers;Quality of service","","1","","8","IEEE","13 May 2021","","","IEEE","IEEE Conferences"
"A Lightweight SOA-Based Network Slicing Creation System","M. Wang; B. Cheng; J. Chen","State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, Beijing, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, Beijing, China; State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications, Beijing, China",2020 IEEE 13th International Conference on Cloud Computing (CLOUD),"18 Dec 2020","2020","","","389","396","The next-generation network system is envisioned to be a multi-service network supporting different applications with multiple requirements. In this vision, Network SLicing (NSL) is considered a key mechanism to create multiple virtual networks over the same physical infrastructure. However, it is a challenging problem to deploy NSL with great flexibility and full automation. In this paper, we propose a novel lightweight SOA-based NSL creation system, which includes the design domain, execution domain, and infrastructure domain. The design domain provides an easily-operating service design environment. Besides, we define a detailed description of NSL named Network SLicing Descriptor (NSLD), illustrating the resource and requirements for designing network services. The execution domain is a service execution environment with multi-tenancy support. This domain based on micro service architecture is distributed and self-organized. The infrastructure domain contains multiple network infrastructure resource domains that enable micro services. With these components, tenants can create NSL freely via an intuitive and easy-to-use UI on a web browser. We also implement an IoT NSL scenario to solve the multi-flow transmission problem. After adding sub-services and QoS policy into the design domain, the scenario can run automatically at the execution domain.","2159-6190","978-1-7281-8780-8","10.1109/CLOUD49709.2020.00060","National Key Research and Development Program of China(grant numbers:2017YFB1400603); National Natural Science Foundation of China(grant numbers:61921003,61972043); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284266","Network SLicing (NSL);Service-Oriented Architecture (SOA);Software Defined Networking (SDN);Network Function Virtualization (NFV)","Cloud computing;Network slicing;Conferences;Computer architecture;Quality of service;Virtualization;Next generation networking","","1","","26","IEEE","18 Dec 2020","","","IEEE","IEEE Conferences"
"A Technical Investigation towards a Cloud-Based Signature Solution","M. Marian; F. Stîngă; A. Cusman; C. Cerbulescu; D. Popescu; D. Ionică","University of Craiova, Romania; University of Craiova, Romania; Centrul de Calcul S.A, Romania; University of Craiova, Romania; University of Craiova, Romania; Centrul de Calcul S.A, Romania",2023 24th International Carpathian Control Conference (ICCC),"19 Jul 2023","2023","","","254","258","This paper proposes a technical investigation towards a solution for a cloud-based signature architecture. Based on the main concepts and ideas available today in this field, our proposed approach integrates seven components to cover all the determined functional and non-functional requirements of such a system.","","979-8-3503-1022-1","10.1109/ICCC57093.2023.10178927","European Regional Development Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10178927","cyber-security;cloud computing;software engineering","Unified modeling language;Computer architecture;Software;Service-oriented architecture;Security;Research and development","","1","","16","IEEE","19 Jul 2023","","","IEEE","IEEE Conferences"
"Insights into Multi-Layered Fault Propagation and Analysis in a Cloud Stack","D. R. Mathews; M. Verma; P. Aggarwal; J. Lakshmi","IISc, India; IBM Research, India; IBM Research, India; IISc, India",2021 IEEE 14th International Conference on Cloud Computing (CLOUD),"8 Nov 2021","2021","","","714","716","Emerging application modernisation efforts are pushing new application services to be built and existing monoliths to be refactored as loosely coupled distributed components (e.g, microservices) for independent scaling and management in cloud. With dynamic operating conditions, component failures, complex component interconnections across the cloud stack, etc., it becomes a challenge to develop effective fault management techniques at the granularity of a multi-layered cloud application service. This paper emphasises on considering faults, errors and failure across the components in different layers of a cloud stack for effective fault management.","2159-6190","978-1-6654-0060-2","10.1109/CLOUD53861.2021.00092","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9582267","Cloud application services;Fault propagation;Fault analysis;Resilience","Fault diagnosis;Cloud computing;Analytical models;Conferences","","1","","10","IEEE","8 Nov 2021","","","IEEE","IEEE Conferences"
"Hierarchical Software Framework for Safe Unmanned Aerial Systems Integration into National Airspace (NAS)","J. P. Mohan; P. Ranganathan; H. Reza","School of Electrical Engineering and Computer Science (SEECS), University of North, Dakota; School of Electrical Engineering and Computer Science (SEECS), University of North, Dakota; School of Electrical Engineering and Computer Science (SEECS), University of North, Dakota",2024 IEEE 14th Annual Computing and Communication Workshop and Conference (CCWC),"13 Feb 2024","2024","","","0198","0206","Unmanned aerial systems (UAS) have diverse applications and rely on GPS technology for providing information on aircraft location and position. However, a number of factors, including air conditions, satellite configuration, and interference from other sources, can impact GPS signals. GPS is also vulnerable to cyber security attacks and threats, including jamming, spoofing, and false data injection. The threats to GPS are depend on various factors and the integrity of timestamps could be compromised by cyber-attacks. This paper provides a conceptual software framework that integrates machine learning workflow, zero-trust and reinforcement learning to mitigate interference-free environment for UAS navigation. The framework is structured as a hierarchical design: sensing, communication, and control layers to host cyber physical and computing elements.","","979-8-3503-6013-4","10.1109/CCWC60891.2024.10427776","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10427776","Unmanned Aerial Systems;software framework and zero trust","Interference;Computer architecture;Software;Sensors;Zero Trust;Cyberattack;Global Positioning System","","1","","52","IEEE","13 Feb 2024","","","IEEE","IEEE Conferences"
"A Software Architecture to enable Self-Organizing, Collaborative IoT Ressource Networks","T. Lewandowski; D. Henze; M. Sauer; J. Nickles; B. Bruegge","Chair for Applied Software Engineering, Technical University of Munich, Munich, Germany; Chair for Applied Software Engineering, Technical University of Munich, Munich, Germany; Corporate Technology Siemens AG, Munich, Germany; Corporate Technology Siemens AG, Munich, Germany; Chair for Applied Software Engineering, Technical University of Munich, Munich, Germany",2020 Fifth International Conference on Fog and Mobile Edge Computing (FMEC),"21 Jul 2020","2020","","","70","77","Since recent years, the industrial world is facing a significant change from components and systems that are designed and configured for one well-analyzed scenario using well-established technologies to a demand for highly dynamic systems that continuously introduce the latest technologies and are capable of handling ever-changing use case environments. Thus, there is a need for new approaches on how to design and setup such systems. One of these approaches is Collaborative IoT, which focuses on researching the necessary designs, infrastructure, and technology to build ecosystems of loosely coupled, autonomous systems that interact in an ad-hoc fashion and establish service compositions and new distributed applications on demand. This paper presents a software architecture design for Industrial IoT systems to approach these targets as well as a reference implementation showing the feasibility of the architectural design in a Collaborative IoT smart factory scenario. The developed AiB architecture enables heterogeneous IoT systems to form task execution ecosystems that dynamically address new incoming tasks by creating service compositions across participating devices, which were not defined during design time.","","978-1-7281-7216-3","10.1109/FMEC49853.2020.9144772","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9144772","Industrial IoT;Distributed Computing;Fog Computing;Edge Computing;Collaborative;Autonomous Systems","Collaboration;Edge computing;Ecosystems;Computer architecture;Cloud computing;Task analysis;Software architecture","","6","","28","IEEE","21 Jul 2020","","","IEEE","IEEE Conferences"
"Optimization Design and Research of Large Rotating Machine Components Based on Optimized Smooth Weighted Load Balancing Algorithm","R. Ji; L. Dong; Y. Liu; X. Zhu","College of Computer Science and Technology, Jilin University, Changchun, China; College of Computer Science and Technology, Jilin University, Changchun, China; College of Computer Science and Technology, Jilin University, Changchun, China; College of Computer Science and Technology, Jilin University, Changchun, China",2023 3rd International Symposium on Computer Technology and Information Science (ISCTIS),"16 Aug 2023","2023","","","1004","1008","Large rotating units are core equipment serving in the main battlefield of the national economy and the field of national defense, especially aviation engines and gas turbines. They operate under extreme and harsh conditions such as high temperature, high pressure, high speed, and alternating load for a long time, and are prone to malfunctions. Moreover, the unit structure is complex, making maintenance decisions difficult. Conducting health management for large rotating units is of great significance for ensuring safe operation and reducing maintenance costs. This article mainly focuses on health management of large rotating units from two aspects: component optimization and load balancing. Study how to allocate servers reasonably and dynamically in large rotating units. The article uses an optimized smooth weighted load balancing algorithm to solve the load problem of large rotating units. Firstly, the load factor value and CPU utilization rate are obtained based on the load status of the server. Then, the relationship between the load factor value and the threshold is compared, and the server's weight value is calculated. Finally, smoothing is performed to avoid scheduling jitter; At the same time, by setting weight values and weight reduction for the server, it ensures that the system does not tilt the load during long-term operation, ultimately ensuring load balance and component optimization of the rotating machine.","","979-8-3503-2538-6","10.1109/ISCTIS58954.2023.10213047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10213047","Large rotating unit;optimize;load balancing;smooth weighting;weight lifting and weight reducing","Smoothing methods;Rotating machines;Clustering algorithms;Maintenance engineering;Jitter;Load management;Servers","","","","12","IEEE","16 Aug 2023","","","IEEE","IEEE Conferences"
"A 5G PaaS Collaborative Management and Control Platform Technology Based on Cloud Edge Collaboration Based on Particle Swarm Optimization Algorithm","L. Qing","Shenzhen Power Supply Bureau Co., Ltd, Shenzhen, Guangdong, China","2021 IEEE Asia-Pacific Conference on Image Processing, Electronics and Computers (IPEC)","7 May 2021","2021","","","144","147","The traditional cloud computing technology architecture mainly adopts the way of full set for the construction and operation of cloud computing center. With the development of cloud computing technology and the popularization of application, this all centralized mode of cloud computing may not be the optimal solution. Especially in the case of 5g derived vertical business scenarios, for the cloud collaborative management and control platform of power system, the system efficiency of full centralized mode is relatively low. In this paper, through the research on the key technologies of multi form PAAS platform in 5g scenario, the cloud side collaborative 5gpaas power system cloud collaborative management and control platform is realized. The platform is based on cloud native flexible microservice technology components and elastic resource computing, and integrates big data and artificial intelligence platform. This paper constructs a new generation of PAAS platform which is universal in the whole domain, unified in standard, multi cloud collaboration and flexible expansion, and realizes the global cloud, global virtualization and global perceptual construction of cloud collaborative management and control platform under 5g scenario. The platform has a certain reference value for the upgrading of cloud collaborative management and control of power system.","","978-1-7281-9018-1","10.1109/IPEC51340.2021.9421164","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9421164","Particle swarm optimization;cloud edge collaboration;5G;Platform as a Service (PaaS)","Computers;Cloud computing;5G mobile communication;Systems operation;Collaboration;Computer architecture;Power systems","","4","","8","IEEE","7 May 2021","","","IEEE","IEEE Conferences"
"Towards a Proactive Lightweight Serverless Edge Cloud for Internet-of-Things Applications","I. -C. Wang; S. Qi; E. Liri; K. K. Ramakrishnan","University of California, Riverside; University of California, Riverside; University of California, Riverside; University of California, Riverside","2021 IEEE International Conference on Networking, Architecture and Storage (NAS)","22 Nov 2021","2021","","","1","4","Edge cloud solutions that bring the cloud closer to the sensors can be very useful to meet the low latency requirements of many Internet-of-Things (IoT) applications. However, IoT traffic can also be intermittent, so running applications constantly can be wasteful. Therefore, having a serverless edge cloud that is responsive and provides low-latency features is a very attractive option for a resource and cost-efficient IoT application environment.In this paper, we discuss the key components needed to support IoT traffic in the serverless edge cloud and identify the critical challenges that make it difficult to directly use existing serverless solutions such as Knative, for IoT applications. These include overhead from heavyweight components for managing the overall system and software adaptors for communication protocol translation used in off-the-shelf serverless platforms that are designed for large-scale centralized clouds. The latency imposed by ‘cold start’ is a further deterrent.To address these challenges we redesign several components of the Knative serverless framework. We use a streamlined protocol adaptor to leverage the MQTT IoT protocol in our serverless framework for IoT event processing. We also create a novel, event-driven proxy based on the extended Berkeley Packet Filter (eBPF), to replace the regular heavyweight Knative queue proxy. Our preliminary experimental results show that the event-driven proxy is a suitable replacement for the queue proxy in an IoT serverless environment and results in lower CPU usage and a higher request throughput.","","978-1-7281-7744-1","10.1109/NAS51552.2021.9605384","National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9605384","Internet-of-Things;serverless;edge cloud","Energy consumption;Protocols;Conferences;Computer architecture;Throughput;Software;Sensors","","5","","17","IEEE","22 Nov 2021","","","IEEE","IEEE Conferences"
"Self-adaptive Threshold-based Policy for Microservices Elasticity","F. Rossi; V. Cardellini; F. L. Presti","DICII, University of Rome Tor Vergata, Tor Vergata, Italy; DICII, University of Rome Tor Vergata, Tor Vergata, Italy; DICII, University of Rome Tor Vergata, Tor Vergata, Italy","2020 28th International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems (MASCOTS)","21 Dec 2020","2020","","","1","8","The microservice architecture structures an application as a collection of loosely coupled and distributed services. Since application workloads usually change over time, the number of replicas per microservice should be accordingly scaled at run-time. The most widely adopted scaling policy relies on statically defined thresholds, expressed in terms of system-oriented metrics. This policy might not be well-suited to scale multi-component and latency-sensitive applications, which express requirements in terms of response time. In this paper, we present a two-layered hierarchical solution for controlling the elasticity of microservice-based applications. The higher-level controller estimates the microservice contribution to the application performance, and informs the lower-level components. The latter accordingly scale the single microservices using a dynamic threshold-based policy. So, we propose MB Threshold and QL Threshold, two policies that employ respectively model-based and model-free reinforcement learning approaches to learn threshold update strategies. These policies can compute different thresholds for the different application components, according to the desired deployment objectives. A wide set of simulation results shows the benefits and flexibility of the proposed solution, emphasizing the advantages of using dynamic thresholds over the most adopted policy that uses static thresholds.","2375-0227","978-1-7281-9238-3","10.1109/MASCOTS50786.2020.9285951","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9285951","Hierarchical Control;Elasticity;Self-adaptation;Microservice;Reinforcement Learning","Analytical models;Computational modeling;Simulation;Computer architecture;Reinforcement learning;Elasticity;Telecommunications","","13","","23","IEEE","21 Dec 2020","","","IEEE","IEEE Conferences"
"Architecture Design of Blockchain-Based Applications","M. Wöhrer; U. Zdun; S. Rinderle-Ma","Faculty of Computer Science, University of Vienna, Vienna, Austria; Faculty of Computer Science, University of Vienna, Vienna, Austria; Department of Informatics, Technical University of Munich, Munich, Germany",2021 3rd Conference on Blockchain Research & Applications for Innovative Networks and Services (BRAINS),"25 Oct 2021","2021","","","173","180","Integrating blockchain into software solutions is not straightforward as it requires sophisticated architectural design to connect and orchestrate centralized elements, such as backend logic, with decentralized elements, such as blockchain ledgers and smart contracts. We systematically explore this design space and possible architectural solution approaches. More specifically, we provide architectural blue prints for applications with different degrees of decentralization, describe conceptional components as well as possible relations between them. Our research shows that an event-driven architecture incorporating a messaging framework, tethered to dedicated components for handling blockchain state-changing and state-collecting operations, is a prevalent approach for choreographing blockchain-dependent business logic in blockchain-based applications.","","978-1-6654-3924-4","10.1109/BRAINS52497.2021.9569813","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9569813","blockchain;software architecture;decentralized application;DApp;smart contract;design pattern","Smart contracts;Computer architecture;Programming;Logic gates;Software;Blockchains;Space exploration","","4","","30","IEEE","25 Oct 2021","","","IEEE","IEEE Conferences"
"Formalization and Verification of RocketMQ Using CSP","Y. Liu; H. Mao; N. Qin; K. Chen","Shanghai Key Laboratory of Trustworthy Computing, East China Normal University, Shanghai, China; Shanghai Key Laboratory of Trustworthy Computing, East China Normal University, Shanghai, China; Shanghai Key Laboratory of Trustworthy Computing, East China Normal University, Shanghai, China; Shanghai Key Laboratory of Trustworthy Computing, East China Normal University, Shanghai, China",2023 IEEE 29th International Conference on Parallel and Distributed Systems (ICPADS),"26 Mar 2024","2023","","","813","819","With the development of cloud serverless and microservices architectures, RocketMQ recently has emerged as a compelling pattern of service-to-service communication for them. Nowadays, due to its features of high performance, high reliability, low latency, many companies use the open source version of RocketMQ in their business. The existing works are mainly the applications of RocketMQ to realize the program communications, however there are few formalized models for RocketMQ. It is essential to model and verify the RocketMQ system abstracted from its architecture in a formal method to ensure the messaging reliability. In this paper, we focus on the data messaging in production and consumption mechanism to facilitate the overall modeling. Six communication components are extracted including Producer, Consumer, Master Broker, Slave Broker, NameServer, and Clock for describing the temporal process. Then we formalize and model the RocketMQ system using Communicating Sequential Processes (CSP) to describe communicating process among those components. Furthermore, we implement the model of RocketMQ and verify six properties, such as Deadlock Freedom, Consistency, Parallelism, Fault Tolerance, Sequentiality and HeartBeat Mechanism based on the model checker Process Analysis Toolkit (PAT). Finally, our verification results show that the model can satisfy these properties, indicating its messaging reliability can be guaranteed.","2690-5965","979-8-3503-3071-7","10.1109/ICPADS60453.2023.00122","National Key Research and Development Program of China; National Natural Science Foundation of China; Ministry of Education; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10476275","RocketMQ;CSP;Formaization;HeartBeat Mechanism","Analytical models;Heart beat;Microservice architectures;Production;System recovery;Parallel processing;Software reliability","","","","16","IEEE","26 Mar 2024","","","IEEE","IEEE Conferences"
"An Empirical Study of Scalability Frameworks in Open Source Microservices-based Systems","G. Márquez; M. M. Villegas; H. Astudillo","Toeska Research Group, Universidad Técnica, Federico Santa María, Valparaíso, Chile; Toeska Research Group, Universidad Técnica, Federico Santa María, Valparaíso, Chile; Toeska Research Group, Universidad Técnica, Federico Santa María, Valparaíso, Chile",2018 37th International Conference of the Chilean Computer Science Society (SCCC),"6 May 2019","2018","","","1","8","Microservice-based systems (MBS) are distributed systems consistent of smaller components (possibly developed by separate teams using different technologies) that use lightweight mechanisms to communicate with each other. One of the main quality attributes that motivate MBS is scalability, and there are several available frameworks to face scalability challenges in MBS. However, there is still little empirical data about the architectural concerns of using these frameworks to support the scalability dimensions. This article builds upon a previous study that defined a pattern language for MBS scalability, and aims to identify and analyze which MBS frameworks are actually used in open source MBS projects to address the scalability dimensions. Results show that (1) nine common frameworks satisfy the scalability dimensions defined in the pattern language, (2) frameworks produce trade-offs among scalability dimensions, and (3) few frameworks address several scalability dimensions at once. Finally, we identify five reusable design decisions to address scalability requirements and propose them as microservices architectural tactics.","1522-4902","978-1-5386-9233-2","10.1109/SCCC.2018.8705256","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8705256","Microservices-based systems;scalability;design frameworks;Netflix;Apache","Scalability;Companies;Tools;Computer architecture;Task analysis;Software;Cloning","","5","","27","IEEE","6 May 2019","","","IEEE","IEEE Conferences"
"The Architecture of Kaligreen V2: A Middleware Aware of Hardware Opportunities to Save Energy","H. H. lvarez Valera; M. Dalmau; P. Roose; C. Herzog","LIUPPA, Universit de Pau et des Pays de l’Adour, Anglet, France; LIUPPA, Universit de Pau et des Pays de l’Adour, Anglet, France; LIUPPA, Universit de Pau et des Pays de l’Adour, Anglet, France; EFFICIT SAS, Mauzac, France","2019 Sixth International Conference on Internet of Things: Systems, Management and Security (IOTSMS)","23 Dec 2019","2019","","","79","86","Nowadays, energy saving in the use of information technologies is a very important issue both from the economic and sustainability point of view. Many scientists investigate methods to save energy at different application levels (cloud: i.e., architectures, grid: i.e., middlewares and frameworks and hardware management: i.e., operating systems) and many of them agree on the strategy of executing programs, processes or virtual machines only using the time and resources that are strictly necessary. For this, it is necessary to plan strategies for deployment and relocation of processes; but always taking into account hardware repercussions and the knowledge of the architecture and applications behavior. On the other hand, it has already been demonstrated that the use of microservices brings numerous advantages in availability and efficiency; but we do not find many jobs that exploit this technique on the energy level. In this article, we present the architecture of a middleware for distributed microservices-based applications, which allows any negotiation-based scheduling algorithm to duplicate or move microservices from one device to another in a non-centralized way for energy savings, taking into account the consumption characteristics of the microservices and the capabilities that the hardware components offer.","","978-1-7281-2949-5","10.1109/IOTSMS48152.2019.8939237","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8939237","microservices;middleware;energy;consumption;CPU;network;hard disk","Scheduling algorithms;Hardware;Virtual machining;Security;Middleware;Sustainable development;Monitoring","","4","","48","IEEE","23 Dec 2019","","","IEEE","IEEE Conferences"
"Latency-Aware Load Distribution Algorithm for Microservice Deployment in UAV Networks","S. García-Gil; D. Ramos-Ramos; J. Gómez-delaHiz; A. García-López; S. López-López; J. M. Murillo; J. Galán-Jiménez","Department of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Department of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Department of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Department of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Department of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Department of Computer Systems and Telematics Engineering, University of Extremadura, Spain; Department of Computer Systems and Telematics Engineering, University of Extremadura, Spain",2024 IEEE Symposium on Computers and Communications (ISCC),"31 Oct 2024","2024","","","1","6","The Internet has become the driving wheel of social interactions as well as economic growth, but its access is vastly unequal. Noticeably, such rural dwellers experience a digital service access gap, due to the inadequate broadband infrastructure available to them when compared with their urban counterparts. This paper is aimed at overcoming the gap between rural communities with no reliable Internet service by deploying the service through the use of Unmanned Aerial Vehicles (UAVs). By decomposing the Internet of Things (IoT) applications into elements (namely microservices) and deploying them through UAVs, latency is shortened, distributing workload among UAVs while limiting microservice deployment to optimize request execution, making the quality service improvement, essential for such applications. Simulations revealed the effectiveness of our approach, as it indicated the lowest latency when a UAV connected to several users in scenarios where there was no Internet connectivity.","2642-7389","979-8-3503-5423-2","10.1109/ISCC61673.2024.10733720","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10733720","UAV;microservices;latency minimization;IoT;digital divide","Scalability;Web and internet services;Microservice architectures;Wheels;Quality of service;Autonomous aerial vehicles;Internet of Things;Reliability;Socioeconomics;Testing","","","","19","IEEE","31 Oct 2024","","","IEEE","IEEE Conferences"
"Microservice Decomposition Techniques: An Independent Tool Comparison","Y. Wang; S. Bornais; J. Rubin","Univ. of British, Columbia, Canada; Univ. of British, Columbia, Canada; Univ. of British, Columbia, Canada",2024 39th IEEE/ACM International Conference on Automated Software Engineering (ASE),"29 Nov 2024","2024","","","1295","1307","The microservice-based architecture – a SOA-inspired principle of dividing systems into components that communicate with each other using language-agnostic APIs – has gained increased popularity in industry. Yet, migrating a monolithic application into microservices is a challenging task. A number of automated microservice decomposition techniques have been proposed in industry and academia to help developers with the migration complexity. Each of the techniques is usually evaluated on its own set of case study applications and evaluation criteria, making it difficult to compare the techniques to each other and assess the real progress in this field. To fill this gap, this paper performs an independent study comparing eight microservice decomposition tools that implement a wide range of different decomposition principles with each other on a set of four carefully selected benchmark applications. We evaluate the tools both quantitatively and qualitatively, and further interview developers behind two of the selected benchmark applications. Our analysis highlights strengths and weaknesses of existing approaches, and provides suggestions for future research, e.g., to provide differential treatment of application elements of different types, to customize the decomposition strategy and granularity per specific application, and more.","2643-1572","979-8-4007-1248-7","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10764951","","Industries;Measurement;Systematics;Microservice architectures;Benchmark testing;Complexity theory;Interviews;Software engineering","","","","61","","29 Nov 2024","","","IEEE","IEEE Conferences"
"Combining Network Data Analytics Function and Machine Learning for Abnormal Traffic Detection in Beyond 5G","A. Mekrache; K. Boutiba; A. Ksentini","EURECOM, Sophia, Antipolis, France; EURECOM, Sophia, Antipolis, France; EURECOM, Sophia, Antipolis, France",GLOBECOM 2023 - 2023 IEEE Global Communications Conference,"26 Feb 2024","2023","","","1204","1209","The Network Data Analytics Function (NWDAF) is a key component of the 5G Core Network (CN) architecture whose role is to generate analytics and insights from the network data to accommodate end users and improve the network performance. NWDAF allows the collection, processing, and analysis of network data to enable a variety of applications, such as User Equipment (UE) mobility analytics and UE abnormal behaviour. Although defined by 3GPP, realizing these applications is still an open problem. To fill this gap: (i) we propose a microservices architecture of NWDAF to plug the 3GPP applications as mi-croservices enabling greater flexibility and scalability of NWDAF; (ii) devise a Machine Learning (ML) algorithm, specifically an LSTM Auto-encoder whose role is to detect abnormal traffic events using real network data extracted from the Milano dataset [1]; (iii) we integrate and test the abnormal traffic detection algorithm in the NWDAF based on OpenAirInterface (OAI) 5G CN and RAN [2]. The experimental results show the ability of NWDAF to collect data from a real 5G CN using 3GPP-compliant interfaces and detect abnormal traffic generated by a real UE using ML.","2576-6813","979-8-3503-1090-0","10.1109/GLOBECOM54140.2023.10436766","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10436766","NWDAF;5G;ML;LSTM Auto-encoder;Abnormal traffic detection;OAI","Data analysis;5G mobile communication;Scalability;Microservice architectures;Machine learning;3GPP;Plugs","","6","","15","IEEE","26 Feb 2024","","","IEEE","IEEE Conferences"
"Approach for Fast Growing Software Systems using layered architecture : Scaling an architecture with minimal refactoring","J. F. C. Pereira; A. M. R. D. Cruz","Instituto Politécnico de Viana do Castelo, Viana do Castelo, Portugal; Instituto Politécnico de Viana do Castelo, Viana do Castelo, Portugal",2023 18th Iberian Conference on Information Systems and Technologies (CISTI),"15 Aug 2023","2023","","","1","6","Currently, the market imposes several demands on software throughout its development cycle, such as the rapid availability of a minimum viable product, the ability to deal with rapid growth in the volume of data and in the number of users, the ability to provide new features or changes, easy adaptability of new developers, among many others. Choosing a software architecture is something that will impact the entire software development lifecycle (SDLC) and, as such, should be seen as an extremely important task. A monolithic architecture enables a fast initial development, however there are several limits after a certain point. A microservices architecture is highly scalable and can handle many clients simultaneously, but it is too complex to be used at an early stage of software development. If the software grows, it will have to scale, and an architecture migration may be necessary. This paper presents an architectural approach for this migration to be done with minimal refactoring and keeping infrastructure and implementation costs low.","2166-0727","978-989-33-4792-8","10.23919/CISTI58278.2023.10211943","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10211943","Software Architecture;Monolithic;Micro-services;Software Arquitecture Migration;Recfactoring","Costs;Software architecture;Microservice architectures;Computer architecture;Software systems;Task analysis;Information systems","","","","0","","15 Aug 2023","","","IEEE","IEEE Conferences"
"Practical Root Cause Localization for Microservice Systems via Trace Analysis","Z. Li; J. Chen; R. Jiao; N. Zhao; Z. Wang; S. Zhang; Y. Wu; L. Jiang; L. Yan; Z. Wang; Z. Chen; W. Zhang; X. Nie; K. Sui; D. Pei","Tsinghua University; College of Intelligence and Computing, Tianjin University; Tsinghua University; Tsinghua University; China Minsheng Bank; China Minsheng Bank; China Minsheng Bank; China Minsheng Bank; China Minsheng Bank; BizSeer; BizSeer; BizSeer; Tsinghua University; BizSeer; Tsinghua University",2021 IEEE/ACM 29th International Symposium on Quality of Service (IWQOS),"26 Aug 2021","2021","","","1","10","Microservice architecture is applied by an increasing number of systems because of its benefits on delivery, scalability, and autonomy. It is essential but challenging to localize root-cause microservices promptly when a fault occurs. Traces are helpful for root-cause microservice localization, and thus many recent approaches utilize them. However, these approaches are less practical due to relying on supervision or other unrealistic assumptions. To overcome their limitations, we propose a more practical root-cause microservice localization approach named TraceRCA. The key insight of TraceRCA is that a microservice with more abnormal and less normal traces passing through it is more likely to be the root cause. Based on it, TraceRCA is composed of trace anomaly detection, suspicious microservice set mining and microservice ranking. We conducted experiments on hundreds of injected faults in a widely-used open-source microservice benchmark and a production system. The results show that TraceRCA is effective in various situations. The top-1 accuracy of TraceRCA outperforms the state-of-the-art unsupervised approaches by 44.8%. Besides, TraceRCA is applied in a large commercial bank, and it helps operators localize root causes for real-world faults accurately and efficiently. We also share some lessons learned from our real-world deployment.","1548-615X","978-1-6654-1494-4","10.1109/IWQOS52092.2021.9521340","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9521340","","Location awareness;Production systems;Scalability;Quality of service;Benchmark testing;Open source software;Anomaly detection","","55","","40","IEEE","26 Aug 2021","","","IEEE","IEEE Conferences"
"Smart City Services - Challenges and Approach","P. P. T.; S. K. L.","BEL Software Technology Centre Bharat Electronics Limited, Bangalore, India; BEL Software Technology Centre Bharat Electronics Limited, Bangalore, India","2019 International Conference on Machine Learning, Big Data, Cloud and Parallel Computing (COMITCon)","11 Oct 2019","2019","","","553","558","Smart city as a concept envisions building of smart services in heterogeneous domains like health care, waste management, traffic management by intelligently managing and controlling web of interconnected heterogeneous end systems. Smart city requires development of technology that leverages data generated from Internet of things and also to control these end systems in a smart manner. This paper describes various possible smart city services and adaptation of micro services based architectural approach in building smart services. The Paper further describes security and privacy considerations that need to be addressed in micro services based approach.","","978-1-7281-0211-5","10.1109/COMITCon.2019.8862243","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8862243","Internet of Things;Smart City;Micro Services;Security in Smart City;Privacy in Smart City;Smart city architecture","Connectors;Smart cities;Smart devices;Water resources;Data analysis;Intelligent sensors","","5","","11","IEEE","11 Oct 2019","","","IEEE","IEEE Conferences"
"A Framework for Internet of Things Search Engines Engineering","N. K. Tran; M. A. Babar; Q. Z. Sheng; J. Grundy","University of Adelaide, Adelaide, SA, Australia; University of Adelaide, Adelaide, SA, Australia; Macquarie University, Sydney, NSW, Australia; Monash University, Clayton, VIC, Australia",2019 26th Asia-Pacific Software Engineering Conference (APSEC),"2 Jan 2020","2019","","","228","235","The content of the Internet of Things (IoT), notably sensor data and virtual representation of physical devices, has been increasingly delivered via Web protocols and available on the World Wide Web (WWW). Internet of Things Search Engine (IoTSE) systems are catalytic to utilize this influx of data. They enable users to discover and retrieve relevant IoT content. While a general IoTSE system - the next ""Google"" - is beyond the horizon due to the vast diversity of IoT content and types of queries for them, specific IoTSE systems that target subsets of query types and IoT infrastructure are feasible and beneficial. A component-based engineering approach, in which prior IoTSE systems and research prototypes are reassembled as building blocks for new IoTSE systems, could be a time-and cost-effective solution to engineering IoTSE systems. This paper presents the design, implementation, and evaluation of a framework to facilitate a component-based approach to engineering IoTSE systems. As an evaluation, we developed eight IoTSE components and composed them into eight proof-of-concept IoTSE systems, using a reference implementation of the proposed framework. An analysis on Source Line of Code (SLOC) revealed that the complexity handled transparently by the IoTSE framework could account for over 90% of the code base of a simple IoTSE system.","2640-0715","978-1-7281-4648-5","10.1109/APSEC48747.2019.00039","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8945617","Internet of Things;Search Engine;Framework;Architecture centric;Microservice Architecture","Internet of Things;Complexity theory;Kernel;Urban areas;Search engines;Engines","","2","","12","IEEE","2 Jan 2020","","","IEEE","IEEE Conferences"
"Re-Factored Operational Support Systems for the Next Generation Platform-as-a-Service (NGPaaS)","P. Veitch; A. Broadbent; S. V. Rossem; B. Sayadi; L. Natarianni; B. Al Jammal; L. Roullet; A. Mimidis; E. Ollora; J. Soler; S. Pinniterre; M. Paolino; A. Ramos; X. Du; M. Flouris; L. Mariani; O. Riganelli; M. Mobilio; A. Shatnawi; M. Orru; M. Zembra",BT; BT; Ghent University-imec; Nokia Bell-Labs France; Nokia Bell-Labs France; Nokia Bell-Labs France; Nokia Bell-Labs France; DTU Fotonik; DTU Fotonik; DTU Fotonik; Virtual Open Systems; Virtual Open Systems; ATOS; OnApp; OnApp; Unimib; Unimib; Unimib; Unimib; Unimib; VM2M,2018 IEEE 5G World Forum (5GWF),"1 Nov 2018","2018","","","1","5","Platform-As-A-Service (PaaS) systems offer customers a rich environment in which to build, deploy, and run applications. Today's PaaS offerings are tailored mainly to the needs of web and mobile applications developers, and involve a fairly rigid stack of components and features. The vision of the H2020 5GPPP Phase 2 Next Generation Platform-as-a-Service (NGPaaS) project is to enable ""build-to-order"" customized PaaSes, tailored to the needs of a wide range of use cases with telco-grade 5G characteristics. This paper sets out the salient and innovative features of NGPaaS and explores the impacts on Operational Support Systems and Business Support Systems (OSS/BSS), moving from fixed centralized stacks to a much more flexible and modular distributed architecture.","","978-1-5386-4982-4","10.1109/5GWF.2018.8516995","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8516995","5G;PaaS;BSS;OSS;Cloud Native;Microservices","Cloud computing;Business;Monitoring;5G mobile communication;Computer architecture;Marine vehicles;Virtual machine monitors","","1","","8","IEEE","1 Nov 2018","","","IEEE","IEEE Conferences"
"Research on Key Technologies of Intelligent Management and Control Platform for Aviation Industrial Park","X. Cai; K. Su; Z. Li; Y. Song","China Aviation Planning and Design Institute (Group) Co., Ltd., Beijing, China; China Aviation Planning and Design Institute (Group) Co., Ltd., Beijing, China; China Aviation Planning and Design Institute (Group) Co., Ltd., Beijing, China; China Aviation Planning and Design Institute (Group) Co., Ltd., Beijing, China",2023 11th International Conference on Information Systems and Computing Technology (ISCTech),"21 Feb 2024","2023","","","379","383","Aviation industrial parks are characterized by a variety of spatial types, diverse personnel roles, large scale, multiple and difficult management dimensions. However, they have problems of extensive management, severe information islands, individualistic management, and weak experience. Therefore, the contradiction between the demand for high-quality development of aviation industrial parks and the lack of advanced park management urgently needs to be resolved. In this respect, research on the key technologies of the intelligent management and control platform for the aviation industrial park was carried out by discussing the application scenarios, platform architecture, and key technologies. It proposed to build a data interoperability, business collaboration, resource integration intelligent management and control platform centered on production, with business as the mainline, and park management and services as the grasp, so as to provide a safe, environmentally friendly, green, low-carbon, intelligent, and efficient service-oriented industrial park for park-related activities.","","979-8-3503-4240-6","10.1109/ISCTech60480.2023.00076","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10438283","component;component;aviation manufacturing;industrial park;IoT perception;intelligent systems;management and control platform formatting","Production management;Smart cities;Prototypes;Collaboration;Control systems;Sensors;Business","","","","15","IEEE","21 Feb 2024","","","IEEE","IEEE Conferences"
"Citizen Science for the Sea with Information Technologies: An Open Platform for Gathering Marine Data and Marine Litter Detection from Leisure Boat Instruments","C. G. De Vita; G. Mellone; D. D. Sanchez-Gallegos; G. Coviello; D. Romano; M. Lapegna; A. Ciaramella","Dept. of Science and Technology, University of Naples “Parthenope”, Naples, Italy; Dept. of Science and Technology, University of Naples “Parthenope”, Naples, Italy; Dept. of Computer Science, University of Madrid Carlos III, Madrid, Spain; NEC Laboratories of America Inc., Princeton, NJ, USA; Inst. for High Performance Computing and Networking (ICAR), National Research Council (CNR), Naples, Italy; Dept. of Mathematics and Applications, University of Naples “Federico II”, Naples, Italy; Dept. of Science and Technology, University of Naples “Parthenope”, Naples, Italy",2023 IEEE 19th International Conference on e-Science (e-Science),"25 Sep 2023","2023","","","1","9","Data crowdsourcing is an increasingly pervasive and lifestyle-changing technology due to the flywheel effect that results from the interaction between the Internet of Things and Cloud Computing. This paper presents the Citizen Science for the Sea with Information Technologies (C4Sea-IT) framework. It is an open platform for gathering marine data from leisure boat instruments. C4Sea-IT aims to provide a coastal marine data gathering, moving, processing, exchange, and sharing platform using the existing navigation instruments and sensors for today's leisure and professional vessels. In this work, a use case for the detection and tracking of marine litter is shown. The final goal is weather/ocean forecasts argumentation with Artificial Intelligence prediction models trained with crowdsourced data.","2325-3703","979-8-3503-2223-1","10.1109/e-Science58273.2023.10254866","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10254866","Data crowdsourcing;Edge Computing;Embedded GPU computing;Artificial Intelligence;Weather Predictions","Training;Performance evaluation;Instruments;Sea measurements;Microservice architectures;Boats;Data models","","1","","51","EU","25 Sep 2023","","","IEEE","IEEE Conferences"
"Trust-Based Dynamic Access Control Model for Power Micro-Applications","Z. Song; W. Libin; S. Jie; C. Shi; L. Ning","State Grid Jiangsu Electric Power Co., Ltd., Information & Telecomunication Branch, Nanjing, China; State Grid Information & Telecomunication Group Co., Ltd., Beijing, China; State Grid Information & Telecomunication Group Co., Ltd., Beijing, China; State Grid Jiangsu Electric Power Co., Ltd., Information & Telecomunication Branch, Nanjing, China; State Grid Information & Telecomunication Group Co., Ltd., Beijing, China","2023 2nd International Conference on Advanced Electronics, Electrical and Green Energy (AEEGE)","9 Nov 2023","2023","","","94","99","Aiming at solving security access control issues such as frequent user authentication and unauthorized access faced by power micro-applications, this paper proposes a dynamic access control model for power micro-applications. This model overcomes the shortcomings of static allocation of traditional access control policies, and applies trust evaluation and access control to micro-applications. User access rights can be dynamically adjusted according to user requests and service status to ensure system security. This paper proposes a multi-level trust evaluation indicators for micro-applications and a trust threshold setting algorithm, which realizes fine-grained dynamic trust perception and dynamic adjustment of user permissions. In addition, through the secondary development of the Application Programming Interface (API) gateway, this paper not only unifies the identity authentication methods between different micro-applications, but also strengthens the existing security protection. Simulation experimental results show that our model can effectively adjust user permissions dynamically, identify potential malicious users, and reject or downgrade access of malicious users, thereby achieving secure access control for power micro-applications and enhancing the security of accessing microservice.","","979-8-3503-2286-6","10.1109/AEEGE58828.2023.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10308889","component;power micro-application;access control;trust degree;dynamic access","Access control;Electric potential;Heuristic algorithms;Authentication;Microservice architectures;Permission;Logic gates","","1","","20","IEEE","9 Nov 2023","","","IEEE","IEEE Conferences"
"Principles for Re-architecting Software for Heterogeneous Platforms","H. Andrade; C. Berger; I. Crnkovic; J. Bosch","Computer Science and Engineering Chalmers| University of Gothenburg, Gothenburg, Sweden; Computer Science and Engineering Chalmers| University of Gothenburg, Gothenburg, Sweden; Computer Science and Engineering Chalmers| University of Gothenburg, Gothenburg, Sweden; Computer Science and Engineering Chalmers| University of Gothenburg, Gothenburg, Sweden",2020 27th Asia-Pacific Software Engineering Conference (APSEC),"1 Mar 2021","2020","","","405","414","The demands on software continues to increase through the constant addition of functionalities and high expectations from users. In particular, performance has been the focus in many projects with the goal of fulfilling complex and hard requirements across a variety of domains. One way to achieve satisfactory levels of performance is through heterogeneous computing, i.e., systems that contain more than one type of processing unit, such as CPUs, GPUs, and FPGAs. However, applications are typically designed to be executed on CPUs, and re-architecting software for execution on such heterogeneous hardware architectures entails several challenges that must be addressed. In this paper, we propose a framework that supports engineers in the process of making architectural decisions to re-architect software for execution on heterogeneous platforms. We present several relevant aspects that should be addressed in the process, along with suggestions on how to create design solutions using different existing approaches. The framework was developed based on multiple interactions with three industrial partners and evaluated through a computer vision application in the automotive domain.","2640-0715","978-1-7281-9553-7","10.1109/APSEC51365.2020.00049","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9359288","software engineering;software design;program processors","Computer vision;Program processors;Software;Heterogeneous networks;Hardware;Field programmable gate arrays;Software engineering","","1","","29","IEEE","1 Mar 2021","","","IEEE","IEEE Conferences"
"A Kubernetes Algorithm for scaling Virtual Objects","B. El Khalyly; A. Belangour","Faculty of sciences Ben M'sik, Laboratory of Information Technology and Modeling, Hassan II University, Casablanca, Morocco; Faculty of sciences Ben M'sik, Laboratory of Information Technology and Modeling, Hassan II University, Casablanca, Morocco",2020 3rd International Seminar on Research of Information Technology and Intelligent Systems (ISRITI),"13 Jan 2021","2020","","","638","641","Continuous scalability of applications operating in the Internet of Things domain has raised the issue of continuous integration. Users and operators involved in the establishment of connected object ecosystems want to have the ability to change and modify their applications without having to stop the function of the physical components in order to deploy their various applications that run these objects. In this article we propose a continuous integration and scaling approach based on Kubernetes and object virtualization to deploy different types of appropriate microservices.","","978-1-7281-8406-7","10.1109/ISRITI51436.2020.9315393","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9315393","Devops;Kubernetes;Virtual Object;BDI","Internet of Things;Cloud computing;Ecosystems;Containers;Computer architecture;Virtualization;Edge computing","","2","","28","IEEE","13 Jan 2021","","","IEEE","IEEE Conferences"
"Research on the Technology of Power Unified Cloud Management Platform","Y. Lu; H. Cheng; Y. Ma; S. Wu","State Grid Anhui Electric Power Co.LTD, Information & Telecommunication Branch, Hefei, China; State Grid Anhui Electric Power Co.LTD, Information & Telecommunication Branch, Hefei, China; State Grid Anhui Electric Power Co.LTD, Information & Telecommunication Branch, Hefei, China; State Grid Anhui Electric Power Co.LTD, Information & Telecommunication Branch, Hefei, China",2020 IEEE 9th Joint International Information Technology and Artificial Intelligence Conference (ITAIC),"3 Feb 2021","2020","9","","770","773","The unified cloud management platform is the core of cloud computing management. According to the technical requirements of the power cloud computing platform, the technical architecture of the power unified cloud management platform is designed, and the functional characteristics of the cloud platform management platform are explained. Combined with the cloud platform components of the State Grid Corporation, the experiment is verified The feasibility and effectiveness of the technical architecture of the cloud management platform.","2693-2865","978-1-7281-5244-8","10.1109/ITAIC49862.2020.9339006","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9339006","Cloud management platform;Cloud computing;Resource scheduling;Unified monitoring","Technical requirements;Cloud computing;Conferences;Computer architecture;Information technology;Monitoring;Business","","2","","11","IEEE","3 Feb 2021","","","IEEE","IEEE Conferences"
"Pushing the Boundaries of Scalable 5G Core Networks: Cloud-Native NEF and CAPIF Interplay","J. Fernandes; L. Rosa; J. Gameiro; P. Valente; E. Ramos; J. Oliveira; D. Raposo; A. T. Ferrer; J. M. Portela; P. Rito; L. Cordeiro; S. Sargento","OneSource Consultoria Informatica Lda., Portugal; OneSource Consultoria Informatica Lda., Portugal; Instituto de Telecomunicações, Aveiro, Portugal; Instituto de Telecomunicações, Aveiro, Portugal; OneSource Consultoria Informatica Lda., Portugal; Instituto de Telecomunicações, Aveiro, Portugal; Instituto de Telecomunicações, Aveiro, Portugal; Telefónica, Spain; Telefónica, Spain; Instituto de Telecomunicações, Aveiro, Portugal; OneSource Consultoria Informatica Lda., Portugal; Instituto de Telecomunicações, Aveiro, Portugal",2024 3rd International Conference on 6G Networking (6GNet),"2 Dec 2024","2024","","","201","205","The advent of Cloud-Native principles and architectures stands as a beacon of innovation in the design of the next generation of 5G/6G, promising a transition from initial (disaggregated) 5G Service-Based Architectures (SBA) implemen-tations capable of running on the cloud to a truly distributed and scalable Cloud-Native 6G. However, the incumbent components and interfaces of the 5G core (5GC) pose barriers to the seamless integration of microservices. Challenges range from intricate Network Functions (NF) interdependencies to interface constraints and the absence of an event-driven architecture, which might jeopardise efficient microservice communication. This paper discusses the interplay between the Network Exposure Function (NEF) and the Common API Framework (CAPIF), defined by 3GPP, to standardize how network APIs are discovered, exposed, and consumed. First, we propose a novel microservice and eventdriven Network Exposure Function (MNEF) built upon the NEF standard, featuring CAPIF support and various purpose-built microservices. Then, we evaluate its interoperability with reference implementations of 5GC (Open5GS) and CAPIF (OpenCAPIF) and its performance and scalability for handling large-scale request scenarios. The results attest to the MNEF's benefits and interoperability with compliant 5GC implementations. Despite an additional (expected) overhead in communications, MNEF fulfils its purpose as defined in the 5G architecture, acting as an interface between external parties and 5G core NFs. Moreover, the proposed MNEF presents itself as a design solution that pushes the scalable 5G communication boundaries.","","979-8-3503-7859-7","10.1109/6GNet63182.2024.10765765","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10765765","","6G mobile communication;Technological innovation;5G mobile communication;Scalability;Microservice architectures;Robustness;Noise measurement;Interoperability;Standards;Optimization","","","","11","IEEE","2 Dec 2024","","","IEEE","IEEE Conferences"
"Moving Target Defense for Cloud-Native Applications","A. Awarkeh; R. EI-Malki; F. Rebecchi","Standards & Technology, Ericsson, France; Standards & Technology, Ericsson, France; Standards & Technology, Ericsson, France","2024 27th Conference on Innovation in Clouds, Internet and Networks (ICIN)","11 Apr 2024","2024","","","130","137","The proliferation of cloud-native applications has sparked significant interest across various sectors. As these methodologies gain traction, they introduce a transformative shift within the cloud computing landscape. At the forefront of this shift is the synergy between container technology and microservice architecture, promising to significantly enhance both efficiency and agility across industries. Nonetheless, this transfor-mation also adds complexity and enlarges the system attack surface, introducing additional vulnerabilities susceptible to being exploited by well-informed and resourceful attackers, especially in case of static defense techniques. To address these challenges, we propose a Moving Target Defense (MTD) approach, which proactively intervenes on the lifecycle of cloud-native application components. Such dynamicity serves as deterrent to potential adversaries, making persistence harder, lowering the effectiveness of automated attack tools, and increasing overall complexity and cost. We detail a step-by-step path, ranging from simple to advanced MTD techniques, targeting both stateless and stateful applications within a cloud-native environment. We evaluate these strategies and demonstrate that they effectively mitigate different types of attacks (e.g., Denial of service (DoS), lateral movement, reconnaissance, etc.) with minimal resource overhead and without causing service interruptions during normal system operation.","2472-8144","979-8-3503-9376-7","10.1109/ICIN60470.2024.10494492","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10494492","MTD;cloud-native;Kubernetes;pods;state-machine","Industries;Cloud computing;Technological innovation;Costs;Systems operation;Microservice architectures;Reconnaissance","","","","22","IEEE","11 Apr 2024","","","IEEE","IEEE Conferences"
"Towards Osmotic Computing: Analyzing Overlay Network Solutions to Optimize the Deployment of Container-Based Microservices in Fog, Edge and IoT Environments","A. Buzachis; A. Galletta; L. Carnevale; A. Celesti; M. Fazio; M. Villari","MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy",2018 IEEE 2nd International Conference on Fog and Edge Computing (ICFEC),"14 May 2018","2018","","","1","10","In recent years, the rapid growth of new Cloud technologies acted as an enabling factor for the adoption of microservices based architecture that leverages container virtualization in order to build modular and robust systems. As the number of containers running on hosts increases, it becomes essential to have tools to manage them in a simple, straightforward manner and with a high level of abstraction. Osmotic Computing is an emerging research field that studies the migration, deployment and optimization of microservices from the Cloud to Fog, Edge, and Internet of Things (IoT) environments. However, in order to achieve Osmotic Computing environments, connectivity issues have to be addressed. This paper investigates these connectivity issues leveraging different network overlays. In particular, we analyze the performance of four network overlays that are OVN, Calico, Weave, and Flannel. Our results give a concrete overview in terms of overhead and performances for each proposed overlay solution, helping us to understand which the best overlay solution is. Specifically, we deployed CoAP and FTP microservices which helped us to carry out these benchmarks and collect the results in terms of transfer times.","","978-1-5386-6488-9","10.1109/CFEC.2018.8358729","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8358729","","Cloud computing;Containers;Internet of Things;Computer architecture;Edge computing;Ecosystems","","22","2","26","IEEE","14 May 2018","","","IEEE","IEEE Conferences"
"A Low-cost Enterprise Application Integration Architecture for Large-scale Environment","C. -C. Huang; C. -Y. Kuo; J. -H. Chen; C. -W. Huang","Telecommunication Laboratories, Chunghwa Telecom Co., Ltd., Taipei, Taiwan (R.O.C); Telecommunication Laboratories, Chunghwa Telecom Co., Ltd., Taipei, Taiwan (R.O.C); Telecommunication Laboratories, Chunghwa Telecom Co., Ltd., Taipei, Taiwan (R.O.C); Telecommunication Laboratories, Chunghwa Telecom Co., Ltd., Taipei, Taiwan (R.O.C)",2019 20th Asia-Pacific Network Operations and Management Symposium (APNOMS),"7 Nov 2019","2019","","","1","4","Enterprise Application Integration (EAI) plays an important role in the enterprise ecosystem. The systems in the enterprise usually communicate with each other through EAI. The way reduces the complexity of system integration because EAI provides uniform interface and central endpoint to the systems. Because EAI stays in the core of the systems, it must be stable enough and can be extensible easily to serve a large amount of requests every day, especially for IoT today. Moreover, we also need a low-cost architecture for supporting the operation of the company, especially for large-scale environment. In order to achieve these goals, we built an flexible EAI based on several open sources to support the services in the telecom, which faces ever-changing requirements today, with several features. First, it can provide SLA based on the importance of the service. Second, the request can be redirected to different backend processes at runtime without interrupting service operation. It supports quick switch between different implementations and the feature increases the availability of the ecosystem. Third, the capacity of the service can be extended easily at every level when the service becomes more important based on a low-cost architecture. Finally, it also can add new machine to the system when the capacity of the whole system is not enough.","2576-8565","978-4-88552-320-5","10.23919/APNOMS.2019.8893023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8893023","Enterprise Application Integration (EAI);Flexible Routing;Extensible;SLA","Containers;Companies;Telecommunications;Fuses;Laboratories;Ecosystems","","3","","12","","7 Nov 2019","","","IEEE","IEEE Conferences"
"SiHoneypot: A Digital Twin-Based Honeypot for Autonomous Vehicles","A. Liatifis; C. Eleftheriadis; Z. Mpatzos; I. Nanos; T. Lagkas; S. Goudos; V. Argyriou; K. E. Psannis; I. D. Moscholios; P. Sarigiannidis","Department of Electrical and Computer Engineering, University of Western Macedonia, Kozani, Greece; Sidroco Holdings Ltd, Nicosia, Cyprus; Sidroco Holdings Ltd, Nicosia, Cyprus; Sidroco Holdings Ltd, Nicosia, Cyprus; Department of Computer Science, International Hellenic University, Kavala, Greece; Department of Physics, Aristotle University of Thessaloniki, Thessaloniki, Greece; Department of Networks and Digital Media, Kingston University London, Surrey, UK; Department of Applied Informatics, University of Macedonia, Thessaloniki, Greece; Department of Informatics and Telecommunications, University of Peloponnese, Tripolis, Greece; Department of Electrical and Computer Engineering, University of Western Macedonia, Kozani, Greece",2024 13th International Conference on Modern Circuits and Systems Technologies (MOCAST),"6 Aug 2024","2024","","","1","4","Autonomous Vehicles (AVs) stand as the vanguard of the automotive industry's evolution, offering a multitude of advantages in terms of transportation efficiency and applications of critical importance. Notably, their interconnection with various smart devices, such as smartphones and associated services, is achieved effortlessly. However, these merits are counterbalanced by significant security risks pertaining to human safety and the potential exposure of personal data. This work introduces SiHoneypot, an innovative honeypot system rigorously crafted to address security challenges intrinsic to AVs. SiHoneypot leverages Digital Twins and incorporates state-of-the-art trends in software deployment, providing a faithful emulation of Autonomous Vehicle systems. Demonstrating its efficacy as a strategic decoy, SiHoneypot affords sufficient time for other security systems to enact responsive measures. Experimental results underscore the minimal resources required for the deployment of SiHoneypot, emphasizing its operational efficiency and resource optimization. Moreover, the inherent extensibility and versatility of SiHoney-pot's architecture are showcased, illustrating its adaptability to evolving security challenges within the dynamic landscape of autonomous vehicular technologies.","2993-4443","979-8-3503-8542-7","10.1109/MOCAST61810.2024.10615785","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10615785","Honeypots;Autonomous Vehicles;Digital Twin;LiDAR Honeypot","Emulation;Transportation;Market research;Time measurement;Software;Sensors;Digital twins","","","","17","IEEE","6 Aug 2024","","","IEEE","IEEE Conferences"
"Leveraging the 5G architecture to mitigate amplification attacks","M. Repetto; A. Carrega; G. Lamanna; J. Yusupov; O. Toscano; G. Bruno; M. Nuovo; M. Cappelli",CNR - Imati; Cnit - S3ITI; Infocom Srl; Turin Polytechnic University in Tashkent; Ericsson Telecomunicazioni; Ericsson Telecomunicazioni; Ericsson Telecomunicazioni; Ericsson Telecomunicazioni,2021 IEEE 7th International Conference on Network Softwarization (NetSoft),"26 Jul 2021","2021","","","443","449","Volumetric (Distributed) Denial of Service attacks remain one of the major threats for any organization, capable of saturating most Internet access links through the usage of botnets and amplification techniques. The only effective mitigation mechanism today is the redirection of the network traffic towards scrubbing centers; this protects the Internet pipe of the victim, but does not prevent wasting resources in other parts of the network.In this paper, we leverage the cloud-native design of the 5G architecture to monitor traffic statistics at the edge of the network, which are then processed by a powerful Analytics ToolKit (ATk). Our work is based on the framework designed by the ASTRID project, which allows to automatically change the inspection probes while chasing a better balance between the granularity of the collected data and the overhead. We demonstrate our approach for an NTP amplification attack; the ATk is first trained with historical data and then used to detect deviations from the expected traffic profile, by switching between normal/warning/alert states. Our preliminary results show that it can correctly distinguish between periodical fluctuations of requests and attacks and tolerate a few data losses.","2693-9789","978-1-6654-0522-5","10.1109/NetSoft51509.2021.9492545","European Commission; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9492545","eBPF;syscall tracing;stegomalware;covert channels;detection","Protocols;5G mobile communication;Volume measurement;Telecommunication traffic;Switches;Inspection;Performance analysis","","2","","16","IEEE","26 Jul 2021","","","IEEE","IEEE Conferences"
"Container and Microservice Driven Design for Cloud Infrastructure DevOps","H. Kang; M. Le; S. Tao",IBM T. J. Watson Research Center; IBM T. J. Watson Research Center; IBM T. J. Watson Research Center,2016 IEEE International Conference on Cloud Engineering (IC2E),"2 Jun 2016","2016","","","202","211","Emerging container technologies, such as Docker, offer unprecedented agility in developing and running applications in cloud environment especially when combined with a microservice-style architecture. However, it is often difficult to use containers to manage the cloud infrastructure, without sacrificing many benefits container offers. This paper identifies the key challenges that impede realizing the full promise of containerizing infrastructure services. Using OpenStack as a case study, we explore solutions to these challenges. Specifically, we redesign OpenStack deployment architecture to enable dynamic service registration and discovery, explore different ways to manage service state in containers, and enable containers to access the host kernel and devices. We quantify the efficiency of the container-based microservice-style DevOps compared to the VM-based approach, and study the scalability of the stateless and stateful containerized components. We also discuss limitations in our current design, and highlight open research problems that, if solved, can lead to wider adoption of containers in cloud infrastructure management.","","978-1-5090-1961-8","10.1109/IC2E.2016.26","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7484185","Cloud computing;OpenStack;container;DevOps","Containers;Computer architecture;Cloud computing;Databases;Runtime;Production","","133","15","49","IEEE","2 Jun 2016","","","IEEE","IEEE Conferences"
"A Compilation-and Remote-Programming-as-a-Service Platform for IoT Devices","P. Charalampidis; A. Fragkiadakis","Institute of Computer Science, Foundation for Research and Technology - Hellas (FORTH-ICS) Heraklion, Crete, Greece; Institute of Computer Science, Foundation for Research and Technology - Hellas (FORTH-ICS) Heraklion, Crete, Greece",2021 IEEE International Conference on Joint Cloud Computing (JCC),"13 Oct 2021","2021","","","80","85","The Internet-of-Things (IoT) presents itself as an emerging technology, which is able to interconnect a massive number of heterogeneous smart objects. These ubiquitous object-enabled networks, which may operate for several years in variable conditions, are used for supporting complex data-driven applications such as smart cities applications, home automation, health monitoring, etc. Throughout their extended lifetime, the devices forming the IoT networks need to be re-programmed, so that new features are added and software bugs or security vulnerabilities are resolved. In this work, we present work-in-progress on the design of a Compilation-and Remote-Programming-as-a-Service platform that enables cloud-based compilation and build of device firmware, as well as remote firmware updates for deployed IoT devices, in a reliable and secure way. We introduce the functional architecture of our platform and elaborate on the interaction of functional components. Our solution can easily support various embedded operating systems and heterogeneous hardware platforms, as well as different communication patterns for firmware transfer.","","978-1-6654-3479-9","10.1109/JCC53141.2021.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9566186","Internet of Things;Cloud computing;Platform-as-a-Service;Cloud compilation;Over-the-air programming","Cloud computing;Smart cities;Operating systems;Reliability engineering;Software;Software reliability;Internet of Things","","","","19","IEEE","13 Oct 2021","","","IEEE","IEEE Conferences"
"Autoscaled RabbitMQ Kubernetes Cluster on single-board computers","I. -C. Donca; C. Corches; O. Stan; L. Miclea","Automation Department, Technical University of Cluj-Napoca, Cluj-Napoca, Romania; Automation Department, Technical University of Cluj-Napoca, Cluj-Napoca, Romania; Automation Department, Technical University of Cluj-Napoca, Cluj-Napoca, Romania; Automation Department, Technical University of Cluj-Napoca, Cluj-Napoca, Romania","2020 IEEE International Conference on Automation, Quality and Testing, Robotics (AQTR)","1 Jul 2020","2020","","","1","6","Lately, Kubernetes has begun to become an essential and ubiquitous component of cloud infrastructure. This is due to the benefits that Kubernetes brings on the market, such as an application-focused interface, plug-and-play processes of horizontal scaling and self-healing mechanisms. In this paper, we present the design and implementation of a model-based self-scaling solution for the RabbitMQ Kubernetes Cluster. We first develop the Ansible formulas for the automatic provision of the infrastructure of the entire cluster. Then, we use these models to dynamically determine the resources needed to complete RabbitMQ work, and we automatically perform a horizontal bridge self-scaling to successfully complete these jobs. Our experimental results are on a single RabbitMQ Kubernetes cluster that is ready to be introduced in the IoT project.","","978-1-7281-7166-1","10.1109/AQTR49680.2020.9129886","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9129886","Microservices;autoscaling;orchestration;Kubernetes;RabbitMQ;availability;failure;raspberry pi","Computers;Bridges;Automation;Conferences;Computational modeling;Microservice architectures;Robots","","7","","23","IEEE","1 Jul 2020","","","IEEE","IEEE Conferences"
"Service Discovery Mechanism for Micro Services in Cloud Computing: Comparative Study","D. Bansal; R. Bathla","Amity Institute of Information Technology, Amity University, Noida, Uttar Pradesh; Amity Institute of Information Technology, Amity University, Noida, Uttar Pradesh",2023 Second International Conference On Smart Technologies For Smart Nation (SmartTechCon),"19 Jan 2024","2023","","","1054","1059","Cloud computing is an online service that is provided as services over the internet. Finding and using the services that are available, which is a crucial component for service-oriented applications, is one of the major challenges in cloud computing. This paper ranks service discovery mechanisms into three major classes: centralized, decentralized, and hybrid. In order to determine and contrast the usefulness and efficiency of various service discovery techniques for cloud computing's microservices, this comparative study looks at several service discovery strategies. It examines existing research papers and studies in order to compare different approaches used for cloud service discovery.A comparison of these methods shows that the decentralized technique depends on a distributed network while the centralized relies on the central registry and the hybrid is a combination of both approaches. This review paper helps researchers who would like to compare analyses of service discovery mechanisms in cloud computing.","","979-8-3503-0541-8","10.1109/SmartTechCon57526.2023.10391383","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10391383","Cloud Computing;Mechanism;Micro Services;Discovery Approaches;Cloud Services","Cloud computing;Microservice architectures","","","","29","IEEE","19 Jan 2024","","","IEEE","IEEE Conferences"
"Utilization of Three Software Size Measures for Effort Estimation in Agile World: A Case Study","H. Ünlü; T. Hacaloglu; F. Büber; K. Berrak; O. Leblebici; O. Demirörs","Computer Engineering Department, Izmir Institute of Technology, Izmir, Turkey; Information Systems Engineering, Atilim University, Ankara, Turkey; Computer Engineering Department, Izmir Institute of Technology, Izmir, Turkey; Computer Engineering Department, Izmir Institute of Technology, Izmir, Turkey; Univera, Inc., Izmir, Turkey; Computer Engineering Department, Izmir Institute of Technology, Izmir, Turkey",2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA),"16 Jan 2023","2022","","","239","246","Functional size measurement (FSM) methods, by being systematic and repeatable, are beneficial in the early phases of the software life cycle for core project management activities such as effort, cost, and schedule estimation. However, in agile projects, requirements are kept minimal in the early phases and are detailed over time as the project progresses. This situation makes it challenging to identify measurement components of FSM methods from requirements in the early phases, hence complicates applying FSM in agile projects. In addition, the existing FSM methods are not fully compatible with today’s architectural styles, which are evolving into event-driven decentralized structures. In this study, we present the results of a case study to compare the effectiveness of different size measures: functional -COSMIC Function Points (CFP)-, event-based - Event Points-, and code length-based - Line of Code (LOC)-on projects that were developed with agile methods and utilized a microservice-based architecture. For this purpose, we measured the size of the project and created effort estimation models based on three methods. It is found that the event-based method estimated effort with better accuracy than the CFP and LOC-based methods.","","978-1-6654-6152-8","10.1109/SEAA56994.2022.00045","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10011525","microservices;CosMIC;effort;size measurement;agile software development;event-based measurement;line of code","Schedules;Codes;Systematics;Estimation;Microservice architectures;Project management;Size measurement","","6","","26","IEEE","16 Jan 2023","","","IEEE","IEEE Conferences"
"Architecture Blueprints to Enable Scalable Vertical Integration of Assets with Digital Twins","F. Schnicke; A. Haque; T. Kuhn; D. Espen; P. O. Antonino","Virtual Engineering, Fraunhofer IESE, Kaiserslautern, Germany; Virtual Engineering, Fraunhofer IESE, Kaiserslautern, Germany; Embedded Systems, Fraunhofer IESE, Kaiserslautern, Germany; Virtual Engineering, Fraunhofer IESE, Kaiserslautern, Germany; Virtual Engineering, Fraunhofer IESE, Kaiserslautern, Germany",2022 IEEE 27th International Conference on Emerging Technologies and Factory Automation (ETFA),"25 Oct 2022","2022","","","1","8","Many Industry 4.0 use cases require the integration of live data, e.g., from sensors and devices. However, the large number of legacy fieldbus protocols and proprietary data formats turns this integration into an effort-consuming task. As the number of digital twins in a factory increases rapidly, data source integration has to scale well. Until now, little guidance is available on how to implement this integration in a scalable and reusable manner for Industry 4.0. To close this gap, we define five architecture blueprints based on our experience in various Industry 4.0 projects. These blueprints detail various integration scenarios differentiated by key attributes like frequency of data consumption and data production. In these architecture blueprints, two core components, the Updater and the Delegator, are identified. By providing and evaluating our open-source implementation of these two components, we show the feasibility of the defined blueprints. Utilizing the provided open-source components and the defined architecture blueprints will benefit practitioners as well as researchers when it comes to data integration with digital twins.","","978-1-6654-9996-5","10.1109/ETFA52439.2022.9921728","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9921728","Digital Twins;Vertical Integration;Scalability;Asset Administration Shell;IoT;Industry 4.0;Architecture","Protocols;Soft sensors;Data integration;Production facilities;Fourth Industrial Revolution;Digital twins;Task analysis","","8","","24","IEEE","25 Oct 2022","","","IEEE","IEEE Conferences"
"A Toolbox for Realtime Timeseries Anomaly Detection","M. böbel; I. Gerostathopoulos; T. Bures","TU Munich and DXC Technology, Munich, Germany; Vrije Universiteit Amsterdam, Amsterdam, Netherlands; Charles University in Prague, Prague, Czech Republic",2020 IEEE International Conference on Software Architecture Companion (ICSA-C),"19 May 2020","2020","","","278","281","Software architecture practice relies more and more on data-driven decision-making. Data-driven decisions are taken either by humans or by software agents via analyzing streams of timeseries data coming from different running systems. Since the quality of sensed data influences the analysis and subsequent decision-making, detecting data anomalies is an important and necessary part of any data analysis and data intelligence pipeline (such as those typically found in smart and self-adaptive systems). Although a number of data science libraries exist for timeseries anomaly detection, it is both time consuming and hard to plug realtime anomaly detection functionality in existing pipelines. The problem lies with the boilerplate code that needs to be provided for common tasks such as data ingestion, data transformation and preprocessing, invoking of model re-training when needed, and persisting of identified anomalies so that they can be acted upon or further analysed. In response, we created a toolbox for realtime anomaly detection that automates the above common tasks and modularizes the anomaly detection process in a number of clearly defined components. This serves as a plug-in solution for architecting and development of smart systems that have to adapt their behavior at runtime. In this paper, we describe the microservice architecture used by our toolbox and explain how to deploy it for obtaining an out-of-the-box solution for realtime anomaly detection out of ready-to-use components. We also provide an initial assessment of its performance.","","978-1-7281-7415-0","10.1109/ICSA-C50368.2020.00053","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9095724","data-driven decisions;anomaly detection;toolbox;timeseries","Anomaly detection;Data models;Training;Databases;Predictive models;Monitoring;Smoothing methods","","2","","10","IEEE","19 May 2020","","","IEEE","IEEE Conferences"
"Software Patterns to Identify Credit Risk Patterns","S. Bhatore; Y. R. Reddy; L. M. Sanagavarapu; S. S. Chandra","Software Engineering Research Centre, IIIT Hyderabad, India; Software Engineering Research Centre, IIIT Hyderabad, India; Software Engineering Research Centre, IIIT Hyderabad, India; IIIT Hyderabad, India",2020 IEEE 17th India Council International Conference (INDICON),"5 Feb 2021","2020","","","1","8","The adoption of Machine Learning (ML) in software applications has increased in domains like healthcare, banking and others. leading to coining of the term MLWare applications. However, challenges like diverse code base, complex components, lack of expertise, etc. persist in development and maintenance of these applications. Application of software engineering patterns and practices for the development of MLWare applications can improve maintainability, extensibility, scalability and other software quality parameters. In this paper, we propose an approach for developing MLWare applications using a pattern oriented approach. We demonstrate the approach on a credit risk scorecard application that can helps loan officer identify risk patterns and make loan decisions.","2325-9418","978-1-7281-6916-3","10.1109/INDICON49873.2020.9342579","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9342579","Machine Learning;Software Architecture;Software Design;Credit Scoring","Scalability;Machine learning;Computer architecture;Banking;Transforms;Software quality;Software reliability","","","","36","IEEE","5 Feb 2021","","","IEEE","IEEE Conferences"
"Monitoring V2X applications using DevOps and docker","J. Rufino; M. Alam; J. Ferreira","Instituto de Telecomunicaçòes, Aveiro, Portugal; Instituto de Telecomunicaçòes, Aveiro, Portugal; Instituto de Telecomunicaçòes, Aveiro, Portugal",2017 International Smart Cities Conference (ISC2),"2 Nov 2017","2017","","","1","5","Vehicular communications are gaining one of the largest share of the automotive IoT market. The combination of the automotive sector with the transportation resulted in the emergence of the concept of connected vehicles. Therefore, motivating new proposals for real-time applications for managing traffic and incident alerts to improve the overall mobility and road safety. The growing demand for new and better solutions lead to two of the biggest challenges faced in IoT - scalability and interoperability. Therefore in this paper, we propose an highly modular and easily distributable architecture built upon DevOps practices and relying on edge computing to enable V2X applications to be easily deployed and monitored in real-time. The architecture was implemented and a vehicular application was divided in small modules to validate the functionalities of the proposed architecture.","","978-1-5386-2524-8","10.1109/ISC2.2017.8090868","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8090868","Vehicular Networks;V2X;Docker;DevOps;Wireless Communication","Computer architecture;Monitoring;Automotive engineering;Sensors;Logic gates;Real-time systems;Scalability","","8","","12","IEEE","2 Nov 2017","","","IEEE","IEEE Conferences"
"Zero-Touch Network Orchestration At The Edge","R. Nejabati; S. Moazzeni; P. Jaisudthi; D. Simenidou","High-Performance Network Group, Smart Internet Lab University of Bristol, UK; High-Performance Network Group, Smart Internet Lab University of Bristol, UK; High-Performance Network Group, Smart Internet Lab University of Bristol, UK; High-Performance Network Group, Smart Internet Lab University of Bristol, UK",2021 International Conference on Computer Communications and Networks (ICCCN),"31 Aug 2021","2021","","","1","5","In this paper, we present a zero-touch network orchestrator to autonomously provide an end-to-end orchestration platform to orchestrate, monitor, and profile network services. Subsequently, we describe a new method to autonomously generate performance profiles of these network services and compute optimum resources required to meet the given KPIs and performance targets.","2637-9430","978-1-6654-1278-0","10.1109/ICCCN52240.2021.9522194","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9522194","network service orchestration;Autonomous Profiling;end to end monitoring;performance prediction;resource utilization","Service function chaining;Computational modeling;Predictive models;Monitoring","","9","","16","IEEE","31 Aug 2021","","","IEEE","IEEE Conferences"
"An Experimental Study of Software Aging and Rejuvenation in Dockerd","M. Torquato; M. Vieira","Department of Informatics Engineering, University of Coimbra, Coimbra, Portugal; Department of Informatics Engineering, University of Coimbra, Coimbra, Portugal",2019 15th European Dependable Computing Conference (EDCC),"7 Nov 2019","2019","","","1","6","Virtualized containers are being extensively used to host applications as they substantially reduce the overhead caused by conventional virtualization techniques. Therefore, as containers adoption grows, the need for dependability also increases. Dockerd, the process that is in charge of Docker containers management, is supposed to support long-running systems, which makes it prone to the well-known problem of software aging. This paper presents an experimental study of software aging and rejuvenation targeting the dockerd daemon. We used the SWARE approach to conduct the experimentation, which encompasses three phases: i) stress - stress environment with the accelerated workload to induce bugs activation; ii) wait - stop the workload submission to observe possible accumulated effects and; iii) rejuvenation - submit a rejuvenation action to perceive changes in the internal software state. The experiment runs for 26 days, and results show that dockerd suffers from software aging effects after the stress phase. The accumulated effects remain in the system until a complete cleanup, comprising removing all the containers and rebooting the operating system.","2641-810X","978-1-7281-3929-6","10.1109/EDCC.2019.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8893292","Software aging and rejuvenation;Container;Docker;Dependability;SWARE approach","Software;Aging;Containers;Stress;Computer bugs;Computer architecture;Virtual machining","","15","","16","IEEE","7 Nov 2019","","","IEEE","IEEE Conferences"
"μ Viz: Visualization of Microservices","S. Silva; J. Correia; A. Bento; F. Araujo; R. Barbosa","Department of Informatics Engineering, Centre for Informatics and Systems of the University of Coimbra, Portugal; Department of Informatics Engineering, Centre for Informatics and Systems of the University of Coimbra, Portugal; Department of Informatics Engineering, Centre for Informatics and Systems of the University of Coimbra, Portugal; Department of Informatics Engineering, Centre for Informatics and Systems of the University of Coimbra, Portugal; Department of Informatics Engineering, Centre for Informatics and Systems of the University of Coimbra, Portugal",2021 25th International Conference Information Visualisation (IV),"28 Oct 2021","2021","","","120","128","Microservice architectures have become very popular and widely adopted by the industry, because of the benefits they bring to the software development process and resulting systems, such as parallel development, modularity and scalability. However, as interfaces become more fine-grained and systems grown in size, complexity is moved from the component services to their interactions, eventually leading to intricate workflows that are hard to observe, visualize, and understand. This problem is compounded by the typically high workloads that produce intractable amounts of observation data. To deal with these challenges, operators need support from tools able to take in observation data, in particular tracing, and provide a fast and intuitive understanding of which components or workflows require attention and how are they affecting a module, service, instance, or the whole application. In this paper, we present the design of a microservice visualization application that can fill a gap that exists in leveraging tracing data, aggregating and navigating it in ways that are actionable for operators. Our application provides multiple views of the system and uses spatial and hierarchical navigation using flip zoom to simplify their exploration, while preserving context. Our application can provide a better understanding of the system than existing applications that lack navigability and do not preserve context when switching between different services, layers or views.","2375-0138","978-1-6654-3827-8","10.1109/IV53921.2021.00028","Foundation for Science and Technology; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9582675","Microservices;workflows;visualization;tracing;dashboards","Industries;Navigation;Scalability;Data visualization;Prototypes;Switches;Tools","","1","","30","IEEE","28 Oct 2021","","","IEEE","IEEE Conferences"
"Performance evaluation in the migration process from a monolithic application to microservices","D. Guaman; L. Yaguachi; C. C. Samanta; J. H. Danilo; F. Soto","Universidad Tecnica Particular de Loja, Loja, Loja, EC; Universidad Tecnica Particular de Loja, Loja, Loja, EC; Universidad Tecnica Particular de Loja, Loja, Loja, EC; Universidad Tecnica Particular de Loja, Loja, Loja, EC; Universidad Tecnica Particular de Loja, Loja, Loja, EC",2018 13th Iberian Conference on Information Systems and Technologies (CISTI),"28 Jun 2018","2018","","","1","8","Microservices are considered as a software architecture that allows the decomposition of a system, its components or its functionalities into a set of small services, which are implemented, deployed and managed independently. In this study, the models that allow migrating a Monolith to Microservices such as NGINX and IBM are analyzed. From these models, activities that allow such migration are carefully selected and identified. In order to implement and evaluate the activities proposed in those models, an application that initially does not have any structure at the design and coding level (using PHP programming language) is applied. Then, the application's coding language changes to Java and the classes and libraries are distributed into packages. Subsequently, as it is suggested in the models, services are identified and implemented using RESTful Web Services to finally implement the microservices using technologies such as Spring Boot, Eureka, and Zuul. In the migration process, the application under study is modified at the code and design level, including patterns such as Singleton, Façade, Strangler, Single Service per Host, Service Discovery, and API Gateway, which are used to evaluate performance as a quality attribute in each migration phase. In order to obtain the performance related metrics and to analyze the advantages and disadvantages of each migration phase, Apache JMeter as tool is used. This tool is set up to generate results regarding the use of resources such as CPU, memory, network, and database access. Finally, the results show scenarios of several concurrent users who access to consult records in the database that uses the aforementioned application in each migration phase.","","978-989-98434-8-6","10.23919/CISTI.2018.8399148","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8399148","microservices;migration process;monolithic architecture;performance","Java;Web services;Logic gates;Encoding;Tools;Databases","","5","","","","28 Jun 2018","","","IEEE","IEEE Conferences"
"Mobile-App Analysis and Instrumentation Techniques Reimagined with DECREE","Y. Zhao","Advisor: Nenad Medvidovic, University of Southern California",2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion),"19 Aug 2019","2019","","","218","221","A large number of mobile-app analysis and instrumentation techniques have emerged in the past decade. However, those techniques' components are difficult to extract and reuse outside their original tools, their evaluation results are hard to reproduce, and the tools themselves are hard to compare. This paper introduces DECREE, an infrastructure intended to guide such techniques to be reproducible, practical, reusable, and easy to adopt in practice. DECREE allows researchers and developers to easily discover existing solutions to their needs, enables unbiased and reproducible evaluation, and supports easy construction and execution of replication studies. The paper describes DECREE's three modules and its potential to fundamentally alter how research is conducted in this area.","2574-1934","978-1-7281-1764-5","10.1109/ICSE-Companion.2019.00086","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8802744","mobile computing;program analysis;architecture;reusability","Instruments;Testing;Prefetching;Static analysis;Runtime;Mobile computing;Monitoring","","","","15","IEEE","19 Aug 2019","","","IEEE","IEEE Conferences"
"A Cloud-based Development Environment using HLA and Kubernetes for the Co-simulation of a Corporate Electric Vehicle Fleet","K. Rehman; O. Kipouridis; S. Karnouskos; O. Frendo; H. Dickel; J. Lipps; N. Verzano","SAP, Dietmar Hopp Allee 16, Walldorf, Germany; SAP, Dietmar Hopp Allee 16, Walldorf, Germany; SAP, Dietmar Hopp Allee 16, Walldorf, Germany; SAP, Dietmar Hopp Allee 16, Walldorf, Germany; SAP, Dietmar Hopp Allee 16, Walldorf, Germany; SAP, Dietmar Hopp Allee 16, Walldorf, Germany; SAP, Dietmar Hopp Allee 16, Walldorf, Germany",2019 IEEE/SICE International Symposium on System Integration (SII),"29 Apr 2019","2019","","","47","54","Decision makers in modern enterprises need to assess so-called ""what-if"" scenarios and select the best of breed among the available alternatives. Although simulation plays a pivotal role in niche cases, it is an undervalued tool in the broader enterprise context. Its proliferation has not kept up with recent technological advances such as big data, cloud computing, graphics processing units clusters, and cross-layer enterprise integration. Based on such new developments, new capabilities can be realized that go beyond single-purpose simulations, and are an excellent fit for studying heterogeneous, independently developed System-of-Systems (SoS), in a multitude of scenarios in complex and dynamic enterprise environments. Co-simulation efforts can provide new insights on the enterprise operations including compelling visualizations of possible simulated alternatives, thereby assisting decision makers in their strategy selection. To move beyond niche applications, however, simulated systems need to integrate in real-time, a continually increasing amount of data (both real and simulated), stemming from various domains and their systems. This work presents a way to achieve such distributed simulations in modern enterprise environments, based on HighLevel Architecture (HLA), as well as their coordination via the Run-Time Infrastructure (RTI). In an example scenario featuring a co-simulation of a corporate electric vehicle fleet, it is shown how various software subsystems interact to enable business users to visually investigate scenarios, as well as how such a system can be deployed and operated within a modern enterprise IT landscape.","2474-2325","978-1-5386-3615-2","10.1109/SII.2019.8700423","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8700423","","Containers;Computer architecture;Tools;Data visualization;Solid modeling;Three-dimensional displays;Data models","","7","","21","IEEE","29 Apr 2019","","","IEEE","IEEE Conferences"
"AnB: Application-in-a-Box to Rapidly Deploy and Self-optimize 5G Apps","K. Rao; M. Sankaradas; G. Coviello; C. G. De Vita; G. Mellone; W. -P. Hsiung; S. Chakradhar","NEC Laboratories America, Inc., Princeton, NJ and San Jose, CA; NEC Laboratories America, Inc., Princeton, NJ and San Jose, CA; NEC Laboratories America, Inc., Princeton, NJ and San Jose, CA; NEC Laboratories America, Inc., Princeton, NJ and San Jose, CA; NEC Laboratories America, Inc., Princeton, NJ and San Jose, CA; NEC Laboratories America, Inc., Princeton, NJ and San Jose, CA; NEC Laboratories America, Inc., Princeton, NJ and San Jose, CA",2023 IEEE International Conference on Smart Computing (SMARTCOMP),"7 Aug 2023","2023","","","82","89","We present ""Application in a Box"" (AnB) product concept aimed at simplifying the deployment and operation of remote 5G applications. AnB comes pre-configured with all necessary hardware and software components, including sensors like cameras, hardware and software components for a local 5G wireless network, and 5G-ready apps. Enterprises can easily download additional apps from an App Store. Setting up a 5G infrastructure and running applications on it is a significant challenge, but AnB is designed to make it fast, convenient, and easy, even for those without extensive knowledge of software, computers, wireless networks, or AI-based analytics. With AnB, customers only need to open the box, set up the sensors, turn on the 5G networking and edge computing devices, and start running their applications. Our system software automatically deploys and optimizes the pipeline of microservices in the application on a tiered computing infrastructure that includes device, edge, and cloud computing. Application scalability, dynamic resource management, placement of critical tasks for low-latency response, and dynamic network bandwidth allocation for efficient 5G network usage are all automatically orchestrated.AnB offers cost savings, simplified setup and management, and increased reliability and security. We’ve implemented several real-world applications, such as collision prediction at busy traffic light intersections and remote construction site monitoring using video analytics. With AnB, deployment and optimization effort can be reduced from several months to just a few minutes. This is the first-of-its-kind approach to easing deployment effort and automating self-optimization of the application during system operation.","2693-8340","979-8-3503-2281-1","10.1109/SMARTCOMP58114.2023.00028","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10207656","5G wireless network;MEC;enterprise applications;fast and easy deployment;edge and cloud computing","Wireless sensor networks;Cloud computing;5G mobile communication;Wireless networks;Visual analytics;Systems operation;Dynamic scheduling","","1","","11","IEEE","7 Aug 2023","","","IEEE","IEEE Conferences"
"Design Scheme for Data Transmission Component of Electric Internet of Things Management Platform","J. Hou; J. Zhao; F. Lv; M. He; C. Chen; W. Sun; X. Peng","NARI Technology Co.,LTD, NARI Group Corporation (State Grid Electric Power Research Institute), Nanjing, China; NARI Technology Co.,LTD, NARI Group Corporation (State Grid Electric Power Research Institute), Nanjing, China; NARI Technology Co.,LTD, NARI Group Corporation (State Grid Electric Power Research Institute), Nanjing, China; NARI Technology Co.,LTD, NARI Group Corporation (State Grid Electric Power Research Institute), Nanjing, China; NARI Technology Co.,LTD, NARI Group Corporation (State Grid Electric Power Research Institute), Nanjing, China; NARI Technology Co.,LTD, NARI Group Corporation (State Grid Electric Power Research Institute), Nanjing, China; NARI Technology Co.,LTD, NARI Group Corporation (State Grid Electric Power Research Institute), Nanjing, China",2020 IEEE/IAS Industrial and Commercial Power System Asia (I&CPS Asia),"29 Sep 2020","2020","","","1498","1505","The power Internet of things (IOT) integrates the power generation, transmission, transformation, distribution, consumption and so on, which has been rapidly developed and applied in the power field. The type and data transmission mode of access devices are becoming more and more complex. The number of access devices and the amount of data transmission are also increasing rapidly. According to this situation, a new architecture design for ubiquitous power IOT access system based on classification of data transmission characteristics is proposed, which classifies data transmission channels according to data transmission characteristics in the field of ubiquitous power IOT, and provides different solutions for each data transmission characteristic; In this scheme, the transmission channels with different data transmission characteristics are designed as independent and deployment component programs. Each scheme provide the expansion method of massive equipment access. In practical scenarios, according to the characteristics of device transmission, components can be flexibly selected for accessing and data transmission of mass devices.","","978-1-7281-4303-3","10.1109/ICPSAsia48933.2020.9208511","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9208511","electric internet of things(EIOT);architecture design;component data transmission;horizontal scaling;transmission security;micro-service","Data communication;Protocols;Power systems;Data acquisition;Real-time systems;Business;Reliability","","3","","22","IEEE","29 Sep 2020","","","IEEE","IEEE Conferences"
"A Generic Framework for Resource-Limited Microcontrollers Deployment in I-IoT Systems","B. A. Naim; Y. Ghafourian; A. Ryabokon; F. Flamigni; R. Baldrian","Research Studios Austria FG mbH, St. Pölten, Austria; Research Studios Austria FG mbH, St. Pölten, Austria; Research Studios Austria FG mbH, St. Pölten, Austria; TTTech Computertechnik AG, Wien, Austria; ZELOSPLANT Indoor Solutions GmbH, Oberwart, Austria",NOMS 2024-2024 IEEE Network Operations and Management Symposium,"2 Jul 2024","2024","","","1","6","Incorporating various AI-controlled devices coupled with a human-centric focus in the industrial process has revolutionized the industry, leading the shift from Industry 4.0 to Industry 5.0. Devices like sensors and actuators lack essential computational resources. Thus, they rely on microcontrollers to be networked to send and receive data. The proliferation of a broad palette of inexpensive, resource-limited microcontrollers has motivated industries to integrate them into their industrial processes or to build industrial prototypes. However, installing and networking those microcontrollers in factory areas is tedious and has many critical requirements at various security, technical, scalability, flexibility, and data flow levels. It also poses additional challenges in terms of writing software for the microcontrollers, involving a lot of manual work, hardcoding, and complex configurations to allow for proper and secure communication with subscribed data consumers. This paper introduces a novel generic framework and software components addressing the mentioned challenges. This generic framework enables configuring and networking of microcontrollers and IIoT devices in the deployment phase at the field and edge levels, achieving more security, flexibility, and scalability.","2374-9709","979-8-3503-2793-9","10.1109/NOMS59830.2024.10575590","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10575590","I-IoT;Microcontroller Deployment;Integration Framework;Integration Management;Networking;Data Communication;Service-oriented Architecture;Onboarding;Security;Arduino","Industries;Microcontrollers;Scalability;Prototypes;Writing;Software;Production facilities","","","","27","IEEE","2 Jul 2024","","","IEEE","IEEE Conferences"
"IoT data collection and analysis services on CloudUT","A. Hangan; Z. Czako; G. Sebestyen","Computer Science Department, Technical University of Cluj-Napoca, Romania; Computer Science Department, Technical University of Cluj-Napoca, Romania; Computer Science Department, Technical University of Cluj-Napoca, Romania",2021 IEEE 17th International Conference on Intelligent Computer Communication and Processing (ICCP),"16 Mar 2022","2021","","","85","91","As part of CloudUT, a cloud infrastructure and platform for research, we introduce the IoT service with the objective of creating a support infrastructure for research projects that involve sensor-based monitoring and data analysis tasks. This service aims to reduce the costs of acquiring data storage and processing resources and to reduce the development time and cost of custom software components. In this paper we present the functionalities provided through this service. Moreover, we describe the IoT service architecture, its components, as well as the challenge of re-designing and extending existing tools to obtain a cloud-native solution that can be scaled to accommodate multiple users and to reduce the execution time of the analysis procedures.","","978-1-6654-0976-6","10.1109/ICCP53602.2021.9733537","European Social Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9733537","IoT;cloud services;sensor data;data analysis;microservices;machine learning","Cloud computing;Data analysis;Costs;Microservice architectures;Memory;Data collection;Sensors","","","","15","IEEE","16 Mar 2022","","","IEEE","IEEE Conferences"
"Localizing Failure Root Causes in a Microservice through Causality Inference","Y. Meng; S. Zhang; Y. Sun; R. Zhang; Z. Hu; Y. Zhang; C. Jia; Z. Wang; D. Pei",Beijing National Research Center for Information Science and Technology (BNRist); Nankai University; Nankai University; Nankai University; Nankai University; Alibaba Group; Alibaba Group; Alibaba Group; Beijing National Research Center for Information Science and Technology (BNRist),2020 IEEE/ACM 28th International Symposium on Quality of Service (IWQoS),"6 Oct 2020","2020","","","1","10","An increasing number of Internet applications are applying microservice architecture due to its flexibility and clear logic. The stability of microservice is thus vitally important for these applications' quality of service. Accurate failure root cause localization can help operators quickly recover microservice failures and mitigate loss. Although cross-microservice failure root cause localization has been well studied, how to localize failure root causes in a microservice so as to quickly mitigate this microservice has not yet been studied. In this work, we propose a framework, MicroCause, to accurately localize the root cause monitoring indicators in a microservice. MicroCause combines a simple yet effective path condition time series (PCTS) algorithm which accurately captures the sequential relationship of time series data, and a novel temporal cause oriented random walk (TCORW) method integrating the causal relationship, temporal order, and priority information of monitoring data. We evaluate MicroCause based on 86 real-world failure tickets collected from a top tier global online shopping service. Our experiments show that the top 5 accuracy (AC@5) of MicroCause for intra-microservice failure root cause localization is 98.7%, which is greatly higher (by 33.4 %) than the best baseline method.","1548-615X","978-1-7281-6887-6","10.1109/IWQoS49365.2020.9213058","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9213058","","Measurement;Time series analysis;Quality of service;Monitoring;Middleware;Random variables;Databases","","74","","24","IEEE","6 Oct 2020","","","IEEE","IEEE Conferences"
"A Platform-Based Approach to Implementation of Future Smart Distributed Energy Control Systems","S. P. Kovalyov; A. A. Nebera","V. A. Trapeznikov Institute of Control Sciences of Russian Academy of Sciences, Moscow, Russia; JSC RTSoft, Moscow, Russia","2020 2nd International Conference on Control Systems, Mathematical Modeling, Automation and Energy Efficiency (SUMMA)","17 Dec 2020","2020","","","608","613","Smart distributed energy is a combination of advanced power supply and information technologies that enable reliable and efficient management of circuit segments with distributed energy sources, electric energy storage systems, and controlled load. Smooth operation of such segments requires high level of unification and automation for such procedures as information exchange between participants of management cycles, optimal operation planning for equipment included into physical or virtual groups, clearing of financial transactions, etc. In order to meet such requirements with minimal time and labor, it is proposed to compose and operate applied control systems within the framework of a digital platform. The platform architecture is presented based upon reusable functional microservices, viz. small, loosely connected, and easily modifiable components with an open application program interface, that interact in a unified information environment. Applications that automate various business functions of smart distributed energy control are composed from calls to microservices, adapters of interaction with external systems, and graphical user interface. Algorithms are presented as part of the platform's mathematical means, for automatic modeling and analyzing electrical modes, forecasting load/generation and external technical and economic factors, and solving optimization control problems. Procedures for composing and operating digital twins of smart distributed energy objects over the platform's data bases and streams are described.","","978-1-7281-8840-9","10.1109/SUMMA50634.2020.9280709","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9280709","smart distributed energy;digital platform;load and generation forecast;optimal equipment operation planning","Automation;Virtual groups;Predictive models;Control systems;Stability analysis;Planning;Mathematical model","","3","","22","IEEE","17 Dec 2020","","","IEEE","IEEE Conferences"
"Effort Prediction for Microservices: A Case Study","H. Ünlü; T. Hacaloğlu; O. Leblebici; O. Demirörs","Bilgisayar Mühendisliği Bölümü, İzmir Yüksek Teknoloji Enstitüsü, İzmir, Türkiye; Bilişim Sistemleri Mühendisliği, Atılım Üniversitesi, Ankara, Türkiye; Univera Bilgisayar Sistemleri, İzmir, Türkiye; Bilgisayar Mühendisliği Bölümü, İzmir Yüksek Teknoloji Enstitüsü, İzmir, Türkiye",2021 15th Turkish National Software Engineering Symposium (UYMS),"5 Jan 2022","2021","","","1","6","Software size measurement is critical as an input to perform important project management processes such as effort, cost and schedule estimation. Functional size measurement (FSM) methods are beneficial in terms of being applicable in the early phases of the software life cycle over functional requirements and providing a systematic and repeatable method. However, in agile organizations, it can be challenging to seperate measurement components of FSM methods from requirements in the early phases as the documentation is kept to a minimum compared to traditional methods such as the Waterfall Model and is detailed as the project steps. In addition, the existing FSM methods are not fully compatible with today's architectural structures, which are from being data-driven and to evolve into a behaviour-oriented structure. In this study, we performed a case study which includes a project developed with agile methods and using microservice-based architecture to compare the effectiveness of COSMIC FSM and event-based software size measurement. For this purpose, we measured the size of the project and created effort estimation models based on two methods. The measurers had difficulty in applying both methods due to the limited detail level of the requirements in the project. However, the event-based method was found to estimate effort with less error than the COSMIC FSM method.","","978-1-6654-1070-0","10.1109/UYMS54260.2021.9659766","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9659766","COSMIC;effort;size measurement;agile software development;event-based measurement","Size measurement;Software;Software measurement;Phase measurement;Microservice architectures;Estimation;Systematics","","3","","","IEEE","5 Jan 2022","","","IEEE","IEEE Conferences"
"Towards Optimal Load Balancing in Multi-Zone Kubernetes Clusters via Reinforcement Learning","J. Santos; T. Wauters; F. D. Turck; P. Steenkiste","Department of Information Technology, Ghent University - Imec, IDLab, Gent, Belgium; Department of Information Technology, Ghent University - Imec, IDLab, Gent, Belgium; Department of Information Technology, Ghent University - Imec, IDLab, Gent, Belgium; Department of Computer Science and Electrical and Computer Engineering, Carnegie Mellon University, Pittsburgh, USA",2024 33rd International Conference on Computer Communications and Networks (ICCCN),"22 Aug 2024","2024","","","1","9","With the advent of container technology, companies have been developing microservice-based applications, converting the old monolithic software into a group of loosely coupled containers, with the aim of offering greater flexibility and improving operational efficiency. When users access microservices, their initial point of contact is typically a load balancer. This component is responsible for distributing incoming traffic or requests between multiple instances of microservices. Traditional load balancing approaches mainly rely on round-robin, or weighted roundrobin algorithms which are inadequate to maintain the overall performance and scalability of microservice-based applications. Microservices are often deployed in dynamic environments needing a more adaptive and efficient load balancing strategy to optimize resources and reduce the overall latency for end users. This paper presents a dynamic load balancer for Kubernetes (K8s) clusters based on Reinforcement Learning (RL). It aims to minimize the overall latency while promoting fair distribution of requests. To achieve this goal, the load balancer considers both current network delays and processing loads in the cluster. The evaluation shows that our solution is effective even in environments where both the network traffic and the processing loads in the cluster change dynamically over time. In addition, this study highlights the flexibility of DeepSets neural networks in solving the load balancing challenge in diverse setups without retraining. The results show that the DeepSets algorithms can solve the microservice load balancing problem even in scenarios up to 30 times larger than the trained setup.","2637-9430","979-8-3503-8461-1","10.1109/ICCCN61486.2024.10637606","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10637606","Load Balancing;Reinforcement Learning;Microservices;Kubernetes;Containers","Heuristic algorithms;Scalability;Neural networks;Microservice architectures;Reinforcement learning;Telecommunication traffic;Containers","","1","","31","IEEE","22 Aug 2024","","","IEEE","IEEE Conferences"
"From Monolithic Architecture Style to Microservice one Based on a Semi-Automatic Approach","A. Selmadji; A. -D. Seriai; H. L. Bouziane; R. Oumarou Mahamane; P. Zaragoza; C. Dony","LIRMM, University of Montpellier; CNRS, Montpellier, France; LIRMM, University of Montpellier; CNRS, Montpellier, France; LIRMM, University of Montpellier; CNRS, Montpellier, France; LIRMM, University of Montpellier, Montpellier, France; LIRMM, University of Montpellier; CNRS, Montpellier, France; LIRMM, University of Montpellier; CNRS, Montpellier, France",2020 IEEE International Conference on Software Architecture (ICSA),"27 May 2020","2020","","","157","168","Due to its tremendous advantages, microservice architectural style has become an essential element for the development of applications deployed on the cloud and for those adopting the DevOps practices. Nevertheless, while microservices can be used to develop new applications, there are monolithic ones, that are not well adapted neither to the cloud nor to DevOps. Migrating these applications towards microservices appears as a solution to adapt them to both. In this context, we propose an approach aiming to achieve this objective by focusing on the step of microservices identification. The proposed identification, in this paper, is based on an analysis of the relationships between source code elements, their relationships with the persistent data manipulated in this code and finally the knowledge, often partial, of the architect concerning the system to migrate. A function that measures the quality of a microservice based on its ability to provide consistent service and its interdependence with others microservice in the resulting architecture was defined. Moreover, the architect recommendations are used, when available, to guide the identification process. The conducted experiment shows the relevance of the obtained microservices by our approach.","","978-1-7281-4659-1","10.1109/ICSA47634.2020.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9101266","Object-Oriented;microservices;software migration;identification;architect recommendations;software architecture;quality.","Measurement;Computer architecture;Software;Business;Semantics;Couplings;Databases","","30","","27","IEEE","27 May 2020","","","IEEE","IEEE Conferences"
"Protagoras: A Service for Tagging E-Commerce Products at Scale","A. N. Fauzan; R. Mardiko; P. Galih",Bukalapak AI RD PT Bukalapak.com; Bukalapak AI RD PT Bukalapak.com; Bukalapak AI RD PT Bukalapak.com,2018 International Conference on Advanced Computer Science and Information Systems (ICACSIS),"20 Jan 2019","2018","","","1","5","Despite widespread adoption of machine learning to solve real world problems, the implementation of ML solutions in production environment is more complicated than it seems. It is quite straightforward to write machine learning codes these days but they are not designed to be deployed in production scale where millions of requests per day is a norm. In this paper, we describe our implementation of a ML service for large scale product tagging in e-commerce called Protagoras. The problem of tagging products can be seen as multi-label classification where the labels are product tags. By performing the classification within each product category, the precision can be increased and the inference can be performed faster. Protagoras combined the scalability and speed of microservice implementation in Golang and robust machine learning implementation in Python. We present the architecture of the system with all its components including API endpoints, job queue, database, and monitoring. The benchmark shows that, even with 1000 classifiers in one category, the average latency for online inference is below 300 millisecond. The throughput can be further maximized by replicating the service into multiple servers.","2330-4588","978-1-7281-0135-4","10.1109/ICACSIS.2018.8618144","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8618144","e-commerce;scalability;high-performance ML systems;multi-label classification","Training;Databases;Machine learning;Libraries;Visualization;Production;Tagging","","","","9","IEEE","20 Jan 2019","","","IEEE","IEEE Conferences"
"Machine Learning Orchestration in Cloud Environments: Automating the Training and Deployment of Distributed Machine Learning AI Model","I. Sakthidevi; G. V. Rajkumar; R. Sunitha; A. Sangeetha; R. S. Krishnan; S. Sundararajan","Department of Information Technology, Adhiyamaan College of Engineering, Hosur, India; Department of Electronics and Communication Engineering, JP College of Engineering, Thenkasi, India; Department of Electronics and Communication Engineering, Rajarajeswari College of Engineering, Bangalore, India; Department of Information Technology, PSNA College of Engineering and Technology, Dindigul, India; Department of Electronics and Communication Engineering, SCAD College of Engineering and Technology, Cheranmahadevi, India; Department of Mechanical Engineering, SCAD College of Engineering and Technology, Cheranmahadevi, India","2023 7th International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC)","26 Oct 2023","2023","","","376","384","The rapid advancement of machine learning (ML) and artificial intelligence (AI) has created an increasing demand for efficient and automated processes in training and deploying AI models. In cloud environments, where vast computational resources are available, orchestrating the entire lifecycle of machine learning workflows becomes crucial to leverage the scalability and flexibility offered by the cloud infrastructure. This research study proposes a novel system architecture and simulation model for machine learning orchestration in cloud environments, aiming to automate the training and deployment of using Distributed Machine Learning (DML) AI model. The proposed system architecture consists of three key components: Job Manager, Resource Manager, and Model Repository. The Job Manager handles the scheduling and coordination of machine learning tasks, ensuring efficient resource allocation and utilization. The Resource Manager dynamically manages the allocation and provisioning of computing resources based on workload demands. The Model Repository acts as a centralized repository for storing and versioning AI models, enabling seamless model deployment and updates. To evaluate the effectiveness and performance of the proposed system architecture, a simulation model is developed. The simulation model provides a virtual environment that mimics real-world cloud scenarios, allowing for extensive experimentation and analysis. Various performance metrics such as training time, resource utilization, and scalability are measured and compared against baseline approaches to demonstrate the superiority of the proposed system architecture. The simulation results indicate that the machine learning orchestration system in the cloud environment significantly improves the efficiency and automation of training and deploying Distributed Machine Learning (DML) AI model. The proposed architecture optimizes resource allocation, minimizes training time, and enhances scalability, leading to cost savings and increased productivity. Moreover, the simulation model provides valuable insights into the behaviour and performance of the system under different workload scenarios, facilitating the fine-tuning and optimization of the orchestration process.","2768-0673","979-8-3503-4148-5","10.1109/I-SMAC58438.2023.10290278","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10290278","Cloud Environments;Deployment Automation;Machine Learning Orchestration;System Architecture;Training Automation","Training;Cloud computing;Analytical models;Automation;Computational modeling;Scalability;Systems architecture","","12","","30","IEEE","26 Oct 2023","","","IEEE","IEEE Conferences"
"Atomic Services: sustainable ecosystem of smart city services through pan-European collaboration","F. Cirillo; D. Straeten; D. Gómez; J. Gato; L. Diez; I. E. Maestro; R. Akhavan","NEC Laboratories Europe, Heidelberg, Germany; NEC Laboratories Europe, Heidelberg, Germany; Atos Research and Innovation, Atos Spain, Madrid, Spain; Atos Research and Innovation, Atos Spain, Madrid, Spain; Department University of Cantabria, Communications Engineering, Santander, ldiez, Spain; Department University of Cantabria, Communications Engineering, Santander, ldiez, Spain; Future Cities Catapult, London, UK",2019 Global IoT Summit (GIoTS),"22 Jul 2019","2019","","","1","7","In a world with an ever increasing urbanization, governance is investigating innovative solutions to sustain the society evolution. Internet-of-Things promises huge benefits for cities and the proliferation of smart city deployments demonstrates the common acceptance of IoT as basis for many solutions. The city pilots developments occurred in parallel and with different designs thus creating fragmentation of IoT. The European project SynchroniCity aims to synchronize 8 smart cities to establish a shared environment fostering a self-sustained business growth. In this article we present the collaborative methodology and shared efforts spent towards the creation of a common ecosystem for the development of smart city services. Our design evolves around the concept of ”atomic services” that implements a single functional block to be composed for full-fledged smart city services. This creates opportunities for diverse stakeholders to participate to a global smart cities market. The methodology and outcome of our efforts will be followed by 10 new cities globally, thus expanding the market range for IoT stakeholders.","","978-1-7281-2171-0","10.1109/GIOTS.2019.8766431","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8766431","Internet-of-Things;Smart Cities;Large Scale IoT Pilot;IoT Ecosystem","Smart cities;Internet of Things;Data visualization;Ecosystems;Data models;Stakeholders","","7","","13","IEEE","22 Jul 2019","","","IEEE","IEEE Conferences"
"Using Full-Lifecycle MBSE for Transforming On-orbit Servicing: The Tetra-5 Bus Experience","J. Crane; J. Collins; P. Day; M. Ong; P. Cronk","Booz Allen Hamilton, El Segundo, CA; Booz Allen Hamilton, El Segundo, CA; Booz Allen Hamilton, Colorado Springs, CO; Booz Allen Hamilton, El Segundo, CA; Booz Allen Hamilton, El Segundo, CA",2024 IEEE Aerospace Conference,"13 May 2024","2024","","","1","12","The Tetra-5 Program is a prototype program sponsored by Space Systems Command (SSC) and Air Force Research Lab (AFRL). It represents an advanced capability in refueling, Rendezvous, Proximity Operations, and Docking (RPOD), and technologies necessary for future on-orbit servicing missions, designed and built on a low-cost, rapid development timeline (three years from award to launch) at a small satellite scale (<150kg). AFRL and SSC made this a Model-Based System Engineering (MBSE) pilot project requiring model-based deliverables from the solutions team at each milestone. To meet this requirement, Booz Allen, as part of Team Orion Space Solutions (OSS), built and developed a Descriptive System Model (DSM) of the three Tetra-5 buses. The DSM serves as a cohesive digital thread that connects all facets of system design. This paper explores how the DSM, enriched with system behavior, interfaces, and requirements, streamlines communication among diverse stakeholders, reducing risk and increasing rigor toward the project's ambitious objectives.","1095-323X","979-8-3503-0462-6","10.1109/AERO58975.2024.10521215","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10521215","","Requirements management;Government;Small satellites;Prototypes;Production;Stakeholders;System analysis and design","","","","21","IEEE","13 May 2024","","","IEEE","IEEE Conferences"
"TraceArk: Towards Actionable Performance Anomaly Alerting for Online Service Systems","Z. Zeng; Y. Zhang; Y. Xu; M. Ma; B. Qiao; W. Zou; Q. Chen; M. Zhang; X. Zhang; H. Zhang; X. Gao; H. Fan; S. Rajmohan; Q. Lin; D. Zhang",Southern University of Science and Technology; Southern University of Science and Technology; Southern University of Science and Technology; Southern University of Science and Technology; Southern University of Science and Technology; Microsoft 365; Microsoft 365; Microsoft 365; Southern University of Science and Technology; Chongqing University; Microsoft 365; Microsoft 365; Microsoft 365; Southern University of Science and Technology; Southern University of Science and Technology,2023 IEEE/ACM 45th International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),"11 Jul 2023","2023","","","258","269","Performance anomaly alerting based on trace data plays an important role in assuring the quality of online service systems. However, engineers find that many anomalies reported by existing techniques are not of interest for them to take further actions. For a large scale online service with hundreds of different microservices, current methods either fire lots of false alarms by applying simple thresholds to temporal metrics (i.e., latency), or run complex end-to-end deep learning model with limited interpretability. Engineers often feel difficult to understand why anomalies are reported, which hinders the followup actions. In this paper, we propose an actionable anomaly alerting approach TraceArk. More specifically, we design an anomaly evaluation model by extracting service impact related anomalous features. A small amount of engineer experience (i.e., feedback) is also incorporated to learn the actionable anomaly alerting model. Comprehensive experiments on a real dataset of Microsoft Exchange service and an anomaly injection dataset collected from an open-source project demonstrate that TraceArk significantly outperforms the existing state-of-the-art approaches. The improvement in F1 is 50.47% and 20.34% on the two datasets, respectively. Furthermore, TraceArk has been running stably for four months in a real production environment and showing a 2.3x improvement in Precision over the previous approach. TraceArk also provides intrepretable alerting details for engineers to take further actions.","2832-7659","979-8-3503-0037-6","10.1109/ICSE-SEIP58684.2023.00029","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10172725","Performance Anomaly Alerting;Online Service Systems;Human Feedback","Measurement;Deep learning;Adaptation models;Microservice architectures;Production;Feature extraction;Software engineering","","9","","45","IEEE","11 Jul 2023","","","IEEE","IEEE Conferences"
"Application and Infrastructure-Aware Orchestration in the Cloud-to-Edge Continuum","A. Marchese; O. Tomarchio","Dept. of Electrical Electronic and Computer Engineering, University of Catania, Catania, Italy; Dept. of Electrical Electronic and Computer Engineering, University of Catania, Catania, Italy",2023 IEEE 16th International Conference on Cloud Computing (CLOUD),"25 Sep 2023","2023","","","262","271","Defining a scheduling and orchestration strategy for modern distributed microservices-based applications is a complex problem to deal with, especially if they are deployed on geo-distributed Cloud-to-Edge environments. Kubernetes is today the de-facto standard for container orchestration on Cloud data centers. However, its static container scheduling strategy is not suitable for the placement of complex and distributed microservices-based applications on Edge environments. Current infrastructure network conditions and resource availability neither run time application state are taken into account when scheduling microservices. To deal with these limitations in this work we present an extension of the Kubernetes platform in order to implement an effective application and infrastructure-aware container scheduling and orchestration strategy. In particular, we propose an extension of the default Kubernetes scheduler that considers application and infrastructure telemetry data when taking scheduling decisions. Furthermore, a descheduler component is also proposed that continuously tunes the application placement based on the ever changing application and infrastructure states. An evaluation of the proposed approach is presented by comparing it with the default Kubernetes scheduling strategy.","2159-6190","979-8-3503-0481-7","10.1109/CLOUD60044.2023.00037","European Union; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10254968","Cloud-to-Edge continuum;Containers technology;Kubernetes scheduler;Kubernetes descheduler;Cluster Monitoring;Application Monitoring","Cloud computing;Data centers;Microservice architectures;Containers;Dynamic scheduling;Time factors;Telemetry","","2","","26","IEEE","25 Sep 2023","","","IEEE","IEEE Conferences"
"Docker container security via heuristics-based multilateral security-conceptual and pragmatic study","A. R. Manu; J. K. Patel; S. Akhtar; V. K. Agrawal; K. N. B. S. Murthy","CORI-ISE Dept Electronic city, Bangalore; MTech(IIIT), Electronic city PESIT VTU Bangalore, Karnataka, India; Engineer IV, Cisco Systems, Bangalore, Karnataka, India; ISE Dept, VTU, Bangalore, Karnataka, India; PESIT, PES University, Bangalore, Karnataka, India","2016 International Conference on Circuit, Power and Computing Technologies (ICCPCT)","4 Aug 2016","2016","","","1","14","In this paper we attempt to provide unified security and privacy multilateral security architecture for cloud services stack, using key latest technology via LxC in general and Docker containers in specific. Docker is one of the first to use LxC at such a large scale, but LxC is not a very new concept, it is around for quite some time. Docker container service is a key Platform as a Service (PaaS) based engine. Unified layered cloud computing multilateral security implementation addresses the potential risks associated with cloud computing environment. It also specifies when, at what time, where, and how to apply security controls. Unified Design includes the structured connection between the components of cloud ecosystem for basket and bucket of unified cloud-based hybrid services using micro service oriented venture architectural services realized in terms of PAAS using Docker container as a service. We surveyed various industry/academic professionals and based on our experience we tried to understand the challenges they faced while using the cloud system. We tried to understand the security challenges, incidents, story pieces, accidents, experience they faced while designing, implementing and using the cloud services/resources virtually via online. This work helps to assess the security design and architecture quality using multilateral security framework for Docker container. We try to present the architecture using OSI/TCP/IP stack model with reference to Cloud service stack model and deployment stack model and try to propose the balanced multilateral security prototype with reference to Docker Container security architecture.","","978-1-5090-1277-0","10.1109/ICCPCT.2016.7530217","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7530217","Multilateral Security;Docker Container security;PAAS security;Cloud computing Security","Security;Containers;Cloud computing;Computer architecture;Computational modeling;Linux;Teamwork","","26","3","71","IEEE","4 Aug 2016","","","IEEE","IEEE Conferences"
"OPEN6GNET: A Learning and Experimentation Platform Based on Open-Source Solutions and Cloud-Native Approaches","M. S. De Brito; E. -R. Modroiu; B. Q. Le; T. Magedanz; M. Corici; J. Mwangama","Technische Universität Berlin, Next Generation Networks, Berlin; Technische Universität Berlin, Next Generation Networks, Berlin; Technische Universität Berlin, Next Generation Networks, Berlin; Technische Universität Berlin, Next Generation Networks, Berlin; Fraunhofer FOKUS, NGNI, Berlin; University of Cape Town, Cape Town",IEEE INFOCOM 2024 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS),"13 Aug 2024","2024","","","1","6","Teaching networking technologies is one of the pillars of many bachelor programs in IT nowadays. In this context, some programs will also offer specific courses on Mobile Networks, covering their historical background to modern solutions, e.g., 5G Networks. To enable the development of the next generation of mobile networks, namely 6G, it is imperative to popularize experimentation with current 5G technologies. However, the 5G architecture was developed around a service-based approach, which makes the introduction of its main components and its interaction a challenge for the lecturers, students, and researchers joining the field. This paper presents an approach that relies on open-source tools and cloud-native principles to provide a low-cost platform for experimentation and a practical learning environment on 5G networks and architecture, aiming to foster research towards 6G. As a result, a set of tools, instructions, and guides were developed to allow students and newcomers to deploy 5G networks easily and inspect their components and interactions. The approach is to be applied in upcoming TUB AV lectures, and further studies should be conducted to make a qualitative analysis of the process.","2833-0587","979-8-3503-8447-5","10.1109/INFOCOMWKSHPS61880.2024.10620906","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10620906","Mobile Network;5G;6G;Open Source;Cloud Native;Orchestration","6G mobile communication;5G mobile communication;Conferences;Education;Computer architecture;Complexity theory;Next generation networking","","","","13","IEEE","13 Aug 2024","","","IEEE","IEEE Conferences"
"Aggregation of elastic stack instruments for collecting, storing and processing of security information and events","I. Kotenko; A. Kuleshov; I. Ushakov","St. Petersburg Institute for Informatics and Automation of the Russian Academy of Sciences (SPIIRAS), St. Petersburg, Russia; The Bonch-Bruevich Saint - Petersburg State University of Telecommunications (SPbSUT), St. Petersburg, Russia; The Bonch-Bruevich Saint - Petersburg State University of Telecommunications (SPbSUT), St. Petersburg, Russia","2017 IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted Computed, Scalable Computing & Communications, Cloud & Big Data Computing, Internet of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)","28 Jun 2018","2017","","","1","8","The paper suggests an approach to construction of the system for collecting, storing and processing of data and security events on the basis of aggregation of instruments provided by Elastic Stack. Basing on the analysis of the monitoring and incident management tasks for computer security and comparative analysis of existing technologies and architectural solutions the technical requirements for such systems are identified, and on their basis the architecture of the proposed solution is formed. The paper describes the developed system for data collecting, storing and analyzing for various components of information security systems. Results of experiments with the developed prototype are presented.","","978-1-5386-0435-9","10.1109/UIC-ATC.2017.8397627","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8397627","Big Data;security information and event management;SIEM systems;Elastic Stack","Security;Computer architecture;Software;Monitoring;Task analysis;Big Data;Instruments","","9","","29","IEEE","28 Jun 2018","","","IEEE","IEEE Conferences"
"Internet of Smart Things - IoST: Using Blockchain and CLIPS to Make Things Autonomous","M. Samaniego; R. Deters","Department of Computer Science University of Saskatchewan, Saskatoon, Canada; Department of Computer Science University of Saskatchewan, Saskatoon, Canada",2017 IEEE International Conference on Cognitive Computing (ICCC),"11 Sep 2017","2017","","","9","16","Current networking integrates common ""Things"" to the Web, creating the Internet of Things (IoT). The considerable number of heterogeneous Things that can be part of an IoT network demands an efficient management of resources. With the advent of Fog computing, some IoT management tasks can be distributed toward the edge of the constrained networks, closer to physical devices. Blockchain protocols hosted on Fog networks can handle IoT management tasks such as communication, storage, and authentication. This research goes beyond the current definition of Things and presents the Internet of ""Smart Things."" Smart Things are provisioned with Artificial Intelligence (AI) features based on CLIPS programming language to become self-inferenceable and self-monitorable. This work uses the permission-based blockchain protocol Multichain to communicate many Smart Things by reading and writing blocks of information. This paper evaluates Smart Things deployed on Edison Arduino boards. Also, this work evaluates Multichain hosted on a Fog network.","","978-1-5386-2008-3","10.1109/IEEE.ICCC.2017.9","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029217","IoT;Management;Blockchain;Multichain;Smart Things;Autonomy;Self-inferencing;Self-monitoring;Fog;Edge","Protocols;Expert systems;Cloud computing;Real-time systems;Computer architecture;Monitoring","","62","","40","IEEE","11 Sep 2017","","","IEEE","IEEE Conferences"
"Towards a Serverless Platform for Edge Computing","L. Baresi; D. Filgueira Mendonça","Dipartimento di Elettronica, Informazione e Bioingegneria, Politecnico di Milano, Italy; Dipartimento di Elettronica, Informazione e Bioingegneria, Politecnico di Milano, Italy",2019 IEEE International Conference on Fog Computing (ICFC),"2 Sep 2019","2019","","","1","10","The emergence of real-time and data-intensive applications empowered by mobile computing and IoT devices is challenging the success of centralized data centers, and fostering the adoption of the paradigm of fog/edge computing. Differently from cloud data centers, fog nodes are geographically distributed in proximity to data prosumers, taking advantage of the emerging wireless communication technologies and mobile networks. The limited resources of densely distributed fog nodes call for their efficient use by hosted applications and services. To address this challenge, and the needs of different application scenarios, this paper proposes a serverless platform for edge computing. It starts motivating the adoption of a serverless architecture. Then, it presents the services and mechanisms that are the building blocks of a Serverless Edge Platform. The paper also proposes a prototype platform and its assessment. Obtained results demonstrate the feasibility of the proposed solution for satisfying different application requirements in diverse deployment configurations of heterogeneous fog nodes.","","978-1-7281-3236-5","10.1109/ICFC.2019.00008","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8821843","fog-computing;edge-computing;serverless-computing;latency-sensitive;data-intensive","FAA;Containers;Computer architecture;Cloud computing;Edge computing;Computational modeling;Data centers","","73","","26","IEEE","2 Sep 2019","","","IEEE","IEEE Conferences"
"The software solution for precise agriculture using the NDVI index","S. Verovka; Z. Veres","Department of Computerized Automatic Systems, Lviv Polytechnic National University, Lviv, Ukraine; Department of Computerized Automatic Systems, Lviv Polytechnic National University, Lviv, Ukraine",2022 IEEE 17th International Conference on Computer Sciences and Information Technologies (CSIT),"2 Jan 2023","2022","","","490","494","The issue of food security and providing the population with food products is more relevant than ever. This work examines existing approaches and modern information technology usage in agriculture. Specifically, the NDVI vegetation index’s use, benefits, and shortcomings. This paper reviews existing methods and proposes the concept and direction of an improved software solution targeted at improving crop productivity, considering heterogeneities within a field, and combining data from multiple sources.","2766-3639","979-8-3503-3431-9","10.1109/CSIT56902.2022.10000634","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10000634","NDVI;precision agriculture;agriculture productivity optimization","Productivity;Sociology;Food security;Crops;Software;Agriculture;Indexes","","2","","7","IEEE","2 Jan 2023","","","IEEE","IEEE Conferences"
"Comparative Evaluation of Communication Protocols in the Automotive Industry","M. Yordanova; A. Haka","Faculty of Computer Sciences and Automation, Technical University of Varna, Varna, Bulgaria; Faculty of Computer Sciences and Automation, Technical University of Varna, Varna, Bulgaria","2023 18th Conference on Electrical Machines, Drives and Power Systems (ELMA)","9 Aug 2023","2023","","","1","4","In recent life, the most contemporary communication and information technologies are increasingly used in various areas. One of these areas is the automotive industry. The normal operation of modern vehicles is ensured by multiple Electronic Control Units (ECUs) requiring fast, secure, and reliable communication. This is accomplished using various automotive communication protocols, namely Controller Area Network (CAN), Local Interconnect Network (LIN), FlexRay, Media Oriented Systems Transport (MOST), and Ethernet. This report presents a complex comparative evaluation of these protocols to determine the most suitable one for interconnection with the main ECUs.","","979-8-3503-1127-3","10.1109/ELMA58392.2023.10202531","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10202531","Communication Protocols;Comparison;in-vehicle communication","Industries;Protocols;Ethernet;Media;Power system reliability;Information and communication technology;Reliability","","","","13","IEEE","9 Aug 2023","","","IEEE","IEEE Conferences"
"Rapid Canary Assessment Through Proxying and Two-Stage Load Balancing","D. Ernst; A. Becker; S. Tai","Information Systems Engineering Research Group, TU Berlin, Berlin, Germany; Information Systems Engineering Research Group, TU Berlin, Berlin, Germany; Information Systems Engineering Research Group, TU Berlin, Berlin, Germany",2019 IEEE International Conference on Software Architecture Companion (ICSA-C),"13 May 2019","2019","","","116","122","Canary releasing is a means to check quality aspects of new software versions in a production environment, keeping risk to a minimum. We propose a novel approach to minimize the interference of canarying with the production system by (1) actively controlling request distribution in order to shorten the time a canary has to be running to achieve representative results and (2) unifying responsibility for that purpose and the collection of performance data about the canary on an ephemeral proxy load balancer. For (1) we contribute a two-stage load balancing approach, that implements weighted round-robin and a bucketing approach for HTTP-based services, that equalizes requests based on request URL. With explicit assumptions about infrastructure capabilities, we also describe the design of a proxy-based canary assessment tool to support (2). Both parts are implemented as a prototype and evaluated regarding feasibility, effectiveness and overhead. While the results cannot represent realistic production scenarios, they strongly indicate the validity of shortening a canary's lifetime by accepting a small overhead in client latency.","","978-1-7281-1876-5","10.1109/ICSA-C.2019.00028","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8712149","software engineering;software testing;load balancing;continuous deployment;canary releasing","Measurement;Load management;Containers;Software;Production systems;Prototypes","","3","","14","IEEE","13 May 2019","","","IEEE","IEEE Conferences"
"Artificial Intelligence based Architecture and Implementation of Wireless Network","H. Zhang; J. Xin; S. Xu; S. Xiong","China Telecom Research Institute, Beijing, P.R. China; China Telecom Research Institute, Beijing, P.R. China; China Telecom Research Institute, Beijing, P.R. China; China Telecom Research Institute, Beijing, P.R. China","2021 2nd International Conference on Electronics, Communications and Information Technology (CECIT)","1 Apr 2022","2021","","","273","278","The explosion of 5G network data continues to advance the evolution of air interface technology and network architecture, which enables the network to support more frequency bands, antennas, more diversified frame structures and physical layer control procedures. Traditional operation and maintenance patterns of human intervention or threshold setting control are no longer reliable, thus the automated and intelligent management mechanisms are proposed to improve the network resource utilization and user experience. This article summarizes the research of implementations, algorithms, and optimizations of AI firstly. Then through the research of various international standards, different AI networked architecture design of the core network, RAN and O-RAN are introduced. The paper highlights UE trajectory prediction and energy-saving use cases of the wireless network, the details mainly focus on the comparative study of algorithms and signaling realization. Last but not the least, the intelligent network platform that has been applied in the industry is introduced, which enriches the ideas for future development of providing more reliable networks to vertical industries.","","978-1-6654-3757-8","10.1109/CECIT53797.2021.00055","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9741900","component;AI;Algorithm;MDA;O-RAN RIC;Functional Architecture","5G mobile communication;Wireless networks;Maintenance engineering;Data collection;Prediction algorithms;User experience;Reliability","","1","","11","IEEE","1 Apr 2022","","","IEEE","IEEE Conferences"
"$\mu\mathrm{NF}$: A Disaggregated Packet Processing Architecture","S. R. Chowdhury; Anthony; H. Bian; T. Bai; R. Boutaba","David R. Cheriton School of Computer Science, University of Waterloo; David R. Cheriton School of Computer Science, University of Waterloo; David R. Cheriton School of Computer Science, University of Waterloo; David R. Cheriton School of Computer Science, University of Waterloo; David R. Cheriton School of Computer Science, University of Waterloo",2019 IEEE Conference on Network Softwarization (NetSoft),"22 Aug 2019","2019","","","342","350","Network Function Virtualization (NFV) promises to reduce the capital and operational expenditure for network operators by moving packet processing from purpose-built hardware to software running on commodity servers. However, the state-of-the-art in NFV is merely replacing monolithic hardware with monolithic Virtual Network Functions (VNFs), i.e., software that realizes different network functions. This is a good first step towards deploying NFV, however, common functionality is repeatedly implemented in monolithic VNFs. Repeated execution of such redundant functionality is particularly common when VNFs are chained to realize Service Function Chains (SFCs) and results in wasted infrastructure resources. This stresses the need for re-architecting the NFV ecosystem, through modular VNF design and flexible service composition. From this perspective, we propose MicroNF ( μNF in short), a disaggregated packet processing architecture facilitating the deployment of VNFs and SFCs using reusable and independently deployable components. Experimental results show that compared to monolithic VNF based SFCs, μNF-based ones achieve the same throughput by using less CPU cycles per packet on average.","","978-1-5386-9376-6","10.1109/NETSOFT.2019.8806657","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8806657","","Noise measurement;Task analysis;Resource management;Computer architecture;Software;Hardware;Firewalls (computing)","","5","","29","IEEE","22 Aug 2019","","","IEEE","IEEE Conferences"
"Hardware Components of the Monitoring System of Soil and Groundwater Contamination by Harmful Emissions From Vehicles","M. Dyvak; A. Rot; V. Tymchyshyn; S. Valchyshyn; F. Otoo; M. Hernes","Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine; Department of Information Systems, Wroclaw University of Economics and Business, Wroclaw, Poland; Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine; Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine; Department of Computer Science, West Ukrainian National University, Ternopil, Ukraine; Department of Process Management, Wroclaw University of Economics and Business, Wroclaw, Poland",2021 11th International Conference on Advanced Computer Information Technologies (ACIT),"1 Oct 2021","2021","","","608","612","The article considers the components of the hardware monitoring system of soil and groundwater contamination by harmful emissions from vehicles. The functionality of the monitoring system is based on combination of measurement procedure of the harmful emissions concentrations in the surface atmospheric layer and mathematical modeling of the impact of these emissions on soil and groundwater contamination. The hardware scheme of the component of the vehicles exhaust gases harmful emission concentrations measurement using a mobile complex Sniffer4D Hyper-local Air Quality Analyzer is given. In particular, an example of nitrogen dioxide concentration measurement in the atmosphere surface layer is given. The architecture of the monitoring system is designed.","","978-1-6654-1854-6","10.1109/ACIT52158.2021.9548538","Ministry of Education; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9548538","environment monitoring;harmful emission from vehicles;soil and groundwater contamination;nitrogen dioxide","Atmospheric measurements;Soil measurements;Atmospheric modeling;Surface contamination;Soil;Particle measurements;Hardware","","","","29","IEEE","1 Oct 2021","","","IEEE","IEEE Conferences"
"Towards a Digital Twin Platform for Industrie 4.0","M. Redeker; J. N. Weskamp; B. Rössl; F. Pethig","Fraunhofer IOSB, IOSB-INA Lemgo, Fraunhofer Institute of Optronics, System Technologies and Image Exploitation; Fraunhofer IOSB, IOSB-INA Lemgo, Fraunhofer Institute of Optronics, System Technologies and Image Exploitation; Fraunhofer IOSB, IOSB-INA Lemgo, Fraunhofer Institute of Optronics, System Technologies and Image Exploitation; Fraunhofer IOSB, IOSB-INA Lemgo, Fraunhofer Institute of Optronics, System Technologies and Image Exploitation",2021 4th IEEE International Conference on Industrial Cyber-Physical Systems (ICPS),"5 Jul 2021","2021","","","39","46","In an Industrie 4.0 (I4.0), rigid structures and architectures applied in manufacturing and industrial information technologies today, should be replaced by highly dynamic and self-organizing networks. Today's proprietary technical systems lead to strictly defined engineering processes and value chains. Interacting Digital Twins (DT) are considered an enabling technology that could help to increase flexibility based on semantically enriched information. Nevertheless, for interacting digital twins to become a reality, their implementation should be based on existing standards like the Asset Administration Shell (AAS). Additionally, DT Platforms could accelerate development, deployment and ensure resilient operation of DT. This paper presents such a platform based on a microservices architecture and offering solutions for continuous deployment, data infrastructure and I4.0 business services. The platform is evaluated in the use case scenarios platform-based manufacturing and collaborative condition monitoring. As a result, implemented AAS-based mi-croservices organize manufacturing, and submodels of the AAS enable cross-company data sharing for collaborative condition monitoring. Future work should focus on fault-management and service recovery, as well as integration of the AAS into lower platform layers, e.g. for improving data usage control.","","978-1-7281-6207-2","10.1109/ICPS49255.2021.9468204","Ministry of Economic Affairs; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9468204","Industrie 4.0;Digital Twin;Asset Administration Shell;Semantic Interoperability;Big Data Platform;Mi-croservices Architecture;Manufacturing;Collaborative Condition Monitoring;GAIA-X","Industries;Condition monitoring;Digital twin;Conferences;Collaboration;Self-organizing networks;Manufacturing","","22","","40","IEEE","5 Jul 2021","","","IEEE","IEEE Conferences"
"Intelligent Distribution Grid Reliability Simplification Algorithm and Online Computing Implementation","H. Wen; B. Chen; Z. Li; J. Chen; Z. Nie; Q. Wu","Power Grid Development Department, State Grid Zhejiang Electric Power Co., Ltd. Lishui Company, Lishui, China; Power Grid Development Department, State Grid Zhejiang Electric Power Co., Ltd. Lishui Company, Lishui, China; Power Grid Development Department, State Grid Zhejiang Electric Power Co., Ltd. Lishui Company, Lishui, China; Power Grid Development Department, State Grid Zhejiang Electric Power Co., Ltd. Lishui Company, Lishui, China; Power Grid Development Department, State Grid Zhejiang Electric Power Co., Ltd. Lishui Company, Lishui, China; R&D Center T&D Power Research (Beijing) Technology Co., Ltd, Beijing, China",2023 3rd International Conference on New Energy and Power Engineering (ICNEPE),"16 Feb 2024","2023","","","1120","1125","At present, reliability calculation is mostly focused on the calculation of current years, and the calculation of planned years is often carried out using fuzzy estimation. The calculation methods are complex and diverse, which is not conducive to the modular implementation of software. This article deeply analyzes the essence of reliability calculation based on the topology simplification model of power flow, and summarizes the parts related to the grid structure in its classic calculation formula as the grid coefficient. The parts related to the equipment are collected as the equipment coefficient, and the calculation is simplified based on practical applications. Then, based on the power grid resource business center and data center, a centralized (microservices/micro applications) + collaborative computing framework construction model is adopted, integrating basic data such as reliability facility ledger, topology, and graph model, and obtaining important parameters such as fault rate and average recovery time of distribution grid equipment components. Based on simplified calculation formulas, a power supply reliability online calculation micro application module is developed, The calculation results can provide convenient data support for reliability management and decision-making of distribution grids. This article also provides the specific implementation of software architecture design and interface display effects.","","979-8-3503-9322-4","10.1109/ICNEPE60694.2023.10429546","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10429546","power supply reliability;power flow calculation topology;grid coefficient;equipment coefficient;business architecture;data architecture;technical architecture","Power supplies;Computer architecture;Software;Data models;Software reliability;Topology;Reliability","","","","10","IEEE","16 Feb 2024","","","IEEE","IEEE Conferences"
"Resulting Artifacts and Application Scenarios of the Communication Intermediate Layer SFCS With A Focus on Usability for the Automation Industry","M. M. Strljic; E. Prokop; S. Saueressig; O. Riedel","Institute for Control Engineering of Machine Tools and Manufacturing Units, University of Stuttgart, Stuttgart, Germany; Institute for Control Engineering of Machine Tools and Manufacturing Units, University of Stuttgart, Stuttgart, Germany; SOTEC Software Entwicklungs GmbH, Smart & Connected Systems, Stuttgart, Germany; Institute for Control Engineering of Machine Tools and Manufacturing Units, University of Stuttgart, Stuttgart, Germany",2021 IEEE 4th International Conference on Knowledge Innovation and Invention (ICKII),"27 Oct 2021","2021","","","38","43","Due to the influence of the digital transformation, communication between individual shop-floor components is changing more dynamic communication patterns and development platforms such as messaging and microservices. For a user-friendly entry into these interaction patterns, the research project SFSC (Shop-Floor Service Connector) created a communication layer that makes it easier for users from the automation sector and abstracts infrastructure aspects, such as a service registry, from the user in order to simplify the transformation for employees from the automation sector. For this purpose, the integrated messaging pattern publish/subscribe, request/reply, and channels with the SFSC architecture have already been presented in previous work. This architecture has now been extended with a microcontroller implementation and a deployment environment and finally validated with a demonstrator, which is presented with its performance results. The validation environment consists of a CNC milling cell, supplying assembly lines, a camera-based quality control, and a handling robot arm. Application scenario-typical data flow for data integration is mapped with the help of the PLC4X project and data-driven value-added services are realized and connected based on these.","","978-1-6654-2307-6","10.1109/ICKII51822.2021.9574737","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9574737","message-oriented middleware;IIoT","Technological innovation;Automation;Service robots;Microcontrollers;Computer architecture;Quality control;Milling","","","","21","IEEE","27 Oct 2021","","","IEEE","IEEE Conferences"
"TeleRobot: Design and Implementation of a Live Remote Interaction Platform for Robots*","X. Wang; Y. Wu; J. Yu; Y. Wang; E. Liu; D. Zhao; G. Liu","Hangzhou Institute for Advanced Study, UCAS, Hangzhou, China; Institute of Software Chinese Academy of Sciences, Beijing, China; Institute of Software Chinese Academy of Sciences, Beijing, China; HuoZhongYuanMa Technology Company, Zhongshan, China; Institute of Software Chinese Academy of Sciences, Beijing, China; Institute of Software Chinese Academy of Sciences, Beijing, China; Institute of Software Chinese Academy of Sciences, Beijing, China","2023 IEEE International Conference on Systems, Man, and Cybernetics (SMC)","29 Jan 2024","2023","","","408","412","With the increasing number and variety of robots, there are still many problems and limitations in the offline communication and cooperation platform. To address this issue, we present a universal ROS robot live interaction platform named TeleRobot that offers features such as multi-angle robot live streaming, remote interaction with robots, and online discussions. The implementation of TeleRobot is based on microservice architecture and WebRTC technology, utilizing Kurento Media Server (KMS) for streaming media transmission, and rosbridge for real-time remote interaction with robots. To enable compatibility with the communication between web, WeChat mini-programs and robots, we have developed a custom high-level text transfer protocol called HIKER based on WebSocket. We also provide web UI for users to manage robots, allowing them to quickly configure the IP, port, and control commands to remotely access their robots for interaction in the live broadcast room. This paper describes in detail the architecture design, system components and system implementation of TeleRobot. Finally, we applied the TeleRobot platform on the XBot-ARM robotic arm and the human-robot interaction (HRI) performance evaluation system of the platform was established using Analytic Hierarchy Process (AHP).","2577-1655","979-8-3503-3702-0","10.1109/SMC53992.2023.10394406","National Key R&D Program of China(grant numbers:2020AAA0108904); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10394406","","Social networking (online);Human-robot interaction;Streaming media;Servers;Robots;System implementation;WebRTC","","2","","11","IEEE","29 Jan 2024","","","IEEE","IEEE Conferences"
"Interoperability Oriented Architecture: The Approach of EPOS for Solid Earth e-Infrastructures","D. Bailo; K. G. Jeffery; A. Spinuso; G. Fiameni","Istituto Nazionale di Geofisica e Vulcanologia (INGV), Rome, Italy; Keith G. Jeffery Consultants, Faringdon, United Kingdom; Royal Netherlands Meteorological Institute (KNMI), Utrecht, The Netherlands; CINECA, Bologna, Italy",2015 IEEE 11th International Conference on e-Science,"26 Oct 2015","2015","","","529","534","EPOS is an e-Infrastructure for solid Earh science in Europe. It integrates many heterogeneous Research Infrastructures (RIs) using a novel approach based on the harmonization of existing service and component interfaces. EPOS is designed to provide an architectural framework for new Research Infrastructures in the domain, and to interface with increasing sophistication of existing RIs working with them in co-development from their present state to a future integrated state. The key is the metadata catalogue based on CERIF which provides the virtualization required for EPOS to provide a homogeneous view over the heterogeneity. Architectural concepts together with a plan for integration and collaboration with EPOS nodes in order to interoperate are presented in this paper.","","978-1-4673-9325-6","10.1109/eScience.2015.22","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7304337","Earth science;e-infrastructure;metadata;CERIF;API;architecture;EPOS;virtual research environment","Metadata;Standards;Software;Computer architecture;Semantics;Data visualization;Interoperability","","6","","24","IEEE","26 Oct 2015","","","IEEE","IEEE Conferences"
"Method of development and deployment of reconfigurable FPGA-based projects in cloud infrastructure","V. Kulanov; A. Perepelitsyn; I. Zarizenko","National Aerospace University “KhAI”, Kharkiv, Ukraine; National Aerospace University “KhAI”, Kharkiv, Ukraine; National Aerospace University “KhAI”, Kharkiv, Ukraine","2018 IEEE 9th International Conference on Dependable Systems, Services and Technologies (DESSERT)","12 Jul 2018","2018","","","103","106","The detailed research of usage reconfigurable FPGA-based systems in cloud technologies is done. Disadvantages of existing FPGA projects within the cloud infrastructure are discussed. Existing approaches of remote services deployment are being improved along with the development of information technology. Docker containerization approach with Docker Compose tool is applied to deploy FaaS infrastructure. The advantages of proposed FaaS deployment approach and microservice architecture are discussed.","","978-1-5386-5903-8","10.1109/DESSERT.2018.8409108","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8409108","FPGA;FPGA-as-a-Service;FaaS;cloud infrastructure;continuous integration;continuous delivery","Field programmable gate arrays;FAA;Cloud computing;Testing;Hardware;Tools;Task analysis","","2","","11","IEEE","12 Jul 2018","","","IEEE","IEEE Conferences"
"Implementations of Data Analysis Tools Into the Biomedical Modular System","J. Kostolny; L. Blahova; D. Sutora","Faculty of Management Science and Informatics, University of Zilina, Zilina, Slovakia; Faculty of Management Science and Informatics, University of Zilina, Zilina, Slovakia; Faculty of Management Science and Informatics, University of Zilina, Zilina, Slovakia",2023 IEEE 12th International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS),"21 Dec 2023","2023","1","","840","845","Systems that utilise biological data typically necessitate a module with the capacity to analyse biomedical data. This article investigates the problem at the specified location and outlines the potential solutions at our disposal. Then, we'll examine the deployed technology. This technology has the potential to be bundled as a container for a microservice architecture and provides data analysis capabilities. Each module must contain fundamental features and capabilities, such as fuzzy machine learning and data mining methods. Similarly, this component must be able to generate an accurate report based on the results of its analysis. The primary benefit of such a system is its modularity, which enables quick adaptations and expansion for various data types, as well as simpler adaptation of the modules to newer technologies.","2770-4254","979-8-3503-5805-6","10.1109/IDAACS58523.2023.10348677","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10348677","dotNet;IKVMdotNET;Weka;D3.js;Biobank","Visualization;Data analysis;Soft sensors;Loading;Microservice architectures;Machine learning;Portable document format","","","","17","IEEE","21 Dec 2023","","","IEEE","IEEE Conferences"
"Use What You Know: Network and Service Coordination Beyond Certainty","S. Werner; S. Schneider; H. Karl","Paderborn University, Germany; Paderborn University, Germany; Hasso Plattner Institute, University of Potsdam, Germany",NOMS 2022-2022 IEEE/IFIP Network Operations and Management Symposium,"9 Jun 2022","2022","","","1","10","Modern services often comprise several components, such as chained virtual network functions, microservices, or machine learning functions. Providing such services requires to decide how often to instantiate each component, where to place these instances in the network, how to chain them and route traffic through them. To overcome limitations of conventional, hardwired heuristics, deep reinforcement learning (DRL) approaches for self-learning network and service management have emerged recently. These model-free DRL approaches are more flexible but typically learn tabula rasa, i.e., disregard existing understanding of networks, services, and their coordination.Instead, we propose FutureCoord, a novel model-based AI approach that leverages existing understanding of networks and services for more efficient and effective coordination without time-intensive training. FutureCoord combines Monte Carlo Tree Search with a stochastic traffic model. This allows FutureCoord to estimate the impact of future incoming traffic and effectively optimize long-term effects, taking fluctuating demand and Quality of Service (QoS) requirements into account. Our extensive evaluation based on real-world network topologies, services, and traffic traces indicates that FutureCoord clearly outperforms state-of-the-art model-free and model-based approaches with up to 51% higher flow success ratios.","2374-9709","978-1-6654-0601-7","10.1109/NOMS54207.2022.9789713","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9789713","network management;service management;AI;Monte Carlo Tree Search;model-based;QoS","Training;Monte Carlo methods;Network topology;Stochastic processes;Microservice architectures;Quality of service;Reinforcement learning","","","","54","IEEE","9 Jun 2022","","","IEEE","IEEE Conferences"
"A Multilayer Distributed Ledger Technology Architecture for Immutable Registry of Mobility and Location Information","M. Leal; F. Pisani; M. Endler","Departamento de Informática, Pontifícia Universidade Católica do Rio de Janeiro (PUC-Rio), Rio de Janeiro, Brasil; Departamento de Informática, Pontifícia Universidade Católica do Rio de Janeiro (PUC-Rio), Rio de Janeiro, Brasil; Departamento de Informática, Pontifícia Universidade Católica do Rio de Janeiro (PUC-Rio), Rio de Janeiro, Brasil",2022 IEEE 1st Global Emerging Technology Blockchain Forum: Blockchain & Beyond (iGETblockchain),"3 Apr 2023","2022","","","1","6","Movement tracking information can reveal much about the daily operation of companies. Several applications can benefit from recording the physical places a mobile entity visits and how long it stays at each position. This paper discusses the need for an Available, Reliable, Transparent, Immutable, and Irrevocable service for Mobility Records (ARTIIMoR). We present an approach to recording spatio-temporal presence information in a reliable, immutable, and scalable way using a multilayer Distributed Ledger Technology (DLT) architecture for storing location information in variable levels of abstraction and aggregation. We implemented this multilayer solution as a middleware service that uses Complex Event Processing on smartphones to efficiently record nearby place-specific beacons in a DLT. We compare the performance of inserting data in the IOTA, Ethereum, and Hyperledger DLTs, the impact that different data aggregation techniques have on insertion performance, and the effect of the multilayer approach on data query performance.","","978-1-6654-5198-7","10.1109/iGETblockchain56591.2022.10087097","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10087097","component;formatting;style;styling;insert","Cloud computing;Distributed ledger;Tracking;Prototypes;Nonhomogeneous media;Recording;Reliability","","","","12","IEEE","3 Apr 2023","","","IEEE","IEEE Conferences"
"Designing Intelligent Agents for the Management of Complex Data Communication Networks in Smart Cities","M. Minea; C. M. Dumitrescu; V. L. Minea; A. Semenescu","Telematics and Electronics for Transports Dept., University Politehnica of Bucharest, Bucharest, Romania; Telematics and Electronics for Transports Dept., University Politehnica of Bucharest, Bucharest, Romania; Technology Dept., Orange Services Romania S.A., Bucharest, Romania; Dept. of Engineering and Management for Transports, University Politehnica of Bucharest, Bucharest, Romania","2021 13th International Conference on Electronics, Computers and Artificial Intelligence (ECAI)","23 Aug 2021","2021","","","1","6","The paper focuses on the design of future complex networks, in the perspective of smart cities, where many sensors and data flows are expected to arise. The research proposes the use of multiple intelligent agents to monitor critical features of the communication network, including hardware and applications/software components, in a tree architecture, with a top-supervisor agent, also used as human-machine interface for the Fault Management System operators. A study case is also included, along with recommendations for the best artificial intelligence components to be used in such an architecture.","","978-1-6654-2534-6","10.1109/ECAI52376.2021.9515055","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9515055","AI agent;infrastructure monitoring;applications and microservices;automation;AI assistance","Frequency modulation;Smart cities;Complex networks;Computer architecture;Communication networks;Mathematical model;Intelligent agents","","","","23","IEEE","23 Aug 2021","","","IEEE","IEEE Conferences"
"An Approach to Support Automated Deployment of Applications on Heterogeneous Cloud-HPC Infrastructures","E. Di Nitto; J. Gorroñogoitia; I. Kumara; G. Meditskos; D. Radolović; K. Sivalingam; R. S. González","Politecnico di Milano, Italy; ATOS, Spain; Jheronimus Academy of Data Science, The Netherlands; Information Technologies Institute, Centre for Research and Technology Hellas, Greece; XLAB Research, Slovenia; HPE HPC/AI EMEA Research Lab, United Kingdom; ATOS, Spain",2020 22nd International Symposium on Symbolic and Numeric Algorithms for Scientific Computing (SYNASC),"24 Feb 2021","2020","","","133","140","Complex applications, which include microservices, computationally intensive batch jobs, and sophisticated interaction with the external environment, demand for heterogeneous computational infrastructures that range from cloud to HPC and edge computing. In this context, a crucial problem is to facilitate the work of DevOps teams in i. the conception of the right operational architecture for the application, ii. its transformation into infrastructural code that automates its deployment, taking into account the peculiarities of each of the diverse infrastructures involved in this, and iii. its operation. The SODALITE framework aims at addressing this scenario. This paper presents the main features offered by the first version of the framework, currently focusing on managing cloud and HPC clusters, and shows them in practice through a relevant case study.","","978-1-7281-7628-4","10.1109/SYNASC51798.2020.00031","European Commission(grant numbers:825480 (H2020)); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9356938","","Scientific computing;Heuristic algorithms;Focusing;Computer architecture;Dynamic scheduling;Numerical models;Edge computing","","9","","24","IEEE","24 Feb 2021","","","IEEE","IEEE Conferences"
"BigVM: A Multi-Layer-Microservice-Based Platform for Deploying SaaS","T. Zheng; Y. Zhang; X. Zheng; M. Fu; X. Liu","School of Computing and Information Systems, University of Melbourne Melbourne, Victoria, Australia; Department of Computer Science and Engineering, Southern University of Science and Technology, Shenzhen, Guangdong, China; School of Information Technology, Deakin University Melbourne, Victoria, Australia; Macquarie University, Sydney, NSW, AU; School of Information Technology, Deakin University Melbourne, Victoria, Australia",2017 Fifth International Conference on Advanced Cloud and Big Data (CBD),"7 Sep 2017","2017","","","45","50","With the advent of Software-as-a-Service (SaaS), SaaS developers are facing many more challenges associated with multi-tenancy and dramatically increased number of users, e.g., scalability, availability, increased cost of development/testing/deployment, high cost of customization. As most of them are highly common, it is becoming very desirable if a generic and powerful deployment platform can be designed. For such a purpose, in this paper, a new platform namely BigVM is proposed to isolate SaaS developers from deployments and bridge the gap between the best practices and the real-world adoptions.BigVM provides microservice-oriented deployment kits to enable SaaS developer to create, customize, and deploy SaaS solutions in a multi-layer-microservice-based manner, which can utilize fault tolerance, optimize the resources, and scale in/out the underlying resources not only based on resource utilization but also on the non-functional requirements from the system, e.g., timing constraint. A set of experiments are implemented in sysbench to test one of BigVM's core components-Docker containers. The results show that Docker containers can achieve desirable performance in terms of CPU workload and file I/O, thus laying a solid foundation for our future work.","","978-1-5386-1072-5","10.1109/CBD.2017.16","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8026911","","Software as a service;Containers;Engines;Computer architecture;Resource management;Servers","","8","","15","IEEE","7 Sep 2017","","","IEEE","IEEE Conferences"
"Towards Orchestration in the Cloud-Fog Continuum","X. Merino; C. Otero; D. Nieves-Acaron; B. Luchterhand","Dept. Computer Engineering and Sciences, Florida Institute of Technology, Melbourne, FL, USA; Dept. Computer Engineering and Sciences, Florida Institute of Technology, Melbourne, FL, USA; Dept. Computer Engineering and Sciences, Florida Institute of Technology, Melbourne, FL, USA; Dept. Computer Engineering and Sciences, Florida Institute of Technology, Melbourne, FL, USA",SoutheastCon 2021,"21 Apr 2021","2021","","","1","8","The growth of the Internet-of-Things has led to a rise in the need of computing power, storage, and network resources. As more data are being generated at the edge of the networks, the cloud model that enabled the affordable, on-demand, lease of these resources is ill-fitted to handle the volume and variety of data traveling to the core of the cloud and back. Some applications further showcase the limitations of the cloud by requiring strict low-latency communication and location awareness. Fog computing has been proposed as a solution to these issues that stem from the cloud's centralization. The fog is an emerging computing paradigm, conceived as an extension to the cloud, that aims to facilitate the creation of scalable infrastructures in the vicinity of the end-user. By decentralizing resources, it promises to optimize bandwidth consumption at the core and edge of the network while reducing latency between the service and the end-user. In this paper, we identify the requirements needed to orchestrate loads in the Cloud-Fog continuum and propose an architecture, built on available, open-source, components, that orchestrates loads with consideration to their geographical needs. We provide several levels of features (DNS-like service discovery, service mesh, health checks, encryption-as-a-service, among others) available to the operator and evaluate their quality-of-service implications, with respect to network latency and bandwidth, when compared to a simple deployment baseline.","1558-058X","978-1-6654-0379-5","10.1109/SoutheastCon45413.2021.9401822","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9401822","cloud computing;fog computing;orchestration;IoT;architecture;latency","Scalability;Computer architecture;Bandwidth;Quality of service;Containers;Tools;Telemetry","","5","","41","IEEE","21 Apr 2021","","","IEEE","IEEE Conferences"
"Automated Moderation Helper System Using Artificial Intelligence Based Text Classification and Recommender System Techniques","B. Rőczey; S. Szénási","John von Neumann Faculty of Informatics, Óbuda University, Budapest, Hungary; John von Neumann Faculty of Informatics, Óbuda University, Budapest, Hungary",2023 IEEE 17th International Symposium on Applied Computational Intelligence and Informatics (SACI),"27 Jun 2023","2023","","","000477","000482","In this paper we introduce a novel approach for text message moderation assistance, where the system can Configure itself with negatively or positively labeled sample messages. The goal of the system is to assist moderators in moderating text messages, by providing them with recommendations about which messages should be reviewed manually. The recommendations should be based on user-defined rules, as well as machine-learned rules, derived from previously accepted or rejected messages. The proposed method is able to filter messages in Hungarian or English. It is also able to learn from user feedback, in order to better understand the preferences of users.","2765-818X","979-8-3503-2110-4","10.1109/SACI58269.2023.10158593","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10158593","natural language processing;machine learning;recommender system;text mining;microservice architecture;online moderation","Adaptation models;Text categorization;Natural languages;Benchmark testing;Informatics;Artificial intelligence;Recommender systems","","","","7","IEEE","27 Jun 2023","","","IEEE","IEEE Conferences"
"OpenISS as a Near-Realtime Composable Broadcast Service for Performing Arts and Beyond","S. A. Mokhov; J. Singh; H. Lai; K. Psimoulis; J. Paquet","Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada","2020 International Symposium on Networks, Computers and Communications (ISNCC)","25 Dec 2020","2020","","","1","6","Open Illimitable Space System (OpenISS) is a suite of graphics and motion capture libraries and the poised open source core for Illimitable Space System v2 (ISSv2), which typically is deployed for multimodal interaction and provides a platform for artists to enhance their performance by leveraging modern day technology on stage. Recently, we extended the OpenISS by enabling SOAP and REST APIs, to make it more flexible and scalable architecture being available as a service for broadcasting over the Internet. We share our experience regarding turning a depth camera (Kinect) and OpenCV as services (both SOAP and REST) within the OpenISS framework. With such services, we are able to request images or even video frames with different effects applied to the same scene in near-real-time and rendered within end-users browsers or other clients that consume REST or SOAP APIs. This work is built as an application on top of various kinds of libraries and techniques included in OpenISS, such as OpenCV, freenect, fakenect, openFrameworks as components.","","978-1-7281-5628-6","10.1109/ISNCC49221.2020.9297201","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9297201","OpenISS;depth cameras;OpenCV;SOAP;REST;web services;image processing;real-time","Simple object access protocol;Java;Servers;Tools;Real-time systems;Libraries;Image color analysis","","","","14","IEEE","25 Dec 2020","","","IEEE","IEEE Conferences"
"Easily Designing and Deploying AI enabled Network and Telecom services","D. Panchal; I. Baran; D. Musgrove; D. Lu","AT&T, Middletown, NJ, USA; AT&T, Middletown, NJ, USA; AT&T, Middletown, NJ, USA; AT&T, Dallas, TX, USA","2023 IEEE International Conference on Communication, Networks and Satellite (COMNETSAT)","7 Feb 2024","2023","","","689","695","Currently, there do not exist any open-source systems that offer streamlined and easy development and productionalization of AI/ML enabled Intelligent Network and Telecom services. This is a big problem the Network operators/Service providers face today even though Network Function Virtualization (NFV) and Software Defined Networking (SDN) have become ubiquitous and the Next Generation networks aim to be more softwarized and AI-driven. This paper aims to show how to quickly and easily design Network, Telecom and Network Security services and deploy them into a containerized cloud environment. This paper also shows how to make the Network/Telecom services AI/ML enabled and deploy them in the same way into the containerized cloud environment. We will show using ONAP (an open-source whitebox Network Operating System and management platform) and Acumos (open-source AI platform for creation, sharing and management of AI models and solutions), and specifically using their DCAEMOD and Acumos Adapter components, that this is very easy to do. To serve as an example, we will create a Network service to analyze and classify malicious network traffic. Using the same framework and tools, we will deploy the created service as a set of communicating, containerized microservices into a Network Operating system and Management platform like ONAP which is cloud-agnostic and can be run on any cloud. The same created service can also be deployed directly into any other OSS or on any other cloud platform.","","979-8-3503-4110-2","10.1109/COMNETSAT59769.2023.10420625","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10420625","Acumos;AI4EU;Artificial Intelligence;Machine Learning;Network;Network Operators;Open Network Automation Platform (ONAP);Open Source;Operations support systems (OSS);Service Design;Telecom","Cloud computing;Microservice architectures;Network function virtualization;Software defined networking;Artificial intelligence;Telecommunication services;Network operating systems","","1","","28","IEEE","7 Feb 2024","","","IEEE","IEEE Conferences"
"Dynamic Analysis Pipeline in Real Time Monitoring Scenario","A. Neumeier","University of the Bundeswehr Munich, Institute of Political Science, Neubiberg, Germany",2023 18th International Workshop on Semantic and Social Media Adaptation & Personalization (SMAP)18th International Workshop on Semantic and Social Media Adaptation & Personalization (SMAP 2023),"26 Sep 2023","2023","","","1","5","Social networks offer researchers a unique opportunity to study human communication and social phenomena on an unprecedented scale. However, the variability in the amount of data generated at different times poses a challenge to research in this area. This paper presents an analysis pipeline that uses Twitter data to efficiently process and analyze social media posts in real time. It does not require resources to be designed for maximum load. The approach is based on three key components: implementing analysis processes as independent microservices, using a publish-subscribe communication system, and implementing automatic scaling mechanisms. These factors enable a flexible, robust, and scalable analysis pipeline. It can dynamically adapt to changing workloads and ensure optimal resource utilization.","","979-8-3503-2771-7","10.1109/SMAP59435.2023.10255189","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10255189","","Social networking (online);Communication systems;Scalability;Pipelines;Blogs;Microservice architectures;Publish-subscribe","","","","15","IEEE","26 Sep 2023","","","IEEE","IEEE Conferences"
"Dexmo Software Product Line and Product Composition Method","O. Leblebici","Univera, Inc., Izmir, Turkey",2021 15th Turkish National Software Engineering Symposium (UYMS),"5 Jan 2022","2021","","","1","6","With the spread of service-based software, software product lines where software components are services or even microservices have started to emerge. In this paper, the Dexmo software product line approach developed in this way at Univera is explained. Dexmo software product line is different from the classical software product lines. A novel marketing engineering process and a control tower application are added on top of domain and application engineering. Moreover, Dexmo software product line approach offers significant changes in both domain and application engineering compared to the classics. The software product composition method, one of the most important of these, is also explained in detail.","","978-1-6654-1070-0","10.1109/UYMS54260.2021.9659641","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9659641","software product lines;domain engineering;application engineering;application composition","Software product lines;Software;Process control;Poles and towers;Payloads;Microservice architectures;Logic gates","","","","","IEEE","5 Jan 2022","","","IEEE","IEEE Conferences"
"Distributed log collection for business processes based on ELK architecture","Y. Zong","Beijing Key Laboratory on Integration and Analysis of Large-cale Stream Data, North China University of Technology, Beijing, China","2023 IEEE 2nd International Conference on Electrical Engineering, Big Data and Algorithms (EEBDA)","10 Apr 2023","2023","","","1523","1529","When it comes to executing service solutions in a distributed environment, the service solution is considered as a workflow split into many sub-processes that are scheduled to run independently and autonomously on each processing engine. Each organization’s machines have its own set of limitations. They can't write too much code or rebuild the system, so they'll have to rely on a lightweight, low-code strategy to expand the service solution’s process activities to collect valuable logs. As a result, we created a log collection system for the case, as mentioned earlier. The listener class is used to insert some functional code that sends the logs to the messaging middleware. Then, the service call records, or log data, are transmitted to the central administration platform. The ELK (Elasticsearch, Logstash, Kibana) framework, commonly used in log analysis nowadays, is then used to perform real-time data processing. Finally, the logs are visually displayed to provide intuitive feedback on log information and to make system maintenance and adjustment easier.","","978-1-6654-6253-2","10.1109/EEBDA56825.2023.10090786","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10090786","distributed environment;low-code;log collection system;business process","Electrical engineering;Codes;Microservice architectures;Writing;Maintenance engineering;Load management;Real-time systems","","","","20","IEEE","10 Apr 2023","","","IEEE","IEEE Conferences"
"ICT in road vehicles — The VehicleICT platform","L. Lengyel; P. Ekler; T. Ujj; T. Balogh; H. Charaf; Z. Szalay; L. Jereb","Budapest University of Technology and Economics, Budapest, Hungary; Budapest University of Technology and Economics, Budapest, Hungary; Budapest University of Technology and Economics, Budapest, Hungary; Budapest University of Technology and Economics, Budapest, Hungary; Budapest University of Technology and Economics, Budapest, Hungary; Budapest University of Technology and Economics, Budapest, Hungary; Budapest University of Technology and Economics, Budapest, Hungary",2015 International Conference on Models and Technologies for Intelligent Transportation Systems (MT-ITS),"27 Aug 2015","2015","","","457","462","Vehicles are not just a means of transportation anymore, but they are also moving entities that collect and transmit a great amount of local data, captured by sensors from the internals of the vehicle and from its environment as well. The consumers of this information include the passengers, especially the driver, and the environment, i.e. other vehicles, intelligent gates, centralized storage systems and data processing solutions. In order to maximize the value provided to the passengers, other vehicles and also the urban society, vehicle services utilize the local nature of the data. This paper discusses the VehicleICT platform, which is a proof of concept implementation, developed by a research institute and an automotive industrial partner.","","978-9-6331-3142-8","10.1109/MTITS.2015.7223294","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7223294","vehicle ICT;ICT in road vehicle;ICT platform for road vehicles;ODB-II;CAN bus;mobile;big data management","Vehicles;Sensors;Cloud computing;Ports (Computers);Servers;Automotive engineering","","2","","15","","27 Aug 2015","","","IEEE","IEEE Conferences"
"A Provenance-Aware Approach to Big Data Workflow Management in Heterogeneous Cloud Environments","A. Kashliev; K. Tracy","Department of Computer Science, Eastern Michigan University, Ypsilanti, USA; Department of Computer Science, Eastern Michigan University, Ypsilanti, USA",2024 9th International Conference on Cloud Computing and Big Data Analytics (ICCCBDA),"28 Jun 2024","2024","","","113","119","Big data workflows have emerged as a powerful paradigm that enables researchers and practitioners to run complex multi-step computational processes in the cloud to gain insight into their large datasets. To create a workflow, a user logs on to a specialized software, called Big Data Workflow Management System, or simply BDW system, to select and connect together various components, or tasks, into a workflow. The workflow is then mapped onto a set of distributed compute resources, such as Virtual Machines (VMs), and storage resources, such as S3 buckets and EBS volumes. It is then executed, with different branches and tasks of the workflow running in parallel on different nodes. During execution, the BDW system captures provenance, which is the history of data derivation that describes data processing steps that yielded each output result. Workflow management, including workflow composition and schedule refinement, is a challenging problem. This problem is further exacerbated by the growing number and heterogeneity of workflow tasks and cloud resources, as well as by the growing size and complexity of workflow structures. Few efforts were made to leverage provenance for facilitating workflow composition and schedule refinement. To address these issues, we 1) produce a comprehensive conceptual model for big data workflow provenance that captures the complexity and heterogeneity of cloud-based workflow execution, 2) propose a scalable Cassandra database schema for provenance-aware workflow composition and schedule refinement, 3) outline a four-step provenance-based schedule refinement process for balancing workflow execution time and cost, and 4) present a scalable and highly available microservices-based reference architecture for big data workflow management in the cloud. Our proposed loosely coupled architecture ensures superior scalability, as well as operational and technological independence of each module within the BDW system.","2832-3734","979-8-3503-7355-4","10.1109/ICCCBDA61447.2024.10569685","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10569685","big data workflows;provenance;microservices;cloud","Cloud computing;Schedules;Scalability;Computer architecture;Big Data;Virtual machining;Software","","","","27","IEEE","28 Jun 2024","","","IEEE","IEEE Conferences"
"Expanding DevOps Principles and Best Practices Based on Practical View","M. Alawneh; I. M. Abbadi","Computer Engineering Al Ain University, Al Ain, UAE; Security, Risk, & Compliance Practice Hewlett Packard Enterprise, Dubai, UAE",2022 International Arab Conference on Information Technology (ACIT),"4 Jan 2023","2022","","","1","6","DevOps is a change in mindset for disjoint teams including development, deployment and operational management. DevOps principles and practices comes with great advantages such as supporting higher resilience; elasticity; improve performance associated with distributed environment; and speed up delivery processes. Despite the great advantages of DevOps and its promising future, it is agreed that the knowledge around it is scattered across different sources. Several attempts have been done to define DevOps but still there is lack of worldwide agreed definition of DevOps and, in addition, its principles and best practices are not unified; and few are explained based on a narrow context. In this paper, we present a unified view of DevOps's principles and practice. We also update and expand the definitions of most current principles and best practices by considering our practical experience within organizations.","2831-4948","979-8-3503-2024-4","10.1109/ACIT57182.2022.9994216","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9994216","DevOps Principles and Practices;Microservices Architecture;Software Defined Infrastructure;Self-Services","Automation;Terminology;Ecosystems;Organizations;Elasticity;Security;Information technology","","1","","23","IEEE","4 Jan 2023","","","IEEE","IEEE Conferences"
"Design and Implementation of an Intelligent Classification and Reliability Prediction Tool based on Cloud Platform","J. Chen; Q. Wang; Y. Ling; S. Liang; M. Li","Key Laboratory of Industrial Equipment Quality Big Data, MIIT The 5th Electronics Research Institute, MIIT, Guangzhou, China; Key Laboratory of Industrial Equipment Quality Big Data, MIIT The 5th Electronics Research Institute, MIIT, Guangzhou, China; Key Laboratory of Industrial Equipment Quality Big Data, MIIT The 5th Electronics Research Institute, MIIT, Guangzhou, China; Key Laboratory of Industrial Equipment Quality Big Data, MIIT The 5th Electronics Research Institute, MIIT, Guangzhou, China; Key Laboratory of Industrial Equipment Quality Big Data, MIIT The 5th Electronics Research Institute, MIIT, Guangzhou, China","2021 2nd International Conference on Electronics, Communications and Information Technology (CECIT)","1 Apr 2022","2021","","","443","448","Reliability prediction is of great importance for electronic products design, and an indispensable technique to ensure that electronic components, equipment and the overall system meet their required reliability targets as well. Present methods, handbooks, standards and software tools of reliability prediction were studied and compared. For industrial and commercial electronic equipment applications, the development and demand of reliability prediction tools were analyzed in this paper. Using new-generation information technologies such as cloud computing and machine learning, a lightweight component reliability prediction tool was designed based on the Spring Cloud microservice architecture. In addition, the naive Bayesian algorithm was adopted to achieve intelligent components classification, which enhances prediction efficiency significantly. An example was offered, which verified the effectiveness of the cloud-based reliability prediction tool. Its characteristics of low-cost, rapidly-deployed and easy-to-use were shown, which differ it from traditional prediction tools, and make it suitable for commercial companies and electronic products.","","978-1-6654-3757-8","10.1109/CECIT53797.2021.00084","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9741889","reliability prediction;microservice architecture;naive Bayesian algorithm;commercial electronics","Cloud computing;Reliability engineering;Prediction algorithms;Product design;Software reliability;Classification algorithms;Bayes methods","","1","","10","IEEE","1 Apr 2022","","","IEEE","IEEE Conferences"
"Supporting Confidential Workloads in SPIRE","E. Falcão; M. Silva; A. Luz; A. Brito","Department of Computer Engineering and Automation, Federal University of Rio Grande do Norte, Natal, Brazil; Department of Systems and Computing, Federal University of Campina Grande, Campina Grande, Brazil; Department of Systems and Computing, Federal University of Campina Grande, Campina Grande, Brazil; Department of Systems and Computing, Federal University of Campina Grande, Campina Grande, Brazil",2022 IEEE International Conference on Cloud Computing Technology and Science (CloudCom),"9 Jan 2023","2022","","","186","193","The migration of traditional deployment to clouds has driven the need for a more robust security model, the Zero-Trust model. The application of zero-trust principles addresses known security issues such as lateral movement attacks but adds extra identity management complexity. In addition, to cover a broader range of attacks, one must think of strategies to protect data, code, and credentials in such applications. Confidential computing aims to fulfill this goal. Nevertheless, confidential computing is even more complex to implement than Zero-Trust. In this work, we combine the Zero-Trust model with confidential computing by leveraging the SPIFFE standard through its reference implementation (SPIRE), and Intel SGX through the SCONE framework, to seamlessly supply software identities to confidential microservices. Furthermore, we also protected the whole identity-provisioning stack with Intel SGX and assessed the performance overhead. We believe this combination not only improves the security of SPIFFE deployments but also leverages SPIFFE to facilitate the integration between confidential computing components and native applications.","2330-2186","978-1-6654-6367-6","10.1109/CloudCom55334.2022.00035","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10005436","confidential computing;Zero-Trust;Intel SGX;SPIRE","Computers;Cloud computing;Codes;Computational modeling;Microservice architectures;Software;Complexity theory","","2","","13","IEEE","9 Jan 2023","","","IEEE","IEEE Conferences"
"CHESS: A Framework for Evaluation of Self-Adaptive Systems Based on Chaos Engineering","S. Malik; M. A. Naqvi; L. Moonen","Simula Research Laboratory, Oslo, Norway; Simula Research Laboratory, Oslo, Norway; Simula Research Laboratory, Oslo, Norway",2023 IEEE/ACM 18th Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),"11 Jul 2023","2023","","","195","201","There is an increasing need to assess the correct behavior of self-adaptive and self-healing systems due to their adoption in critical and highly dynamic environments. However, there is a lack of systematic evaluation methods for self-adaptive and self-healing systems. We proposed CHESS, a novel approach to address this gap by evaluating self-adaptive and self-healing systems through fault injection based on chaos engineering (CE).The artifact presented in this paper provides an extensive overview of the use of CHESS through two microservice-based case studies: a smart office case study and an existing demo application called Yelb. It comes with a managing system service, a self-monitoring service, as well as five fault injection scenarios covering infrastructure faults and functional faults. Each of these components can be easily extended or replaced to adopt the CHESS approach to a new case study, help explore its promises and limitations, and identify directions for future research.","2157-2321","979-8-3503-1192-1","10.1109/SEAMS59076.2023.00033","Experiment; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10174151","self-healing;resilience;chaos engineering;evaluation;artifact","Chaos;Systematics;Adaptive systems;Autonomous systems;Microservice architectures;Behavioral sciences;Software engineering","","","","26","IEEE","11 Jul 2023","","","IEEE","IEEE Conferences"
"NebulOuS: A Meta-Operating System with Cloud Continuum Brokerage Capabilities","Y. Verginadis; C. -A. Sarros; M. R. de Los Mozos; S. Veloudis; R. Piliszek; N. Kourtellis; G. Horn","Athens University of Economics and Business, Greece; Ubitech, Greece; Eurecat Technological Centre, Spain; South-East European Research Centre, Greece; University of Białystok, Poland; Telefonica Research, Spain; University of Oslo, Norway",2023 Eighth International Conference on Fog and Mobile Edge Computing (FMEC),"8 Nov 2023","2023","","","254","261","Cloud Continuum is the paradigm that unifies and exploits resources from far edge to public and private cloud offerings, as well as processing nodes with significant capacity in between. Nowadays, the combination of all these resources for augmenting modern hyper-distributed applications becomes a necessity, especially considering the vast volumes of data, their velocity, and their variety, which constitute well known challenges of Big Data processing. In this paper, we address the main research question on how a Cloud Continuum management platform should be structured to cope with the constantly increasing challenges and opportunities of the domain. We introduce the NebulOuS architecture vision towards accomplishing substantial research contributions in the realms of Cloud Continuum brokerage. We propose an advanced architecture that enables secure and optimal application provisioning, as well as reconfiguration over the Cloud Continuum. NebulOuS introduces a novel Meta-Operating System and platform, that is currently being developed, for enabling transient Cloud Continuum brokerage ecosystems that seamlessly exploit edge and fog nodes, in conjunction with multi-cloud resources, to cope with the requirements posed by low latency applications.","","979-8-3503-1697-1","10.1109/FMEC59375.2023.10306090","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10306090","Cloud Continuum brokerage;cloud meta-OS","Cloud computing;Multi-access edge computing;Soft sensors;Ecosystems;Computer architecture;Maintenance engineering;Sensor systems","","2","","28","IEEE","8 Nov 2023","","","IEEE","IEEE Conferences"
"NoSQL Database Performance Diagnosis through System Call-level Introspection","C. Seo; Y. Chae; J. Lee; E. Seo; B. Tak","Dept. of Computer Science and Engineering, Kyungpook National University, Daegu, Republic of Korea; Dept. of Computer Science and Engineering, Kyungpook National University, Daegu, Republic of Korea; Dept. of Computer Science and Engineering, Kyungpook National University, Daegu, Republic of Korea; Dept. of Computer Science and Engineering, Sungkyunkwan University, Suwon, Republic of Korea; Dept. of Computer Science and Engineering, Kyungpook National University, Daegu, Republic of Korea",NOMS 2022-2022 IEEE/IFIP Network Operations and Management Symposium,"9 Jun 2022","2022","","","1","9","Since its emergence, NoSQL databases have firmly established themselves as an indispensable software component of modern cloud-native applications. However, it also becomes increasingly challenging to perform critical management tasks such as troubleshooting unexpected performance problems. This is due to the ever-increasing diversity and specialization of NoSQL databases that make it difficult to observe the internal activities. To address these challenges, we have designed and built a technique for introspecting NoSQL databases. Our technique traces system call sequences of key operations under controlled workloads and filters scaling patterns from constant components. Novel algorithms are developed to uncover repeating patterns of system calls from massive amounts of traces and filter out background noise with high efficiency. The evaluation shows that our technique can greatly enhance the visibility into the NoSQL databases enabling us to diagnose performance problems or gain insights into internal activities.","2374-9709","978-1-6654-0601-7","10.1109/NOMS54207.2022.9789934","National Research Foundation of Korea; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9789934","NoSQL database;Introspection;Visibility;Resource Consumption Model;System Call;Performance diagnosis","Degradation;Network topology;NoSQL databases;Scalability;Filtering algorithms;Feature extraction;Software","","","","43","IEEE","9 Jun 2022","","","IEEE","IEEE Conferences"
"Deciphering Discrepancies: A Comparative Analysis of Docker Image Security","B. Boles; E. O'Donoghue; A. Redempta Manzi Muneza; G. Perkins; C. Izurieta; A. Marie Reinhold","Gianforte School of Computing Montana State University, Bozeman, Montana; Gianforte School of Computing Montana State University, Bozeman, Montana; Gianforte School of Computing Montana State University, Bozeman, Montana; Gianforte School of Computing Montana State University, Bozeman, Montana; Gianforte School of Computing Montana State University Pacific Northwest National Laboratory Idaho National Laboratory, Bozeman, Montana; Gianforte School of Computing Montana State University Pacific Northwest National Laboratory Idaho National Laboratory, Bozeman, Montana",2024 IEEE International Conference on Source Code Analysis and Manipulation (SCAM),"19 Dec 2024","2024","","","254","259","As the use of microservices continues to grow and become a foundational approach to architecting software solutions, ensuring the security of microservices is paramount. Docker images have emerged as the predominant solution to containerize microservices-and thus, Docker images are becoming a large attack surface. Thus, reducing vulnerabilities in Docker images will reduce microservice cyberattacks. A common way to find vulnerabilities in Docker images employs static analysis tools like Trivy and Grype. However, these tools frequently generate disparate vulnerability reports when analyzing the same Docker image, thus causing uncertainty in tool selection. We collected 927 Docker images, analyzed them with Trivy and Grype, and compared the vulnerabilities reported in each image. Among the 865 images found to have vulnerabilities, Trivy and Grype disagreed on both the number of vulnerabilities and the vulnerability IDs found therein. Since both tools interface with external vulnerability databases, some discrepancies can be attributed to how the tools interface with these external resources. The external vulnerability databases partially overlap and frequently contradict one another, thereby creating challenges for static analysis tool developers and end users alike. This New Ideas and Emerging Results (NIER) study contains new and critical information that practitioners need for selecting and using static analysis tools-given that increases in the use of Docker technologies means increases in the size of the attack surfaces.","2470-6892","979-8-3315-2850-8","10.1109/SCAM63643.2024.00034","DHS; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10795335","component;formatting;style;styling;insert","Uncertainty;Databases;Source coding;Microservice architectures;Static analysis;Software;Security;Computer crime","","","","15","IEEE","19 Dec 2024","","","IEEE","IEEE Conferences"
"IEEE 802.1X Virtual Network Function Development for NG-PON Architecture","I. V. Araújo; S. R. Lima; A. D. Brízido","Centro Algoritmi, Universidade do Minho Braga, Portugal; Centro Algoritmi, Universidade do Minho Braga, Portugal; Direção de Sistemas de Rede (DSR), Altice Labs, Aveiro, Portugal","2022 International Conference on Software, Telecommunications and Computer Networks (SoftCOM)","18 Oct 2022","2022","","","1","6","The Open Broadband - Broadband Access Abstraction (OB-BAA) architecture aims to modernize the information technology components of broadband networks, more specif-ically the Central Offices (CO). CO stands out for being a vital aggregator of different access networks, such as optical, mobile, and cabled networks, benefiting from the paradigm of Software-Defined Networks (SDN). This paper aims to discuss the development of a virtualized network function (VNF) for network security to be integrated as a component of an OB-BAA architecture guided by an SDN controller. In particular, the IEEE 802.1X protocol is applied in a broadband NG-PON architecture for authentication and authorization of network equipment. The developed components were containerized and inserted in the Docker and Kubernetes virtualization frameworks. The proof-of-concept evaluates performance metrics, namely computational resource utilization and execution time of VNF processes, in usage tests with multiple supplicants and distinct operational modes, to attest to the most promising virtualization scenarios.","1847-358X","978-953-290-117-7","10.23919/SoftCOM55329.2022.9911396","FCT(grant numbers:UIDB/00319/2020); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9911396","Passive Optical Network;Central Office;Virtual Network Function;Software-Defined Network;Golang","Authorization;Scalability;Authentication;Computer architecture;Software;Broadband communication;Telecommunications","","3","","14","","18 Oct 2022","","","IEEE","IEEE Conferences"
"Cloud Native 5G: an Efficient Orchestration of Cloud Native 5G System","A. Khichane; I. Fajjari; N. Aitsaadi; M. Gueroui","Orange Labs, Châtillon, France; Orange Labs, Châtillon, France; UVSQ, DAVID, Universités Paris-Saclay, Versailles, France; UVSQ, DAVID, Universités Paris-Saclay, Versailles, France",NOMS 2022-2022 IEEE/IFIP Network Operations and Management Symposium,"9 Jun 2022","2022","","","1","9","Cloud native paradigm gained momentum during the last few years fostering its adoption in 5G architecture. In this context, a new generation of network functions called Cloud native Network Functions (CNFs) has seen the light of day. However, despite their numerous advantages in terms of lightness and portability, CNFs raise new issues not solved yet. Specifically, these fine-grained services require an efficient orchestration system able to automate their lifecycle management while considering the stringent QoS’s requirements. In this paper, we propose a novel 5G CNFs orchestration framework addressing both IT and Network resource provisioning. Both qualitative and quantitative studies are conducted to validate our solution using the auto-scaling use-case. Our extensive experimentations show that our proposal achieves good performances in terms of: i) deployment time, ii) upgrade time, iii) packet loss rate, and iv) resource allocation balancing.","2374-9709","978-1-6654-0601-7","10.1109/NOMS54207.2022.9789856","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9789856","5G;Cloud native;CNF;Orchestration;Containerization;Kubernetes;Auto-scaling","5G mobile communication;Packet loss;Microservice architectures;Quality of service;Proposals;Resource management","","13","","22","IEEE","9 Jun 2022","","","IEEE","IEEE Conferences"
"Flexible and Lightweight Framework for Active Industrial Asset Administration Shells","S. Wein; L. Körfer; S. Storms; C. Brecher","Laboratory for Machine Tools and Production Engineering (WZL), RWTH Aachen University, Aachen, Germany; Laboratory for Machine Tools and Production Engineering (WZL), RWTH Aachen University, Aachen, Germany; Laboratory for Machine Tools and Production Engineering (WZL), RWTH Aachen University, Aachen, Germany; Laboratory for Machine Tools and Production Engineering (WZL), RWTH Aachen University, Aachen, Germany",2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS),"4 Dec 2020","2020","1","","549","554","The increasing complexity and heterogeneity of Internet of Things-based production processes require the development of new control paradigms. Autonomous assets can be enablers for mastering the new challenges. Digital representations in particular play a decisive role here. Within the framework of Industry 4.0, the concept of the asset administration shell is being promoted in order to enable standardization of the use of digital representations. To enable autonomous decision making, the development of active asset administration shells is required. While the specification process of the asset administration shell is still ongoing and major changes are conceivable, a highly customizable implementation of the asset administration shell concept is needed. This paper depicts a flexible and lightweight framework for implementing active asset administration shells with respect to the ongoing specification process of the Industry 4.0 component. The framework will be evaluated using an exemplary use case from forestry.","","978-1-7281-6389-5","10.1109/ICPS48405.2020.9274761","European Commission; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274761","modeling;intelligent components and system architectures;standardization;automation objects framework","Protocols;Digital representation;Software;Databases;Computer architecture;Unified modeling language;Automation","","4","","16","IEEE","4 Dec 2020","","","IEEE","IEEE Conferences"
"Service-Oriented Robotic Swarm Systems: Model and Structuring Algorithms","G. Zhou; Y. Zhang; F. Bastani; I. -L. Yen","Department of Computer Science, University of Texas, Dallas, Richardson, TX, USA; Department of Computer Science, University of Texas, Dallas, Richardson, TX, USA; Department of Computer Science, University of Texas, Dallas, Richardson, TX, USA; Department of Computer Science, University of Texas, Dallas, Richardson, TX, USA",2012 IEEE 15th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing,"7 May 2012","2012","","","95","102","In this paper, we consider the design issues in building robotic swarm systems as a service and develop a multi-level service-oriented robotic swarm (SORS) framework. First we consider how to support easy composition of services into workflows to accomplish user tasks. We identify a set of primitive virtual services for this purpose. Virtual services are not physical robotic swarm actions, but are high-level primitive services geared toward easy specification of the workflows of many tasks. To realize virtual services, SORS incorporates the layers of planning services and micro services to plan and control the swarm of robots. Two example micro services and the detailed algorithms in their implementation are given in the paper. Also, a case study system is developed to show the use of virtual services to specify the workflow for an example task and to illustrate the design of micro services to realize virtual services.","2375-5261","978-0-7695-4643-8","10.1109/ISORC.2012.21","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6195866","Service-oriented architecture;robotic swarm systems;robot as a service;virtual services;structure formation","Robot kinematics;Robot sensing systems;Quality of service;Monitoring;Path planning;Collision avoidance","","1","","17","IEEE","7 May 2012","","","IEEE","IEEE Conferences"
"Extend Cloud to Edge with KubeEdge","Y. Xiong; Y. Sun; L. Xing; Y. Huang","Seattle Cloud Lab, Huawei R&D USA, Bellevue, WA; Seattle Cloud Lab, Huawei R&D USA, Bellevue, WA; Seattle Cloud Lab, Huawei R&D USA, Bellevue, WA; Seattle Cloud Lab, Huawei R&D USA, Bellevue, WA",2018 IEEE/ACM Symposium on Edge Computing (SEC),"9 Dec 2018","2018","","","373","377","In this paper, we introduce an infrastructure in edge computing environment, KubeEdge, to extend cloud capabilities to the edge. In the new form of cloud architecture, Cloud consists of computing resources both at centralized data centers and at distributed edges. KubeEdge infrastructure connects and coordinates two computing environments for applications leveraging both computing resources to achieve better performance and user experience. Technically, KubeEdge provides the network protocol infrastructure and the same runtime environment on the edge as in the cloud, which allows the seamless communication of applications with components running on edge nodes as well as cloud servers. It also allows the existing cloud services and cloud development model to be adopted at edge. Based on Kubernetes [1], KubeEdge architecture includes a network protocol stack called KubeBus, a distributed metadata store and synchronization service, and a lightweight agent (EdgeCore) for the edge. KubeBus is designed to have its own implementation of OSI network protocol layers, which connects servers at edge and VMs in the cloud as one virtual network. KubeBus provides a unified multitenant communication infrastructure with fault tolerance and high availability. The distributed metadata store and sync service is designed to support the offline scenario when edge nodes are not connected to the cloud. EdgeController component in KubeEdge architecture is a controller plugin for Kubernetes [1] to manage remote edge nodes and cloud VMs as one logical cluster, which enables KubeEdge to schedule, deploy and manage container applications across edge and cloud with the same API.","","978-1-5386-9445-9","10.1109/SEC.2018.00048","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8567693","Edge-Computing;Distributed-Systems;Cloud-Computing;Network-Protocol-and-Data-Synchronization","Cloud computing;Synchronization;Protocols;Servers;Metadata;Computer architecture;Containers","","118","","9","IEEE","9 Dec 2018","","","IEEE","IEEE Conferences"
"A Service Infrastructure for Industrie 4.0 Testbeds based on Asset Administration Shells","A. Luxenburger; D. Porta; S. Knoch; J. Mohr; T. Schwartz","Cognitive Assistants German Research Center for Artificial Intelligence (DFKI), Saarbrücken, Germany; Cognitive Assistants German Research Center for Artificial Intelligence (DFKI), Saarbrücken, Germany; Cognitive Assistants German Research Center for Artificial Intelligence (DFKI), Saarbrücken, Germany; Cognitive Assistants German Research Center for Artificial Intelligence (DFKI), Saarbrücken, Germany; Cognitive Assistants German Research Center for Artificial Intelligence (DFKI), Saarbrücken, Germany",2023 IEEE 28th International Conference on Emerging Technologies and Factory Automation (ETFA),"12 Oct 2023","2023","","","1","8","Industrial testbeds are spawning all across Europe, focusing on diverse topics. In our Human-Robot-Collaboration lab, we are researching how the lives of people in production can be made simpler through the use of collaborative robots, but still safe against the backdrop of the necessary changeability. Standardized digital twins based on Asset Administration Shells embedded in a service-oriented architecture are an ideal underlying information technology for this endeavor. In this paper, we describe such an infrastructure and outline its use based on two different use cases. We are convinced that this is not only relevant for testbed operators who want to achieve technical and semantic interoperability of their facilities, but can also serve as a blueprint for the implementation of Industrie 4.0 in small and medium-sized enterprises.","1946-0759","979-8-3503-3991-8","10.1109/ETFA54631.2023.10275335","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10275335","Asset Administration Shell;Digital Twins;Industrie 4.0;Service Infrastructure","Industries;Service robots;Semantics;Focusing;Europe;Production;Service-oriented architecture","","4","","9","IEEE","12 Oct 2023","","","IEEE","IEEE Conferences"
"Analysis, Evaluation, and Assessment for Containerizing an Industry Automation Software","S. Sarkar; A. PP; S. Ramaswamy","ABB Corporate Research, India; ABB Corporate Research, India; ABB Electrification Business, USA","2020 IEEE International Conference on Systems, Man, and Cybernetics (SMC)","14 Dec 2020","2020","","","1972","1979","Container-based virtualization is becoming a preferred choice to deploy services since it is lightweight and supports on-demand scalability as well as availability. The Process Automation Industry has accepted this technology to make their applications service oriented. However, container-based microservice architecture is effective only when the original software strictly followed modularity principles during its design. In this article, we share our learning of converting a distributed software to a microservice-based architecture using containers. Though the existing system has a modular design and deployed as distributed components, analysis of the current architecture shows that the application is monolithic (though modularized) and the components are strongly coupled in an indirect manner. As a result, it turns to be impossible to attain microservice-based architecture without changing the architecture. Next, we propose a microservice-based containerized TO-BE architecture of the application, and demonstrate that this TO-BE architecture does not incur any significant overhead. Finally, we propose a set of recommendations that the practitioners can follow to convert a monolithic application to a containerized architecture.","2577-1655","978-1-7281-8526-2","10.1109/SMC42975.2020.9282840","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9282840","container;effort estimation;coupling;industrial system;microservice;modularity","Industries;Operating systems;Scalability;Estimation;Computer architecture;Containers;Time factors","","3","","28","IEEE","14 Dec 2020","","","IEEE","IEEE Conferences"
"Research on the Architecture and Key Technologies of Integrated Platform based on Micro Service","Y. Xie; X. Zhou; H. Xie; G. Li; Y. Tao","Institute of Computer Application, China Academy of Engineer Physics; Institute of Computer Application, China Academy of Engineer Physics; SiChuan Electric Power Design & Consulting CO., Ltd., Mianyang, China; Institute of Computer Application, China Academy of Engineer Physics; Institute of Computer Application, China Academy of Engineer Physics","2018 IEEE 3rd Advanced Information Technology, Electronic and Automation Control Conference (IAEAC)","16 Dec 2018","2018","","","887","893","In the process of enterprise informatization, enterprises have gradually established many “chimney” application systems so that the business data is hard to share, and because being built at different times, the systems are developed based on different framework versions. With the development of enterprise informatization, the enterprise information construction is developing towards business integration as vertical and horizontal integration of data sharing and process through. However, adopting traditional system architecture to realize the integration platform has problems such as high coupling, poor scalability, waste of resources and difficulty in developing and maintaining. Aiming at these problems, this paper proposed an integrated platform application architecture based on micro service, and the application model of integrated platform has been designed. It breaks through the key technical issues such as session sharing, service invocation and distributed transaction, and verifies the application architecture of the platform through experiments which proved the architecture and application model of the integrated platform is available. Through the architecture, the business functions are broken down to form the independent micro service so as to realize the decoupling business function component of the system. It effectively reduces the integration platform development and maintenance difficulty, and improve s run-time dynamic extension ability and system fault tolerance.","2381-0947","978-1-5386-4509-3","10.1109/IAEAC.2018.8577921","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8577921","integrated platform;micro service;session sharing;distributed transaction;clustering","Servers;Task analysis;Authentication;Distributed databases;Computer architecture","","2","","15","IEEE","16 Dec 2018","","","IEEE","IEEE Conferences"
"SOA Approach - Identity and Access Management for the Risk Management Platform","J. Petrovska; A. Memeti; F. Imeri","Faculty of Contemporary Sciences and Technologies, SEE University, Tetovo, North Macedonia; Faculty of Natural Sciences and Mathematics, University of Tetova, Tetovo, North Macedonia; Faculty of Natural Sciences and Mathematics, University of Tetova, Tetovo, North Macedonia",2019 8th Mediterranean Conference on Embedded Computing (MECO),"15 Jul 2019","2019","","","1","4","The Risk Management system should help customs to more easily and effectively detect irregularities in import, export or transit of goods. Customs administrations today are required to provide extensive facilitation while maintaining control over the international movement of goods, means of transport and persons. The level of risk is determined in the context of the priorities of the Customs administrations e.g. whether the priority is collection of duties and taxes or checking prohibitions and restrictions or any other specific area that has been identified. The aim of the proposed platform in this paper is to achieve a high-quality, multi-layered approach to risk management that is effective and efficient, i.e. the platform is built on decoupled microservices, the different components are working together and an interruption in one segment does not have major effect on the overall system. The main motivation behind this case study is the hands-on experience we have and the close proximity to the project, i.e. information exchange and team discussions as the main available resources.","2637-9511","978-1-7281-1740-9","10.1109/MECO.2019.8760095","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8760095","Risk Management;SOA;Security;Identity Management;User Management","Risk management;Authorization;Service-oriented architecture;Authentication;Protocols","","2","","9","IEEE","15 Jul 2019","","","IEEE","IEEE Conferences"
"On the Resilience of the NFV-MANO: An Availability Model of a Cloud-native Architecture","B. Tola; Y. Jiang; B. E. Helvik","Department of Information Security and Communication Technology, NTNU-Norwegian University of Science and Technology, Trondheim, Norway; Department of Information Security and Communication Technology, NTNU-Norwegian University of Science and Technology, Trondheim, Norway; Department of Information Security and Communication Technology, NTNU-Norwegian University of Science and Technology, Trondheim, Norway",2020 16th International Conference on the Design of Reliable Communication Networks DRCN 2020,"11 May 2020","2020","","","1","7","With Network Function Virtualization (NFV), the management and orchestration of network services require a new set of functionalities to be added on top of legacy models of operation. Due to the introduction of the virtualization layer and the decoupling of the network functions and their running infrastructure, the operation models need to include new elements like virtual network functions (VNFs) and a new set of relationships between them and the NFV Infrastructure (NFVI). The NFV Management and Orchestration (MANO) framework plays the key role in managing and orchestrating the NFV infrastructure, network services and the associated VNFs. Failures of the MANO hinders the network ability to react to new service requests or events related to the normal lifecycle operation of network services. Thus, it becomes extremely important to ensure a high level of availability for the MANO architecture. The goal of this work is to model, analyze, and evaluate the impact that different failure modes have on the MANO availability. A model based on Stochastic Activity Networks (SANs), derived from current standard-compliant microservice-based implementations, is proposed as a case study. The case study is used to quantitatively evaluate the steady-state availability and identify the most important parameters influencing the system availability for different deployment configurations.","","978-1-7281-6300-0","10.1109/DRCN48652.2020.1570604378","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9089340","NFV-MANO;OSM;Availability;SAN models;Docker","Software;Computer architecture;Aging;Logic gates;Reliability engineering;Communication networks","","8","","26","IEEE","11 May 2020","","","IEEE","IEEE Conferences"
"MicroCloud: A Container-Based Solution for Efficient Resource Management in the Cloud","L. Baresi; S. Guinea; G. Quattrocchi; D. A. Tamburri","Politecnico di Milano, Milano, Lombardia, IT; Politecnico di Milano, Milano, Lombardia, IT; Politecnico di Milano, Milano, Lombardia, IT; Politecnico di Milano, Milano, Lombardia, IT",2016 IEEE International Conference on Smart Cloud (SmartCloud),"26 Dec 2016","2016","","","218","223","Cloud-based applications require dynamic resource allocation to cope with changing workloads and unexpected request spikes. The use of container technology increases manageability, portability, and scalability, but changes how the applications are provisioned and maintained. This paper presents MicroCloud, a novel architecture for providing multiple containerized applications with fine-grained resource allocation. MicroCloud consists of a TOSCA library, for specifying the topology of containerized applications and of their infrastructure, and a meta-workflow, for automatically adapting resource allocation in a coordinated, multi-level, and topology-aware way. MicroClouds's implementation is based on ECoWare, our framework for the management of self-adaptive, cloud-based applications. We evaluated MicroCloud using two applications deployed on Amazon EC2. The experiments focused on guaranteeing the average response time, and showed that the use of containers —with respect to pure virtual machines— can guarantee a 46% improvement (on average) on resource management.","","978-1-5090-5263-9","10.1109/SmartCloud.2016.42","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7796177","cloud computing;containers;resource management;TOSCA;mjulti-level adaptation","Containers;Topology;Libraries;Computer architecture;Resource management;Monitoring;Cloud computing","","15","","26","IEEE","26 Dec 2016","","","IEEE","IEEE Conferences"
"FPGA virtualization with accelerators overcommitment for network function virtualization","M. Paolino; S. Pinneterre; D. Raho","Virtual Open Systems, Grenoble, France; Virtual Open Systems, Grenoble, France; Virtual Open Systems, Grenoble, France",2017 International Conference on ReConFigurable Computing and FPGAs (ReConFig),"5 Feb 2018","2017","","","1","6","Network Functions Virtualisation (NFV) is revolutionizing the telecom operators data centers as well as the way in which virtualization is applied to high performance/high availability scenarios. Hardware accelerators, and in particular FPGAs, are a very promising solution for NFV, both for their high performance, predictability, programmability and reconfigurability. Recently, consolidation is brought to its limit in this field with lightweight virtualization techniques, which require a high overcommitment of FPGA accelerators resources in order to cope with the needs of thousands of guests. The lack of such virtualization support, together with cloud integration and programmability issues, limits the deployment of FPGAs in NFV. This paper presents the Virtualization Manager (VirtManager), an FPGA IP block which enables accelerators overcommitment with direct guest access. This is a key feature to enable the acceleration of thousands of guests, as it is the case for lightweight VMs, containers and unikernels. This paper's main contribution is a novel architecture for FPGA virtualization with support for resources overcommitment, NFV management and orchestration. A performance analysis of the accelerators context switch mechanism is included to prove the feasibility of the proposed approach.","","978-1-5386-3797-5","10.1109/RECONFIG.2017.8279796","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8279796","","Field programmable gate arrays;Virtualization;Switches;Hardware;Context;Telecommunications;Computer architecture","","12","","28","IEEE","5 Feb 2018","","","IEEE","IEEE Conferences"
"An Approach to Get Legal Assistance Using Artificial Intelligence","N. Jain; G. Goel","Artificial Intelligence & Analytics Cognizant Technology Solutions, Gurgaon, India; Chief Data Scientist Vitrana Inc, New Jersey, USA","2020 8th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions) (ICRITO)","15 Sep 2020","2020","","","768","771","As per National Judicial Data Grid (njdg.ecourts.gov.in) of India, there are over 31 million cases (out of which 23 million cases are more than an year old) pending in district and Taluka courts of India, over 4.5 million cases (out of which 2.8 million cases are more than an year old) are pending in the High Court of India. In India, especially in the rural areas, due to limited resources and exposure to the lawyers, a case may lack strong representation and can significantly delay the outcome. This is a plaguing concern for the people, who are spending their fortune in fighting a court case and fully relying on their lawyer’s expertise and due diligence. This paper proposes an approach called as Virtual Legal Assistant (VLA). VLA is a four-component based design that can enables legal experts to consult the legal situations with an interactive and AI-based virtual assistant.Rise of Artificial Intelligence in the last decade broke many technological myths. Interactive virtual assistants like Alexa or Siri are no more research topics but are now commercially available and used. The proposed approach talks about the possibility to build a similar digital assistant for legal domain, which can be trained on millions of the court cases and provide assistance in legal matters to the concerned people.","","978-1-7281-7016-9","10.1109/ICRITO48877.2020.9198029","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9198029","Artificial Intelligence;Machine Learning;Legal Intelligence;Judiciary System;Virtual Assistant;NLP","Law;Knowledge based systems;Personal digital assistants;Ontologies;Semantics","","6","","15","IEEE","15 Sep 2020","","","IEEE","IEEE Conferences"
"Micro-Intelligence for the IoT: SE Challenges and Practice in LPaaS","R. Calegari; G. Ciatto; S. Mariani; E. Denti; A. Omicini","Department of Computer Science and Engineering (DISI), Alma Mater STUDIORUM-Università di Bologna, Italy; Department of Computer Science and Engineering (DISI), Alma Mater STUDIORUM-Università di Bologna, Italy; Department of Sciences and Methods for Engineering (DISMI), Università degli Studi di Modena e Reggio Emilia, Italy; Department of Computer Science and Engineering (DISI), Alma Mater STUDIORUM-Università di Bologna, Italy; Department of Computer Science and Engineering (DISI), Alma Mater STUDIORUM-Università di Bologna, Italy",2018 IEEE International Conference on Cloud Engineering (IC2E),"17 May 2018","2018","","","292","297","Distributing situated intelligence in Cyber-Physical Systems (CPS) to realise the vision of Internet of Intelligent Things (IoIT) raises issues of efficiency and scalability-in particular when dealing with huge numbers of physical objects. Such issues do not just regard the application or service logic and runtime, but also impact on the software development process. Moving from the notion of Logic Programming as a Service (LPaaS) - a re-interpretation of distributed logic programming tailored to the IoT era - in this paper we describe how its architecture and development process deals with the aforementioned issues from a software engineering standpoint, by discussing the design, development practices, and delivery means of the LPaaS technology.","","978-1-5386-5008-0","10.1109/IC2E.2018.00061","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8360344","IoT;LPaaS;RESTful interface;Logic Programming","Software;Servers;Logic programming;Scalability;Engines;Computer architecture","","2","","15","IEEE","17 May 2018","","","IEEE","IEEE Conferences"
"A Trustworthy Blockchain-based Decentralised Resource Management System in the Cloud","Z. Zhao; C. Rong; M. G. Jaatun","University of Stavanger, Norway; University of Amsterdam, Netherlands; University of Amsterdam, Netherlands",2020 IEEE 26th International Conference on Parallel and Distributed Systems (ICPADS),"25 Feb 2021","2020","","","617","624","Quality Critical Decentralised Applications (QC-DApp) have high requirements for system performance and service quality, involve heterogeneous infrastructures (Clouds, Fogs, Edges and IoT), and rely on the trustworthy collaborations among participants of data sources and infrastructure providers to deliver their business value. The development of the QCDApp has to tackle the low-performance challenge of the current blockchain technologies due to the low collaboration efficiency among distributed peers for consensus. On the other hand, the resilience of the Cloud has enabled significant advances in software-defined storage, networking, infrastructure, and every technology; however, those rich programmabilities of infrastructure (in particular, the advances of new hardware accelerators in the infrastructures) can still not be effectively utilised for QCDApp due to lack of suitable architecture and programming model.","2690-5965","978-1-7281-9074-7","10.1109/ICPADS51040.2020.00086","European Union(grant numbers:860627,825134,824068,862409); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9359214","DevOps;Cloud Computing;Blockchain","System performance;Collaboration;Blockchain;Computer architecture;Programming;Hardware;Resilience","","1","","31","IEEE","25 Feb 2021","","","IEEE","IEEE Conferences"
"DCE: A High-Performance, Scalable, Enterprise-Level Cloud Native Operating System","Q. Chen; H. Zhang; K. Yan; F. Guo; H. Yang; Y. Bai; L. Hou","Shanghai DaoCloud Network Technology Co., Ltd., Shanghai, China; Shanghai DaoCloud Network Technology Co., Ltd., Shanghai, China; Shanghai DaoCloud Network Technology Co., Ltd., Shanghai, China; Shanghai DaoCloud Network Technology Co., Ltd., Shanghai, China; Shanghai DaoCloud Network Technology Co., Ltd., Shanghai, China; Shanghai DaoCloud Network Technology Co., Ltd., Shanghai, China; Shanghai DaoCloud Network Technology Co., Ltd., Shanghai, China",2023 IEEE 8th International Conference on Smart Cloud (SmartCloud),"18 Dec 2023","2023","","","208","213","The cloud native methodology has emerged as an optimized solution to meet the ever-evolving demands and challenges of modern application deployment and management. DaoCloud Enterprise (DCE), a high-performance and scalable cloud native operating system, developed by Shanghai DaoCloud Network Technology Co., Ltd. has experienced rapid growth over the past eight years, gaining valuable experience in various fields, including finance, automotive, manufacturing, smart city and retail etc. The company has been dedicated to exploring cloud native technology, such efforts fruited as eight major components offered by DCE, including multi-cloud orchestration, microservice governance, container management, insight, global management, storage, service mesh, and workbench. DCE empowers the enterprises to embrace their digital future, and efficiently increase their business agility.","","979-8-3503-1350-5","10.1109/SmartCloud58862.2023.00044","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10349204","cloud native;container;multi-cloud orchestration;microservice governance;insight","Productivity;Industries;Smart cities;Operating systems;Microservice architectures;Finance;Manufacturing","","1","","31","IEEE","18 Dec 2023","","","IEEE","IEEE Conferences"
"Hybrid Serverless Processing in Environmental Monitoring - Building Digital Twin","M. Konieczny; S. Musiał; S. Zieliński","AGH University, Krakow, Poland; AGH University, Krakow, Poland; AGH University, Krakow, Poland",2024 IEEE 65th International Scientific Conference on Information Technology and Management Science of Riga Technical University (ITMS),"6 Nov 2024","2024","","","1","6","This paper discusses the application of a cloudedge continuum implemented with containerized and event-driven processing for environmental monitoring. We propose an architecture based on a serverless computing paradigm that allows managing software and digital assets. We demonstrate its functionality on a levee monitoring use case. In the use case, we utilize CloudEvents specification to deliver messages in a protocol-agnostic way. We also build and evaluate mechanisms for task migrations based purely on Kuberentes and Knative. Because the execution process spans across different serverless environments, we utilize hybrid servereless approach [1]. In our system prototype, we also build and evaluate the concept of nanoservices [2] in delivering environmental monitoring solutions. Our early results show that, with our approach, we can build scalable and elastic digital twin applications and scenarios capable of analyzing large-scale infrastructure.","2771-6937","979-8-3315-3383-0","10.1109/ITMS64072.2024.10741932","Research and Development; Horizon Europe; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10741932","serverless computing;environmental monitoring;events exchange","Levee;Buildings;Serverless computing;Prototypes;Computer architecture;Software;Digital twins;Environmental monitoring;Information technology","","","","18","IEEE","6 Nov 2024","","","IEEE","IEEE Conferences"
"A Novel, Model-Based, Specification-Driven Embedded Software Integration Platform","N. A. Visnevski","GE Research 1 Research Circle, Niskayuna, NY",2021 IEEE Aerospace Conference (50100),"7 Jun 2021","2021","","","1","18","This paper presents a model-based, specification-driven Embedded Software integration Platform (ESiP) we refer to as Ensemble. Its primary objective is to shorten the portion of the embedded systems' life cycle accelerating their paths from conceptualization through design, development, testing, verification, and transition into production and maintenance. The platform achieves this objective by heavily relying on automation of model and code synthesis for portions of embedded software which are not essential to the software's core functionality, but critical for the overall requirements of compatibility and interoperability of embedded applications with modern deployment ecosystems. This partially relieves the burden placed on embedded application developers allowing them to focus on the application core without being overburdened by interoperability and portability constraints of their application, thus reducing the overall cost of the development process. The paper introduces a new, declarative meta-language called Ensemble iSpec, which allows to define system of system, data type definition, build, and deployment specifications. The paper then presents Ensemble ESiP architecture which relies on iSpec for development and integration automation. We describe common workflows used in embedded system design automation using Ensemble platform. The paper also works through three case studies illustrating how the platform helps in embedded system test and evaluation, integration and deployment, as well as how it applies to development of complex systems of systems simultaneously targeting heterogeneous deployment environments consisting of real-time, embedded platforms, cloud computing platforms as well as so-called edge segments bridging the gaps between “clouds and embedded boxes”.","1095-323X","978-1-7281-7436-5","10.1109/AERO50100.2021.9438484","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9438484","","Cloud computing;Embedded systems;Automation;Ecosystems;Aerospace electronics;Service-oriented architecture;Interoperability","","","","23","IEEE","7 Jun 2021","","","IEEE","IEEE Conferences"
"5G Smart City Vertical Slice","B. Rusti; H. Stefanescu; M. Iordache; J. Ghenta; C. Patachia; P. Gouvas; A. Zafeiropoulos; E. Fotopoulou; Q. Wang; J. A. Calero","Technical Departament, Orange Romania, Bucharest, Romania; Technical Departament, Orange Romania, Bucharest, Romania; Technical Departament, Orange Romania, Bucharest, Romania; Technical Departament, Orange Romania, Bucharest, Romania; Technical Departament, Orange Romania, Bucharest, Romania; Research & Development Ubitech, Athens, Greece; Research & Development Ubitech, Athens, Greece; Research & Development Ubitech, Athens, Greece; Engineering & Computing University of the West of Scotland, Paisley, UK; Engineering & Computing University of the West of Scotland, Paisley, UK",2019 IFIP/IEEE Symposium on Integrated Network and Service Management (IM),"20 May 2019","2019","","","13","19","5G is the key enabler for new business and digital transformation initiatives to integrate vertical industries (e.g., automotive, energy, manufacturing, entertainment) into the network slice concept, maximizing the sharing of network resources and creating dedicated logical networks with personalized customer specific functions. In this paper we present a unique concept for the development, deployment and management of a Smart City 5G cloud native application network as a result of synergy between two 5G-PPP EU projects, namely MATILDA and SliceNet. The application development and deployment lifecycle starts with the design and composition of the application graph in MATILDA development kit, followed by on boarding of the developed application into a vertical applications orchestrator and the preparation of a ""slice intent"" description for the creation of an application-aware network slice. The latter is provided to the SliceNet One-Stop API to create the application-aware network slice to be deployed further over a programmable network infrastructure. The overall Smart City use case is presented, including plans for further enhancements as a collaborative activity between the two research projects. All functions and integration activities will be tested in a dedicated testbed platform.","1573-0077","978-3-903176-15-7","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8717831","5G;Marketplace;Application Orchestrator;Network Slice;5G-ready application;IoT;LTE-M;Sensor;Smart City;Matilda;SliceNet component","5G mobile communication;Smart cities;Network slicing;Quality of experience;Lighting;Computer architecture","","2","","26","","20 May 2019","","","IEEE","IEEE Conferences"
"Modeling Digital Twins of Kubernetes-Based Applications","D. Borsatti; W. Cerroni; L. Foschini; G. Y. Grabarnik; F. Poltronieri; D. Scotece; L. Shwartz; C. Stefanelli; M. Tortonesi; M. Zaccarini","University of Bologna, Bologna, Italy; University of Bologna, Bologna, Italy; University of Bologna, Bologna, Italy; Department of Mathematics and Computer Science, St. John's University, Queens, NY, USA; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy; University of Bologna, Bologna, Italy; IBM TJ W2atson Research Center, Operational Innovation, NY, USA; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy; Distributed Systems Research Group, University of Ferrara, Ferrara, Italy",2023 IEEE Symposium on Computers and Communications (ISCC),"28 Aug 2023","2023","","","219","224","Kubernetes provides several functions that can help service providers to deal with the management of complex container-based applications. However, most of these functions need a time-consuming and costly customization process to address service-specific requirements. The adoption of Digital Twin (DT) solutions can ease the configuration process by enabling the evaluation of multiple configurations and custom policies by means of simulation-based what-if scenario analysis. To facilitate this process, this paper proposes KubeTwin, a framework to enable the definition and evaluation of DTs of Kubernetes applications. Specifically, this work presents an innovative simulation-based inference approach to define accurate DT models for a Kubernetes environment. We experimentally validate the proposed solution by implementing a DT model of an image recognition application that we tested under different conditions to verify the accuracy of the DT model. The soundness of these results demonstrates the validity of the KubeTwin approach and calls for further investigation.","2642-7389","979-8-3503-0048-2","10.1109/ISCC58397.2023.10217853","European Union; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10217853","Service Management and Orchestration;Kubernetes;Simulation;Optimization","Computers;Analytical models;Image recognition;Computational modeling;Microservice architectures;Digital twins;Testing","","8","","17","IEEE","28 Aug 2023","","","IEEE","IEEE Conferences"
"Framework to Secure Docker Containers","M. K. Abhishek; D. Rajeswara Rao","Department of CSE, Koneru Lakshmaiah Education Foundation, Vaddeswaram, India; Department of CSE, Koneru Lakshmaiah Education Foundation, Vaddeswaram, India",2021 Fifth World Conference on Smart Trends in Systems Security and Sustainability (WorldS4),"19 Aug 2021","2021","","","152","156","Docker is one the key component for application deployment using CI/CD pipelines. Wherever containers are going ot be used, Docker engine is always the first choice but on other hand security of the Docker images using which application is going to be deployed is always a concern. In cloud computing, validation of the Docker images security is a paramount. Containers virtualization which is based on operating system virtualization is not secure as hypervisor virtualization. In this paper we are proposing a framework which uses an architecture including plugins, CI/CD pipeline to deploy the application to ensure the security of application bundled as a Docker image. It is going to be referred from the starting of application development till the deployment including plugin for Docker build, bundling the application in form of images along with required libraries, pushing the images to Docker registry. Jenkin jobs are going to be used for getting the build and then for deployment. For validation, we came up with vulnerable Docker images and validated against our architecture having proposed model to compare the results. In later sections, we have also considered the containers security measures.","","978-1-6654-0096-1","10.1109/WorldS451998.2021.9514041","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9514041","Containers;Continuous Integration (CI);Continuous Deployment (CD);Container security;Docker;Jenkin;SonarQube;Virtualization","Virtual machine monitors;Runtime;Pipelines;Computer architecture;Organizations;Containers;Tools","","10","","15","IEEE","19 Aug 2021","","","IEEE","IEEE Conferences"
"A Scalable Cloud-Edge Computing Framework for Supporting Device-Adaptive Big Media Provisioning","A. Galletta; A. Cuzzocrea; A. Celesti; M. Fazio; M. Villari","Department of Engineering, University of Messina, Messina, Italy; DIA Department, University of Trieste, Trieste, Italy; Department of Engineering, University of Messina, Messina, Italy; Department of Engineering, University of Messina, Messina, Italy; Department of Engineering, University of Messina, Messina, Italy","2018 18th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)","16 Jul 2018","2018","","","669","674","Nowadays, we are observing an explosion on recording and transmitting of videos from multiple sources such as Social Media (Periscope, Facebook, Youtube etc.) and owner of trains/coaches (Trenitalia-Frecce-Italy, TGV-France, Ryanair-Bus-Travels, etc.). In this paper, we investigate how to support the provisioning of videos to heterogeneous end user devices in different contexts, adapting the content to the specific requirements of the used end devices. In particular, we present a new Cloud-Edge Service for vIdeO delivery (CESIO) architecture, that exploits Cloud and Edge virtual resources to improve the delivery video contents at different quality resolutions. The paper describes architecture components and their behaviour in the system. Moreover, a possible application scenario is discussed to well explain how the proposed solution works.","","978-1-5386-5815-4","10.1109/CCGRID.2018.00099","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8411086","Cloud computing;Edge computing;Transcoding;FFM-PEG","Videos;Cloud computing;Containers;Transcoding;Streaming media;Computer architecture;Multimedia communication","","6","","22","IEEE","16 Jul 2018","","","IEEE","IEEE Conferences"
"Asynchronous Data Communication Architecture on Real-Time Face Recognition for Hybrid Laboratory System","N. Lestari; T. Purnama; S. Risnanto; B. Fitriadi; A. M. H. Yusuf; A. S. Prihatmanto","Doctoral Program of School of Electrical Engineering and Informatics, Institut Teknologi Bandung, Bandung, Indonesia; Electrical Engineering Department, Faculty of Engineering, Universitas Sangga Buana, Bandung, Indonesia; Faculty of Engineering, Universitas Sangga Buana, Bandung, Indonesia; Universitas Komputer Indonesia, Bandung, Indonesia; School of Electrical Engineering and Informatics, Institut Teknologi Bandung, Bandung, Indonesia; School of Electrical Engineering and Informatics, Institut Teknologi Bandung, Bandung, Indonesia","2023 17th International Conference on Telecommunication Systems, Services, and Applications (TSSA)","25 Dec 2023","2023","","","1","5","The Internet of Things (IoT) and Artificial Intelligence (AI) have reshaped educational technology, increasing the chances of developing more effective and engaging learning environments. This study proposes an architecture for asynchronous data communication with real-time face recognition, a virtual and remote labs confluence. The architecture uses IoT hardware and software to comprise critical components such as IoT cameras, message brokers, FTP servers, and AI processing servers. The aim is to optimize resource usage and maximize response time efficiency. The architecture employs message queuing to manage high volumes of face image data, facilitating immediate verification and rapid access. Our findings demonstrate that the system can achieve face recognition with 91.7% accuracy and an average system communication latency of 2.631 seconds, effectively leveraging asynchronous communication to optimize resource usage and computational efficiency. The research comprehensively measures the data communication metrics and face recognition metrics. It also explains how asynchronous data communication can be strategically deployed in a hybrid lab environment to enhance educational and operational efficacy.","","979-8-3503-0916-4","10.1109/TSSA59948.2023.10366951","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10366951","Asynchronous data communication;real-time face recognition;resource optimization;message queuing;computational efficiency","Measurement;Face recognition;Computer architecture;Learning (artificial intelligence);Real-time systems;Software;Telecommunications","","","","26","IEEE","25 Dec 2023","","","IEEE","IEEE Conferences"
"Web-service framework for environmental models","M. M. Hossain; R. Wu; J. T. Painumkal; M. Kettouch; C. Luca; S. M. Dascalu; F. C. Harris","Department of Computer Science and Engineering, University of Nevada Reno, Reno, NV, USA; Department of Computer Science and Engineering, University of Nevada Reno, Reno, NV, USA; Department of Computer Science and Engineering, University of Nevada Reno, Reno, NV, USA; Computing and Technology Anglia Ruskin University, Cambridge, UK; Computing and Technology Anglia Ruskin University, Cambridge, UK; Department of Computer Science and Engineering, University of Nevada Reno, Reno, NV, USA; Department of Computer Science and Engineering, University of Nevada Reno, Reno, NV, USA",2017 Internet Technologies and Applications (ITA),"9 Nov 2017","2017","","","104","109","Environmental scientists always use different models to simulate the real world with their own devices. Because of the limited computing power, the simulation can consume very long time. Also, it is hard to share their models with others and they may need to rebuild the same model for similar problems. To solve these problems, we propose a web-service centric framework to expose models as services in this paper. The framework allows model execution in the cloud environment, submission of model data through the NetCDF standard data format and storage and access to the model resources through web services. The framework allows an easy way to publish models as Linux container images through an image hub. A prototype is introduced and implemented to prove the idea works.","","978-1-5090-4815-1","10.1109/ITECHA.2017.8101919","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8101919","model as service;web-based application;environmental model;hydrological model;cloud-based application","Data models;Computational modeling;Object oriented modeling;Adaptation models;Web services;Biological system modeling","","4","","20","IEEE","9 Nov 2017","","","IEEE","IEEE Conferences"
"Exploiting Paired Concepts to Facilitate Software Engineering Education","Z. Li; A. Rainer","Queen's University Belfast, Belfast, UK; Queen's University Belfast, Belfast, UK",2023 30th Asia-Pacific Software Engineering Conference (APSEC),"2 Apr 2024","2023","","","559","563","[Context]: In the university curriculum, software engineering (SE) is frequently perceived as a difficult course to study due to its concept-intensive nature. [Objectives]: We aim to investigate if and how we can help students conveniently understand and memorise the numerous and various SE concepts. [Method]: We employ critical reflection as the research method to qualitatively examine our educational activities, teaching materials, and students' learning effects. [Results]: By focusing on the paired structural model of knowledge representation, we propose to utilise tangentially-paired concepts together with the conventional bipolar-paired concepts to facilitate SE education. In particular, we have identified three types of tangentially-paired concepts with deriving (stemming), analogical, and cloning relationships respectively. [Conclusions]: Exploiting paired SE concepts can act as an efficient educational approach that supplements the existing strategies for teaching SE knowledge.","2640-0715","979-8-3503-4417-2","10.1109/APSEC60848.2023.00070","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10479453","concept map;knowledge representation;paired concepts;paired structural model;pedagogical improvement","Education;Focusing;Cloning;Knowledge representation;Reflection;Software engineering;Context modeling","","","","22","IEEE","2 Apr 2024","","","IEEE","IEEE Conferences"
"A Generic and Highly Scalable Framework for the Automation and Execution of Scientific Data Processing and Simulation Workflows","J. Liu; E. Braun; C. Düpmeier; P. Kuckertz; D. S. Ryberg; M. Robinius; D. Stolten; V. Hagenmeyer","Institute for Automation and Applied Informatics (IAI), Karlsruhe Institute of Technology (KIT), Eggenstein-Leopoldshafen, Germany; Institute for Automation and Applied Informatics (IAI), Karlsruhe Institute of Technology (KIT), Eggenstein-Leopoldshafen, Germany; Institute for Automation and Applied Informatics (IAI), Karlsruhe Institute of Technology (KIT), Eggenstein-Leopoldshafen, Germany; Institute of Electrochemical Process Engineering (IEK-3), Forschungszentrum Jiilich. GmbH, Jiilich, Germany; Institute of Electrochemical Process Engineering (IEK-3), Forschungszentrum Jiilich. GmbH, Jiilich, Germany; Institute of Electrochemical Process Engineering (IEK-3), Forschungszentrum Jiilich. GmbH, Jiilich, Germany; Chair of Fuel Cells, Forschungszentrum Jiilich. GmbH, Jiilich, Germany; Institute for Automation and Applied Informatics (IAI), Karlsruhe Institute of Technology (KIT), Eggenstein-Leopoldshafen, Germany",2018 IEEE International Conference on Software Architecture (ICSA),"23 Jul 2018","2018","","","145","14510","In order to perform complex data processing and co-simulation workflows for research on data driven energy systems, a generic, modular and highly scalable process operation framework is presented in this article. This framework consistently applies web technologies to build up a microservices architecture. It automates the startup, synchronization, and management of scientific data processing and simulation tools (e.g. Python, Matlab, OpenModelica) as part of larger transdisciplinary, multi-domain data processing and co-simulation workflows. It uses container virtualization on the underlying cluster computing environment to control and manage different simulation nodes.Within the framework's processing workflow, software executables can be distributed to different nodes on the cluster, easily access data and communicate with other components via communication adapters and a high-performance messaging channel infrastructure. By integrating Apache NiFi, the framework also provides an easy-to-use web user interface to allow users to model, perform and operate workflows for future energy system solutions. As soon as a complex workflow is set up in the process operation framework, researchers can use the workflow without any setup or configuration on their local workstations and without knowing any details of the underlying infrastructure or software environment.","","978-1-5386-6398-1","10.1109/ICSA.2018.00024","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8417148","automation;microservices;Big Data;computing cluster;energy system;data processing;co-simulation","Computational modeling;Containers;Data models;Virtualization;Computer architecture;Big Data","","4","","31","IEEE","23 Jul 2018","","","IEEE","IEEE Conferences"
"Organic 6G Networks: Ultra-Flexibility Through Extensive Stateless Functional Split","M. Corici; F. Eichhorn; H. Buhr; T. Magedanz","Fraunhofer FOKUS, Berlin, Germany; Fraunhofer FOKUS, Berlin, Germany; Fraunhofer FOKUS, Berlin, Germany; Fraunhofer FOKUS, Berlin, Germany",2023 2nd International Conference on 6G Networking (6GNet),"20 Nov 2023","2023","","","1","8","With the increase in hardware performance, the 5G mobile network architecture shifted from physical components to software-only micro-services. The very modular network functions can be deployed flexibly on commodity hardware. However, the extensive modularity of these network functions is increasing the number of managed entities, and the core network request latency. Also, it requires extensive procedures to be able to re-select the components for specific devices, a fundamental condition for a potential system scale down. In this paper, we propose a new organic 6G network architecture that handles these challenges through a new functionality split based on the experience of IT software services. Furthermore, we provide an analysis based on main 5G procedures, showing that the newly proposed architecture is handling the re-selection of functionality significantly better. Which is a cornerstone of high-speed scaling (especially scaling-out), as well as migration of functionality and users.","","979-8-3503-0673-6","10.1109/6GNet58894.2023.10317754","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10317754","Mobile Networks;6G;core networks;organic core network;organic networks","6G mobile communication;5G mobile communication;Computer architecture;Network architecture;Hardware;Software","","1","","19","IEEE","20 Nov 2023","","","IEEE","IEEE Conferences"
"Study Containerization Technologies like Docker and Kubernetes and their Role in Modern Cloud Deployments","S. Agrawal; D. Singh","Apex Institute of Technology, Chandigarh University, Mohali, India; Apex Institute of Technology, Chandigarh University, Mohali, India",2024 IEEE 9th International Conference for Convergence in Technology (I2CT),"10 Jun 2024","2024","","","1","5","The advent of cloud computing has reshaped the landscape of application deployment and management, ushering in an era characterized by unprecedented flexibility, scalability, and agility. In this context, containerization technologies, exemplified by Docker, and container orchestration platforms, epitomized by Kubernetes, have emerged as pivotal enablers of modern cloud deployments. These technologies promise efficient application packaging, seamless scalability, and simplified DevOps practices. However, their rapid adoption has brought forth a myriad of challenges and opportunities at the intersection of containerization and cloud computing. This research paper embarks on an exploration of containerization technologies and their role in contemporary cloud environments. It delves into the intricacies of Docker and Kubernetes, elucidating their architecture, components, and fundamental principles. Furthermore, it investigates the evolving landscape of modern cloud deployments, emphasizing the transition from traditional infrastructure to cloud-native paradigms.","","979-8-3503-9447-4","10.1109/I2CT61223.2024.10543986","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10543986","cloud Computing;containerization;docker;kubernetes;modern cloud deployments","Cloud computing;DevOps;Scalability;Computer architecture;Packaging;Containers;Convergence","","","","25","IEEE","10 Jun 2024","","","IEEE","IEEE Conferences"
"An Integrated Edge, Fog, and Cloud Computing Reference Architecture for Developing Data Ecosystems in Smart Cities","D. M. Gomes Pereira; A. R. Alencar Brayner","Computer Science Department, Federal University of Ceará, Fortaleza, Brazil; Computer Science Department, Federal University of Ceará, Fortaleza, Brazil",2024 IEEE 13th International Conference on Cloud Networking (CloudNet),"31 Dec 2024","2024","","","1","9","A smart city provides services to citizens through technological tools that analyze data from several subdomains for decision-making. Thus, a smart city platform is essential for integrating the city's subdomains and using data efficiently. To effectively tackle challenges in a multi-domain scenario, a flexible and adaptable solution that harnesses artificial intelligence efficiently is essential. This work presents UFCity, a data-centric, microservices-based solution with a three-layer network structure (edge, fog, and cloud computing). UFCity processes, stores, and analyzes data at each level, using an approach based on AI-equipped microservices on the cloud to extend services to citizens. A prototype was developed and tested in various usage scenarios to serve as a proof of concept. Furthermore, an experimental design $n=3^{k=3}$ was employed to evaluate the solution's performance based on message quantity, message group size for data fusion, and outlier removal methods for some elements. We conclude that UFCity is an advantageous alternative for managing city data, meeting requirements, and demonstrating high workload capacity.","2771-5663","979-8-3503-7656-2","10.1109/CloudNet62863.2024.10815810","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10815810","smart city;software architecture;data ecosystem;microservices;AI","Cloud computing;Smart cities;Ecosystems;Microservice architectures;Prototypes;Data integration;Computer architecture;Bandwidth;Topology;Edge computing","","","","27","IEEE","31 Dec 2024","","","IEEE","IEEE Conferences"
"The symbIoTe Solution for Semantic and Syntactic Interoperability of Cloud-based IoT Platforms","I. P. Žarko; S. Mueller; M. Płociennik; T. Rajtar; M. Jacoby; M. Pardi; G. Insolvibile; V. Glykantzis; A. Antonić; M. Kušek; S. Soursos","Faculty of Electrical Engineering and Computing, University of Zagreb, Croatia; Institute of Bioorganic Chemistry, Poznan Supercomputing and Networking Center, Poland; Institute of Bioorganic Chemistry, Poznan Supercomputing and Networking Center, Poland; Institute of Bioorganic Chemistry, Poznan Supercomputing and Networking Center, Poland; Fraunhofer Institute for Optronics, System Technologies and Image Exploitation IOSB, Karlsruhe, Germany; Nextworks Srl, Italy; Nextworks Srl, Italy; Intracom SA Telecom Solutions, Greece; Faculty of Electrical Engineering and Computing, University of Zagreb, Croatia; Faculty of Electrical Engineering and Computing, University of Zagreb, Croatia; Intracom SA Telecom Solutions, Greece",2019 Global IoT Summit (GIoTS),"22 Jul 2019","2019","","","1","6","The current IoT landscape is dominated by cloud-based platforms offering non-standardized interfaces to access virtualized IoT resources and adopting proprietary information models. The implementation of cross-platform and cross-domain IoT applications becomes cumbersome and usually leads to custom solutions, tailored to the involved platforms, due to the semantic and syntactic incompatibilities. The symbIoTe approach offers mediation services for search and controlled access to IoT resources (sensors, actuators, and related services) across platforms in a uniform way. It provides an IoT Portal with registration and search capabilities using semantic web technologies for semantic interoperability, and an abstraction layer for unified and secure access to those resources across distributed IoT platform instances for syntactic interoperability. In this paper, we present the general concepts and design decisions built into the symbIoTe open source middleware and showcase the evolving symbIoTe ecosystem which facilitates the rapid development of innovative cross-platform IoT applications. The open IoT Portal currently integrates 15 IoT platforms and data sources for Smart City and Smart Residence domains, and hosts metadata registering more than 4,000 various IoT resources.","","978-1-7281-2171-0","10.1109/GIOTS.2019.8766420","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8766420","","Internet of Things;Interoperability;Semantics;Syntactics;Ecosystems;Biological system modeling;Sensors","","13","","11","IEEE","22 Jul 2019","","","IEEE","IEEE Conferences"
"Broker-Less OPC UA PubSub Communication Model Performance Analysis","A. Homay; C. Chrysoulas; T. Watt; M. Wollschlaege; M. de Sousa; L. Maglaras","Faculty of Computer Science, Technische Universität Dresden, Dresden, Germany; School of Computing, Engineering and the Built Environment, Edinburgh Napier University, Edinburgh, United Kingdom; School of Computing, Engineering and the Built Environment, Edinburgh Napier University, Edinburgh, United Kingdom; Faculty of Computer Science, Technische Universität Dresden, Dresden, Germany; Faculty of Engineering, University of Porto, Porto, Portugal; School of Computing, Engineering and the Built Environment, Edinburgh Napier University, Edinburgh, United Kingdom",2024 IEEE 30th International Conference on Telecommunications (ICT),"30 Jul 2024","2024","","","1","5","The advent of Industrial Internet of Things (IIoT) has accelerated the adoption of OPC UA (Object Linking and Embedding for Process Control Unified Architecture) PubSub communication models, enabling efficient data exchange in industrial automation systems. This study delves into the performance analysis of a broker-less OPC UA PubSub communication model, a paradigm gaining prominence for its potential to streamline communication in distributed systems. Our methodology involves the establishment of a representative test environment, configuration of OPC UA PubSub components without an intermediary broker, and the design of diverse test scenarios. The results of this performance analysis not only reveal the inherent capabilities of the broker-less OPC UA PubSub communication model but also identify potential bottlenecks and areas for optimization. This research advances our understanding of broker-less OPC UA PubSub communication models, offering empirical evidence of their performance in diverse scenarios.","2993-1916","979-8-3503-5669-4","10.1109/ICT62760.2024.10606025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10606025","IIoT;OPC-UA;PubSub Communication model;Trip Time","Analytical models;Protocols;Data models;Time measurement;Real-time systems;Performance analysis;Telecommunications","","","","14","IEEE","30 Jul 2024","","","IEEE","IEEE Conferences"
"Technical Readiness of Prescriptive Analytics Platforms: A Survey","M. Niederhaus; N. Migenda; J. Weller; W. Schenck; M. Kohlhase","Bielefeld University of Applied Sciences and Arts, Bielefeld, Germany; Bielefeld University of Applied Sciences and Arts, Bielefeld, Germany; Fraunhofer Institute for Mechatronic Systems Design, Paderborn, Germany; Bielefeld University of Applied Sciences and Arts, Bielefeld, Germany; Bielefeld University of Applied Sciences and Arts, Bielefeld, Germany",2024 35th Conference of Open Innovations Association (FRUCT),"9 May 2024","2024","","","509","519","Decision-making is the process of selecting a course of action from several alternatives on the basis of preferences, values and available information. As decisions become increasingly complex, the use of data for decision-making is on the rise. The growing popularity of data-driven decision-making has led to the launch of countless data analytics platforms and in particular prescriptive platforms for decision support. Prescriptive analytics is the highest form of data analytics, which aims to find the optimal action for a given situation. The main focus of this paper is to provide a deep insight into the state-of-the-art of existing prescriptive platforms. To this end, we survey the prescriptive research landscape in all domains and highlight which data, protocols, databases, and algorithms the respective platforms work with to provide reasonable actions. We further review the level of readiness in terms of the status of implementation and usability of the proposed action. In addition, we derive a framework for prescriptive platforms that can potentially help readers to make an informed decision about the right choice of platform, depending on their needs.","2305-7254","978-952-65246-1-0","10.23919/FRUCT61870.2024.10516367","Ministry of Education; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10516367","","Surveys;Technological innovation;Data analysis;Systematics;Protocols;Reviews;Databases","","","","55","","9 May 2024","","","IEEE","IEEE Conferences"
"A Design Proposal for a Platooning Testing Platform Utilizing Remote Control Vehicles","J. Juraško; R. Bencel; P. Trúchly; M. Magula; E. Žňava; N. Vígh; J. Hrnĉár; T. Janotková; V. Milonová; M. Neilinger","Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia; Faculty of Informatics and Information Technologies, STU in Bratislava, Bratislava, Slovakia",2024 International Symposium ELMAR,"4 Oct 2024","2024","","","17","20","The development of autonomous vehicles requires verification in real-life testing. This paper presents a comprehensive design proposal for a platooning testing platform that leverages remote control vehicles. The motivation behind this project stems from the need to advance autonomous vehicle technologies in a manner that is both cost-effective and efficient’ addressing key concerns such as safety improvements and emission reductions with the usage of Vehicle-to-Network (V2N) platooning via 5G communication technologies. Our platform emphasizes low-latency decision-making through cloud-based infrastructure. We detail the architecture of both the vehicle and cloud components, highlighting their modular design, scalability, and potential for future enhancements. The proposed testing platform is evaluated in terms of its feasibility, cost-effectiveness, and possible impact on accelerating autonomous vehicle research and development.","2835-3781","979-8-3503-7542-8","10.1109/ELMAR62909.2024.10694363","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10694363","Platooning;Group start;Connected vehicles;Testing platform;V2X;Digital twin","Accuracy;Scalability;Decision making;Sensors;Safety;Proposals;Autonomous vehicles;Remote control;Research and development;Testing","","","","16","IEEE","4 Oct 2024","","","IEEE","IEEE Conferences"
"Mobilytics- An Extensible, Modular and Resilient Mobility Platform","C. Samal; A. Dubey; L. Ratliff","Vanderbilt University, Nashville, TN, USA; Vanderbilt University, Nashville, TN, USA; University of Washington, Seattle, WA, USA",2018 IEEE International Conference on Smart Computing (SMARTCOMP),"30 Jul 2018","2018","","","356","361","Transportation management platforms provide communities the ability to integrate the available mobility options and localized transportation demand management policies. A central component of a transportation management platform is the mobility planning application. Given the societal relevance of these platforms, it is necessary to ensure that they operate resiliently. Modularity and extensibility are also critical properties that are required for manageability. Modularity allows to isolate faults easily. Extensibility enables update of policies and integration of new mobility modes or new routing algorithms. However, state of the art mobility planning applications like open trip planner, are monolithic applications, which makes it difficult to scale and modify them dynamically. This paper describes a microservices based modular multi-modal mobility platform Mobilytics, that integrates mobility providers, commuters, and community stakeholders. We describe our requirements, architecture, and discuss the resilience challenges, and how our platform functions properly in presence of failure. Conceivably, the patterns and principles manifested in our system can serve as guidelines for current and future practitioners in this field.","","978-1-5386-4705-9","10.1109/SMARTCOMP.2018.00029","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8421386","Urban Mobility;Microservices;Reliability;Resilient platform;Extensible Platform","Geospatial analysis;Switches;Routing;Transportation;Urban areas;Stakeholders;Planning","","","","30","IEEE","30 Jul 2018","","","IEEE","IEEE Conferences"
"Autonomous Network Traffic Classifier Agent for Autonomic Network Management System","C. N. Serugunda; S. T. Arzo; F. Granelli; R. Bassoli; M. Devetsikiotis; F. H. P. Fitzek","Department of Information Engineering and Computer Science, University of Trento, Trento, Italy; Department of Information Engineering and Computer Science, University of Trento, Trento, Italy; Department of Information Engineering and Computer Science, University of Trento, Trento, Italy; Deutsche Telekom Chair of Communication Networks, Technische Universität Dresden, Dresden, Germany; Department of Electrical and Computer Engineering, University of New Mexico, USA; Deutsche Telekom Chair of Communication Networks, Technische Universität Dresden, Dresden, Germany",2021 IEEE Global Communications Conference (GLOBECOM),"2 Feb 2022","2021","","","1","6","An autonomic network management system (ANMS) is expected to play a significant role in fifth and sixth-generation (5G and 6G) networks. It enables the network to manage itself with minimum or no human intervention. Recently, an ANMS architecture called multi-agent-based network automation of the network management system (MANA-NMS) architecture was presented. The article discussed a multi-agent service decomposition architecture, defining atomic network-functions (ANFs). These ANFs are proposed to be intelligent and autonomous agents. The agents are designed as independent atomic decision elements incorporating machine learning (ML) as an internal cognitive component. The atomic units are used as a building block for an ANMS. In line with this approach, this article proposes a network traffic classifier agent (NTCA) as a part of the network traffic management system. We first design and implement a NTCA using an ML algorithm as a cognitive component of the agent. To compare, we used K-Nearest Neighbors (K-NN), Decision Tree, Support Vector Machine (SVM), and Naive Bayes in the agent design. We perform an evaluation using classification accuracy, training latency, and classification latency. Finally, we tested the performance of the NTCA by implementing it in the MANA-NMS conceptual framework. The results show that the Decision Tree NTCA has the highest mean classification accuracy, the least mean training latency, and the lowest mean classification latency.","","978-1-7281-8104-2","10.1109/GLOBECOM46510.2021.9685568","NATO; SPS(grant numbers:SPS G5428); German Research Foundation; Deutsche Forschungsgemeinschaft(grant numbers:390696704); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9685568","Autonomic Network Management;Multi-Agent System;Machine Learning;Network Traffic Classifier Agent;Network Management System","Training;Support vector machines;Automation;Machine learning algorithms;Architecture;Telecommunication traffic;Production","","5","","14","IEEE","2 Feb 2022","","","IEEE","IEEE Conferences"
"ViCE Registry: An Image Registry for Virtual Collaborative Environments","C. B. Hauser; J. Domaschka","Institute of Information Resource Management, University of Ulm, Ulm, Germany; Institute of Information Resource Management, University of Ulm, Ulm, Germany",2017 IEEE International Conference on Cloud Computing Technology and Science (CloudCom),"28 Dec 2017","2017","","","82","89","The paper presents a concept and an implementation for an image registry for virtual collaborative environments (ViCE). This cross-platform and cross-organizational image registry bridges gaps between execution environment platforms and user communities. The presented concept consists of a conceptual architecture and a sophisticated set of metadata fields to describe images as virtual environments. The main challenge is the wide spread definition of an image. The terminology defines execution environments, which consist of runtime technologies (virtual machines, containers, applications) and a management layer (basic management, cloud computing, container clusters, job schedulers). An execution environment runs a deployable implicit or declarative image to build a virtual environment. With this abstraction the image registry can share virtual environment across Cloud computing, HPC, classroom setups, with any of KVM, Docker, Singularity, etc. in use. The open source implementation is written in Go and presented with a scalable microservice architecture, using Couchbase as metadata store and RabbitMQ as communication hub between software components.","2330-2186","978-1-5386-0692-6","10.1109/CloudCom.2017.11","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8241094","Virtual Environments;Image Registry;Cloud Computing;High Performance Computing;Virtualization;Collaboration Platform","Cloud computing;Virtual environments;Virtual machining;Containers;Metadata;Runtime","","3","","17","IEEE","28 Dec 2017","","","IEEE","IEEE Conferences"
"Security Audit of Docker Container Images in Cloud Architecture","W. S. Shameem Ahamed; P. Zavarsky; B. Swar","Information Systems Security, Concordia University of Edmonton, Edmonton, Canada; Information Systems Security, Concordia University of Edmonton, Edmonton, Canada; Information Systems Security, Concordia University of Edmonton, Edmonton, Canada",2021 2nd International Conference on Secure Cyber Computing and Communications (ICSCCC),"13 Jul 2021","2021","","","202","207","Containers technology radically changed the ways for packaging applications and deploying them as services in cloud environments. According to the recent report on security predictions of 2020 by Trend Micro, the vulnerabilities in container components deployed with cloud architecture have been one of the top security concerns for development and operations teams in enterprises. Docker is one of the leading container technologies that automate the deployment of applications into containers. Docker Hub is a public repository by Docker for storing and sharing the Docker images. These Docker images are pulled from the Docker Hub repository and the security of images being used from the repositories in any cloud environment could be at risk. Vulnerabilities in Docker images could have a detrimental effect on enterprise applications. In this paper, the focus is on securing the Docker images using vulnerability centric approach (VCA) to detect the vulnerabilities. A set of use cases compliant with the NIST SP 800-190 Application Container Security Guide is developed for audit compliance of Docker container images with the OWASP Container Security Verification Standards (CSVS). In this paper, firs vulnerabilities of Docker container images are identified and assessed using the VCA. Then, a set of use cases to identify presence of the vulnerabilities is developed to facilitate the security audit of the container images. Finally, it is illustrated how the proposed use cases can be mapped with the requirements of the OWASP Container Security Verification Standards. The use cases can serve as a security auditing tool during the development, deployment, and maintenance of cloud microservices applications.","","978-1-6654-4415-6","10.1109/ICSCCC51823.2021.9478100","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9478100","Docker;microservices;use cases;application container security;container security verification;security audit","Cloud computing;Containers;NIST;Tools;Packaging;Maintenance engineering;Market research","","5","","15","IEEE","13 Jul 2021","","","IEEE","IEEE Conferences"
"EdgeMQ: Towards a Message Queuing Processing System for Cloud-Edge Computing: (Use Cases on Water and Forest Monitoring)","I. D. Filip; B. Ghita; F. Pop; G. -V. Iordache; C. Negru; C. Dobre","Universitatea din Bucuresti, Bucuresti, RO; Universitatea din Bucuresti, Bucuresti, RO; Universitatea din Bucuresti, Bucuresti, RO; Universitatea din Bucuresti, Bucuresti, RO; Universitatea din Bucuresti, Bucuresti, RO; Universitatea din Bucuresti, Bucuresti, RO",2018 17th International Symposium on Parallel and Distributed Computing (ISPDC),"30 Aug 2018","2018","","","46","52","With the increase of computational enabled devices spread around us, improving the efficiency of our Cloud-based software solutions frequently led us to use the closest available resources and many real-time processes cannot rely on traditional cloud architectures for all of theirs processing tasks anymore. This paper proposes a Cloud-Edge data processing architecture covering both real-time and batch processing models. We design our solution as a general architecture and propose an implementation schema using RabbitMQ as a queuing engine. Two use-cases are considered: one refers to monitoring a forest and the other consider water monitoring and management. Those scenarios include both batch and real-time processing components and they can be mapped on the proposed architecture. We describe a methodology for performance evaluation and give experimental results for using RabbitMQ in a Set-Top Box environment. Using Docker containers with limited resources, we obtained a message rate of 4k messages per second for 1KB sized messages.","","978-1-5386-5330-2","10.1109/ISPDC2018.2018.00016","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8452019","Edge Computing;Cloud Computing;Message Queuing System;Real-Time Processing;Batch Processing","Edge computing;Cloud computing;Computer architecture;Task analysis;Real-time systems;Monitoring;Contracts","","1","","21","IEEE","30 Aug 2018","","","IEEE","IEEE Conferences"
"A Multi Tenant Computational Platform for Translational Medicine","A. Oehmichen; F. Guitton; P. Agapow; I. Emam; Y. Guo","Imperial College London, Data Science Institute, London, United Kingdom; Imperial College London, Data Science Institute, London, United Kingdom; Imperial College London, Data Science Institute, London, United Kingdom; Imperial College London, Data Science Institute, London, United Kingdom; Imperial College London, Data Science Institute, London, United Kingdom",2018 IEEE 38th International Conference on Distributed Computing Systems (ICDCS),"23 Jul 2018","2018","","","1553","1556","Translational biomedical research has become a science driven by big data. Improving patient care by developing personalized therapies and new drugs depends increasingly on an organization's ability to rapidly and intelligently leverage complex molecular and clinical data from a variety of large-scale internal and external, partner and public, data sources. As analysing these large-scale and complex datasets has become increasingly computationally expensive, it is of paramount importance to enable researchers to seamlessly scale up their computation platform while being able to manage complex yet flexible scenario that biomedical scientists are asking for. We developed a new platform as an answer to those needs of analysing and exploring massive amounts of medical data with the constrain of enabling the broadest audience, ranging from the medical doctor to the advanced coders, to easily and intuitively exploit this new resource. The platform consists of three main components: Borderline UI, the eTRIKS Analytical Environment (eAE) and the eTRIKS Data Platform (eDP). Each component has been developed independently to address specific sets of problems, then, loosely connected to each other components as to form a coherent platform for large scale medical data analysis.","2575-8411","978-1-5386-6871-9","10.1109/ICDCS.2018.00167","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8416430","Bioinformatics;Big data systems;Precision Medicine","Drugs;Computer architecture;Big Data;Biomedical imaging;Bioinformatics;Respiratory system;Data analysis","","1","","19","IEEE","23 Jul 2018","","","IEEE","IEEE Conferences"
"Latency vs Cost : Data Ingestion options at Twitter Scale","Z. Wang; S. Marella; M. Inada; P. R. Defino; A. Jagannath; L. VijayaRenu","Twitter, Inc; Twitter, Inc; Twitter, Inc; Twitter, Inc; Twitter, Inc; Twitter, Inc",2022 IEEE International Conference on Big Data (Big Data),"26 Jan 2023","2022","","","223","227","As millions of people interact with the Twitter platform across various different products, their actions generate petabytes of data which is used to make their experience and usage better. The Data Ingestion framework is responsible for providing a platform for aggregating incoming data from services backing Twitter products and generating well defined datasets for the Twitter engineers to build data driven products. At Twitter’s data scale of tens of petabytes incoming data every day, data ingestion is offered in two modes. Batch based ingestion aggregates data optimized for throughput and streaming based ingestion aggregates events as they arrive, with low latency. Each option presents a trade off for cost vs latency. In this paper we describe the architecture behind both the options, break down components and compare them against important metrics. We talk about the importance of different frameworks and further provide details of tools available to the developers, who can then choose the right option for their use case.","","978-1-6654-8045-1","10.1109/BigData55660.2022.10020316","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10020316","large scale data ingestion;real time analytics;streaming event pipeline;event aggregation;event processing","Measurement;Costs;Social networking (online);Aggregates;Blogs;Big Data;Data aggregation","","","","21","IEEE","26 Jan 2023","","","IEEE","IEEE Conferences"
"Tracemesh: Scalable and Streaming Sampling for Distributed Traces","Z. Chen; Z. Jiang; Y. Su; M. R. Lyu; Z. Zheng","Sun Yat-sen University, Zhuhai, China; The Chinese University of Hong Kong, Hong Kong, China; Sun Yat-sen University, Zhuhai, China; The Chinese University of Hong Kong, Hong Kong, China; Sun Yat-sen University, Zhuhai, China",2024 IEEE 17th International Conference on Cloud Computing (CLOUD),"28 Aug 2024","2024","","","54","65","Distributed tracing serves as a fundamental element in the monitoring of cloud-based and datacenter systems. It provides visibility into the full life cycle of a request or operation across multiple services, which is essential for understanding system dependencies and performance bottlenecks. To mitigate computational and storage overheads, most tracing frameworks adopt a uniform sampling strategy, which inevitably captures overlapping and redundant information. More advanced methods employ learning-based approaches to bias the sampling toward more informative traces. However, existing methods fall short of considering the high-dimensional and dynamic nature of trace data, which is essential for the production deployment of trace sampling. To address these practical challenges, in this paper we present Trace Mesh,a scalable and streaming sampler for distributed traces. Tracemesh employs Locality-Sensitivity Hashing (LSH) to improve sampling efficiency by projecting traces into a low-dimensional space while preserving their similarity. In this process, Tracemesh accommodates previously unseen trace features in a unified and streamlined way. Subsequently, Tracemesh samples traces through evolving clustering, which dynamically adjusts the sampling decision to avoid over-sampling of recurring traces. The proposed method is evaluated with trace data collected from both open-source microservice benchmarks and production service systems. Ex-perimental results demonstrate that Tracemesh outperforms state-of-the-art methods by a significant margin in both sampling accuracy and efficiency.","2159-6190","979-8-3503-6853-6","10.1109/CLOUD62652.2024.00016","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10643888","Distributed Tracing;Trace Sampling;Cloud Service Monitoring","Cloud computing;Production systems;Microservice architectures;Benchmark testing;Aerodynamics;Vectors;Encoding","","2","","46","IEEE","28 Aug 2024","","","IEEE","IEEE Conferences"
"OVD-SaaS: Online Verifiable Data Science as a Service, an Architecture of Microservices for Industrial Artificial-Intelligence Applications: Architecture and Study Cases","J. A. Hernandez; T. Germain; B. Yadoughi; M. Colom","Centre Borelli ENS-Paris Saclay, Paris Saclay University, Gif-sur-Yvette, France; Centre Borelli, ENS-Paris Saclay, Gif-sur-Yvette, France; Centre Borelli, ENS-Paris Saclay, Gif-sur-Yvette, France; Centre Borelli, ENS-Paris Saclay, Gif-sur-Yvette, France",2024 Sixth International Conference on Intelligent Computing in Data Sciences (ICDS),"25 Nov 2024","2024","","","1","9","There is a growing concern about credibility and trustworthiness in results and claims of research in computational data science, and at the same time, difficulty in taking those results to MVP (Minimum viable product) in technology transfer from the laboratory to the industry. Therefore, We present the OVDSaaS prototype, a new platform to manage Data Science Research products (publication, code, data, MVP) that provides reproducibility certification, traceability, provenance, authenticity, legitimacy, reward, FAIR (Findable, Accessible, Interoperable, Reusable) compliance, and valorization to ML/ AI computer scientific research by developing useful online verifiable scientific applications MVP in different industrial domains. To bridge the gap among academia, industry, publishers, and ML/AI technology, we propose an architecture design, methodology, policies, and guidelines for the OVD-SaaS project to advance in reproducibility assessment, persistent identification, validation, and badging of research artifacts results. We present our Scientific Applications case study in the context of reliable scientific research and the validation of results from scientific articles. We describe our experience creating scientific applications and their evolution from simple Demo or non-reproducible artifacts to completely verifiable apps. We analyze common patterns in the creation of scientific applications, discussing the benefits and difficulties encountered that lead to the proposed OVDSaaS features. In this context, four applications were developed for breathing analysis, clinical tumor segmentation, legal assistance, and smart grids, supported in ML/ AI scientific fields such as signal processing, image processing, and NLP. These applications represent end-to-end business solutions cases in the medical, legal, and energy industries. Based on these cases, we performed a reproducibility gap analysis and benchmarking of similar OVDSaaS platforms.","","979-8-3503-5120-0","10.1109/ICDS62089.2024.10756305","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10756305","PID;Blockchain;IPFS;reproducibility;credibil-ity;trustworthiness;authenticity;legitimacy;FAIR;accountabil-ity;transparency;BPML","Industries;Law;Prototypes;Microservice architectures;Computer architecture;Data science;Reproducibility of results;Artificial intelligence;Business;Tumors","","","","25","IEEE","25 Nov 2024","","","IEEE","IEEE Conferences"
"Hybrid 2D and 3D Visual Analytics of Network Simulation Data","S. Su; V. Perry; V. Dasari","Computational and Information Science Directorate, CCDC Army Research Laboratory, APG, USA; Computational and Information Science Directorate, CCDC Army Research Laboratory, APG, USA; Computational and Information Science Directorate, CCDC Army Research Laboratory, APG, USA",2019 IEEE International Conference on Big Data (Big Data),"24 Feb 2020","2019","","","3992","3999","We present a visualization architecture to support 2D and 3D visual analytics applications. The architecture is designed to be data-flow-oriented and reconfigurable such that several diverse visualization components can operate as one integrated system. Our prototype application allows users to visually analyze the results of a complex 3D network simulation data both on large high-resolution display and HTC Vive Head Mounted Display. The network simulation outputs variables describing various characteristics of network connectivity between the moving nodes on the ground and in the air interacting in a dynamically changing 3D environment. Our system uses 2D charting tools to visualize the statistical relationships between simulation variables. We developed a Unity application to animate the network simulation in a virtual environment showing the timevarying results in a 3D environment. The Unity application runs on a complete-immersive Head Mounted Display device. The 2D visualization framework running on our Large High-Resolution Display system supports multiple coordinated views across all the different 2D visualization components including a 2D map. Preliminary results show our data-centric design provides a usercentric visualization tool that can greatly enhance the analytical process and speed up the derivation of insights from data.","","978-1-7281-0858-2","10.1109/BigData47090.2019.9006235","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9006235","component;formatting;style;styling","Data visualization;Three-dimensional displays;Two dimensional displays;Servers;Protocols;Visual analytics;Tools","","6","","12","USGov","24 Feb 2020","","","IEEE","IEEE Conferences"
"Trace Visualization within the Software City Metaphor: A Controlled Experiment on Program Comprehension","V. Dashuber; M. Philippsen","QAware GmbH, Munich, Germany; Programming Systems Group, Friedrich-Alexander University Erlangen-Nürnberg (FAU), Erlangen, Germany",2021 Working Conference on Software Visualization (VISSOFT),"11 Nov 2021","2021","","","55","64","Especially with the rise of microservice architectures, software is hard to understand when just the static dependencies are known. The reason is that the actual call paths and the dynamic behavior of the application is hidden behind network communication. To comprehend what is going on in the software the vast amount of runtime data (traces) needs to be reduced and visualized.DynaCity uses the city metaphor for visualization. Its novel trace visualization displays dynamic dependencies as arcs atop the city. To reduce the number of traces, DynaCity aggregates all requests between the same two components into one arc whose brightness reflects both the number and the total duration of the requests. DynaCity also encodes dynamic trace data in a heatmap that it uses to light up the building: the brighter a building is, the more active it is, i.e., the more and the longer the requests are that it receives and/or spawns.In a controlled experiment, we compare our approach with a traditional trace visualization built into the same Software City but showing all dependencies (without aggregation) as individual arcs and also disabling the heatmap. The study shows that professional software developers can solve typical software comprehension tasks faster (5.84%) and more correctly (11.7%) with the help of DynaCity and that they prefer our approach over the more traditional dynamic trace visualization.","","978-1-6654-3144-6","10.1109/VISSOFT52517.2021.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9604832","trace visualization;software city;program comprehension;aggregation;heatmap","Heating systems;Runtime;Aggregates;Urban areas;Brightness;Data visualization;Computer architecture","","4","","25","IEEE","11 Nov 2021","","","IEEE","IEEE Conferences"
"Supporting IoT Multi-Tenancy on Edge Devices","M. Samaniego; R. Deters","Department of Computer Science, University of Saskatchewan, Saskatoon, Canada; Department of Computer Science, University of Saskatchewan, Saskatoon, Canada","2016 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)","4 May 2017","2016","","","66","73","IoT systems that support multi-tenancy tend to use cloud-hosted device/thing abstraction or virtualization. By abstracting the IoT edge components e.g. as data streams or by virtualizing the sensors/actuators, it becomes possible to avoid or resolve access conflicts. However, by using hosting the abstractions/virtualizations away from the edge components in the cloud, significant latency is introduced. This paper presents the idea of light-weight virtual resources that can be hosted on edge devices and thus offer the same abstraction/virtualization without latency.","","978-1-5090-5880-8","10.1109/iThings-GreenCom-CPSCom-SmartData.2016.38","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7917066","IoT;Virtual Resource;Software-Defined IoT;Edge Computing;Multi-Tenancy","Conferences;Internet of Things;Green computing;Social computing;Service computing;Payloads","","4","","41","IEEE","4 May 2017","","","IEEE","IEEE Conferences"
"Design of health management and intelligent operation and maintenance system for nuclear power plant","Z. Shi; P. Li; M. Zhao","General Design Department, China Nuclear Power Engineering Co.,Ltd, Beijing, China; General Design Department, China Nuclear Power Engineering Co.,Ltd, Beijing, China; General Design Department, China Nuclear Power Engineering Co.,Ltd, Beijing, China",2022 Prognostics and Health Management Conference (PHM-2022 London),"1 Jul 2022","2022","","","147","150","There are hundreds of systems and components in the nuclear power plant. In order to better manage the nuclear power plant, it is necessary to intelligently manage the important components of the nuclear power plant. This paper studies the design principles of nuclear power plant health management and intelligent operation and maintenance system, and summarizes the system design process. Complete relevant work according to the system design outline. The work outline is used to guide the nuclear power plant to fully implement the health management and intelligent operation and maintenance system and deployment, so that the whole work can be followed by rules to ensure the orderly progress of the work. According to the relevant working experience of nuclear power plants at home and abroad, through the relevant analysis of the design of important equipment and platforms related to nuclear power plants, the health management and intelligent operation and maintenance system of nuclear power plants are determined. This paper puts forward the overall framework of the system design, which can provide a reference for the intelligent operation and maintenance of nuclear power plant.","2166-5656","978-1-6654-7954-7","10.1109/PHM2022-London52454.2022.00034","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9808593","Platform design;PHM;platform","Design methodology;Maintenance engineering;Safety;Cost benefit analysis;Prognostics and health management;Power generation;System analysis and design","","","","8","IEEE","1 Jul 2022","","","IEEE","IEEE Conferences"
"Docker incorporation is different from other computer system infrastructures: A review","W. M. C. J. T. Kithulwatta; K. P. N. Jayasena; B. T. G. S. Kumara; R. M. K. T. Rathnayaka","Faculty of Graduate Studies, Sabaragamuwa University of Sri Lanka, Sri Lanka; Dept. of Computing & Information Systems, Fac. of Applied Sciences, Sabaragamuwa University of Sri Lanka, Sri Lanka; Dept. of Computing & Information Systems, Fac. of Applied Sciences, Sabaragamuwa University of Sri Lanka, Sri Lanka; Department of Physical Sciences & Technology, Fac. of Applied Sciences, Sabaragamuwa University of Sri Lanka, Sri Lanka",2021 International Research Conference on Smart Computing and Systems Engineering (SCSE),"25 Oct 2021","2021","4","","230","236","Currently the computing world is getting complex, innovating and maturing with modern technologies. Virtualization is one of the old concepts and currently containerization has arrived as an alternative and innovative technology. Docker is the most famous and trending container management technology. Different other container management technologies and virtualization technologies are respective other corresponding technologies and mechanisms for Docker containerization. This research study aims to identify how Docker incorporation is different from other computer system infrastructure technologies in the perspective of architecture, features and qualities. By considering forty-five existing literatures, this research study was conducted. To deliver a structured review process, a thorough review protocol was conducted. By considering four main research questions, the research study was lined up. Ultimately, Docker architecture and Docker components, Docker features, Docker integration with other computing domains and Docker & other computing infrastructures were studied. After synthesizing all the selected research studies, the cream was obtained with plenty of knowledge contribution to the field of computer application deployment and infrastructure.","2613-8662","978-1-6654-0965-0","10.1109/SCSE53661.2021.9568323","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9568323","computer infrastructure;containers;docker;virtualization;virtual machines","Computers;Protocols;Scalability;Computer architecture;Containers;Systems engineering and theory;Software","","2","","45","IEEE","25 Oct 2021","","","IEEE","IEEE Conferences"
"DμDT: the Deakin University Microgrid Digital Twin","V. Mak-Hau; A. Henkel; M. Abdelrazek; S. Rajasegarar; A. Anwar; A. Fletcher","School of Information Technology, Deakin University, Geelong, Australia; ARC Research Hub, IFM, Deakin University, Geelong, Australia; School of Information Technology, Deakin University, Geelong, Australia; School of Information Technology, Deakin University, Geelong, Australia; School of Information Technology, Deakin University, Geelong, Australia; Hycel Office of DVC Research, Deakin University, Geelong, Australia",2022 IEEE PES 14th Asia-Pacific Power and Energy Engineering Conference (APPEEC),"27 Mar 2023","2022","","","1","6","In 2021, the largest solar farm and renewable energy microgrid to date at an Australian university commenced operation. Located at the Waurn Ponds campus of Deakin University, the microgrid will be a key enabler for the University to achieve its carbon neutrality and 100% renewable electricity targets by 2025. The 14-hectare solar farm is capable of producing up to 7.25MW power which translates to 54% of the electricity demand of the campus. To enable real time system monitoring, data analysis, power output prediction, and simulation of the microgrid for answering what-if questions, a digital twin was developed in-house. In this paper, we present the Deakin Microgrid Digital Twin $(\mathbf{D}\mu \mathbf{DT})$ with a focus on the health monitoring functionalities (essentially a microgrid assessment tool), including: efficiency monitoring, alarm analytics, and Artificial Intelligence (AI)-driven anomaly detection. The design of the digital twin is general in nature, with software, machine learning and visualisation components designed to make it possible for utility extensions beyond the Microgrid application.","","978-1-6654-6738-4","10.1109/APPEEC53445.2022.10072197","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10072197","microgrid;digital twin;data visualisation;data analytics","Renewable energy sources;Data analysis;Microgrids;Machine learning;Predictive models;Software;Real-time systems","","3","","17","IEEE","27 Mar 2023","","","IEEE","IEEE Conferences"
"A Technological Survey on Citizen Complaint Management Systems and Future Advances","D. Sarafis; K. Karamitsios","My Company Projects O.E., Thessaloniki, Greece; My Company Projects O.E., Thessaloniki, Greece",2024 14th International Conference on Electrical Engineering (ICEENG),"25 Jun 2024","2024","","","265","269","In this research paper, a comprehensive technological survey on citizen complaint management systems is conducted, examining the evolution and current state of these systems within the context of e-government. The study analyzes the transition from traditional, manual complaint-handling methods to the adoption of digital platforms and advanced technologies. It explores the key components, such as online platforms, user authentication, automated routing, and case tracking, that contribute to the effectiveness of contemporary citizen complaint management systems. Furthermore, it investigates the impact of technological advancements on transparency and efficiency in government-citizen interactions, and it delves into the integration of data analytics and the use of multichannel access to facilitate citizen engagement. Finally, it covers the emerging trends and challenges in the fields of artificial intelligence and large language models and their potential incorporation in these systems. The research aims to contribute valuable insights into the ongoing technological transformation of citizen complaint management systems. Moreover, it hopes to give a comprehensive as possible depiction of the current state of these systems and help future development by presenting latest technologies that have not yet been implemented but seem to be very promising.","","979-8-3503-4342-7","10.1109/ICEENG58856.2024.10566450","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10566450","e-government;e-complaint;complaint management;public services;complaint services","Surveys;Electrical engineering;Data analysis;Automation;Manuals;Machine learning;Routing","","","","22","IEEE","25 Jun 2024","","","IEEE","IEEE Conferences"
"Human individuals' localization monitoring (using open source technologies)","M. C. Stana; M. D. Radu; C. V. Marian; C. Taslitchi; N. Goga","Faculty of Engineering in Foreign Languages, University POLITEHNICA of Bucharest, Bucharest, Romania; Faculty of Engineering in Foreign Languages, University POLITEHNICA of Bucharest, Bucharest, Romania; Faculty of Engineering in Foreign Languages, University POLITEHNICA of Bucharest, Bucharest, Romania; Faculty of Engineering in Foreign Languages, University POLITEHNICA of Bucharest, Bucharest, Romania; Faculty of Engineering in Foreign Languages, University POLITEHNICA of Bucharest, Bucharest, Romania",2022 International Symposium on Electronics and Telecommunications (ISETC),"16 Jan 2023","2022","","","1","4","Remote human beings location monitoring through methods that are provided remotely managed open source services, becomes a required component in many public and private systems that work with human beings and for theirs benefits (in this category can also be included citizens with a certain degree of disability, or having limited movement areas).","2475-7861","978-1-6654-5150-5","10.1109/ISETC56213.2022.10010279","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10010279","location monitoring;people;remote methods;remote management;public systems;zonal frameworks","Solid modeling;Social networking (online);Navigation;Routing;Telecommunications;Recording;Security","","","","16","IEEE","16 Jan 2023","","","IEEE","IEEE Conferences"
"Feature Model-based Integration of Machine Learning in Software Product Lines","D. Kholkar; S. Thapa; A. Pal; S. Roychoudhury","TCS Research, Pune, India; TCS Research, Pune, India; TCS Research, Pune, India; TCS Research, Pune, India",2024 IEEE 21st International Conference on Software Architecture Companion (ICSA-C),"21 Aug 2024","2024","","","295","302","Machine learning techniques are finding widespread application in industry for data-driven analysis and decision making. Software product vendors increasingly need to support data analysis use cases in their products. However integrated software engineering of ML components with software products or systems has not received much attention. This paper presents a feature-model based method and framework for integrating ML development into software product lines from the requirements stage. Our approach includes auto-generation of ML code from specifications to make ML development more accessible for product engineering teams and also enable configurability of ML solutions through their lifetime. We illustrate the approach using a real-world customer ticket classification case study.","2768-4288","979-8-3503-6625-9","10.1109/ICSA-C63560.2024.00056","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10628165","machine learning;software engineering for ML;feature models;MDD;ML code generation;ML for product lines;ML integration","Industries;Codes;Data analysis;Software architecture;Decision making;Machine learning;Software","","","","18","IEEE","21 Aug 2024","","","IEEE","IEEE Conferences"
"RESTful Web Services – A Question of Standards","A. Archip; C. -M. Amarandei; P. -C. Herghelegiu; C. Mironeanu; E. şerban","Faculty of Automatic Control and Computer Engineering, ”Gheorghe Asachi” Technical University of Iaşi, Iaşi, România; Faculty of Automatic Control and Computer Engineering, ”Gheorghe Asachi” Technical University of Iaşi, Iaşi, România; Faculty of Automatic Control and Computer Engineering, ”Gheorghe Asachi” Technical University of Iaşi, Iaşi, România; Faculty of Automatic Control and Computer Engineering, ”Gheorghe Asachi” Technical University of Iaşi, Iaşi, România; Faculty of Automatic Control and Computer Engineering, ”Gheorghe Asachi” Technical University of Iaşi, Iaşi, România","2018 22nd International Conference on System Theory, Control and Computing (ICSTCC)","22 Nov 2018","2018","","","677","682","Roy Thomas Fielding defined the term REST as an architectural style for distributed hypermedia based systems in the year 2000. Since this initial definition, the term itself became a buzzword used in almost any web-related development. From simple, basic web applications, to highly complex web service/microservice-based solutions, almost everyone and everything talks REST and RESTful. Moreover, the Web context implies that these developments are usually realised over HTTP. In this paper, we first analyse the impact of this architectural style on distributed application development. A careless application of this model and its underlying HTTP standards could severely impact on the overall quality of any RESTful based solution. Following, we submit our own model for user data and session handling tasks to illustrate the correct approach to RESTful web service design techniques. This model offers all the advantages of the aforementioned architectural style while providing the required functionality for the authentication and authorisation components of all web based applications.","2372-1618","978-1-5386-4444-7","10.1109/ICSTCC.2018.8540763","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8540763","REST;Resource-Oriented-Architecture;Web Services;Service-Oriented-Architecture;Distributed Systems Architecture/Design","Web services;Semantics;Standards;Tools;Task analysis;Computer architecture;Metadata","","4","","17","IEEE","22 Nov 2018","","","IEEE","IEEE Conferences"
"Expeditious banking using Blockchain Technology","V. Naik; R. Pejawar; R. Singh; A. Aher; S. Kanchan","Department of information Technology, AP Shah institute of technology, Thane, M.H, India; Department of information Technology, AP Shah institute of technology, Thane, M.H, India; Department of information Technology, AP Shah institute of technology, Thane, M.H, India; Department of information Technology, AP Shah institute of technology, Thane, M.H, India; Department of information Technology, AP Shah institute of technology, Thane, M.H, India",2020 International Conference on Computational Intelligence for Smart Power System and Sustainable Energy (CISPSSE),"5 Oct 2020","2020","","","1","6","Block chain has an interesting support of bit coin, the digital crypto currency with an ever increasing sphere of users worldwide. But, block chain in itself is much more than just bit coin, it is the new generation security system encapsulating processes in series of blocks to provide a secure way of recording transactions and it is circulated among signatories, or any target group being the participants in the process. It draws its appeal out of the fact that it achieves this without the need of any central authority. Current banking architecture is largely centralized and therefore vulnerable to load defaults and frauds like the PNB scam, Videocon case, Kingfisher scam and many more. Banking all over the world has adopted block chain technologies and it is the need of the hour for regulation and avoidance of such scams. Thus, we are using block chain technology for the decentralized working of banks and the complete removal of authoritarian interception. The model which we are proposing includes block chain encapsulated in the process of NEFT (National Electronic Fund Transfer) using IFSC (Indian Financial System Code) incorporating the protocols set down by RBI for secure and decentralized fund transfer. Our blocks will consist of the process computed in java micro services. The ledger will be interconnected within themselves using consensus algorithms.","","978-1-7281-7274-3","10.1109/CISPSSE49931.2020.9212253","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9212253","Appraisal;evaluation;data mining;employee;domain;organization;Block chain;consensus;decentralization;efficiency","Java;Protocols;Databases;Banking;Consensus algorithm;Regulation;Blockchains","","4","","10","IEEE","5 Oct 2020","","","IEEE","IEEE Conferences"
"Digital Twins in Engineering Education, Preparing Students for Industrial Digital Transformation","G. Tabunshchyk; P. Arras; C. Wolff","Fachhochschule Dortmund, Dortmund, Germany; KU Leuven, Sint Katelijne Waver, Belgium; Fachhochschule Dortmund, Dortmund, Germany",2023 IEEE 12th International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS),"21 Dec 2023","2023","1","","271","274","Digital twins, one of the new important technologies which started to be omnipresent in literature since Industry 4.0 got started, are becoming an essential part of the digital transformation processes in industry. Simply put, a digital twin is a virtual model designed to accurately reflect a physical object and is connected to the real asset with a bi-directional digital thread. Despite the different soft- and hardware architectures and applied fields digital twins are aimed to unify general architectural solutions, speed up design processes and provide reliable tools to provide safe, reliable and secure solutions for running physical systems. At the same time it is can be used as an educational tool, a framework to connect different technologies and it could be a bridge between Industry and Academia.","2770-4254","979-8-3503-5805-6","10.1109/IDAACS58523.2023.10348648","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10348648","digital twin","Industries;Analytical models;Software architecture;Data acquisition;Reliability engineering;Hardware;Digital twins","","","","20","IEEE","21 Dec 2023","","","IEEE","IEEE Conferences"
"Dyn Tail - Dynamically Tailored Deployment Engines for Cloud Applications","J. Wettinger; U. Breitenbücher; F. Leymann","Institute of Architecture of Application Systems (IAAS), University of Stuttgart, Stuttgart, Germany; Institute of Architecture of Application Systems (IAAS), University of Stuttgart, Stuttgart, Germany; Institute of Architecture of Application Systems (IAAS), University of Stuttgart, Stuttgart, Germany",2015 IEEE 8th International Conference on Cloud Computing,"20 Aug 2015","2015","","","421","428","Shortening software release cycles increasingly becomes a critical competitive advantage, not exclusively for software vendors in the field of Web applications, mobile apps, and the Internet of Things. Today's users, customers, and other stakeholders expect quick responses to occurring issues and feature requests. DevOps and Cloud computing are two key paradigms to enable rapid, continuous deployment and delivery of applications utilizing automated software delivery pipelines. However, it is a highly complex and sophisticated challenge to implement such pipelines by installing, configuring, and integrating corresponding general-purpose deployment automation tooling. Therefore, we present a method in conjunction with a framework and implementation to dynamically generate tailored deployment engines for specific application stacks to deploy corresponding applications. Generated deployment engines are packaged in a portable manner to run them on various platforms and infrastructures. The core of our work is based on generating APIs for arbitrary deployment executables such as scripts and plans that perform different tasks in the automated deployment process. As a result, deployment tasks can be triggered through generated API endpoints, abstracting from lower-level, technical details of different deployment automation tooling.","2159-6190","978-1-4673-7287-9","10.1109/CLOUD.2015.63","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7214073","Deployment;Deployment Engine;Provisioning;Application Topology;APIfication;DevOps;Cloud Computing","Engines;Topology;Servers;Runtime;Cloud computing;Automation;Generators","","8","","30","IEEE","20 Aug 2015","","","IEEE","IEEE Conferences"
"Anomaly Detection in a Large-Scale Cloud Platform","M. S. Islam; W. Pourmajidi; L. Zhang; J. Steinbacher; T. Erwin; A. Miranskyy","Department of Computer Science, Ryerson University, Toronto, Canada; Department of Computer Science, Ryerson University, Toronto, Canada; Department of Computer Science, Ryerson University, Toronto, Canada; Cloud Platform, IBM Canada Lab, Toronto, Canada; Watson and Cloud Platform, IBM, Austin, USA; Department of Computer Science, Ryerson University, Toronto, Canada",2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),"7 May 2021","2021","","","150","159","Cloud computing is ubiquitous: more and more companies are moving the workloads into the Cloud. However, this rise in popularity challenges Cloud service providers, as they need to monitor the quality of their ever-growing offerings effectively. To address the challenge, we designed and implemented an automated monitoring system for the IBM Cloud Platform. This monitoring system utilizes deep learning neural networks to detect anomalies in near-real-time in multiple Platform components simultaneously. After running the system for a year, we observed that the proposed solution frees the DevOps team's time and human resources from manually monitoring thousands of Cloud components. Moreover, it increases customer satisfaction by reducing the risk of Cloud outages. In this paper, we share our solutions' architecture, implementation notes, and best practices that emerged while evolving the monitoring system. They can be leveraged by other researchers and practitioners to build anomaly detectors for complex systems.","","978-1-6654-3869-8","10.1109/ICSE-SEIP52600.2021.00024","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402147","","Cloud computing;Time series analysis;Detectors;Reliability;Monitoring;Best practices;Software engineering","","16","","57","IEEE","7 May 2021","","","IEEE","IEEE Conferences"
"Engineering Heterogeneous Internet of Things Applications: From Models to Code","T. W. Pusztai; C. Tsigkanos; S. Dustdar","Distributed Systems Group, Technical University Vienna, Vienna, Austria; Distributed Systems Group, Technical University Vienna, Vienna, Austria; Distributed Systems Group, Technical University Vienna, Vienna, Austria",2019 IEEE 5th International Conference on Collaboration and Internet Computing (CIC),"13 Feb 2020","2019","","","222","231","Applications on top of the Internet of Things (IoT) show big potential, but the domain raises challenges for software engineers. Heterogeneous hardware environments and software stacks, unreliable devices, and diverse developer skillsets make the implementation of business processes spanning the entire application and the enforcement of constraints difficult. To this end, we propose a methodology and technical framework targeting heterogeneous IoT systems, where software components may be situated on IoT devices, cloud infrastructure, or edge devices - a paradigm often referred to as fog computing. Our approach leverages design-time modeling of device interfaces, data, and business processes. Design-time activities entail specification of the software architecture of the IoT application in an implementation-and language-agnostic manner. Subsequently, we automatically generate boilerplate code for participating devices, requiring developers to only implement business processes. The generated boilerplate code is correct by construction and it targets the different languages usually involved in diverse IoT software components. When the application is deployed, its execution may violate design assumptions. To counter this, constraints defined during design time are enforced at runtime, ensuring that devices operate within certain bounds. We evaluate our model-driven engineering framework over a health care system use case.","","978-1-7281-6739-8","10.1109/CIC48465.2019.00036","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8998480","Internet of Things;Model driven Engineering;Code generation;UML","Unified modeling language;Software;Computational modeling;Runtime;Edge computing;Biomedical monitoring;Business","","3","","23","IEEE","13 Feb 2020","","","IEEE","IEEE Conferences"
"P-SaaS: knowledge service oriented manufacturing workflow model for knowledge collaboration and reuse","L. He; P. Jiang","State Key Laboratory for manufacturing systems engineering, Xi’an Jiaotong University, Shaanxi, Xi’an, China; State Key Laboratory for manufacturing systems engineering, Xi’an Jiaotong University, Shaanxi, Xi’an, China",2020 IEEE 16th International Conference on Automation Science and Engineering (CASE),"8 Oct 2020","2020","","","570","575","Orders come and go, but for manufacturing enterprises product-related production problems (PPs) are forever. To realize the aim of CTQS (i.e., lower cost, faster time to market, higher quality and better service), a serviced oriented model of product related problem-solving as a service (P-SaaS) is presented with three-layer structure: task bade workflow layer, knowledge based solution layer and cognition based decision-making layer in this paper. For knowledge oriented PPs solving, each task/subtask is taken as a piece of knowledge service, and the function based task decision for problem solving is organized and implemented by independent Web applications on the microservice architecture platform. Each application is considered as an agent based on its independent function. To support this model, operational models and key enable technologies are detailed. Firstly, a task based workflow is constructed to orchestrate the meta-events of specific task through coordination agent. Secondly, focused on a specific task of PPs query, a similarity based knowledge flow is proposed to retrieve the finite set of alternative solutions with a set threshold value through core agent. Thirdly, a cognition based decision synthesis flow is used to improve the quality of alternative solutions by knowledge collaboration and fusion through the individual agent. Finally, a case on high voltage apparatus in XD company is introduced to validate the proposed models.","2161-8089","978-1-7281-6904-0","10.1109/CASE48305.2020.9216974","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9216974","problem-solving as a service (P-SaaS);service oriented scientific workflow;knowledge collaboration and reuse","Task analysis;Collaboration;Decision making;Manufacturing;Knowledge engineering;Knowledge based systems;Cognition","","2","","15","IEEE","8 Oct 2020","","","IEEE","IEEE Conferences"
"Implementing OpenFlow, Exploring the Present and Future Software-Defined Networks Ecosystem","I. H. S; Y. R; Y. V","Department of Electronics and Communication Engineering, Saveetha Engineering College, Chennai, India; Department of Electronics and Communication Engineering, Saveetha Engineering College, Chennai, India; Department of Electronics and Communication Engineering, Saveetha Engineering College, Chennai, India",2023 International Conference on Sustainable Communication Networks and Application (ICSCNA),"1 Jan 2024","2023","","","280","285","Software-defined networking (SDN) has become a paradigm change in network architecture due to its enhanced flexibility, agility, and control over network resources. The OpenFlow protocol, a core component of SDN that enables centralized and programmable network administration, is at the heart of the progress. The existing and future state of software-defined networks using OpenFlow is thoroughly examined. It examines the historical development of SDN, clarifies the core ideas behind OpenFlow, and evaluates the influence of all three on modern networking. In-depth examinations of current developments, market leaders, and enduring difficulties are presented in this research study. It also takes a forward-looking look at the coming years, seeing new trends, chances, and potential challenges. The article also looks into the various ways that SDN is being used in different industries and highlights the numerous benefits that these applications offer. It provides helpful insights into securing SDN and OpenFlow environments while addressing a crucial security issue. With its insightful analysis of the constantly changing world of software-defined networks and OpenFlow technology, it is an essential tool for network specialists, researchers, and decision-makers.","","979-8-3503-1398-7","10.1109/ICSCNA58489.2023.10370398","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10370398","Software-defined Networking;OpenFlow;Network Automation;Security;Network Architecture;Centralized Network Management","Protocols;Scalability;Telecommunication traffic;Network architecture;Routing;Network resource management;Market research","","1","","20","IEEE","1 Jan 2024","","","IEEE","IEEE Conferences"
"Design of Decision Support Systems with Neural Networks in Biomedical Data Analysis","S. Sokolov","Dept. of Information Technology, University of Telecommunications and Post, Sofia, Bulgaria","2023 4th International Conference on Communications, Information, Electronic and Energy Systems (CIEES)","3 Jan 2024","2023","","","1","7","In this paper an approach is presented for the design of decision support systems with elements of Artificial Intelligence based on neural network classification of toxicological data. Precision and reliability are the top requirements of healthcare systems. The components of the DSS are discussed in detail as well as the possible workflows that will conform to current practices. The application of an $\mathrm{AI} / \mathrm{ML}$ component as well as system improvement propositions on new data is discussed. Experimental results are provided from training and evaluation of toxicological data.","","979-8-3503-3691-7","10.1109/CIEES58940.2023.10378726","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10378726","biomedical data;big data;neural networks;decision support","Decision support systems;Training;Neural networks;Medical services;Reliability;Bioinformatics;Artificial intelligence","","1","","13","IEEE","3 Jan 2024","","","IEEE","IEEE Conferences"
"A Modular and Composable Approach to Develop Trusted Artificial Intelligence","M. A. Langford; B. H. C. Cheng","Department of Computer Science and Engineering, Michigan State University, East Lansing, Michigan, USA; Department of Computer Science and Engineering, Michigan State University, East Lansing, Michigan, USA",2022 IEEE International Conference on Autonomic Computing and Self-Organizing Systems (ACSOS),"4 Nov 2022","2022","","","121","130","Trustworthy artificial intelligence (Trusted AI) is of utmost importance when learning-enabled components (LECs) are used in autonomous, safety-critical systems. When reliant on deep learning, these systems need to address the reliability, robustness, and interpretability of learning models. In addition to developing specific strategies to address each of these concerns, appropriate software architectures are needed to coordinate LECs and ensure they deliver acceptable behavior under uncertain conditions. This work proposes a model-driven framework of loosely-coupled modular services designed to monitor and control LECs with respect to Trusted AI assurance concerns. The proposed framework is composable, deploying independent services to improve the resilience and robustness of AI systems. The overarching objective of this framework is to support software engineering principles focusing on modularity, composability, and reusability in order to facilitate development and maintenance tasks, while also increasing stakeholder confidence in Trusted AI systems. To demonstrate this framework, it has been implemented to manage the operation of an autonomous rover’s vision-based LEC while exposed to uncertain environmental conditions.","","978-1-6654-7137-4","10.1109/ACSOS55765.2022.00030","National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9935024","software engineering;models at run time;self-adaptive systems;artificial intelligence;deep learning","Adaptation models;Analytical models;Uncertainty;Lighting;Detectors;Robustness;Behavioral sciences","","","","48","IEEE","4 Nov 2022","","","IEEE","IEEE Conferences"
"Linking Team-level and Organization-level Governance in Machine Learning Operations through Explainable AI and Responsible AI Connector","E. Neghawi; Z. Wang; J. Huang; Y. Liu","Electrical and Computer Engineering, Concordia University, Montreal, Canada; Electrical and Computer Engineering, Concordia University, Montreal, Canada; Electrical and Computer Engineering, Concordia University, Montreal, Canada; Electrical and Computer Engineering, Concordia University, Montreal, Canada","2023 IEEE 47th Annual Computers, Software, and Applications Conference (COMPSAC)","2 Aug 2023","2023","","","1223","1230","The adoption of AI systems has been widely used across multiple industry domains at an alerting rate without focusing on its ethical concerns. In order to address those concerns, an increasing number of AI ethics frameworks have been suggested recently, which focus on the algorithmic level rather than the systems level. Nonetheless, some system-level approaches mostly cover a single-level governance pattern of the system components in the entire software design life cycle. However, the need to go beyond the single-level system design AI ethics frameworks to allow not only a better responsible-AI-by-design but also a trustworthy process pattern that abstracts and links the underlying layers of responsible AI on every level. This paper illustrates a principal-to-practice guide of the multi-level governance within organizations across the globe for AI ethics frameworks. We outline the main gap areas in organizations for AI ethics frameworks. Consecutively, we propose a multi-level governance pattern for responsible AI systems within organizations which is participatory, iterative, flexible and operable that targets those main gap areas. Finally, to assist practitioners in applying the multi-level governance AI in organizations and its impact on the industry level, we will translate it into effective and responsible AI practices using a case study.","0730-3157","979-8-3503-2697-0","10.1109/COMPSAC57700.2023.00185","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10197114","AI;AI ethics;trustworthy AI;XAI;AIMLOps;AIOps;software engineering;software architecture;pattern;best practice","Industries;Ethics;Software design;Navigation;Software algorithms;Microservice architectures;Organizations","","4","","55","IEEE","2 Aug 2023","","","IEEE","IEEE Conferences"
"Trust Aware Continuous Authorization for Zero Trust in Consumer Internet of Things","T. Dimitrakos; T. Dilshener; A. Kravtsov; A. La Marra; F. Martinelli; A. Rizos; A. Rosetti; A. Saracino","German Research Center, Huawei Technologies Duesseldorf GmbH, Munich, Germany; German Research Center, Huawei Technologies Duesseldorf GmbH, Munich, Germany; Israel Research Center, Huawei Technologies Co, Tel-Aviv, Israel; Security Forge, Pisa, Italy; Istituto di Informatica e Telematica, Consiglio Nazionale delle Ricerche, Pisa, Italy; German Research Center, Huawei Technologies Duesseldorf GmbH, Munich, Germany; Security Forge, Pisa, Italy; Istituto di Informatica e Telematica, Consiglio Nazionale delle Ricerche, Pisa, Italy","2020 IEEE 19th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom)","9 Feb 2021","2020","","","1801","1812","This work describes the architecture and prototype implementation of a novel trust-aware continuous authorization technology that targets consumer Internet of Things (IoT), e.g., Smart Home. Our approach extends previous authorization models in three complementary ways: (1) By incorporating trust-level evaluation formulae as conditions inside authorization rules and policies, while supporting the evaluation of such policies through the fusion of an Attribute-Based Access Control (ABAC) authorization policy engine with a Trust-Level-Evaluation-Engine (TLEE). (2) By introducing contextualized, continuous monitoring and re-evaluation of policies throughout the authorization life-cycle. That is, mutable attributes about subjects, resources and environment as well as trust levels that are continuously monitored while obtaining an authorization, throughout the duration of or after revoking an existing authorization. Whenever change is detected, the corresponding authorization rules, including both access control rules and trust level expressions, are re-evaluated.(3) By minimizing the computational and memory footprint and maximizing concurrency and modular evaluation to improve performance while preserving the continuity of monitoring. Finally we introduce an application of such model in Zero Trust Architecture (ZTA) for consumer IoT.","2324-9013","978-1-6654-0392-4","10.1109/TrustCom50675.2020.00247","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9343102","Trust;ABAC;Usage Control;Authorization;IoT","Authorization;Privacy;Prototypes;Computer architecture;Smart homes;Internet of Things;Monitoring","","45","","38","IEEE","9 Feb 2021","","","IEEE","IEEE Conferences"
"Problems in Air Quality Monitoring and Assessment","Y. He; A. Kuchansky; S. Paliy; Y. Shabala","Taras Shevchenko National University of Kyiv, Ukraine; Taras Shevchenko National University of Kyiv, Ukraine; Taras Shevchenko National University of Kyiv, Ukraine; Kyiv National University of Construction and Architecture, Ukraine",2021 IEEE International Conference on Smart Information Systems and Technologies (SIST),"29 Jun 2021","2021","","","1","4","Multifactor analysis of the formation of the level of pollution in combination with the operational forecast of the level of pollution is an effective way to help partially solve the problems of environmental pollution. The relevance of research on monitoring the state of environmental pollution is confirmed by the fact that the governments of all leading countries spend, on average, from 1% to 3% of their budgets on environmental protection measures. The paper provides an overview of known systems for monitoring the state of air, water, and soil pollution. The importance of the technical component in ensuring monitoring is shown. New tendencies concerning the application of innovative technologies in the field of environmental monitoring are revealed. By the task of monitoring the state of the environment, the structure of the information system for monitoring the state of the environment is proposed. The system should include the subsystems for collecting information on the state of the environment, the subsystem for storing and storing data, the subsystem for forecasting the state of the environment, and subsystems for interaction with the user.","","978-1-7281-7470-9","10.1109/SIST50301.2021.9465915","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9465915","environmental pollution;monitoring;sensor;information system","Soil measurements;Predictive models;Water pollution;Software;Pollution measurement;Soil pollution;Environmental monitoring","","4","","24","IEEE","29 Jun 2021","","","IEEE","IEEE Conferences"
"NextGenEMO: an Efficient Provisioning of Edge-Native Applications","B. Herlicq; A. Khichane; I. Fajjari","CentraleSupélec, University Paris-Saclay, France; Orange Labs, Châtillon, France; Orange Labs, Châtillon, France",ICC 2022 - IEEE International Conference on Communications,"11 Aug 2022","2022","","","1924","1929","For years, Cloud infrastructures have driven the network services growth, providing increased scalability, enhanced performance and cost-effective resources. Nevertheless, the emergence of demanding 5G use cases poses several challenges that today’s Cloud infrastructures, despite their agility, struggle to overcome. In this context, Edge Computing has emerged to cope with Cloud’s shortcomings. This augmented architecture provides nearby resources, performing analytics tasks and data storage. However, it raises new challenges in terms of application design and management. In this perspective, the orchestration is the cornerstone that will enable the exploitation of edge infrastructures and the life-cycle management of multi-component applications. In this paper, we address the orchestration of edge-native applications issue in a practical manner. Specifically, we design and implement a multi-cluster orchestrator optimizing the provisioning of geo-distributed applications while considering the underlying edge infrastructure. To validate our approach, we evaluate the orchestration of our Towards5GS, an open-source edge-native 5G network service. Based on extensive experiments, the results obtained show that our solution achieved good results in terms of i) deployment time and ii) migration time.","1938-1883","978-1-5386-8347-7","10.1109/ICC45855.2022.9839012","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9839012","5G;Edge Computing;Provisioning;Orchestration;Kubernetes;EMCO","5G mobile communication;Scalability;Conferences;Memory;Computer architecture;Task analysis;Open source software","","3","","15","IEEE","11 Aug 2022","","","IEEE","IEEE Conferences"
"A multi-context Severity-based SLO Violation Detector","A. Tsagkaropoulos; Y. Verginadis; G. Mentzas","Institute of Communication and Computer Systems, School of Electrical and Computer Engineering, National Technical University of Athens, Zografou, Athens, Greece; Institute of Communication and Computer Systems, Athens University of Business and Economics, Zografou, Athens, Greece; Institute of Communication and Computer Systems, School of Electrical and Computer Engineering, National Technical University of Athens, Zografou, Athens, Greece",2024 IEEE Symposium on Computers and Communications (ISCC),"31 Oct 2024","2024","","","1","6","As cloud computing continuum services become ever more important, the need of platforms that facilitate and manage their proper operation is unquestionable. An integral part of these platforms is a series of tools which will complement day one and day two operations in the context of the application software lifecycle. This work introduces an approach towards a Service Level Objective (SLO) Violation Detection system, based on the perceived Severity of an imminent or predicted violation. This system leverages insights to stay operational and triggers appropriate reconfiguration actions by continuously considering the required conditions of good operation. The detailed architecture of the system, its operation overview as well as the required interactions with other components – parts of an adaptation ecosystem of a cloud platform, are provided. Finally, potential future improvements are discussed. Keywords—application reconfiguration, modelling, elasticity, cloud computing, service adaptation","2642-7389","979-8-3503-5423-2","10.1109/ISCC61673.2024.10733630","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10733630","","Measurement;Computers;Cloud computing;DevOps;Computational modeling;Biological system modeling;Ecosystems;Detectors;Computer architecture;Elasticity","","","","15","IEEE","31 Oct 2024","","","IEEE","IEEE Conferences"
"4G RAN Infrastructure Sharing by 5G Virtualized Mobile Network Operators: A Tutorial","L. Mamushiane; L. Mboweni; H. Kobo; M. Mudumbe; J. Mwangama; A. A. Lysko","Council for Scientific and Industrial Research (CSIR), South Africa; Council for Scientific and Industrial Research (CSIR), South Africa; Council for Scientific and Industrial Research (CSIR), South Africa; Council for Scientific and Industrial Research (CSIR), South Africa; University of Cape Town (UCT), South Africa; Council for Scientific and Industrial Research (CSIR), South Africa",2021 IEEE AFRICON,"25 Oct 2021","2021","","","1","7","Active radio access network (RAN) infrastructure sharing has emerged as a promising solution for efficient spectrum utilization, capital and operational cost savings, improved MVNO penetration rates and lower broadband retail prices in both emerging and developed markets. This paper presents a tutorial on the testbed implementation of an active RAN sharing architecture, leveraging multi-vendor virtualized 5G and 4G core networks running on commodity hardware and proprietary 4G RAN equipment (eNodeB). Troubleshooting techniques used for different implementation challenges encountered are also presented in this contribution. The performance of the proposed architecture was validated using end-user quality of experience (QoE) as the key performance indicator. The results show no performance degradation when RAN sharing is being utilized.","2153-0033","978-1-6654-1984-0","10.1109/AFRICON51333.2021.9570937","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9570937","RAN sharing;software defined networking (SDN);network function virtualization (NFV);cloud computing;virtual local area network (VLAN)","Radio access networks;Costs;5G mobile communication;Tutorials;Communications technology;Hardware;Broadband communication","","","","32","IEEE","25 Oct 2021","","","IEEE","IEEE Conferences"
"Requirements Analysis for a System for Certifying Online Content","M. Marian; F. Stîngă; A. Cusman; E. Ganea; D. Popescu; D. Ionică","Dept. of Computers and IT, University of Craiova, Craiova, Romania; Dept. of Automation and Electronics, University of Craiova, Craiova, Romania; CERT DIGITAL, Centrul de Calcul S.A., Tg. Jiu, Romania; Dept. of Computers and IT, University of Craiova, Craiova, Romania; Dept. of Automation and Electronics, University of Craiova, Craiova, Romania; CERT DIGITAL, Centrul de Calcul S.A., Tg. Jiu, Romania",2023 24th International Carpathian Control Conference (ICCC),"19 Jul 2023","2023","","","259","264","This paper investigates the requirements for a system capable to authenticate (or certify) the content that is available online. Based on an analysis of the approaches used to fight against fake news and fake online content, our proposal is based on digital signatures, and integrates several key components to fulfill the determined functional requirements. This implies that both the origin of the text (the source) and the textual online content, can be trusted by anyone that is able to verify the applied electronic signature.","","979-8-3503-1022-1","10.1109/ICCC57093.2023.10178980","European Regional Development Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10178980","digital signature;cybersecurity;cloud computing;approaches against fake news","Education;Computer architecture;Companies;Service-oriented architecture;Proposals;Fake news;Digital signatures","","1","","16","IEEE","19 Jul 2023","","","IEEE","IEEE Conferences"
"The Fog-Based Framework for Design of Real-Time Control Systems in Internet of Things Environment","I. T. Popović; A. Ž. Rakić","School of Electrical Engineering, University of Belgrade, Belgrade, Serbia; School of Electrical Engineering, University of Belgrade, Belgrade, Serbia",2018 International Symposium on Industrial Electronics (INDEL),"10 Feb 2019","2018","","","1","6","The proposed framework provides building infrastructure for the integration of the fog-based IoT control systems. The data transmission methods for real-time front-end device to fog-node communication over the simple connectionless transmission model are introduced and utilized by fog connector protocol suite. The methods are tailored for time-sensitive control applications and time-aware processing within the distributed message-oriented middleware in the form of the configurable service agent components. The presented framework is implemented and verified in the network control system use-case for temperature regulation in drying chamber.","","978-1-5386-2353-4","10.1109/INDEL.2018.8637639","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8637639","networked control systems;fog computing;agents;system integration;closed-loop control","Real-time systems;Data communication;Computer architecture;Internet of Things;Cloud computing;Edge computing;Performance evaluation","","3","","13","IEEE","10 Feb 2019","","","IEEE","IEEE Conferences"
"Automated Vehicle Parking Occupancy Detection in Real-Time","H. Padmasiri; R. Madurawe; C. Abeysinghe; D. Meedeniya","Department of Computer Science and Engineering, University of Moratuwa, Katubedda, Sri Lanka; Department of Computer Science and Engineering, University of Moratuwa, Katubedda, Sri Lanka; Department of Computer Science and Engineering, University of Moratuwa, Katubedda, Sri Lanka; Department of Computer Science and Engineering, University of Moratuwa, Katubedda, Sri Lanka",2020 Moratuwa Engineering Research Conference (MERCon),"3 Sep 2020","2020","","","1","6","Parking occupancy detection systems help to identify the available parking spaces and direct vehicles efficiently to unoccupied lots by reducing time and energy. This paper presents an approach for the design and development of an end-to-end automated vehicle parking occupancy detection system. The novelty of this study lies in the methodology followed for the object detection process using RetinaNet one stage detector and region-based convolutional neural network deep learning technique. The proposed software architecture consists of low coupled components that support scalability and reliability. The developed web-based and mobile-based client applications assist to find parking spaces easily and efficiently. The existing solutions utilize dedicated sensors and depend on manual segmentation of surveillance footage to detect the state of parking spaces. The proposed approach eliminates existing limitations while maintaining reasonable accuracy.","","978-1-7281-9975-7","10.1109/MERCon50084.2020.9185199","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9185199","Object detection;computer vision;cloud computing;microservice architecture","Detectors;Magnetic sensors;Streaming media;Object detection;Cameras;Surveillance","","13","","26","IEEE","3 Sep 2020","","","IEEE","IEEE Conferences"
"Cyber-Physical Production System Self-Description-Based Data Access Layer","D. Stock; D. Schel; T. Bauernhansl","Competence Center DigITools for Manufacturing, Fraunhofer Institute for Manufacturing Engineering and Automation IPA, Stuttgart, Germany; Competence Center DigITools for Manufacturing, Fraunhofer Institute for Manufacturing Engineering and Automation IPA, Stuttgart, Germany; Competence Center DigITools for Manufacturing, Fraunhofer Institute for Manufacturing Engineering and Automation IPA, Stuttgart, Germany",2019 24th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),"17 Oct 2019","2019","","","168","175","Cyber-Physical Production Systems (CPPS) are Cyber-Physical Systems (CPS), which are applied in manufacturing environments to carry out production related tasks, thus turning them into smart manufacturing environments. They are the evolution of combined regular manufacturing equipment, embedded computing devices and distributed computing functionality, which has been sparked by technical advances in information and communication technology (ICT) and progressively networked production. One of the properties of CPS is the ability to be composed of other CPS and the ability to encapsulate so-called self-x capabilities. Their networked nature enables access to large amounts of data, which can be used to extract information and knowledge about machines, processes, and the manufacturing environment. This paper discusses approaches how data access, storage, and information extraction is currently being handled. We propose how these approaches can be extended and how an information-oriented system and infrastructure for CPPS can be constructed to create a Cyber-Physical Data Access Layer which is based on the self-description capability of CPPS components.","1946-0759","978-1-7281-0303-7","10.1109/ETFA.2019.8869486","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8869486","Cyber-Physical Production System;self-x;middleware;information systems;Data Warehouse;Data Lake;digital shadow","","","5","","45","IEEE","17 Oct 2019","","","IEEE","IEEE Conferences"
"Apache camel based implementation of an industrial middleware solution","F. Gosewehr; J. Wermann; W. Borsych; A. W. Colombo","Department of Technology, University of Applied Sciences, Emden/Leer, Germany; Department of Technology, University of Applied Sciences, Emden/Leer, Germany; Department of Technology, University of Applied Sciences, Emden/Leer, Germany; Hochschule fur Technik und Wirtschaft Berlin, Berlin, Berlin, DE",2018 IEEE Industrial Cyber-Physical Systems (ICPS),"21 Jun 2018","2018","","","523","528","The current trend in industrial automation towards the implementation of Industrial Cyber-Physical Systems requires a common way for different systems to communicate with each other. Since an industrial production system is typically very inhomogeneous, where many of its components communicate using different protocols and data formats, a common integration platform is necessary. Such a platform is called a Middleware and is capable of acting as a data routing and processing engine for a system. With the specific needs coming from an industrial context in mind, this paper describes implementation details of an instance of such a Middleware, which has been specified and developed within the European research project PERFoRM. This paper describes how the solution, which is based on Apache Camel, is fit into PERFoRM's architectural design and how it is used and appended to fit the specific requirements defined within PERFoRM.","","978-1-5386-6531-2","10.1109/ICPHYS.2018.8390760","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8390760","","Middleware;Standards;Tools;Data models;Protocols;Iterative closest point algorithm;Cyber-physical systems","","2","","11","IEEE","21 Jun 2018","","","IEEE","IEEE Conferences"
"OCE-DNS: an innovative Osmotic Computing Enabled Domain Name System","A. Galletta; C. Sicari; A. Celesti; M. Villari","MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy","2021 IEEE/ACM 21st International Symposium on Cluster, Cloud and Internet Computing (CCGrid)","2 Aug 2021","2021","","","642","648","Recently, the Osmotic computing paradigm has emerged as a solution to enable the Cloud-Edge-Internet of Things (IoT) continuum. Specifically, it allows dealing with the transparent deployment of distributed services on a combination of Cloud and Edge (or simply Osmotic) nodes, guaranteeing data proximity to end users and IoT devices. In order to optimize applications, software components called Micro ELements (MELs) have to be properly deployed and moved between the Cloud the Edge and the IoT. In this paper, we focus on the MEL addressability problem, intended as the capacity to communicate with the same MEL without caring about its possible migration in different nodes of the same Osmotic Infrastructure. Specifically, we discuss an Osmotic Computing Enabled Domain Name System (OCE-DNS) integrated with the Osmotic Infrastructure, used to address the MELs and to hide their migrations through the use of a dynamic and low latency Resource Record (RR) database containing the real position of the MELs. Specifically, a system prototype developed using a CoreDNS server and an Etcd cluster is discussed and tested showing a good performance in terms of response time and scalability. In order to validate our work, we tested the OCE-DNS in an Osmotic smart city.","","978-1-7281-9586-5","10.1109/CCGrid51090.2021.00077","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9499422","Cloud Computing;Edge Computing;Internet of Things;Osmotic Computing;Service Migration;Domain Name System;Cloud Continuum","Cloud computing;Smart cities;Scalability;Prototypes;Distributed databases;Dynamic scheduling;Domain Name System","","1","","14","IEEE","2 Aug 2021","","","IEEE","IEEE Conferences"
"A Comparative Study to Evaluate the Performance of Communication Protocols for Process Industry","X. Wang; İ. Mutlu; F. Rani; L. Drowatzky; L. Urbas","Faculty of Electrical and Computer Engineering, Technische Universität Dresden, Germany; Faculty of Electrical and Computer Engineering, Technische Universität Dresden, Germany; Faculty of Electrical and Computer Engineering, Technische Universität Dresden, Germany; Faculty of Mechanical Science and Engineering, Technische Universität Dresden, Germany; Faculty of Electrical and Computer Engineering, Technische Universität Dresden, Germany",2022 32nd International Telecommunication Networks and Applications Conference (ITNAC),"5 Jan 2023","2022","","","170","177","With the boom of Industry 4.0 for industrial automation, the data exchange between the different industrial devices has tremendously increased through local (edge) and cloud computing. Nowadays, several communication protocols are available to realize data acquisition in the industry. As a result, understanding the practical capabilities of each communication protocol arises as an essential issue in optimizing the data acquisition and storage in industrial plants. This study aims to develop a software-based test environment to evaluate the performance of two widely used communication protocols within the scope of the Industrial Internet of Things (IIoT). These contemplated protocols are Open Platform Communications Unified Architecture (OPC UA) and Message Queuing Telemetry Transport (MQTT). With the help of the developed test environment, several performance metrics, like packet overhead, latency, packet loss ratio, and CPU utilization, are evaluated for different application scenarios where the varying number of clients and subscribers are considered. Derived results indicate the stronger parts of each protocol under varying communication configurations.","2474-154X","978-1-6654-7103-9","10.1109/ITNAC55475.2022.9998327","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9998327","Communication Protocols;OPC UA;MQTT;Performance Evaluation;Data Exchange;Industry 4.0","Industries;Protocols;Data acquisition;Packet loss;Computer architecture;Communications technology;Industrial plants","","2","","25","EU","5 Jan 2023","","","IEEE","IEEE Conferences"
"Flux: Groupon's automated, scalable, extensible machine learning platform","D. C. Spell; X. -H. T. Zeng; J. Y. Chung; B. Nooraei; R. T. Shomer; L. -Y. Wang; J. C. Gibson; D. Kirsche","Groupon, Inc.; Groupon, Inc.; Groupon Inc.; Groupon, Inc.; Groupon, Inc.; Groupon, Inc.; Groupon, Inc.; Groupon, Inc.",2017 IEEE International Conference on Big Data (Big Data),"15 Jan 2018","2017","","","1554","1559","As machine learning becomes the driving force of the daily operation of companies within the information technology sector, infrastructure that enables automated, scalable machine learning is a core component of the systems of many large companies. Various systems and products are being built, offered, and open sourced. As an e-commerce company, numerous aspects of Groupon's business is driven by machine learning. To solve the scalability issue and provide a seamless collaboration between data scientists and engineers, we built Flux, a system that expedites the deployment, execution, and monitoring of machine learning models. Flux focuses on enabling data scientists to build model prototypes with languages and tools they are most proficient in, and integrating the models into the enterprise production system. It manages the life cycle of deployed models, and executes them in distributed batch mode, or exposes them as micro-services for real-time use cases. Its design focuses on automation and easy management, scalability, and extensibility. Flux is the central system for supervised machine learning tasks at Groupon and has been supporting multiple teams across the company.","","978-1-5386-2715-0","10.1109/BigData.2017.8258089","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8258089","machine learning system;machine learning automation;machine learning infrastructure","Data models;Engines;Libraries;Real-time systems;Predictive models;Computational modeling;Tools","","2","","9","IEEE","15 Jan 2018","","","IEEE","IEEE Conferences"
"Pipekit: A Deployment Tool with Advanced Scheduling and Inter-Service Communication for Multi-Tier Applications","P. Chico de Guzmán; F. Gorostiaga; C. Sánchez","IMDEA Software Institute, Spain; IMDEA Software Institute, Spain; IMDEA Software Institute, Spain",2018 IEEE International Conference on Web Services (ICWS),"6 Sep 2018","2018","","","379","382","Modern cloud applications are based on microservice architectures. The deployment of these microservice based applications often requires that every constituent service starts after all its dependencies are configured and running properly. It is also common that these dependencies generate dynamic data that needs to be supplied to other services too at starting time. More complex scenarios require additionally interchanging data in other phases of the microservices lifecycle. One alternative to solve these dependencies is to describe the deployment of microservice applications manually—using scripts—which allows IT operators to precisely define when a service is ready to start serving other components. However, synchronization by scripting is tedious, error prone and hard to maintain. Other solutions offer specific languages to describe service dependencies, along with tool support that interpret scripts in these languages to take care of starting services in the proper order. These tools are either very rich but complex to use, or fail in providing sophisticated ways to describe what it means for a service to be ready. Moreover, the communication layer between services, if supplied, is based on intermediate entities and non-trivial network protocols. This paper proposes pipekit as a solution, by offering a container orchestration language which focuses on simplicity (pipekit is similar to Docker Compose) and is equipped with directives to define when a service is ready. The pipekit tool provides a communication layer for moving data between services, implemented using shared storage. This shared storage provides a very simple interface to move artifacts between services, and greatly simplifies the synchronization logic of pipekit by using semaphores at the file system level.","","978-1-5386-7247-1","10.1109/ICWS.2018.00066","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8456383","orchestration;microservices;deployment;syncronization","Databases;Tools;Containers;Synchronization;Pipelines;Software;Protocols","","2","","13","IEEE","6 Sep 2018","","","IEEE","IEEE Conferences"
"A Distributed Peer to Peer Identity and Access Management for the Osmotic Computing","C. Sicari; A. Catalfamo; A. Galletta; M. Villari","MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy; MIFT Department, University of Messina, Messina, Italy","2022 22nd IEEE International Symposium on Cluster, Cloud and Internet Computing (CCGrid)","19 Jul 2022","2022","","","775","781","Nowadays Osmotic Computing is emerging as one of the paradigms used to guarantee the Cloud Continuum, and this popularity is strictly related to the capacity to embrace inside it some hot topics like containers, microservices, orchestration and Function as a Service (FaaS). The Osmotic principle is quite simple, it aims to create a federated heterogeneous infrastructure, where an application's components can smoothly move following a concentration rule. In this work, we aim to solve two big constraints of Osmotic Computing related to the incapacity to manage dynamic access rules for accessing the applications inside the Osmotic Infrastructure and the incapacity to keep alive and secure the access to these applications even in presence of network disconnections. For overcoming these limits we designed and implemented a new Osmotic component, that acts as an eventually consistent distributed peer to peer access management system. This new component is used to keep a local Identity and Access Manager (IAM) that permits at any time to access the resource available in an Osmotic node and to update the access rules that allow or deny access to hosted applications. This component has been already integrated inside a Kubernetes based Osmotic Infrastructure and we presented two typical use cases where it can be exploited.","","978-1-6654-9956-9","10.1109/CCGrid54584.2022.00091","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9825999","osmotic computing;security;identity and access control;smart city","Cloud computing;Urban areas;Microservice architectures;FAA;Containers;Peer-to-peer computing","","2","","18","IEEE","19 Jul 2022","","","IEEE","IEEE Conferences"
"A Comparative Performance Analysis and Cost Efficiency between AWS and GCP Services in Cloud-Based Software Development","D. J. Arrizki; S. A. Kosim; U. L. Yuhana","Department of Informatics, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia; Department of Informatics, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia; Department of Informatics, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia",2024 2nd International Conference on Software Engineering and Information Technology (ICoSEIT),"16 Apr 2024","2024","","","149","154","In an era when cloud technology has become increasingly integrated into projects and companies, effective cost management of cloud-related costs has become critical. This study emphasizes the critical need for cost minimization while maintaining high availability performance on two key cloud platforms, Amazon Web Services (AWS) and Google Cloud Platform (GCP). The issue is establishing a careful balance between cost expenditure and maintaining intense performance levels, which requires quick decision-making. While earlier studies have attempted to compare AWS and GCP, they have primarily focused on performance metrics, leaving a significant gap in cost-related comparisons. The study’s findings include a detailed analysis and evaluation of the performance and associated costs incurred in AWS and GCP. After experimenting, we highlight that AWS outperforms GCP regarding average performance. However, the cost aspect depends on the number of instances generated to handle incoming requests, introducing variability to the cost outcomes.","","979-8-3503-1750-3","10.1109/ICoSEIT60086.2024.10497497","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10497497","amazon web services;cloud cost assessment;cloud performance analysis;high availability infrastructure;google cloud platform","Performance evaluation;Cloud computing;Costs;Web services;Microservice architectures;Minimization;Software","","","","16","IEEE","16 Apr 2024","","","IEEE","IEEE Conferences"
"OpenStack-Based Highly Scalable IoT/M2M Platforms","D. de la Bastida; F. J. Lin","EECS International Graduate Program, National Chiao Tung University, Hsinchu City, Taiwan; Department of Computer Science, National Chiao Tung University, Hsinchu City, Taiwan","2017 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)","1 Feb 2018","2017","","","711","718","The IoT/M2M platforms are emerging to provide a common service layer for various types of new IoT applications. It is foreseen billions of IoT/M2M devices will soon be connected to those IoT/M2M platforms hosted in the cloud. In this research we propose a highly scalable OpenStack-based architecture for IoT/M2M platforms. Our unique contribution consists of leveraging the advanced functionalities of OpenStack to introduce a master node specifically designed for IoT/M2M scalability in the cloud and a load balancing queue node cooperating with the master node for fair distribution of incoming traffic among platform nodes. Using four different types of IoT/M2M applications: smart meter, Bluetooth tags, eHealth, and video, we show that compared to LBAAS and Heat that are OpenStack native load balancing and scalability functions, in most cases our proposed system is capable of achieving the fastest response time and the lowest computational cost with acceptable tradeoff of more energy consumption.","","978-1-5386-3066-2","10.1109/iThings-GreenCom-CPSCom-SmartData.2017.110","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8276829","Cloud Computing;Internet of Things;Machine to Machine communications;Scalability;OpenStack","Heating systems;Internet of Things;Conferences;Green computing;Social computing;Handheld computers;Cloud computing","","7","","25","IEEE","1 Feb 2018","","","IEEE","IEEE Conferences"
"CANON: Complex Analytics of Network of Networks for Modeling Adversarial Activities","S. Roach; C. Ni; A. Kopylov; T. -C. Lu; J. Xu; S. Zhang; B. Du; D. Zhou; J. Wu; L. Liu; Y. Yan; J. He; H. Tong","HRL Laboratories, LLC; HRL Laboratories, LLC; HRL Laboratories, LLC; HRL Laboratories, LLC; HRL Laboratories, LLC; University of Illinois, Urbana-Champaign; University of Illinois, Urbana-Champaign; University of Illinois, Urbana-Champaign; University of Illinois, Urbana-Champaign; University of Illinois, Urbana-Champaign; University of Illinois, Urbana-Champaign; University of Illinois, Urbana-Champaign; University of Illinois, Urbana-Champaign",2020 IEEE International Conference on Big Data (Big Data),"19 Mar 2021","2020","","","1634","1643","Networks are natural representations in modeling adversarial activities, such as smuggling, human trafficking, and illegal arms dealing. However, such activities are often covert and embedded across multiple domains and sources. They are generally not detectable and recognizable from the perspective of an isolated network, and only become apparent when multiple networks are analyzed in a unified m anner. T o t his e nd, we propose Complex Analytics of Network of Networks (CANON), a mathematical and computational framework for modeling adversarial activities from large-scale, multi-sourced data inputs. Central to our framework is a network-of-networks model, where nodes and edges can be defined across different domains and at multiple resolutions. Based on this model, we address the key challenges in modeling adversarial activities via four technical components, including optimization-based network alignment, network embedding and conditioning, approximate subgraph matching, and investigative subgraph discovery.In this paper, we describe the design and implementation of the individual components as well as integrating these components into a unified system using a modular microservice architecture. Extensive experiments have been conducted in both synthetics and real-world datasets to demonstrate the effectiveness of our proposed system under the DARPA Modeling Adversarial Activity (MAA) program.","","978-1-7281-6251-5","10.1109/BigData50022.2020.9378258","United States Air Force; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9378258","Algorithms;Computer Aided Analysis;Computers and Information Processing","Analytical models;Uncertainty;Computational modeling;Scalability;Merging;Big Data;Mathematical model","","1","","32","IEEE","19 Mar 2021","","","IEEE","IEEE Conferences"
"Unattended Deployment of Enabling Platforms for Cloud-Based Applications","S. Panica; D. Petcu","Institute e-Austria Timişoara, West University of Timişoara, Romania; Institute e-Austria Timişoara, West University of Timişoara, Romania",2016 30th International Conference on Advanced Information Networking and Applications Workshops (WAINA),"19 May 2016","2016","","","144","149","The deployment of applications able to consume cloud infrastructure services is currently a tedious process especially when it should be often repeated in the application developing phase. We present a technical solution that simplifies the deployment process, as being almost fully automated. Its integration as a module of an open-source platform for enforcing security controls by its users is further discussed.","","978-1-5090-2461-2","10.1109/WAINA.2016.170","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7471188","cloud computing;unattended deployment;enabling platform;cloud applications","Cloud computing;Security;Operating systems;Servers;Computer architecture;Scalability;Context","","","","36","IEEE","19 May 2016","","","IEEE","IEEE Conferences"
"Collaboration Mechanisms for IoT Platform Federations Fostering Organizational Interoperability","I. P. Žarko; J. Iranzo; C. Ruggenthaler; J. A. S. Murillo; J. Garcia; P. Skočir; S. Soursos","University of Zagreb, Faculty of Electrical Engineering and Computing, Croatia; ATOS Spain SA, Spain; AIT Austrian Institute of Technology GmbH, Austria; ATOS Spain SA, Spain; Ubiwhere, Portugal; University of Zagreb, Faculty of Electrical Engineering and Computing, Croatia; Intracom SA Telecom Solutions, Greece",2018 Global Internet of Things Summit (GIoTS),"15 Nov 2018","2018","","","1","6","The Internet of Things (IoT) is faced with a plethora of platforms which are built and operated as siloed solutions. However, the lack of interoperability and collaboration between platforms will negatively influence their adaptability to support future business cases targeting large-scale and cross-domain IoT deployments. While syntactic and semantic interoperability,as a prerequisite for platform cooperation, has been widely addressed by standardization and research actions, organizational interoperability enabling direct and business-driven interactions between IoT platform owners has so far not been in focus. In this paper we present the interoperability approach pursued by the project symbIoTe that implements a flexible interoperability framework, and put forward its solution for organizational interoperability offering decentralized and secure interworking between IoT platforms--IoT-platform federations. Three main collaboration mechanisms are introduced and elaborated: management of Service Level Agreements (SLA) between federated platforms, multi-level trust and reputation management, anda bartering mechanism for fair sharing of federated resources. The aforementioned mechanisms are put in place to foster decentralized platform collaboration which has higher potential to be adopted by platform owners compared to centralized approaches.","","978-1-5386-6451-3","10.1109/GIOTS.2018.8534547","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8534547","","Interoperability;Semantics;Collaboration;Ontologies;Internet of Things;Standardization;Sensors","","3","","18","IEEE","15 Nov 2018","","","IEEE","IEEE Conferences"
"A Case Study in Computational Caching Microservices for HPC","J. Jenkins; G. Shipman; J. Mohd-Yusof; K. Barros; P. Carns; R. Ross",Argonne National Laboratory; Los Alamos National Laboratory; Los Alamos National Laboratory; Los Alamos National Laboratory; Argonne National Laboratory; Argonne National Laboratory,2017 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW),"3 Jul 2017","2017","","","1309","1316","A case study is presented that provides computation caching (memoization) through a microservice architecture to high-performance computing (HPC) applications, particularly the ExMatEx proxy application CoEVP (Co-designed Embedded ViscoPlasticity Scale-bridging). CoEVP represents a class of multiscale physics methods in which inexpensive coarse-scale models are combined with expensive fine-scale models to simulate physical phenomena scalably across multiple time and length scales. Recently, CoEVP has employed interpolation based on previously executed fine-scale models in order to reduce the number of fine-scale evaluations needed to advance the simulation. Building on this work, we envision that distributed microservices composed to provide new capabilities to large-scale parallel applications can be an important component in simulating ever-larger systems at ever-greater fidelities. We explore three aspects of a microservice composition for interpolation-based memoization in our study. First, we present a cost assessment of CoEVP's current fine-scale modeling and interpolation approach. Second, we present an alternative interpolation strategy in which interpolation models are directly constructed on demand from previous fine-scale evaluations: a ""database of points"" rather than a ""database of models."" Third, we evaluate the characteristics of the two approaches with and without cross-process sharing of database entries. Lessons learned from the study are used to inform designs for future work in developing distributed, large-scale memoization services for HPC.","","978-1-5386-3408-0","10.1109/IPDPSW.2017.40","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7965189","","Distributed processing;Conferences","","6","","27","IEEE","3 Jul 2017","","","IEEE","IEEE Conferences"
"AI-GeneSI: Exploiting generative AI for autonomous generation of the southbound interface in the IoT","A. Lombardo; G. Morabito; S. Quattropani; C. Ricci; M. Siino; I. Tinnirello","CNIT and Department of Electrical, Electronics and Informatics Engineering (DIEEI), University of Catania, Catania, Italy; CNIT and Department of Electrical, Electronics and Informatics Engineering (DIEEI), University of Catania, Catania, Italy; CNIT and Department of Electrical, Electronics and Informatics Engineering (DIEEI), University of Catania, Catania, Italy; CNIT and Department of Electrical, Electronics and Informatics Engineering (DIEEI), University of Catania, Catania, Italy; CNIT and Department of Electrical, Electronics and Informatics Engineering (DIEEI), University of Catania, Catania, Italy; Department of Engineering (DI), University of Palermo, Palermo, Italy",2024 IEEE 10th World Forum on Internet of Things (WF-IoT),"30 Dec 2024","2024","","","1","7","Virtual objects, which are representations in the digital world of physical entities, uses the data collected by one or several sensor nodes to operate. To overcome the diversity and heterogeneity of protocols implemented by different sensor nodes and the way in which sensor data is represented, it is convenient to exploit appropriate components referred to as “southbound interfaces” in this paper. The objective of the southbound interface is to convert the communication protocols implemented by sensor nodes and virtual objects and to harmonize data representations. The implementation of the southbound interfaces is not a complex task, however it is extremely specific of the current setting, which turns in low reusability of the code, and is time-consuming. In this paper, a methodology named AI-GeneSI is proposed to exploit Large Language Models (LLM)s to generate the code to communicate with the southbound interface. Such code is utilized to create and deploy a microservice which implements the southbound interface functions. A prototype of the proposed methodology has been implemented to demonstrate the feasibility of the proposed approach.","2768-1734","979-8-3503-7301-1","10.1109/WF-IoT62078.2024.10811300","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10811300","","Performance evaluation;Codes;Protocols;Computational modeling;Semantics;Prototypes;Microservice architectures;Data models;Internet of Things;Servers","","","","18","IEEE","30 Dec 2024","","","IEEE","IEEE Conferences"
"1st International Workshop on Essence in Education & Training (WEE&T 2020)","L. F. Castro; K. M. L. Cooper; A. N. Duc; J. Pieper; M. Striewe","Faculty of Engineering, University of Quindío, Quindío, Colombia; Independent Scholar, Kelowna, Canada; USN School of Business, University of South Eastern Norway, Bø, Norway; Faculty of Electrical Engineering and Computer Science, IACS University of Applied Sciences Stralsund, Germany; paluno – The Ruhr Institute for Software Technology, University of Duisburg-Essen, Essen, Germany",2020 IEEE 32nd Conference on Software Engineering Education and Training (CSEE&T),"14 Oct 2020","2020","","","1","2","The workshop connects to the central theme “Educating for the Future” of CSEE&T 2020 and thus explores opportunities to improve Software Engineering education and training by using Essence. Essence, an OMG Standard, delivers essential, universal elements found in all Software Engineering (SE) endeavours and a language to describe and extend these elements and their use in concrete practices to tailor SE methods to teams' needs. Its Kernel separates the stable What and Why from the more adaptable How. That way, it provides an essential thinking framework facilitating the adoption and customization of practices and methods. As such, it supports multiple ways of educating SE students as well as training practitioners for the future. The first deployments of Essence in industry and academic courses around the globe show promising results. But since it is an entirely new way to think about SE practices, methods, and their building blocks—it requires some effort and thought to dive into the standard. This workshop facilitates the adoption by sharing experiences, best practices, and lessons learned.","2377-570X","978-1-7281-6807-4","10.1109/CSEET49119.2020.9206202","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9206202","SEMAT;Essence;software engineering;software process;SE methods;SE practices;education;training","Conferences;Software engineering;Training;Kernel;Games","","","","8","IEEE","14 Oct 2020","","","IEEE","IEEE Conferences"
"Extending the Mochi Methodology to Enable Dynamic HPC Data Services","M. Dorier; P. Carns; R. Ross; S. Snyder; R. Latham; A. Gueroudji; G. Amvrosiadis; C. Cranor; J. Soumagne",Argonne National Laboratory; Argonne National Laboratory; Argonne National Laboratory; Argonne National Laboratory; Argonne National Laboratory; Argonne National Laboratory; Carnegie Mellon University; Carnegie Mellon University; Intel Corporation,2024 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW),"26 Jul 2024","2024","","","414","422","High-performance computing (HPC) applications and workflows are increasingly making use of custom data services to complement traditional parallel file systems with fast transient data management capabilities tailored to application-specific needs. In the Mochi project we provide methodologies and tools that enable rapid development of custom HPC data services, including a collection of composable software components that can be combined to build complex distributed data services. Our initial version of Mochi targeted data services deployed with static configurations with a fixed number of nodes and minimal fault tolerance. However, there is a growing need for dynamic services that can adapt while running in response to changing workloads and system conditions. In this paper we present our work to extend the Mochi architecture to support the development of dynamic data services. We achieve this by providing new Mochi components that support unified bootstrapping and online reconfiguration, fault detection, monitoring, and consensus. We also provide a methodology for deriving service-wide resilience from the resilience of each of the service's components.","","979-8-3503-6460-6","10.1109/IPDPSW63119.2024.00091","U.S. Department of Energy; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10596530","HPC;Data service;Mochi;Elastic","Productivity;High performance computing;Distributed databases;Authentication;Software;Encryption;Security","","","","37","IEEE","26 Jul 2024","","","IEEE","IEEE Conferences"
"CYCLOPS: A micro service based approach for dynamic rating, charging & billing for cloud","S. Patanjali; B. Truninger; P. Harsh; T. M. Bohnert","InIT Cloud Computing Lab, Zurich University of Applied Sciences, Winterthur, Switzerland; InIT Cloud Computing Lab, Zurich University of Applied Sciences, Winterthur, Switzerland; InIT Cloud Computing Lab, Zurich University of Applied Sciences, Winterthur, Switzerland; InIT Cloud Computing Lab, Zurich University of Applied Sciences, Winterthur, Switzerland",2015 13th International Conference on Telecommunications (ConTEL),"3 Sep 2015","2015","","","1","8","In the present days of rapid adoption of cloud services and varying cost models it is imperative to have a system which converts the cloud resource usage data into a measurable and payable cost. The system should be able to collect the cloud resource usage data, process it against a dynamically determined rate to get a charge for which the customer could be billed upon. These operations need to be done in a secured manner with appropriate authentication and authorization checks. As the cloud services are still evolving, the rating, charging and billing components for cloud are at a nascent stage of its maturity. In this paper we are describing a novel modular and micro services based design & architecture for developing a dynamic rating, charging and billing for cloud service providers with emphasis being given to the validation of the architecture through mathematical modeling and the implementation experience of the micro services.","","978-1-4799-8972-0","10.1109/ConTEL.2015.7231226","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7231226","","Time series analysis;Databases;Measurement;Engines;Computer architecture;Cloud computing;Authorization","","14","","35","IEEE","3 Sep 2015","","","IEEE","IEEE Conferences"
"ECdo: An Edge Computing Distributed Data-Driven Evolutionary Optimization Platform","Q. -Y. Zeng; F. -F. Wei; X. -Q. Guo; W. -N. Chen","State Key Laboratory of Subtropical Building and Urban Science, School of Computer Science and Engineering, South China University of Technology, Guangzhou, China; State Key Laboratory of Subtropical Building and Urban Science, School of Computer Science and Engineering, South China University of Technology, Guangzhou, China; State Key Laboratory of Subtropical Building and Urban Science, School of Computer Science and Engineering, South China University of Technology, Guangzhou, China; State Key Laboratory of Subtropical Building and Urban Science, School of Computer Science and Engineering, South China University of Technology, Guangzhou, China","2023 IEEE International Conference on Systems, Man, and Cybernetics (SMC)","29 Jan 2024","2023","","","356","362","Surrogate-assisted evolutionary algorithms (SAEAs) have become a popular method to solve data-driven optimization problems (DOPs), which are common in industry. However, with the development of the Internet of Things, data are collected, processed, and stored in a distributed manner, leading a new optimization paradigm for SAEAs. To make SAEAs adapt to these distributed DOPs, this paper employs the edge computing paradigm to develop a platform that provides technical support for SAEAs with distributed structures, named ECdo. Specifically, the platform utilizes KubeEdge, an open-source edge computing framework, to mount the cluster and combines microservice interface design with the containerization strategy to offer a flexible deployment approach for distributed SAEAs. In addition, an efficient and stable internal communication mechanism is designed for the interaction between distributed components within the platform. To demonstrate the application of ECdo, we take the examples of a class of distributed DOPs, in which the objective and constraints are expensive and need to be approximated by accumulated data. These problems are known as distributed and expensive constrained optimization problems (DECOPs). We implement a distributed SAEA on ECdo to address DECOPs in real-world scenarios. Experiments show that the ECdo can provide the expected implementation for distributed SAEAs with good network tolerance under tough network conditions.","2577-1655","979-8-3503-3702-0","10.1109/SMC53992.2023.10394009","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10394009","edge computing;surrogate-assisted evolutionary algorithm;distributed optimization;expensive optimization","Training;Cloud computing;Privacy;Distributed databases;Evolutionary computation;Programming;Stability analysis","","","","33","IEEE","29 Jan 2024","","","IEEE","IEEE Conferences"
"Controlling Garbage Collection and Request Admission to Improve Performance of FaaS Applications","D. Quaresma; D. Fireman; T. E. Pereira","Federal University of Campina Grande, Campina Grande, Brazil; Federal Institute of Alagoas, Arapiraca, Brazil; Federal University of Campina Grande, Campina Grande, Brazil",2020 IEEE 32nd International Symposium on Computer Architecture and High Performance Computing (SBAC-PAD),"22 Oct 2020","2020","","","175","182","Runtime environments like Java's JRE, .NET's CLR, and Ruby's MRI, are popular choices for cloud-based applications and particularly in the Function as a Service (FaaS) serverless computing context. A critical component of runtime environments of these languages is the garbage collector (GC). The GC frees developers from manual memory management, which could potentially ease development and avoid bugs. The benefits of using the GC come with a negative impact on performance; that impact happens because either the GC needs to pause the runtime execution or competes with the running program for computational resources. In this work, we evaluated the usage of a technique - Garbage Collector Control Interceptor (GCI) - that eliminates the negative impact of GC on performance by controlling GC executions and transparently shedding requests while the collections are happening. We executed experiments simulating AWS Lambda's behavior and found that GCI is a viable solution. It benefited the user by improving the response time up to 10.86% at 99.9th percentile and reducing cost by 7.22%, but it also helped the platform provider by improving resource utilization by 14.52%.","2643-3001","978-1-7281-9924-5","10.1109/SBAC-PAD49847.2020.00033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9235063","serverless;faas;garbage collector;cold start;gci;cloud computing;cloud services","FAA;Time factors;Memory management;Cloud computing;Runtime environment;Load modeling;Java","","1","","35","IEEE","22 Oct 2020","","","IEEE","IEEE Conferences"
"EmoStream: Real-time Emotion Prediction through Speech with Apache Flink and Kafka Integration","N. B. Karri; I. Ponamala; V. Gudla; S. R. Vemula","Department of Computer Science and Engineering, Koneru Lakshmaiah Education Foundation, Vaddeswaram, Andhra Pradesh, India; Department of Computer Science and Engineering, Koneru Lakshmaiah Education Foundation, Vaddeswaram, Andhra Pradesh, India; Department of Computer Science and Engineering, Koneru Lakshmaiah Education Foundation, Vaddeswaram, Andhra Pradesh, India; Department of Computer Science and Engineering, Koneru Lakshmaiah Education Foundation, Vaddeswaram, Andhra Pradesh, India",2024 15th International Conference on Computing Communication and Networking Technologies (ICCCNT),"4 Nov 2024","2024","","","1","6","Advancements in real-time emotion recognition systems have witnessed a surge in interest, fuelled by their potential applications in diverse fields such as human computer interaction, mental health monitoring, and user experience enhancement. Existing approaches often focus on singular modalities, such as speech analysis or facial expressions. However, a comprehensive understanding of human emotion necessitates the integration of multiple modalities. This research introduces a novel approach, a Multimodal Real-time Emotion Prediction System (MREPS), which combines speech analysis with streaming data processing. The system begins by capturing a continuous stream of audio data, which undergoes Speech-to-Text (STT) conversion using cloud-based services like Google Cloud Speech-to-Text. Simultaneously, facial expression recognition and physiological signal analysis can be integrated for a more comprehensive emotional profile. The real-time nature of the data necessitates the use of a robust streaming architecture, leveraging technologies such as Apache Kafka for data ingestion and Apache Flink for stream processing. A crucial component of the system is the Emotion Prediction API, a microservice housing a machine learning model for emotion classification. This model is trained on diverse datasets to ensure accuracy across various languages, cultures, and individual differences. The real-time API endpoint continuously processes the multimodal input, providing dynamic emotion predictions.","2473-7674","979-8-3503-7024-9","10.1109/ICCCNT61001.2024.10724413","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10724413","Real-time emotion recognition;Multimodal data integration;Speech analysis;Facial expression recognition;Physiological signal analysis;Streaming architecture;Speech-to Text;Cloud-based services;Emotion Prediction API;Microservices;Machine learning model;Apache Kafka;Apache Flink;Docker;Kubernetes;Security measures;Privacy;User feedback;Mental health monitoring;Human-computer interaction;Multimodal emotion prediction system","Human computer interaction;Emotion recognition;Speech analysis;Accuracy;Mental health;Predictive models;Real-time systems;Signal analysis;Monitoring;Speech to text","","","","15","IEEE","4 Nov 2024","","","IEEE","IEEE Conferences"
"Deadline-aware Scheduling in Cloud-Fog-Edge Systems","A. -V. Postoaca; C. Negru; F. Pop","Computer Science and Engineering Department, University Politehnica of Bucharest, Romania; Computer Science and Engineering Department, University Politehnica of Bucharest, Romania; Computer Science and Engineering Department, University Politehnica of Bucharest, Romania","2020 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing (CCGRID)","14 Jul 2020","2020","","","691","698","Nowadays robots are one of the most important technologies and face recognition is crucial for human-robot interaction. Face recognition has direct benefits in the commercial and law enforcement fields and it enables robots to perform a wide variety of roles such as assistance, search and rescue, military and so on. In this paper we propose a Cloud-Edge architecture for robots that enables the use case of face recognition in deadline constrained environments. We formulate a mathematical model for a Data Capsule which represents structured units of data in a time series. We design the components on each layer of the architecture. We propose a deadline aware scheduler in the Fog that acts as a proxy for the processing platforms in the Cloud and we design two face recognition applications, one in the Edge for robots that is implemented with eigenfaces and one in the Cloud for the processing platforms with deep neural networks (DNN). We evaluate the performance of the face recognition applications by running a workload that consists of a well-known labelled image data set. We test the ability of the Fog scheduler to launch jobs on time when strict deadlines are in place and it runs a heavy workload of jobs.","","978-1-7281-6095-5","10.1109/CCGrid49817.2020.00-21","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9139708","Scheduling;Resource Management;Cloud Computing;Fog Computing;Edge Computing;Face recognition","Cloud computing;Face recognition;Robot sensing systems;Data models;Batteries","","4","","17","IEEE","14 Jul 2020","","","IEEE","IEEE Conferences"
"Convergence of Edge Services & Edge Infrastructure","A. Ranjan; F. Guim; M. Chincholkar; P. Ramchandran; R. Mishra; S. Ranganath","Network Edge X Group Intel R & D UK Ltd, Swindon, UK; Network Edge X Group Intel Corporation Virtual, Spain; Network Edge X Group Intel Corporation Portland, OR, USA; Future Networks INGR Co-chair Edge/Optics/AIML Chapters, Santa Clara, CA, USA; Network Edge X Group Intel India Pvt Ltd, Bangalore, India; Network Edge X Group Intel Corporation Portland, OR, USA",2021 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN),"5 Jan 2022","2021","","","96","99","An edge cloud is a highly distributed heterogeneous edge infrastructure that follows principles of disaggregated, cloud-native, fully orchestrated, and provisioned architecture, which can manage the lifecycle of application workloads across different vertical domains. Consolidating multiple workloads, such as vision analytics, AI, industrial control, CDN, etc., enables enterprises to onboard various edge services and applications in an optimal manner. To deliver an autonomous architecture capable of deploying edge native instances as a standard workflow, we face challenges around workload onboarding, optimizing services based on underlying hardware capabilities, interoperability, etc. This paper presents key components required in platforms hosting edge services and shows these gains using Smart Edge Open (SE-O), a deployment-ready open platform, as a reference. We selected video analytics and content delivery network (CDN) as workloads to evaluate the platform performance. Based on workload placement with platform awareness and resource optimization, we were able to reduce the performance degradation by 50% in comparison to a manual density-based optimization at the edge.","","978-1-6654-3983-1","10.1109/NFV-SDN53031.2021.9665021","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9665021","Edge cloud;automation;edge services;edge-native;resource aware scheduling;converged edge;life-cycle management;reference solutions;cloudlet;open source;cloud native;TCO","Degradation;Wireless communication;Visual analytics;Medical services;Network function virtualization;Quality of experience;Software defined networking","","7","","16","IEEE","5 Jan 2022","","","IEEE","IEEE Conferences"
"Exploring Docker Containers for Time-sensitive Applications in Networked Control Systems","M. Sollfrank; F. Loch; B. Vogel-Heuser","Institute of Automation and Information Systems, Technical University of Munich, Munich, Germany; Institute of Automation and Information Systems, Technical University of Munich, Munich, Germany; Institute of Automation and Information Systems, Technical University of Munich, Munich, Germany",2019 IEEE 17th International Conference on Industrial Informatics (INDIN),"30 Jan 2020","2019","1","","1760","1765","The automation pyramid is shifting and will most likely not have a stock in rigid form. The shift is towards Cyber-Physical Systems (CPS) and Cyber-Physical Production Systems (CPPS). Some components in CPPS have to meet real-time requirements. One trend coming along with the change in automation architectures is the virtualization of applications. This enables platform independent development and deployment of secure and isolated applications. Yet, virtualization of applications comes with additional software components and therefore, additional processing effort. For web-services, virtualization is widespread, for embedded systems virtualization development and deployment is not common due time constraints of applications. The use of virtualized applications in embedded systems would have significant benefits like less effort in cross-platform development and cross compiling to state two examples. The method of virtualization in CPPS have to be evaluated concerning time-sensitive applications. In this approach, the time delays occurring through the additional virtualization layer with Docker containers are explored.","2378-363X","978-1-7281-2927-3","10.1109/INDIN41052.2019.8972165","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8972165","Dockers;containerization;virtualization;embedded systems;real-time;time-critical applications;Raspberry PIs","","","4","","21","IEEE","30 Jan 2020","","","IEEE","IEEE Conferences"
"Asynchronous Event Driven Brain Teaser Using Node.js","N. Subbulakshmi; S. A. Begum; R. Venkata Vignesh; R. Chandru","School of Computing, Kalsalingam Academy of Research and Education, Virudhunagar, India; School of Computing, Kalsalingam Academy of Research and Education, Virudhunagar, India; School of Computing, Kalsalingam Academy of Research and Education, Virudhunagar, India; Electronics and Communication Engineering, Sri Ramakrishna Engineering College, India",2024 5th International Conference on Electronics and Sustainable Communication Systems (ICESC),"2 Oct 2024","2024","","","113","118","Node.js has emerged as a powerful platform for building scalable and efficient backend applications. This research study provides a comprehensive overview of Node.js development, encompassing its core concepts, asynchronous programming paradigms, and essential tools. This study analyzes the fundamentals of Node.js, including event-driven architecture, asynchronous operations, and package management using npm. Database integration is explored through popular ORMs like Mongoose and Sequelize for MongoDB and MySQL, respectively and also highlights the significance of authentication and authorization using Passport.js and JWT. To ensure application quality, effective testing and debugging strategies using frameworks such as Mocha, Chai, and Jest are also reviewed. By combining these elements, developers can create robust and high-performance Node.js applications.","2996-5357","979-8-3503-7994-5","10.1109/ICESC60852.2024.10689905","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10689905","Music Recommendation system;Artificial Intelligence;Machine Learning","Databases;Communication systems;Buildings;Games;Debugging;Programming;Real-time systems;Libraries;Recommender systems;Testing","","","","15","IEEE","2 Oct 2024","","","IEEE","IEEE Conferences"
"Optimizing Attack Surface and Configuration Diversity Using Multi-objective Reinforcement Learning","B. Tozer; T. Mazzuchi; S. Sarkani","Department of Engineering Management and Systems Engineering, The George Washington University, Washington, DC; Department of Engineering Management and Systems Engineering, The George Washington University, Washington, DC; Department of Engineering Management and Systems Engineering, The George Washington University, Washington, DC",2015 IEEE 14th International Conference on Machine Learning and Applications (ICMLA),"3 Mar 2016","2015","","","144","149","Minimizing the attack surface of a system and introducing diversity into a system are two effective ways to improve system security. However, determining how to include diversity in a system without increasing the attack surface more than necessary is a difficult problem, requiring knowledge about the system characteristics, operating environment, and available permutations that is generally not available prior to system deployment. We propose viewing a system's components, interfaces, and communication channels as a set of states and actions that can be analyzed using a sequential decision making process, and using a multi-objective reinforcement learning algorithm to learn a set of policies that minimize a system's attack surface and execute those policies to obtain configuration diversity while a system is operating. We describe a methodology for designing a system such that its components and behaviors can be translated into a multi-objective Markov Decision Process, demonstrate the use of multi-objective reinforcement learning to learn a set of optimal policies using three different multi-objective reinforcement learning algorithms in the context of an online file sharing application, and show that our multi-objective temporal difference afterstate algorithm outperforms the alternatives for the example problem.","","978-1-5090-0287-0","10.1109/ICMLA.2015.144","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7424300","multi-objective reinforcement learning;cybersecurity;moving target defense","Learning (artificial intelligence);Algorithm design and analysis;Surface treatment;Security;Markov processes;Computer architecture;Communication channels","","11","","24","IEEE","3 Mar 2016","","","IEEE","IEEE Conferences"
"A Policy-based Framework in Fog enabled Internet of Things for Cooperative ITS","J. L. Hernández-Ramos; G. Baldini; R. Neisse; M. Al-Naday; M. J. Reed","European Commission, Joint Research Centre, Ispra 21027, Italy; European Commission, Joint Research Centre, Ispra 21027, Italy; European Commission, Joint Research Centre, Ispra 21027, Italy; University of Essex, Colchester, CO4 3SQ, UK; University of Essex, Colchester, CO4 3SQ, UK",2019 Global IoT Summit (GIoTS),"22 Jul 2019","2019","","","1","6","In recent years, Fog computing has been proposed to complement well-known Cloud components, in order to realize delay-sensitive and location-aware services. In a future digital landscape with billions of IoT devices interconnected, this emerging paradigm will enable a more decentralized and flexible management by bringing data processing and distribution closer to end devices. One of the main challenges in fog scenarios is the need for automating the orchestration of end devices and components through scalable approaches. In this direction, this work represents an ongoing effort related to the potential application of policy-based approaches to mitigate the issues associated to fog orchestration. In particular, we propose the use of Seckit as a model-based and technology-independent toolkit to ease the management of IoT devices through the use of policy specification. Additionally, we considered a Cooperative Intelligent Transport Systems (C-ITS) use case to give some insights about the advantages of using the proposed approach.","","978-1-7281-2171-0","10.1109/GIOTS.2019.8766360","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8766360","Fog Computing;Policy-based orchestration;C-ITS","Edge computing;Internet of Things;Cloud computing;Computer architecture;Security;Real-time systems;Resource management","","7","","32","IEEE","22 Jul 2019","","","IEEE","IEEE Conferences"
"Formal Models for the Energy-Aware Cloud-Edge Computing Continuum: Analysis and Challenges","Y. S. Patel; P. Townend; P. -O. Östberg","Dept. Computing Science, Umeå University, Sweden; Dept. Computing Science, Umeå University, Sweden; Biti Innovations & Dept. Computing Science, Umeå University, Sweden",2023 IEEE International Conference on Service-Oriented System Engineering (SOSE),"25 Sep 2023","2023","","","48","59","Cloud infrastructures are rapidly evolving from centralised systems to geographically distributed federations of edge devices, fog nodes, and clouds. These federations (often referred to as the Cloud-Edge Continuum) are the foundation upon which most modern digital systems depend, and consume enormous amounts of energy. This consumption is becoming a critical issue as society's energy challenges grow, and is a great concern for power grids which must balance the needs of clouds against other users. The Continuum is highly dynamic, mobile, and complex; new methods to improve energy efficiency must be based on formal scientific models that identify and take into account a huge range of heterogeneous components, interactions, stochastic properties, and (potentially contradictory) service-level agreements and stakeholder objectives. Currently, few formal models of federated Cloud-Edge systems exist - and none adequately represent and integrate energy considerations (e.g. multiple providers, renewable energy sources, pricing, and the need to balance consumption over large-areas with other non-Cloud consumers, etc.). This paper conducts a systematic analysis of current approaches to modelling Cloud, Cloud-Edge, and federated Continuum systems with an emphasis on the integration of energy considerations. We identify key omissions in the literature, and propose an initial high-level architecture and approach to begin addressing these - with the ultimate goal to develop a set of integrated models that include data centres, edge devices, fog nodes, energy providers, software workloads, end users, and stakeholder requirements and objectives. We conclude by highlighting the key research challenges that must be addressed to enable meaningful energy-aware Cloud-Edge Continuum modelling and simulation.","2642-6587","979-8-3503-2239-2","10.1109/SOSE58276.2023.00012","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10254763","Continuum;modelling;green energy;brown energy;cloud computing;edge computing;fog computing","Analytical models;Renewable energy sources;Systematics;Computational modeling;Stochastic processes;Pricing;Computer architecture","","2","","66","IEEE","25 Sep 2023","","","IEEE","IEEE Conferences"
"Blockchain-Based Zero Trust on the Edge","C. Bicer; I. Murturi; P. K. Donta; S. Dustdar","Distributed Systems Group, TU Wien, Vienna, Austria; Distributed Systems Group, TU Wien, Vienna, Austria; Distributed Systems Group, TU Wien, Vienna, Austria; Distributed Systems Group, TU Wien, Vienna, Austria",2023 International Conference on Computational Science and Computational Intelligence (CSCI),"19 Jul 2024","2023","","","1006","1013","Internet of Things (IoT) devices pose significant security challenges due to their heterogeneity (i.e., hardware and software) and vulnerability to extensive attack surfaces. Today's conventional perimeter-based systems use credential- based authentication (e.g., username/password, certificates, etc.) to decide whether an actor can access a network. However, the verification process occurs only at the system's perimeter because most IoT devices lack robust security measures due to their limited hardware and software capabilities, making them highly vulnerable. Therefore, this paper proposes a novel approach based on Zero Trust Architecture (ZTA) extended with blockchain to further enhance security. The blockchain component serves as an immutable database for storing users' requests and is used to verify trustworthiness by analyzing and identifying potentially malicious user activities. We discuss the framework, processes of the approach, and the experiments carried out on a testbed to validate its feasibility and applicability in the smart city context. Lastly, the evaluation focuses on non-functional properties such as performance, scalability, and complexity.","2769-5654","979-8-3503-6151-3","10.1109/CSCI62032.2023.00167","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10590526","Zero Trust;Blockchain;Edge Computing;Edge- Cloud Computing;Security","Smart cities;Databases;Scalability;Computer architecture;Software;Hardware;Blockchains","","2","","13","IEEE","19 Jul 2024","","","IEEE","IEEE Conferences"
"Management, orchestration and workflow automation of Edge Computing services: The TANDEM approach","K. Vasilopoulos; V. Theodorou; T. Bozios; M. -E. Xezonaki; D. Laskaratos",Intracom SA Telecom Solutions; Intracom SA Telecom Solutions; Intracom SA Telecom Solutions; Intracom SA Telecom Solutions; Intracom SA Telecom Solutions,2022 Joint European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit),"8 Jul 2022","2022","","","285","290","The distributed computing paradigm that brings information processing closer to end users and data sources, i.e., Edge Computing, is growing in popularity and adoption in many different domains, such as Cloud Computing, Telecommunications, Internet of Things (IoT) and (distributed) Artificial Intelligence (AI). Despite several efforts towards standardizing Edge Computing services and their ecosystem-driven interactions, especially from the telecom world and open-source communities, automation in deployment, operation and interoperability of Edge Computing services is still in an immature state, making practical Edge/IoT scenarios that involve multiple application services and technologies, complex and cumbersome. This paper presents our approach of an integrated platform aimed to simplify the establishment, management, control and monitoring of edge computing services with a particular focus on the IoT domain. Central in this effort are the ability to (I) make use of existing functions and modules in new edge computing services and (II) to seamlessly integrate service function chain components with remote backend services and with locally available Edge/IoT devices for on-device processing. Characteristic examples of desired functions and local processing tasks, include data stream analytics, event-driven workflows and Machine Learning tasks with an emphasis on video stream analysis for Object Detection and/or tracking, for which we provide a deployment architecture of our approach.","2575-4912","978-1-6654-9871-5","10.1109/EuCNC/6GSummit54941.2022.9815637","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9815637","Edge Computing;Function as a Service (Function-as-a-Service (FaaS));Service Chain Orchestrator;Artificial Intelligence (AI);Internet of Things (IoT)","Image edge detection;Production;Object detection;Computer architecture;Telecommunications;Internet of Things;Time factors","","","","18","IEEE","8 Jul 2022","","","IEEE","IEEE Conferences"
"Implementation of Multi-Channel Message Queues using QUIC","V. Joshi; R. Shirur; P. Shukla","Software Engineer at Innovaccer (Security Team) Bachelor of Engineering in Computer Engineering Institute of Engineering and Technology (Computer Engineering), Devi Ahilya Vishwavidyalaya, Indore, Madhya Pradesh, India, Ujjain, Madhya Pradesh, India; Software Engineer at Red Hat (Openshift Team) Bachelor of Engineering in Computer Engineering Institute of Engineering and Technology (Computer Engineering), Devi Ahilya Vishwavidyalaya, Indore, Madhya Pradesh, India, Indore, Madhya Pradesh, India; Computer Engineering Department, Institute of Engineering and Technology, Devi Ahilya Vishwavidyalaya, Indore, Madhya Pradesh, India","2023 7th International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC)","26 Oct 2023","2023","","","415","423","In modern architecture, message queues are a critical component. They help us establish a buffer to cope with different speeds of data being produced and consumed. While message queues like RabbitMQ have matured and have become a go-to name for message queues, it uses TCP as the transmission control layer and thus suffers from the limitations of TCP. RabbitMQ has implemented a feature called channels, where multiple channels can be created on the same TCP connections. These channels are implemented on the application layer. An improvement to this implementation which replaces TCP with QUIC as the transmission protocol is proposed, because of which multiple channels can correspond to individual streams on the same QUIC Connection. This will eliminate the Head-of-Line blocking problem. In the scope of this research paper, we experiment with this implementation and focus on only this feature, while improvement to the message queue by use of QUIC is not limited to just this. Our experiments show an 88% increment in latency in RabbitMQ when comparing a single-channel connection with 5-channel connections, while with QUIC the increment is only 1.63%.","2768-0673","979-8-3503-4148-5","10.1109/I-SMAC58438.2023.10290152","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10290152","QUIC;Message Queue;Message Broker;QUIC Streams;Advanced Message Queuing Protocol (AMQP);Head-Of-Line (HOL);RabbitMQ","Protocols;Queueing analysis;Streams","","","","16","IEEE","26 Oct 2023","","","IEEE","IEEE Conferences"
"Open-source RANs in Practice: an Over-The-Air Deployment for 5G MEC","J. Haavisto; M. Arif; L. Lovén; T. Leppänen; J. Riekki","Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Centre for Wireless Communications, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland",2019 European Conference on Networks and Communications (EuCNC),"15 Aug 2019","2019","","","495","500","Edge computing that leverages cloud resources to the proximity of user devices is seen as the future infrastructure for distributed applications. However, developing and deploying edge applications, that rely on cellular networks, is burdensome. Such network infrastructures are often based on proprietary components, each with unique programming abstractions and interfaces. To facilitate straightforward deployment of edge applications, we introduce open-source software (OSS) based radio access network (RAN) on over-the-air (OTA) commercial spectrum with Development Operations (DevOps) capabilities. OSS allows software modifications and integrations of the system components, e.g., Evolved Packet Core (EPC) and edge hosts running applications, required for new data pipelines and optimizations not addressed in standardization. Such an OSS infrastructure enables further research and prototyping of novel end-user applications in an environment familiar to software engineers without telecommunications background. We evaluated the presented infrastructure with end-to-end (E2E) OTA testing, resulting in 7.5MB/s throughput and latency of 21ms, which shows that the presented infrastructure provides low latency for edge applications.","2575-4912","978-1-7281-0546-8","10.1109/EuCNC.2019.8801973","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8801973","","","","17","","38","IEEE","15 Aug 2019","","","IEEE","IEEE Conferences"
"Open Source in NExt Generation Meta Operating Systems (NEMO)","R. Rossini; T. -H. Velivassaki; A. Voulkidis; T. Zahariadis; P. Karkazis; D. Skias; E. P. Pages Montanera","Eclipse Foundation Europe GmbH, Research@Eclipse; Synelixis Solutions S.A, Chalkida, Greece; Synelixis Solutions S.A, Chalkida, Greece; University of Athens, Athens, Greece; Maggioli Spa, Santarcangelo di Romagna, Italy; Netcompany Intrasoft SA, Luxembourg, Luxembourg; Eviden, Madrid, Spain",2024 9th International Conference on Smart and Sustainable Technologies (SpliTech),"5 Aug 2024","2024","","","1","5","The open source approach aligns with the values of transparency, collaboration, security, and digital sovereignty that are important to many European countries and institutions. It offers practical advantages, cost savings, and opportunities for innovation that contribute to the region's technological advancement and competitiveness. Open source software also fosters collaboration among developers and encourages innovation. On top of these values, NExt generation Meta Operating systems (NEMO) builds the future of the Artificial Intelli-gence of Things(AIoT)-edge-cloud continuum by introducing an open source, modular and cybersecure meta-operating system (metaOS). In this paper, the open source components of the NEMO metaOS are presented for each functional layer in the NEMO architecture, demonstrating the value of open source for the metaOS sustainability.","","978-953-290-135-1","10.23919/SpliTech61897.2024.10612369","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10612369","","Technological innovation;Operating systems;Collaboration;Wheels;Sustainable development;Computer crime;Task analysis","","","","21","","5 Aug 2024","","","IEEE","IEEE Conferences"
"Techniques Used in Time Series Databases and Their Internals","P. K. Navin Shrinivas; M. Ayaan; A. Rowjee; V. CE; A. Giri","Department of Computer Science, PES University, Bangalore, India; Department of Computer Science, PES University, Bangalore, India; Department of Computer Science, PES University, Bangalore, India; Department of Computer Science, PES University, Bangalore, India; Department of Computer Science, PES University, Bangalore, India",2024 9th International Conference on Big Data Analytics (ICBDA),"30 Jul 2024","2024","","","218","226","As the complexity of modern software systems continues to grow, observability and performance monitoring have become integral aspects of system design and operation. Time series databases are an integral component of the current technology ecosystem. This paper presents a detailed examination of the time series databases, shedding light on the synergies, and challenges, and some examples of commonly used databases. We often see papers that compare databases as a whole, in this paper we aim to compare databases considering their internal implementations which should enable one to select TSDBs better.","","979-8-3503-5296-2","10.1109/ICBDA61153.2024.10607196","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10607196","Observability;Big data;Database management systems;Databases","Filters;Databases;Time series analysis;Microservice architectures;Throughput;Software systems;Time measurement","","","","23","IEEE","30 Jul 2024","","","IEEE","IEEE Conferences"
"Integrated Network and End-host Policy Management for Network Slicing","A. Rabitsch; T. Anagnostopoulos; K. -J. Grinnemo; J. McNamara; A. -M. Bosneag; M. Alexandros Kourtis; G. Xilouris; Ö. Alay; A. Brunstrom","Karlstad University, Karlstad, Sweden; NCSR Demokritos, Athens, Greece; Karlstad University, Karlstad, Sweden; Ericsson, Athlone, Ireland; Ericsson, Athlone, Ireland; NCSR Demokritos, Athens, Greece; NCSR Demokritos, Athens, Greece; University of Oslo, Oslo, Norway; Karlstad University, Karlstad, Sweden",2022 18th International Conference on Network and Service Management (CNSM),"2 Dec 2022","2022","","","226","232","5G mobile networks introduce the concept of network slicing, the functionality of creating virtual networks on top of shared physical infrastructure. Such slices can be tailored to various vertical services. A single User Equipment (UE) may be served by multiple network slice instances simultaneously, which opens up the possibility of dynamically steering traffic in response to the specific needs of individual applications – and as a reaction to events inside the network, e.g., network failures.This paper presents the PoLicy-based Architecture for Network Slicing (PLANS). In this policy framework, the network slice management entity in the 5G core and the UE can cooperatively optimize the usage of the available network slices via policy systems installed both inside the network and on the UE. The PLANS architecture has been implemented and evaluated in a 5G testbed. For two different case studies, we show how such a system can be leveraged to provide optimized services and increased robustness against network failures. First, we consider a drone autopilot scenario, and demonstrate how PLANS can reduce network-slice recovery time by more than 90%. Second, we illustrate for a 360°video streaming scenario how PLANS can help prevent video quality degradation when a network slice becomes unavailable.","2165-963X","978-3-903176-51-5","10.23919/CNSM55787.2022.9964529","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9964529","5G;network slicing;transport services;user equipment;policy system","Degradation;5G mobile communication;Network slicing;Quality of service;Robustness;Quality assessment;Autopilot","","1","","22","","2 Dec 2022","","","IEEE","IEEE Conferences"
"Genetic-based Framework for Joint Latency and Cost Reduction in Edge-Fog Environments","S. Galavani; S. Mahdizadeh; M. Pourashory; A. M. Rasouli; M. Ansari","Department of Computer Engineering, Cyber-Physical Systems Laboratory (CPSLab), Sharif University of Technology, Tehran, Iran; Department of Computer Engineering, Cyber-Physical Systems Laboratory (CPSLab), Sharif University of Technology, Tehran, Iran; Department of Computer Engineering, Cyber-Physical Systems Laboratory (CPSLab), Sharif University of Technology, Tehran, Iran; Department of Computer Engineering, Cyber-Physical Systems Laboratory (CPSLab), Sharif University of Technology, Tehran, Iran; Department of Computer Engineering, Cyber-Physical Systems Laboratory (CPSLab), Sharif University of Technology, Tehran, Iran",2024 5th CPSSI International Symposium on Cyber-Physical Systems (Applications and Theory) (CPSAT),"11 Nov 2024","2024","","","1","8","Reducing latency in the Internet of Things (IoT) remains a critical concern. While cloud computing facilitates communication, it falls short of meeting real-time requirements reliably. Edge and fog computing have emerged as viable solutions by positioning computing nodes closer to end users, offering lower latency and increased processing power. An edge-fog framework comprises various components, including edge and fog nodes, whose strategic placement is crucial as it directly impacts latency and system cost. This paper presents an effective and tunable node placement strategy based on a genetic algorithm to address the optimization problem of deploying edge and fog nodes. The task assignment for this algorithm involves two key components: first, it identifies the nearest node to a given user; second, it assesses the node’s capacity to ensure it has sufficient frequency resources to handle the assigned tasks. The ultimate objective is to minimize latency and cost through optimal node placement. Simulation results demonstrate the proposed framework achieves up to 8.4% latency and 65.2% cost reduction.","2833-7514","979-8-3315-2928-4","10.1109/CPSAT64082.2024.10745429","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10745429","Edge Computing;Fog Computing;Latency;Cost;Genetic","Costs;Heuristic algorithms;Simulation;Refining;Real-time systems;Internet of Things;Reliability;Optimization;Genetic algorithms;Edge computing","","","","23","IEEE","11 Nov 2024","","","IEEE","IEEE Conferences"
"A Performance Modelling Approach for SLA-Aware Resource Recommendation in Cloud Native Network Functions","M. G. Khan; J. Taheri; M. A. Khoshkholghi; A. Kassler; C. Cartwright; M. Darula; S. Deng","Department of R&D and Portfolio Ericsson, Stockholm, Sweden; Department of Computer Science, Karlstad University, Karlstad, Sweden; Department of Computer Science, Karlstad University, Karlstad, Sweden; Department of Computer Science, Karlstad University, Karlstad, Sweden; Department of R&D and Portfolio Ericsson, Stockholm, Sweden; Department of R&D and Portfolio Ericsson, Stockholm, Sweden; College of Computer Science and Technology, Zhejiang University, Hangzhou, China",2020 6th IEEE Conference on Network Softwarization (NetSoft),"12 Aug 2020","2020","","","292","300","Network Function Virtualization (NFV) becomes the primary driver for the evolution of 5G networks, and in recent years, Network Function Cloudification (NFC) proved to be an inevitable part of this evolution. Microservice architecture also becomes the de facto choice for designing a modern Cloud Native Network Function (CNF) due to its ability to decouple components of each CNF into multiple independently manageable microservices. Even though taking advantage of microservice architecture in designing CNFs solves specific problems, this additional granularity makes estimating resource requirements for a Production Environment (PE) a complex task and sometimes leads to an over-provisioned PE. Traditionally, performance engineers dimension each CNF within a Service Function Chain (SFC) in a smaller Performance Testing Environment (PTE) through a series of performance benchmarks. Then, considering the Quality of Service (QoS) constraints of a Service Provider (SP) that are guaranteed in the Service Level Agreement (SLA), they estimate the required resources to set up the PE. In this paper, we used a machine learning approach to model the impact of each microservice's resource configuration (i.e., CPU and memory) on the QoS metrics (i.e. serving throughput and latency) of each SFC in a PTE. Then, considering an SP's Service Level Objectives (SLO), we proposed an algorithm to predict each microservice's resource capacities in a PE. We evaluated the accuracy of our prediction on a prototype of a cloud native 5G Home Subscriber Server (HSS). Our model showed 95%-78% accuracy in a PE that has 2-5 times more computing resources than the PTE.","","978-1-7281-5684-2","10.1109/NetSoft48620.2020.9165482","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9165482","Network Function Virtualization;Cloud Native Network Functions;Machine Learning;Service Level Agreement;Quality of Service","Quality of service;Measurement;Cloud computing;Resource management;Benchmark testing;Virtualization;Computer architecture","","8","","26","IEEE","12 Aug 2020","","","IEEE","IEEE Conferences"
"Container management as emerging workload for operating systems","T. Inagaki; Y. Ueda; M. Ohara","IBM Research, IBM Japan, Ltd., Tokyo; IBM Research, IBM Japan, Ltd., Tokyo; IBM Research, IBM Japan, Ltd., Tokyo",2016 IEEE International Symposium on Workload Characterization (IISWC),"10 Oct 2016","2016","","","1","10","Operating-system-level virtualization is becoming increasingly important for server applications since it provides containers as a foundation of the emerging microservice architecture, which enables agile application development, deployment, and operation - the essential characteristics in modern cloud-based services. Agility in the microservice architecture heavily depends on fast management operations for containers, such as create, start, and stop. Since containers rely on administrative kernel services provided by the host operating system, the microservice architecture can be considered as a new workload for an operating system as it stresses those services differently from traditional workloads. We studied the scalability of container management operations for Docker, one of the most popular container management systems, from two aspects: core and container scalability, which indicate how much the number of processor cores and number of containers affect container management performance, respectively. We propose a hierarchical analysis approach to identify scalability bottlenecks where we analyze multiple layers of a software stack from the top to bottom layer. Our analysis reveals that core scalability has bottlenecks at a virtualization layer for storage and network devices, and that container scalability has bottlenecks at various components that inquire mount points. While those bottlenecks exist in a daemon process of Docker, the root causes are a couple of interfaces of the underlying kernel. This implies the operating system has room for improvement to more efficiently host emerging microservice applications.","","978-1-5090-3896-1","10.1109/IISWC.2016.7581267","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7581267","","Containers;Scalability;Buildings;Virtualization;Computer architecture;Kernel","","7","2","30","IEEE","10 Oct 2016","","","IEEE","IEEE Conferences"
"IntelligentMonitor: Empowering DevOps Environments with Advanced Monitoring and Observability","P. Thantharate",NA,2023 International Conference on Information Technology (ICIT),"29 Aug 2023","2023","","","800","805","In the dynamic field of software development, De-vOps has become a critical tool for enhancing collaboration, streamlining processes, and accelerating delivery. However, monitoring and observability within DevOps environments pose significant challenges, often leading to delayed issue detection, inefficient troubleshooting, and compromised service quality. These issues stem from DevOps environments' complex and ever-changing nature, where traditional monitoring tools often fall short, creating blind spots that can conceal performance issues or system failures. This research addresses these challenges by proposing an innovative approach to improve monitoring and observability in DevOps environments. Our solution, Intelligent-Monitor, leverages realtime data collection, intelligent analytics, and automated anomaly detection powered by advanced tech-nologies such as machine learning and artificial intelligence. The experimental results demonstrate that IntelligentMonitor effectively manages data overload, reduces alert fatigue, and improves system visibility, thereby enhancing performance and reliability. For instance, the average CPU usage across all components showed a decrease of 9.10%, indicating improved CPU efficiency. Similarly, memory utilization and network traffic showed an average increase of 7.33% and 0.49%, respectively, suggesting more efficient use of resources. By providing deep insights into system performance and facilitating rapid issue resolution, this research contributes to the DevOps community by offering a comprehensive solution to one of its most pressing challenges. This fosters more efficient, reliable, and resilient software development and delivery processes.","2831-3399","979-8-3503-2006-0","10.1109/ICIT58056.2023.10226123","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10226123","DevOps Monitoring;Intelligent Monitor;Observability in Distributed Systems;Intelligent Analytics;Anomaly Detection;Performance and Reliability Improvements","System performance;Memory management;Telecommunication traffic;Pressing;Machine learning;Software;Software reliability","","11","","7","IEEE","29 Aug 2023","","","IEEE","IEEE Conferences"
"A Secure Connectivity Model for Internet of Things Analytics Service Delivery","H. Al-Aqrabi; R. Hill","Centre for Industrial Analytics School of Computing and Engineering University of Huddersfield, UK; Centre for Industrial Analytics School of Computing and Engineering University of Huddersfield, UK","2018 IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted Computing, Scalable Computing & Communications, Cloud & Big Data Computing, Internet of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)","6 Dec 2018","2018","","","9","16","Wide scale interest and adoption of Internet of Things (IoT) technologies is fuelling innovation in the way individuals and even machines can interact to exchange knowledge. One area of particular interest is that of analytics. Ever-decreasing form factor hardware is enabling computation and data storage to be embedded into many different devices. The combination of network connectivity and emerging distributed models of service orchestration is allowing the creation of new ways of measuring, monitoring and analysing performance. Using an approach inspired by the NIST seven layer model of cloud computing, we propose a model of connectivity that enables analytics services to be consumed across individual system components that are distributed, such as those found in the IoT and Industrial IoT (IIoT) domains.","","978-1-5386-9380-3","10.1109/SmartWorld.2018.00038","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8560016","cloud computing, distributed systems, security, authentication, trust, multiparty, Internet of Things","","","5","","23","IEEE","6 Dec 2018","","","IEEE","IEEE Conferences"
"Securing Kafka with Encryption-at-Rest","C. Giblin; S. Rooney; P. Vetsch; A. Preston",IBM Research – Zurich; IBM Research – Zurich; IBM Research – Zurich; IBM Cloud,2021 IEEE International Conference on Big Data (Big Data),"13 Jan 2022","2021","","","5378","5387","Over the last decade Kafka has become a key component of Big Data processing pipelines. Kafka is increasingly used as a store of data, not just as a means of transferring it from one location to another. For cloud providers and enterprises this means that Kafka must conform to the same security and compliance requirements as conventional data storage systems such as relational databases. One important requirement is encryption-at-rest which is not currently supported by Kafka. We present an analysis of different ways to implement encryption in Kafka and then describe the first c omplete s ystem f or implementing encryption-at-rest at the granularity of a Kafka topic at scale. We demonstrate the challenges in implementing encryption policy, key distribution, key rotation and data re-encryption in Kafka, using our working implementation for illustration.","","978-1-6654-3902-2","10.1109/BigData52589.2021.9671388","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9671388","middleware;encryption;compliance;Kafka;publish-subscribe;Big Data","Conferences;Buffer storage;Pipelines;Relational databases;Big Data;Encryption;Standards","","4","","22","IEEE","13 Jan 2022","","","IEEE","IEEE Conferences"
"Deep Autoencoder Design for RF Anomaly Detection in 5G O-RAN Near-RT RIC via xApps","O. T. Başaran; M. Başaran; D. Turan; H. G. Bayrak; Y. S. Sandal","5G Research Group Kartal R&D Center, Siemens San. Tic. A.S., Technology & Innovation (TI) Team, Research in Next-Generation Communications (RNC), Istanbul, Turkey; 5G Research Group Kartal R&D Center, Siemens San. Tic. A.S., Technology & Innovation (TI) Team, Research in Next-Generation Communications (RNC), Istanbul, Turkey; 5G Research Group Kartal R&D Center, Siemens San. Tic. A.S., Technology & Innovation (TI) Team, Research in Next-Generation Communications (RNC), Istanbul, Turkey; 5G Research Group Kartal R&D Center, Siemens San. Tic. A.S., Technology & Innovation (TI) Team, Research in Next-Generation Communications (RNC), Istanbul, Turkey; 5G Research Group Kartal R&D Center, Siemens San. Tic. A.S., Technology & Innovation (TI) Team, Research in Next-Generation Communications (RNC), Istanbul, Turkey",2023 IEEE International Conference on Communications Workshops (ICC Workshops),"23 Oct 2023","2023","","","549","555","The agile and rapid management of the operations that take place in 5G radio access networks (RAN) including the monitoring of RF fluctuations, throughput suffering, and handover issues due to mobility on the user equipment (UE) side is becoming critical. Therefore, it needs to be managed by a near real-time RAN intelligent controller (RIC) in the context of O-RAN concept where O-RAN aims at the democratization of 5G RAN components to provide flexibility and compatibility to the vendors in the 5G market. Accordingly, in this paper, we present a deep learning (DL)-based autoencoder design for detecting the RF anomalies at the UE side through the extended applications (xApps) running on 5G near real-time RIC, thus, providing better and seamless service continuity. Simulation results demonstrate that the proposed autoencoder is able to achieve better performance on RF anomaly detection compared to the existing models such as random forest and isolation forest. Compared to the isolation forest algorithm, the deep-autoencoder model gives 10% better results in terms of overall accuracy score.","2694-2941","979-8-3503-3307-7","10.1109/ICCWorkshops57953.2023.10283501","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10283501","","Radio frequency;Deep learning;5G mobile communication;Conferences;Forestry;Semisupervised learning;Handover","","3","","27","IEEE","23 Oct 2023","","","IEEE","IEEE Conferences"
"FLOW: A Scalable Multi-Model Federated Learning Framework on the Wheels","Y. Yao; N. Ammar; W. Shi","Dept. of Computer & Information Sciences, University of Delaware, Newark, DE 19716, USA; InfoTech Labs, Toyota Motor North America, Mountain View, California, USA; Dept. of Computer & Information Sciences, University of Delaware, Newark, DE 19716, USA","2023 IEEE International Conference on Mobility, Operations, Services and Technologies (MOST)","14 Aug 2023","2023","","","11","22","The highly mobility nature of connected vehicles poses significant challenges in the research area of federated learning, and to the best of our knowledge, the existing federated learning approaches do not consider the problem of training multi-model for constantly on-the-wheel moving vehicles. To bridge this gap, we design and implement FLOW, a scalable multi-model federated learning framework for highly mobile connected vehicles, which includes three essential components: (1) a dynamic client vehicle selection algorithm to deal with problems such as signal loss or weak signals, which may prevent some vehicles from participating in the training cluster; (2) a well-designed model allocation algorithm to select appropriate vehicle computing units for specific model training tasks; (3) geofencing not independent and identically distributed (non-i.i.d) data training, which can make models more robust and generalizable to different geographic driving area. Finally, we compare the proposed framework with centralized training and explore the performance of four aggregation protocols. The experiment results demonstrated the effectiveness of FLOW for the real-world applications.","","979-8-3503-1995-8","10.1109/MOST57249.2023.00010","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10210780","Multi-model federated learning;connected vehicle;client selection;model scheduling;geofencing","Training;Connected vehicles;Federated learning;Heuristic algorithms;Computational modeling;Clustering algorithms;Wheels","","","","54","IEEE","14 Aug 2023","","","IEEE","IEEE Conferences"
"A Systematic Review on a Multi-tenant Database Management System in Cloud Computing","M. Battula","DSSE, Sony, San Diego, CA",2024 International Conference on Cognitive Robotics and Intelligent Systems (ICC - ROBINS),"21 May 2024","2024","","","890","897","As Cloud Computing (CC) continues to revolutionize, the demand for efficient and secure data management solutions has never been greater. Multi-tenant database Management Systems (MTDBMS) in the cloud offer the scalability and cost-effectiveness the organizations demand, but introduce complex security challenges that must be addressed to ensure the discretion, reliability, and accessibility of sensitive data. Hence, this survey scrutinizes 25 literature works focussed on MTDBMS in the context of CC and brings to light the various limitations of the existing methodologies. The primary objective of this survey is to investigate the various facets of MTDBMS, emphasizing the unique requirements and challenges posed by multi-tenancy (MTY) in the cloud. Further, the key architectural components of such systems are explored and highlight the importance of securing tenant data. Furthermore, this survey delves into the various security threats and vulnerabilities that MTDBMS may face in the cloud environment. This survey proves to be a valuable resource for researchers seeking comprehensive insights into the complexities of MTDBMS in CC. It offers a thorough assessment of the methodologies used, existing challenges, and future work to provide valuable insights into potential solutions, all contributing to the advancement of secure and efficient MTDBMS in cloud environments.","","979-8-3503-7274-8","10.1109/ICC-ROBINS60238.2024.10533959","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10533959","Cloud computing;Multi-Tenant;Securing tenant data;Database Management;Cloud environments","Surveys;Cloud computing;Systematics;Reviews;Scalability;Database systems;Threat assessment","","","","25","IEEE","21 May 2024","","","IEEE","IEEE Conferences"
"Research on High-Performance Framework of Big Data Acquisition, Storage and Application for Warfare Simulation","R. Li; Y. Cao; Z. Li; Y. Tang; Y. Liu; J. Liu","State Key Laboratory of Intelligent Game, National Defense University, Beijing, China; State Key Laboratory of Intelligent Game, National Defense University, Beijing, China; State Key Laboratory of Intelligent Game, National Defense University, Beijing, China; State Key Laboratory of Intelligent Game, National Defense University, Beijing, China; State Key Laboratory of Intelligent Game, National Defense University, Beijing, China; State Key Laboratory of Intelligent Game, National Defense University, Beijing, China","2024 IEEE 4th International Conference on Electronic Technology, Communication and Information (ICETCI)","18 Jul 2024","2024","","","495","503","Against some ""pain points"" in data access of traditional warfare simulation, a new framework of big data collection, storage and application for warfare simulation was designed based on the data acquisition, storage and application methods of typical warfare simulation systems at home and abroad. The new framework uses bus-based data acquisition as the data acquisition source, uses a distributed big data platform as the underlying storage foundation, uses a high-performance relational in-memory database, and preprocesses the output data to generate a result data set, which is stored in the in-memory database. The streamlined result set provides high-speed service. The system consists of three large modules, namely the acquisition subsystem, the storage management subsystem, and the high-performance service subsystem. Multiple rounds of practical applications have shown that the new framework provides reliable data access support for other components within the whole system.","","979-8-3503-6164-3","10.1109/ICETCI61221.2024.10594023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10594023","Warfare simulation;Data acquisition;Big data;In-memory Database;Result data Set;HF-ASA","Electronic warfare;Pain;Data acquisition;Storage management;Distributed databases;Big Data;Reliability","","","","16","IEEE","18 Jul 2024","","","IEEE","IEEE Conferences"
"Evaluation of User Plane Function Implementations in Real-World 5G Networks","S. Christakis; T. Tsourdinis; N. Makris; T. Korakis; S. Fdida","Dept. of Electrical and Computer Engineering, University of Thessaly, Greece; Dept. of Electrical and Computer Engineering, University of Thessaly, Greece; Dept. of Electrical and Computer Engineering, University of Thessaly, Greece; Dept. of Electrical and Computer Engineering, University of Thessaly, Greece; Laboratoire LiP6/CNRS, Sorbonne University, Paris, France",IEEE INFOCOM 2024 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS),"13 Aug 2024","2024","","","1","6","5G technology, the latest advancement in mobile networks, promises increased data speeds, reduced latency, and enhanced device connectivity. Within the core network lies the User Plane Function (UPF), a critical component ensuring seamless data transfer to any data network, playing a major role in breaking out the traffic from the telecommunication network. The immense data forwarding demands on the UPF have sparked extensive research and technological innovations. This paper focuses on a system evaluation of different UPF implementations in a real-world 5G environment. Specifically, we deploy and test four distinct 5G networks based on SPGWU-UPF, P4-Switch-UPF, VPP-UPF, and SmartNIC-P4-UPF using the OpenAirInterface 5G framework. Through rigorous testing, we found that while the P4-UPFs outperformed in terms of throughput and packet loss, the VPP-UPF, a DPDK solution, showed promise in latency performance and cost-effectiveness, despite its higher CPU consumption. This study offers valuable insights into the operational challenges and benefits of various UPF implementations in real-world scenarios.","2833-0587","979-8-3503-8447-5","10.1109/INFOCOMWKSHPS61880.2024.10620666","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10620666","5G;Edge Computing;Core Network;UPF;DPDK;P4;VPP","Technological innovation;Costs;5G mobile communication;Conferences;Packet loss;Throughput;Data transfer","","","","17","IEEE","13 Aug 2024","","","IEEE","IEEE Conferences"
"A Method and Platform for Security Advisory Dissemination Leveraging Web3 Technologies","J. L. Sommer; M. M. Lund; N. Cibin; M. Albano","Department of Computer Science, Aalborg University, Aalborg, Denmark; Department of Computer Science, Aalborg University, Aalborg, Denmark; Department of Computer Science, Aalborg University, Aalborg, Denmark; Department of Computer Science, Aalborg University, Aalborg, Denmark",2023 IEEE International Conference on Blockchain (Blockchain),"30 Jan 2024","2023","","","265","272","The frequency of software supply chain attacks has reached unprecedented levels, primarily due to the increasing reliance on huge numbers of software and hardware dependencies, and the inherent vulnerabilities they harbor. Currently, vendors providing these software and hardware components share security advisories to centralized databases or post them on proprietary websites, which security engineers have to search manually to find vulnerabilities relevant for their systems. Furthermore, the security advisories often do not follow a standard machine-readable format, which results in the engineers having to manually analyze the documents. In this paper, SENTINEL, a novel solution for automating dissemination and discovery of security advisories leveraging Web3 technologies, is presented. In particular, the Ethereum blockchain is used by vendors to notify asset owners of novel vulnerabilities in their systems in a reliable and accountable manner. Evaluation tests conducted on the Ethereum Sepolia Testnet confirm that our proposal is a functional and functioning solution for securely disseminating and discovering security advisories utilizing a fully decentralized infrastructure. SENTINEL’s source code is released as open source software on GitHub.","2834-9946","979-8-3503-1929-3","10.1109/Blockchain60715.2023.00050","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10411464","Blockchain;Distributed Storage;Security Advisories;SBOM;CSAF","Source coding;Supply chains;Hardware;Blockchains;Software reliability;Security;Standards","","","","32","IEEE","30 Jan 2024","","","IEEE","IEEE Conferences"
"Cloud-Based XAI Services for Assessing Open Repository Models Under Adversarial Attacks","Z. Wang; Y. Liu","Department of Electrical and Computer Engineering, Concordia University, Montréal, Québec, Canada; Department of Electrical and Computer Engineering, Concordia University, Montréal, Québec, Canada",2024 IEEE International Conference on Software Services Engineering (SSE),"18 Sep 2024","2024","","","141","152","The opacity of AI models necessitates both validation and evaluation before their integration into services. To investigate these models, explainable AI (XAI) employs methods that elucidate the relationship between input features and output predictions. The operations of XAI extend beyond the execution of a single algorithm, involving a series of activities that include preprocessing data, adjusting XAI to align with model parameters, invoking the model to generate predictions, and summarizing the XAI results. Adversarial attacks are well-known threats that aim to mislead AI models. The assessment complexity, especially for XAI, increases when open-source AI models are subject to adversarial attacks due to various combinations. To automate the numerous entities and tasks involved in XAI - based assessments, we propose a cloud-based service framework that encapsulates computing components as microser-vices and organizes assessment tasks into pipelines. The current XAI tools are not inherently service-oriented. This framework also integrates open XAI tool libraries as part of the pipeline composition. We demonstrate the application of XAI services for assessing five quality attributes of AI models: (1) computational cost, (2) performance, (3) robustness, (4) explanation deviation, and (5) explanation resilience across computer vision and tabular cases. The service framework generates aggregated analysis that showcases the quality attributes for more than a hundred combination scenarios.","","979-8-3503-6851-2","10.1109/SSE62657.2024.00031","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10664210","Software Engineering;Artificial Intelligence;Explainable AI;Adversarial Attacks;Cloud Services;Evaluation Frameworks","Measurement;Computational modeling;Perturbation methods;Pipelines;Predictive models;Software;Robustness","","","","66","IEEE","18 Sep 2024","","","IEEE","IEEE Conferences"
"Choreographies in Microservice-Based Automation Architectures : Next Level of Flexibility for Industrial Cyber-Physical Systems","A. Stutz; A. Fay; M. Barth; M. Maurmaier","Technology & Innovation, Siemens AG Digital Industries, Karlsruhe, Germany; Chair of Automation Technology, Helmut-Schmidt-University, Hamburg, Germany; Chair of Mechatronic Systems, University of applied Science Pforzheim, Germany; Technology & Innovation, Siemens AG Digital Industries, Karlsruhe, Germany",2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS),"4 Dec 2020","2020","1","","411","416","Modularization is seen as one core building block for highly flexible production systems to ensure profitability in process as well as manufacturing industries in their increasing volatile markets. Production modules encapsulate local control algorithms and thus, form Industrial Cyber-Physical Systems (ICPS). They, as pre-automated modular units fulfill the characteristics of micro-service architectures. These architectures use orchestration and choreographies as complementary association methods. In this contribution, the applicability and the advantages of service choreographies are analyzed from a more practical perspective. It is shown that choreographies have their strengths in the decentral association of (sub-)elementary services to new and independent automation functions. Thus, the services of production modules can be combined more flexibly through decentralized control. Two simplified examples and a first experiment closes the practical insight to choreographies in industrial automation systems.","","978-1-7281-6389-5","10.1109/ICPS48405.2020.9274719","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274719","Micro-service automation architecture;service association;service choreography;modular production","Automation;Production;Industries;Standards;Service-oriented architecture;Technological innovation;Systems architecture","","6","","29","IEEE","4 Dec 2020","","","IEEE","IEEE Conferences"
"Towards Latency Sensitive Cloud Native Applications: A Performance Study on AWS","I. Pelle; J. Czentye; J. Dóka; B. Sonkoly",MTA-BME Network Softwarization Research Group; Budapest University of Technology and Economics; Budapest University of Technology and Economics; Budapest University of Technology and Economics,2019 IEEE 12th International Conference on Cloud Computing (CLOUD),"29 Aug 2019","2019","","","272","280","Microservices, serverless architectures, cloud native programming are novel paradigms and techniques which could significantly reduce the burden on both developers and operators of future services. Several types of applications fit in well with the new concepts easing the life of different stakeholders while enabling cloud-grade service deployments. However, latency sensitive applications with strict delay constraints between different components pose additional challenges on the platforms. In order to gain benefit from recent cloud technologies for latency sensitive applications as well, a comprehensive performance analysis of available platforms and relevant components is a crucial first step. In this paper, we address one of the most widely used and versatile cloud platforms, namely Amazon Web Services (AWS), and reveal the delay characteristics of key components and services which impact the overall performance of latency sensitive applications. Our contribution is threefold. First, we define a detailed measurement methodology for CaaS/FaaS (Container/Function as a Service) platforms, specifically for AWS. Second, we provide a comprehensive analysis of AWS components focusing on delay characteristics. Third, we attempt to adjust a drone control application to the platform and investigate the performance on today's system.","2159-6190","978-1-7281-2705-7","10.1109/CLOUD.2019.00054","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8814512","AWS;Cloud computing;Latency sensitive applications;Performance measurement;Function as a Service","","","48","","10","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"Towards an Efficient Service Provisioning in Cloud of Things (CoT)","E. El Rachkidi; N. Agoulmine; D. Belaid; N. Chendeb","Télécom SudParis, Université Paris Saclay, Evry, France; COSMO, Université Paris Saclay, Evry, France; SAMOVAR, Université Paris Saclay, Evry, France; Faculty of Engineering, Lebanese University, Lebanon",2016 IEEE Global Communications Conference (GLOBECOM),"6 Feb 2017","2016","","","1","6","The Cloud offers virtually unlimited resources and the ability to scale up or down applications as needed on the fly. Hence, the Cloud emerged as a suitable solution for large-scale IoT applications to cope with the rapidly increasing devices and data volume. Furthermore, IoT broadened the scope of the Cloud to the real world and enabled new service models such as the Sensing as a Service model. The convergence of both technologies stimulated innovations in both fields, we refer to this convergence as the Cloud of Things. The Cloud of Things enables users to request a complex IoT service (IoT application composed of several interconnected micro services) and deploy it seamlessly. However, deploying a complex IoT service in the Cloud of Things infrastructure is a difficult process due to the different types of physical nodes (Cloud data centers, IoT devices, gateways, etc.) and multiple architectures to collect and process data. Furthermore, network usage largely depends on the placement of different services across the network. In this paper, we present an efficient provisioning model of IoT services formulated as a Mixed Integer Problem. The objective is to minimize the cost of the deployment of IoT services in Cloud of Things infrastructure, through optimizing resources usage across physical nodes and bandwidth consumption over the network.","","978-1-5090-1328-9","10.1109/GLOCOM.2016.7842340","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7842340","","","","3","","13","IEEE","6 Feb 2017","","","IEEE","IEEE Conferences"
"First Steps in the Development of a LoRaWAN Testbench","F. Torres; J. Soriano; G. Riva","Digital Communications Lab (LCD), National University of Cordoba; Digital Communications Lab (LCD), National University of Cordoba; GInTEA, National Technological University, Cordoba Regional Faculty",2018 Ninth Argentine Symposium and Conference on Embedded Systems (CASE),"22 Nov 2018","2018","","","7","12","The development of Low Power Wide Area Networks (LPWANs) based on novel communication standards such as LoRaWAN has increased exponentially to provide network infrastructure to the large number of Internet of Things (IoT) solutions that are currently being developed. However, the first difficulty that developers face in the implementation and deployment of a LoRa network is the appropriate selection not only of the hardware but also the network server software. Likewise, it is essential to have a testbench to evaluate and configure the network optimally before its actual deployment. This is due to the large number of parameters that must be configured for proper operation of the network, which are dependent on the application scenario. In this paper, we will introduce the main features of LoRaWAN wireless communication technology, a comparison of the main features of hardware and network server software currently available. Finally, we show the first implementation and results of a LoRaWAN testbench and the difficulties detected.","","978-987-46297-4-6","10.23919/SASE-CASE.2018.8542160","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8542160","LPWAN;LoRaWAN;IoT;Testbench;LoRa Server","Logic gates;Network servers;Monitoring;Uplink;Downlink;Protocols;Software","","2","","15","","22 Nov 2018","","","IEEE","IEEE Conferences"
"Comparative Analysis of Database Access Method Performance on Containerized Application","B. H. V. Wahono; Asfihani; U. L. Yuhana","Department of Informatics, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia; Department of Informatics, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia; Department of Informatics, Institut Teknologi Sepuluh Nopember, Surabaya, Indonesia",2024 IEEE International Conference on Artificial Intelligence and Mechatronics Systems (AIMS),"10 May 2024","2024","","","1","6","In the rapidly evolving landscape of modern software development, containerization has emerged as a pivotal technology, offering scalability, portability, and efficiency in deploying applications across diverse computing environments. As organizations increasingly adopt containerized architectures, the performance of database access methods becomes a critical consideration for ensuring optimal application functionality and responsiveness. This research aims to comprehensively analyze various database access methods within containerized applications, focusing on Direct Access, Object-Relational Mapping (ORM), Representational State Transfer (REST) API, and GraphQL method. By conducting a systematic performance analysis, we aim to provide valuable insights into the trade-offs associated with each method, aiding developers, architects, and decision-makers in making informed choices that align with the specific requirements of their containerized applications. Our study found that the Direct Access method is faster than other methods (15x faster than GraphQL, 5.5x faster than ORM, and 2.14x faster than RestAPI) and best for precise control and high performance in simple queries.","","979-8-3503-5052-4","10.1109/AIMS61812.2024.10513113","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10513113","Database Access;ORM;REST API;GraphQL","Systematics;Mechatronics;Scalability;Standards organizations;Distributed databases;Focusing;Organizations","","","","15","IEEE","10 May 2024","","","IEEE","IEEE Conferences"
"Mercury: Anomaly Detection using Machine Learning","A. Tunçay; O. H. Güngör","Koçfinans, Istanbul, Türkiye; Koçfinans, Istanbul, Türkiye",2022 7th International Conference on Computer Science and Engineering (UBMK),"28 Oct 2022","2022","","","305","310","Koçfinans is a financing company that provides their customers loans for both new and used vehicles via a web application called ROTA. Under Digital Transformation, Koçfinans rebuilt the ROTA application using microservice architecture and DevOps practices. As a result, the need for automated monitoring of the application and server ecosystem has emerged. In this study, we would like to present you the application that has been developed for automated monitoring of ROTA application, namely Mercury, and how the machine learning models have been used in our use case.","2521-1641","978-1-6654-7010-0","10.1109/UBMK55850.2022.9919570","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9919570","Anomaly Detection;Machine Learning;Deep Learning","Integrated circuit modeling;Unified modeling language;Markov processes;Machine learning;Art;Support vector machines;Principal component analysis","","","","","IEEE","28 Oct 2022","","","IEEE","IEEE Conferences"
"Virtualizing the Edge: Needs, Opportunities and Trends","E. Marin-Tordera; X. Masip-Bruin; B. Otero; E. Rodriguez","Advanced Network Architectures Lab (CRAAX), Universitat Politècnica de Catalunya (UPC), Vilanova i la Geltrú, Spain; Universitat Politecnica de Catalunya, Barcelona, Catalunya, ES; Universitat Politècnica de Catalunya (UPC), Barcelona, Spain; Universitat Politècnica de Catalunya (UPC), Barcelona, Spain",2018 IEEE 6th International Conference on Future Internet of Things and Cloud (FiCloud),"11 Sep 2018","2018","","","385","392","The recent advances in fog and edge computing are driving the need to identify what a component at the edge should be. Recognized the wide heterogeneity at the edge, it is with no doubt that different hardware characteristics may be found at the edge devices, thus fueling the need to identify what is the set of resources a potential fog node must have. However, this question is not so easy to answer since some discussions are yet active on what a fog node should be. Beyond the insights about the fog node concept, it looks reasonable and certainly mandatory to overcome the envisioned diversity and heterogeneity at the edge by adopting virtualization as a key strategy to manage resources at the edge. Consequently, in this paper, we analyze possible virtualization strategies, revisit what has been done in cloud computing and discuss potential trends to be deployed in fog computing aligned to the main challenges a tentative fog node is supposed to take over.","","978-1-5386-7503-8","10.1109/FiCloud.2018.00062","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8458039","cloud computing;fog computing;virtualization","Virtualization;Cloud computing;Hardware;Edge computing;Big Data;Market research;Companies","","","","37","IEEE","11 Sep 2018","","","IEEE","IEEE Conferences"
"DSLs for Model Driven Development of Secure Interoperable Automation Systems with EdgeX Foundry","J. John; A. Ghosal; T. Margaria; D. Pesch","CONFIRM, SFI Research Centre for Smart Manufacturing, Ireland; CONFIRM, SFI Research Centre for Smart Manufacturing, Ireland; CONFIRM, SFI Research Centre for Smart Manufacturing, Ireland; CONFIRM, SFI Research Centre for Smart Manufacturing, Ireland",2021 Forum on specification & Design Languages (FDL),"26 Oct 2021","2021","","","1","8","Automation systems involve a range of cyber-physical system components such as sensors, actuators, control equipment, machines, robots, AGVs, etc. Seamless interoperability among these entities is a significant challenge. A well-designed Industrial Internet of Things (IIoT) platform at the network edge can offer several services by acting as a transformation engine between these field devices and various enterprise applications. We consider the EdgeX Foundry platform as such an IIoT middleware, discuss how EdgeX can provide ready-to-use integration of IoT devices, and show how we connect it with a low-code XMDD coordination layer that interfaces with EdgeX microservices through a Native DSL mechanism. We consider this technology landscape from the point of view of a building automation system example that supports high reconfigurability and security. We show how to produce all the essential elements of a complex Web based application to control the considered building systems. We demonstrate various features of the application's data and process models, how DSLs play a role at various levels, and how to add security capabilities that go beyond the cross-layer concerns and mechanisms offered by EdgeX. To this end, we introduce a declarative policy layer to be implemented using the open source ADD-Lib in form of an additional DSL for Attribute Based Encryption, with the aim of further enriching the capabilities around the EdgeX platform.","1636-9874","978-1-6654-1825-6","10.1109/FDL53530.2021.9568378","Science Foundation Ireland (SFI)(grant numbers:16/RC/3918); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9568378","","Service robots;Biological system modeling;Foundries;Sensor systems;Sensors;DSL;Security","","13","","32","IEEE","26 Oct 2021","","","IEEE","IEEE Conferences"
"From the Edge to the Cloud: Enabling Reliable IoT Applications","C. Martín; D. Garrido; M. Díaz; B. Rubio","Department of Languages and Computer Science, University of Malaga, Malaga, Spain; Department of Languages and Computer Science, University of Málaga, Málaga, Spain; Department of Languages and Computer Science, University of Malaga, Malaga, Spain; Department of Languages and Computer Science, University of Malaga, Malaga, Spain",2019 7th International Conference on Future Internet of Things and Cloud (FiCloud),"30 Jan 2020","2019","","","17","22","This paper presents a reliable architecture for the IoT considering multiple levels: edge, fog and cloud. This architecture can help to reduce latency and improve resiliency of IoT applications. The platform is based on a set of containerised components replicated at different levels. Fault tolerance mechanisms are provided by means of replication, the Apache Kafka framework and shadow devices. Apache Kafka is used to distribute messages along the multiple levels. Shadow devices include device states, and they can be used to avoid device interruptions using physical replication and state restoration. The architecture is also protocol-agnostic, allowing the use of different adaptors for the most common IoT protocols. A mission-critical use case is presented where this architecture can be applied. Finally, an evaluation has been carried out in order to test the feasibility of the fog infrastructure.","","978-1-7281-2888-7","10.1109/FiCloud.2019.00011","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8972812","Internet of Things, Fault Tolerance, Container Virtualisation, Edge, Fog, Apache Kafka","","","4","","13","IEEE","30 Jan 2020","","","IEEE","IEEE Conferences"
"Price Optimisation and Management","M. T. M. Shafkhan; P. R. S. S. Jayasundara; K. A. D. R. L. Kariyapperuma; H. P. S. Lakruwan; L. Rupasinghe","Dept. of Computer and Software Eng, Sri Lanka Institute of Information Technology, Malabe, Sri Lanka; Dept. of Computer and Software Eng, Sri Lanka Institute of Information Technology, Malabe, Sri Lanka; Dept. of Computer and Software Eng, Sri Lanka Institute of Information Technology, Malabe, Sri Lanka; Dept. of Computer and Software Eng, Sri Lanka Institute of Information Technology, Malabe, Sri Lanka; Dept. of Computer Systems Engineering, Sri Lanka Institute of Information Technology, Malabe, Sri Lanka",2021 3rd International Conference on Advancements in Computing (ICAC),"11 Jan 2022","2021","","","419","424","One of the most crucial decisions a company makes is its pricing strategy. When it comes to pricing, a company must consider the present, as well as the future and the past pricing. It enables a company to make sound judgments. In the process of marketing products, price is the only factor that creates income; everything else is a cost. Guessing at product pricing is a little like throwing darts blindfolded; some will hit something, but it probably will not be the dartboard. Large-scale enterprises throughout the world still depend on Excel sheets with numerous manpower or expensive pricing solutions. Expensive pricing systems are difficult to implement for Medium and Large Sized Enterprises in countries like Sri Lanka. Our goal in this research is to propose an affordable, efficient, easy-to-use and secure solution which can be implemented in Medium and Large Sized Enterprises in Sri Lanka. Manufacturing cost, shipping cost, competitor analysis, customer behaviour are taken as the root factors when deciding the price. The proposed solution includes Machine Learning components which is fed with historical data of these four factors to predict the manufacturing cost, shipping cost, competitor price and customer behavioural factors on a given date and as well as an optimisation component which enables the opportunities to minimise the cost and maximise the profit. The four Machine Learning components are implemented using LSTM, ARIMA, Facebook Prophet and a clustering model. The optimisation model is implemented using linear programming optimise these four components. A user-friendly web application is implemented using MEAN stack with micro service architecture to access this.","","978-1-6654-0862-2","10.1109/ICAC54203.2021.9671224","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9671224","Price optimisation and management;Machine Learning;Optimisation","Costs;Social networking (online);Computational modeling;Pricing;Companies;Machine learning;Linear programming","","","","14","IEEE","11 Jan 2022","","","IEEE","IEEE Conferences"
"SAVI-IoT: A Self-Managing Containerized IoT Platform","H. Khazaei; H. Bannazadeh; A. Leon-Garcia","Department of Electrical and Computer Engineering, University of Toronto, Ontario, Canada; Department of Electrical and Computer Engineering, University of Toronto, Ontario, Canada; Department of Electrical and Computer Engineering, University of Toronto, Ontario, Canada",2017 IEEE 5th International Conference on Future Internet of Things and Cloud (FiCloud),"20 Nov 2017","2017","","","227","234","Internet of Things (IoT) as a service is the ultimate goal of employing cloud computing paradigm for initiating IoT application scenarios. Due to the nature of IoT ecosystems, an IoT application should be distributed, programmable and autonomic; also, it requires to support heterogeneity, security and privacy by following design patterns involved in creating IoT systems. A multi-layer cloud architecture comprising of a high-capacity core center that is connected, through high speed links, to geographically distributed smart edges seem appropriate for highly distributed and heterogeneous IoT applications. Building upon our previous initiatives and inspired by the Infrastructure as Code (IoC) paradigm, in this paper, we propose and evaluate a hierarchical, programmable and autonomic IoT platform based on the microservice models. Our platform supports big data, local/edge data processing, high level of programmability and runtime autonomic management. The autonomic management system ensures the service availability, quality of service and optimized resource utilization in the whole IoT application components autonomously. The primary results affirm a promising future of our platform toward realization of IoT as a service.","","978-1-5386-2074-8","10.1109/FiCloud.2017.27","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8114487","Internet of Things;Multi-tier cloud;Autonomic Management System;Auto-Scalability","Cloud computing;Containers;Virtualization;Sparks;Big Data;Logic gates;Security","","31","1","12","IEEE","20 Nov 2017","","","IEEE","IEEE Conferences"
"Predicting Performance and Cost of Serverless Computing Functions with SAAF","R. Cordingly; W. Shu; W. J. Lloyd","School of Engineering and Technology, University of Washington, Tacoma, WA, USA; School of Engineering and Technology, University of Washington, Tacoma, WA, USA; School of Engineering and Technology, University of Washington, Tacoma, WA, USA","2020 IEEE Intl Conf on Dependable, Autonomic and Secure Computing, Intl Conf on Pervasive Intelligence and Computing, Intl Conf on Cloud and Big Data Computing, Intl Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)","11 Nov 2020","2020","","","640","649","Next generation software built for the cloud recently has embraced serverless computing platforms that use temporary infrastructure to host microservices offering building blocks for resilient, loosely coupled systems that are scalable, easy to manage, and extend. Serverless architectures enable decomposing software into independent components packaged and run using isolated containers or microVMs. This decomposition approach enables application hosting using very fine-grained cloud infrastructure enabling cost savings as deployments are billed granularly for resource use. Adoption of serverless platforms promise reduced hosting costs while achieving high availability, fault tolerance, and dynamic elasticity. These benefits are offset by pricing obfuscation, as performance variance from CPU heterogeneity, multitenancy, and provisioning variation obscure the true cost of hosting applications with serverless platforms. Where determining hosting costs for traditional VM-based application deployments simply involves accounting for the number of VMs and their uptime, predicting hosting costs for serverless applications can be far more complex. To address these challenges, we introduce the Serverless Application Analytics Framework (SAAF), a tool that allows profiling FaaS workload performance, resource utilization, and infrastructure to enable accurate performance predictions. We apply Linux CPU time accounting principles and multiple regression to estimate FaaS function runtime. We predict runtime using a series of increasingly variant compute bound workloads that execute across heterogeneous CPUs, different memory settings, and to alternate FaaS platforms evaluating our approach for 77 different scenarios. We found that the mean absolute percentage error of our runtime predictions for these scenarios was just ~3.49% resulting in an average cost error of $6.46 for 1-million FaaS function workloads averaging $150.45 in price.","","978-1-7281-6609-4","10.1109/DASC-PICom-CBDCom-CyberSciTech49142.2020.00111","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9251165","Serverless Computing;Function-as-a-Service;Performance Evaluation;Performance Modeling;Resource Contention;Multitenancy","Runtime;Linux;FAA;Pricing;Tools;Software;Stress","","22","","59","IEEE","11 Nov 2020","","","IEEE","IEEE Conferences"
"5GC-Observer: a Non-intrusive Observability Framework for Cloud Native 5G System","A. Khichane; I. Fajjari; N. Aitsaadi; M. Gueroui","Orange Innovation, Châtillon, France; Orange Innovation, Châtillon, France; Orange Innovation, Châtillon, France; Orange Innovation, Châtillon, France",NOMS 2023-2023 IEEE/IFIP Network Operations and Management Symposium,"21 Jun 2023","2023","","","1","10","Telco stakeholders are developing a deeper understanding of cloud native technologies and adopting them faster than few years ago. It is undeniable that migrating legacy telco applications to microservice-based architectures accelerates and facilitates the development of new network services while offering a high level of granularity. However, cloud native raises new operational challenges. In order to achieve an efficient management of network services, new solutions are required to monitor and track widely distributed cloud native network functions while considering their specificity. In this paper, we propose an innovative framework, 5GC-Observer, for the observability of cloud native 5G network services. To the best of our knowledge, no such a solution has been found to date. To achieve its goal, 5GC-Observer relies on the eBPF technology to monitor the network traffic circulating between the 5G core components and report telemetry data. Besides, we leverage a statistical method to detect Quality of Service degradation based on reported telemetry data. Such an approach highlights the richness of the data acquired by our solution and its capability to detect unexpected network-related anomalies. The latter are not detectable through standard observability solutions. Performance evaluation shows that our solution generates low overhead while giving insight into the 5G core system and its internal and external exchanges.","2374-9709","978-1-6654-7716-1","10.1109/NOMS56928.2023.10154433","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10154433","5G;Cloud native;CNF;Kubernetes;Observability;Monitoring;Logging;Non-intrusive;eBPF","Degradation;5G mobile communication;Statistical analysis;Telecommunication traffic;Quality of service;Telemetry;Stakeholders","","3","","47","IEEE","21 Jun 2023","","","IEEE","IEEE Conferences"
"TIRA: An OpenAPI Extension and Toolbox for GDPR Transparency in RESTful Architectures","E. Grünewald; P. Wille; F. Pallas; M. C. Borges; M. -R. Ulbricht","Information Systems Engineering, Technische Universität Berlin, Berlin, Germany; Information Systems Engineering, Technische Universität Berlin, Berlin, Germany; Information Systems Engineering, Technische Universität Berlin, Berlin, Germany; Information Systems Engineering, Technische Universität Berlin, Berlin, Germany; Information Systems Engineering, Technische Universität Berlin, Berlin, Germany",2021 IEEE European Symposium on Security and Privacy Workshops (EuroS&PW),"29 Oct 2021","2021","","","312","319","Transparency – the provision of information about what personal data is collected for which purposes, how long it is stored, or to which parties it is transferred – is one of the core privacy principles underlying regulations such as the GDPR. Technical approaches for implementing transparency in practice are, however, only rarely considered. In this paper, we present a novel approach for doing so in current, RESTful application architectures and in line with prevailing agile and DevOps-driven practices. For this purpose, we introduce 1) a transparency-focused extension of OpenAPI specifications that allows individual service descriptions to be enriched with transparency-related annotations in a bottom-up fashion and 2) a set of higher-order tools for aggregating respective information across multiple, interdependent services and for coherently integrating our approach into automated CI/CD-pipelines. Together, these building blocks pave the way for providing transparency information that is more specific and at the same time better reflects the actual implementation givens within complex service architectures than current, overly broad privacy statements.","2768-0657","978-1-6654-1012-0","10.1109/EuroSPW54576.2021.00039","Ministry of Justice; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9583685","privacy engineering;privacy;data protection;transparency;REST;GDPR;OpenAPI;DevOps;Agile","Privacy;Data privacy;Annotations;Architecture;Tools;Regulation","","15","","36","IEEE","29 Oct 2021","","","IEEE","IEEE Conferences"
"On Black-Box Monitoring Techniques for Multi-Component Services","R. Filipe; J. Correia; F. Araujo; J. Cardoso","CISUC, University of Coimbra, Coimbra, Portugal; CISUC, University of Coimbra, Coimbra, Portugal; CISUC, University of Coimbra, Coimbra, Portugal; CISUC, University of Coimbra, Coimbra, Portugal",2018 IEEE 17th International Symposium on Network Computing and Applications (NCA),"29 Nov 2018","2018","","","1","5","Despite the advantages of microservice and function-oriented architectures, there is an increase in complexity to monitor such highly dynamic systems. In this paper, we analyze two distinct methods to tackle the monitoring problem in a system with reduced instrumentation. Our goal is to understand the feasibility of such approach with one specific driver: simplicity. We aim to determine the extent to which it is possible to characterize the state of two generic tandem processes, using as little information as possible. To answer this question, we resorted to a simulation approach. Using a queue system, we simulated two services, that we could manipulate with distinct operation sets for each module. We used the total response time seen upstream of the system. Having this setup and metric, we applied two distinct methods to analyze the results. First, we used supervised machine learning algorithms to identify where the bottleneck is happening. Secondly, we used an exponential decomposition to identify the occupation in the two components in a more black-box fashion. Results show that both methodologies have their advantages and limitations. The separation of the signal more accurately identifies occupation in low occupied resources, but when a service is totally dominating the overall time, it lacks precision. The machine learning has a more stable error, but needs the training set. This study suggest that a black-box occupation approach with both techniques is possible and very useful.","","978-1-5386-7659-2","10.1109/NCA.2018.8548336","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8548336","Black-box monitoring;Observability;Simulation;Analytics","Monitoring;Instruments;Tools;Mathematical model;Machine learning;Observability;Measurement","","1","","22","IEEE","29 Nov 2018","","","IEEE","IEEE Conferences"
"PENTEST-AI, an LLM-Powered Multi-Agents Framework for Penetration Testing Automation Leveraging Mitre Attack","S. G. Bianou; R. G. Batogna","Independent Researcher, Ashburn, VA, USA; Computing Mathematical & Statistical Sciences, School of Science, University of Namibia, Windhoek, Namibia",2024 IEEE International Conference on Cyber Security and Resilience (CSR),"24 Sep 2024","2024","","","763","770","In the digital transformation era, the surge of better development technologies and citizen developers disrupted the space of innovation by increasing the number and complexity of applications used in production. This context prompts advanced cybersecurity measures and more frequent and thorough penetration testing to protect an organization's security posture. The scarcity of skilled expertise in cybersecurity today makes it challenging to cope with the evolving challenge and the growing demand. This paper introduces PENTESTAI, a novel framework for penetration testing automation using Large Language Model (LLM)-powered agents leveraging the MITRE ATTACK knowledge base. The paper provides an overview of the current state of research on cybersecurity and LLM-powered agents, followed by a detailed description of PENTESTAI building blocks. A proof-of-concept implementation is discussed to validate the framework's core constructs. The paper concludes with suggestions for future research directions to achieve the highest level of penetration testing automation with average skilled human-agent collaboration and to create citizen penetration testers.","","979-8-3503-7536-7","10.1109/CSR61664.2024.10679480","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10679480","Cybersecurity;penetration testing;automation;vulnerabilities;AI;Large Language Models;AI Agents;MITRE ATTACK;Citizen penetration tester","Technological innovation;Automation;Large language models;Digital transformation;Knowledge based systems;Surge protection;Production","","","","26","IEEE","24 Sep 2024","","","IEEE","IEEE Conferences"
"ParaDrop: Enabling Lightweight Multi-tenancy at the Network’s Extreme Edge","P. Liu; D. Willis; S. Banerjee","Department of Computer Sciences, University of Wisconsin-Madison; Department of Computer Sciences, University of Wisconsin-Madison; Department of Computer Sciences, University of Wisconsin-Madison",2016 IEEE/ACM Symposium on Edge Computing (SEC),"8 Dec 2016","2016","","","1","13","We introduce ParaDrop, a specific edge computing platform that provides computing and storage resources at the ""extreme"" edge of the network allowing third-party developers to flexibly create new types of services. This extreme edge of the network is the WiFi Access Point (AP) or the wireless gateway through which all end-device traffic (personal devices, sensors, etc.) passes through. ParaDrop's focus on WiFi APs also stems from the fact that the WiFi AP has unique contextual knowledge of its end-devices (e.g., proximity, channel characteristics) that are lost as we get deeper into the network. While different variations and implementations of edge computing platforms have been created over the last decade, ParaDrop focuses on specific design issues around how to structure an architecture, a programming interface, and orchestration framework through which such edge computing services can be dynamically created, installed, and revoked. ParaDrop consists of the following three main components: a flexible hosting substrate in the WiFi APs that supports multi-tenancy, a cloud-based backend through which such computations are orchestrated across many ParaDrop APs, and an API through which third-party developers can deploy and manage their computing functions across such different ParaDrop APs. We have implemented and deployed the entire ParaDrop framework and, in this paper, describe its overall architecture and our initial experiences using it as an edge computing platform.","","978-1-5090-3322-5","10.1109/SEC.2016.39","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7774349","","Logic gates;Cloud computing;IEEE 802.11 Standard;Temperature sensors;Hardware","","80","","41","IEEE","8 Dec 2016","","","IEEE","IEEE Conferences"
"Anomaly Detection from System Tracing Data Using Multimodal Deep Learning","S. Nedelkoski; J. Cardoso; O. Kao","Complex and Distributed IT-Systems Group, TU Berlin, Berlin, Germany; Huawei Munich Research Center, Huawei Technologies, Munich, Germany; Complex and Distributed IT-Systems Group, TU Berlin, Berlin, Germany",2019 IEEE 12th International Conference on Cloud Computing (CLOUD),"29 Aug 2019","2019","","","179","186","The concept of Artificial Intelligence for IT Operations (AIOps) combines big data and machine learning methods to replace a broad range of IT operations including availability and performance monitoring of services. Such platforms typically use separate models for each modality of monitoring data (e.g., textual properties and real-valued response time in logs and traces) to detect faults and upcoming anomalies in cloud services, which do not capture the existing correlation between the modalities. This paper extends the range of utilized data types for creation of a single model to improve the anomaly detection. We use a bimodal distributed tracing data from large cloud infrastructures in order to detect an anomaly in the execution of system components. We propose an anomaly detection method, which utilizes a single modality of the data with information about the trace structure. In the next step, we extend the single-modality neural architecture to a multimodal neural network with long short-term memory (LSTM) to enable the learning from the sequential nature of both modalities in the tracing data. Furthermore, we demonstrate an approach to detect dependent and concurrent events using the ability of the model to reconstruct the execution path. The implemented prototype is experimentally evaluated with data from a large-scale production cloud. The results demonstrate that the novel approaches outperform other deep-learning methods based on traditional architectures.","2159-6190","978-1-7281-2705-7","10.1109/CLOUD.2019.00038","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8814585","AIOps, anomaly detection, multimodal deep learning, distributed tracing, service reliability, LSTM","Anomaly detection;Data models;Time factors;Task analysis;Cloud computing;Deep learning;Distributed databases","","73","","20","IEEE","29 Aug 2019","","","IEEE","IEEE Conferences"
"How To Make 6G a General Purpose Technology: Prerequisites and value creation paradigm shift","V. Ziegler; S. Yrjölä","Nokia Bell Labs & CTO, Munich, Germany; Nokia, Oulu, Finland",2021 Joint European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit),"28 Jul 2021","2021","","","586","591","6G era and the post-pandemic future will be driven by the need and the opportunity to serve society and mankind in the 2030s by connecting the physical, digital and biological worlds. Novel use cases will provide value from augmenting human intelligence, creating new digital worlds and controlling the automatons for step change in efficiency and labor productivity and safety. We propose and explore a framework of 6G composite value from novel use cases as well as from 6G research, technology and architecture. Key components of the framework are input in terms of capital and labor, process and performance improvement, value output as well as ecosystem enabling parameters. Process and performance improvement will be driven by 6G enabling technologies such as pervasive Artificial Intelligence and Machine Learning, sub-Terahertz spectrum and new spectrum technologies, network co-design for radio sensing and communications and, technologies to cater for extreme connectivity requirements. A variety of innovations in 6G network architecture such as het-cloud transformation, leverage of specialized networks, radio access and core network convergence as well as novel security technologies for trust will be part of the anticipated technology push. Ecosystem enabling parameters will need to include open collaboration, vehicles of the shared economy such as open source as well as spectrum regulation aspects. Results indicate that 6G can be characterized as an emerging general-purpose technology being pervasive, having dynamism for continuous technical improvements, and enabling innovational complementarities across a wide range of industry sectors.","2575-4912","978-1-6654-1526-2","10.1109/EuCNC/6GSummit51104.2021.9482431","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9482431","ecosystem;business model;cellular communication;sub-networks;wireless networks;6G","6G mobile communication;Performance evaluation;Industries;Scalability;Ecosystems;Collaboration;Regulation","","18","","38","IEEE","28 Jul 2021","","","IEEE","IEEE Conferences"
"Analyzing the impact of VIM systems over the MEC management and orchestration in vehicular communications","N. Slamnik-Kriještorac; M. Peeters; S. Latré; J. M. Marquez-Barja","IDLab research group, University of Antwerp - imec, Antwerp, Belgium; imec, Antwerp, Belgium; IDLab research group, University of Antwerp - imec, Antwerp, Belgium; IDLab research group, University of Antwerp - imec, Antwerp, Belgium",2020 29th International Conference on Computer Communications and Networks (ICCCN),"30 Sep 2020","2020","","","1","6","The combination of 5G and Multi-access Edge Computing (MEC) technologies can bring significant benefits to vehicular networks, providing means for achieving enhanced Quality of Service (QoS), and Quality of Experience (QoE) of wide variety of vehicular applications. Although beneficial in terms of latency reduction, the edge of the architecture for communication networks produces enormous heterogeneity of network services and resources. This challenge becomes even more severe when different administration domains are taken into consideration. Thus, efficient network Management and Orchestration (MANO) of network resources and services are inevitable. As ETSI provided guidelines and standardization for NFV MANO components, the MEC platform can be used to host network services, while MANO systems are in charge of network service management and orchestration. In this paper, we focus on the specific impact that the Virtualized Infrastructure Manager (VIM) has on the performance of the whole MANO system, used for management and orchestration of MEC services and resources in vehicular networks by enabling the on-demand service instantiation, and service teardown. In our testbed-based evaluation, we measured the network service instantiation and termination delays when evaluating: a) OpenStack and Amazon Web Services (AWS) as VIMs for Open Source MANO (OSM), and b) OpenStack and Docker in case of Open Baton. Such performance analysis with a strong experimental component can serve as a baseline for researchers and industry towards exploiting the opportunities that existing MANO solutions provide.","2637-9430","978-1-7281-6607-0","10.1109/ICCCN49398.2020.9209636","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9209636","MEC;NFV;VNF;MANO;edge and cloud computing;orchestration;vehicular networks","Cloud computing;Containers;Quality of service;Quality of experience;Tools;5G mobile communication;Delays","","4","","14","IEEE","30 Sep 2020","","","IEEE","IEEE Conferences"
"Deep learning Parkinson's from smartphone data","C. Stamate; G. D. Magoulas; S. Kueppers; E. Nomikou; I. Daskalopoulos; M. U. Luchini; T. Moussouri; G. Roussos","Birkbeck College, University of London; University of London, London, London, GB; Benchmark Performance Ltd; Audience Focus Ltd; Birkbeck College, University of London; Benchmark Performance Ltd; Audience Focus Ltd; Birkbeck College, University of London",2017 IEEE International Conference on Pervasive Computing and Communications (PerCom),"4 May 2017","2017","","","31","40","The cloudUPDRS app is a Class I medical device, namely an active transient non-invasive instrument, certified by the Medicines and Healthcare products Regulatory Agency in the UK for the clinical assessment of the motor symptoms of Parkinson's Disease. The app follows closely the Unified Parkinson's Disease Rating Scale which is the most commonly used protocol in the clinical study of PD; can be used by patients and their carers at home or in the community; and, requires the user to perform a sequence of iterated movements which are recorded by the phone sensors. This paper discusses how the cloudUPDRS system addresses two key challenges towards meeting essential consistency and efficiency requirements, namely: (i) How to ensure high-quality data collection especially considering the unsupervised nature of the test, in particular, how to achieve firm user adherence to the prescribed movements; and (ii) How to reduce test duration from approximately 25 minutes typically required by an experienced patient, to below 4 minutes, a threshold identified as critical to obtain significant improvements in clinical compliance. To address the former, we combine a bespoke design of the user experience tailored so as to constrain context, with a deep learning approach used to identify failures to follow the movement protocol while at the same time limiting false positives to avoid unnecessary repetition. We address the latter by developing a machine learning approach to personalise assessments by selecting those elements of the UPDRS protocol that most closely match individual symptom profiles and thus offer the highest inferential power hence closely estimating the patent's overall UPRDS score.","2474-249X","978-1-5090-4327-9","10.1109/PERCOM.2017.7917848","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7917848","","Diseases;Sensors;Conferences;Pervasive computing;Machine learning;Protocols;Market research","","35","","53","IEEE","4 May 2017","","","IEEE","IEEE Conferences"
"A Cloud-based Auto-Scaling System for Virtual Resources to Back Ubiquitous, Mobile, Real-Time Healthcare Applications","S. Khader Basha; N. R. Purimetla; D. Roja; N. Vullam; L. Dalavai; S. S. Vellela","Dept. of CSE-Data Science, Chalapathi Institute of Technology, Guntur, AP, India; Dept. of CSE, Chalapathi Institute of Technology, Guntur, AP, India; Dept. of CSE-Data Science, Chalapathi Institute of Technology, Guntur, AP, India; Dept. of CSE, Chalapathi Institute of Engineering and Technology, Guntur, AP, India; Dept. of CSE-Data Science, Chalapathi Institute of Technology, Guntur, AP, India; Dept. of CSE-Data Science, Chalapathi Institute of Technology, Guntur, AP, India",2023 3rd International Conference on Innovative Mechanisms for Industry Applications (ICIMIA),"18 Apr 2024","2023","","","1223","1230","The utilisation of virtualization technologies in conjunction with cloud computing has emerged as a significant and influential trend within the Information Technology (IT) sector. Cloud computing has significantly transformed the development landscape of mobile ubiquitous services by introducing notable attributes such as reliability and cost-effectiveness. Consequently, it has successfully penetrated the market, bringing about substantial changes in the industry. While it is possible to easily convert numerous types of best-effort mobile ubiquitous applications to cloud infrastructures, it is crucial to thoroughly analyse essential elements in order to enhance the effectiveness of cloud computing infrastructures for real-time healthcare applications. When programme clients observe an anomaly, there is a substantial increase in the data transfer rate. Nevertheless, there are inherent issues in the current allocation of computational resources by server-side processes to effectively manage the fluctuating and time-varying data quantities. This article introduces a novel auto-scaling technique for servers, which aims to dynamically allocate virtual resources. The suggested method’s efficacy in scaling virtual resources up and down in response to the number of real-time tasks is evaluated through testing conducted on an Amazon EC2 platform. The obtained findings demonstrate the efficient performance of the mechanism.","","979-8-3503-4363-2","10.1109/ICIMIA60377.2023.10426107","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10426107","Cloud computing;Healthcare;Auto-scaling;Mobile ubiquitous;Amazon Elastic Compute Cloud","Cloud computing;Medical services;Real-time systems;Servers;Virtualization;Task analysis;Testing","","5","","32","IEEE","18 Apr 2024","","","IEEE","IEEE Conferences"
"Function as a Service Offloaded to a SmartNIC","R. D. G. Pacífico; M. A. M. Vieira; L. F. S. Duarte; J. A. M. Nacif","Universidade Federal de Minas Gerais, Belo Horizonte, Brazil; Universidade Federal de Minas Gerais, Belo Horizonte, Brazil; Universidade Federal de Viçosa, Florestal, Brazil; Universidade Federal de Viçosa, Florestal, Brazil",2022 IEEE Latin-American Conference on Communications (LATINCOM),"2 Jan 2023","2022","","","1","6","Data security has become a crucial factor in the context of computer networks. From 2015 until 2021, the damage caused by the theft of information on the Internet was around 6 trillion dollars. In this scenario, Intrusion Detection Systems (IDSs) are essential elements in the search for threats. However, usually, IDSs run on conventional computers with little processing power and high operating costs. Offloading of network functions in SmartNICs and the Serverless paradigm emerge as efficient solutions because they combine flexibility and programmability. This paper proposes an IDS Serverless with offloading of user-defined filters in SmartNIC Netronome. We created different filters using the eBPF technology to validate the system. Our results show that it is possible to detect vulnerabilities at line rate.","2330-989X","978-1-6654-8225-7","10.1109/LATINCOM56090.2022.10000473","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10000473","Cloud computing;Programmable Networks;Intrusion Detection System;eBPF/XDP;Serverless;Netronome","Costs;Runtime;Filtering;Scalability;Data security;Intrusion detection;Tail","","2","","30","IEEE","2 Jan 2023","","","IEEE","IEEE Conferences"
"Usage of Operating System Kernel Paradigms to Build Modern Simulation Platforms for Autonomous Driving","M. P. Bauer; A. Ngo; M. Resch","CC-Automated Driving, Robert Bosch GmbH, Stuttgart, Germany; CC-Automated Driving, Robert Bosch GmbH, Stuttgart, Germany; High Performance Computing Center, University of Stuttgart, Stuttgart, Germany",2020 5th Asia-Pacific Conference on Intelligent Robot Systems (ACIRS),"10 Aug 2020","2020","","","80","85","Compared to existing intelligent vehicles software such as Advanced Driver Assistance Systems (ADAS) the complexity of Autonomous Driving (AD) software exploded. As a result of that also the development and testing complexity increased proportionally. To master this challenge modern simulation based testing approaches are an essential element. Some of the main challenges for the underlying simulation platform are the large set of simulation use cases, the huge amount of simulation runs and the great testing depth even to the level of unit tests. To find an adequate architectural paradigm for simulation platforms we first analyse the simulation requirements. From this perspective we compare simulation platforms with the established Operating System (OS) Kernel platform. We propose a concept that maps terminology of such simulation kernel and the general architecture itself to an AD simulation platform. Finally, we discuss how design principles known from operating system kernels can be reused for the development of sustainable and modular simulation platforms.","","978-1-7281-9818-7","10.1109/ACIRS49895.2020.9162620","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9162620","Virtual testing;simulation platforms;autonomous driving;ADAS;kernel design","Kernel;Testing;Complexity theory;Computational modeling;Computer architecture","","1","","17","IEEE","10 Aug 2020","","","IEEE","IEEE Conferences"
"A Review of Implementing Exploring Mobile Edge Computing within the Framework of 5G and 6G Networks","R. Batra; S. Kumar; M. Bargavi","Department of Mechanical Engineering, Noida Institute of Engineering and Technology, Greater Noida, Uttar Pradesh, India; Department of Computer Science and Engineering, Tula's Institute, Dehradun, India; Department of Computer Science and Information Technology, Jain (Deemed to be University), Bangalore, India","2023 International Conference on Advances in Computation, Communication and Information Technology (ICAICCIT)","20 Mar 2024","2023","","","1225","1230","The integration of edge computing is critical to the development of Beyond 5G (B5G) and 6G networks, as the volume of data and processing demands continue to rise. Using the radio access network (RAN), mobile edge computing (MEC) is essential for putting advanced cloud computing features in close proximity to end users. Even though MEC and its possible applications have been thoroughly studied, there hasn't been much conversation about the crucial elements required for MEC to be deployed successfully in order to satisfy various application demands. The important considerations that must be made while establishing edge infrastructure in B5G and 6G networks are outlined in this article. These factors include things like user density, server location, capacity, edge architecture, and security protocols. Moreover, it includes concrete assessments of edge computing-dependent applications, such forecasting and video conversion using deep learning. Additionally, the study provides insightful viewpoints that clarify open research questions related to edge computing within the framework of 6G networks.","","979-8-3503-4438-7","10.1109/ICAICCIT60255.2023.10465965","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10465965","Distributed computing;Next-generation 6G communication networks;Edge processing;and Cloud computing","6G mobile communication;Cloud computing;Multi-access edge computing;Protocols;5G mobile communication;Reviews;Oral communication","","","","17","IEEE","20 Mar 2024","","","IEEE","IEEE Conferences"
"A Model-Driven Approach to Automate the Deployment and Management of Cloud Services","A. Bhattacharjee; Y. Barve; A. Gokhale; T. Kuroda","Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, Tennessee, USA; Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, Tennessee, USA; Department of Electrical Engineering and Computer Science, Vanderbilt University, Nashville, Tennessee, USA; NEC Corporation, Kawasaki, Kanagawa, Japan",2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion),"10 Jan 2019","2018","","","109","114","Although many provisioning tools are available for deployment and management of composite cloud services to overcome the manual efforts that are tedious and error-prone, users are often required to specify Infrastructure-as-Code (IAC) solutions via low-level scripting. IAC demands domain knowledge for provisioning the services across heterogeneous cloud platforms and incurs a steep learning curve. To address these challenges, we present a technology-and platform-agnostic self-service framework called CloudCAMP. It incorporates domain-specific modeling so that the specifications and dependencies imposed by the cloud platform and application architecture can be specified at an intuitive, higher level of abstraction without the need for domain expertise. CloudCAMP transforms the partial specifications into deployable Infrastructure-as-Code (IAC) using the Transformational-Generative paradigm and by leveraging an extensible and reusable knowledge base. The auto-generated IAC can be handled by existing tools to provision the services components automatically. We validate our approach quantitatively by showing a comparative study of savings in manual and scripting efforts versus using CloudCAMP.","","978-1-7281-0359-4","10.1109/UCC-Companion.2018.00043","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8605766","cloud services, deployment and orchestration, automation, domain-specific modeling, knowledge base","Cloud computing;Knowledge based systems;Databases;Business;Topology;Software;Servers","","8","1","15","IEEE","10 Jan 2019","","","IEEE","IEEE Conferences"
"A content and context-aware solution for network state exchange in tactical networks","R. Fronteddu; A. Morelli; E. Casini; N. Suri; B. Jalaian; L. Sadler","Florida Institute for Human & Machine Cognition (IHMC), Pensacola, FL, USA; Florida Institute for Human & Machine Cognition (IHMC), Pensacola, FL, USA; Florida Institute for Human & Machine Cognition (IHMC), Pensacola, FL, USA; Florida Institute for Human & Machine Cognition (IHMC), Pensacola, FL, USA; U.S. Army Research Laboratory (ARL), MD, USA; U.S. Army Research Laboratory (ARL), MD, USA",MILCOM 2017 - 2017 IEEE Military Communications Conference (MILCOM),"11 Dec 2017","2017","","","430","435","Efficient network communications are essential to enable network-centric warfare. However, tactical edge networks present an extremely challenging and heterogeneous networking environment due to heterogeneous architectures, dynamic topologies, unwanted adversarial behavior, interference, and other wireless channel conditions. In order to support end-user applications and guarantee system performance and interoperability in such constrained environments, it is critical to adapt the volume and type of traffic generated by applications to the continuously varying network conditions. To this end, we extended the Agile Computing Middleware (ACM) with capabilities specifically designed to provide network state detection and adaptation in constrained networks. In this paper, we present SENSEI (for Smart Estimation of Network StatE Information), a set of components of the ACM that provides effective strategies for the dissemination of network state information. SENSEI implements a content- and context-aware clustering-based algorithm for the distribution of network state information that can significantly reduce the overhead associated with network state information sharing.","2155-7586","978-1-5386-0595-0","10.1109/MILCOM.2017.8170825","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8170825","Computer network management;network state estimation;adaptive middleware;tactical networks;mobile ad hoc networks","Peer-to-peer computing;Monitoring;Protocols;Synthetic aperture sonar;Intelligent sensors;Middleware","","5","","11","IEEE","11 Dec 2017","","","IEEE","IEEE Conferences"
"Safety and Security of Citizens in Smart Cities","G. Suciu; I. Hussain; G. Iordache; C. Beceanu; R. A. Kecs; M. -C. Vochin","R&D Department, Beia Consult International, Bucharest, Romania; R&D Department, Beia Consult International, Bucharest, Romania; R&D Department, Beia Consult International, Bucharest, Romania; R&D Department, Beia Consult International, Bucharest, Romania; R&D Department, Beia Consult International, Bucharest, Romania; Telecommunications Department, University Politehnica of Bucharest, Bucharest, Romania",2021 20th RoEduNet Conference: Networking in Education and Research (RoEduNet),"10 Dec 2021","2021","","","1","8","Smart cities have frontline responsibility to ensure a secure and safe physical and digital ecosystem promoting cohesive and sustainable urban development for the wellbeing of human beings. In this paper, we propose to integrate advanced technological solutions in a market-oriented unified Cyber–Physical Security Management framework, aiming at raising the resilience of cities’ infrastructures, services, ICT, IoT, and fostering intelligence and information sharing among city’s security. The project we implement, “Smart Spaces Safety and Security for All Cities” (S4ALLCITIES), is dealing with Systems of Systems Architecture to deploy and validate its intelligent components and functionalities on actual environment, ensuring the delivery of solutions and services in line with smart cities emerging requirements, focused on: risk-based open smart spaces security management; cyber security shielding; and behavior tracking; real-time estimation of cyber-physical risks in multiple locations and measures activation for effective crisis management","2247-5443","978-1-6654-1351-0","10.1109/RoEduNet54112.2021.9637717","ITEA; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9637717","Cyber Security;Smart Cities;Protection of Open Spaces;IoT;Libelium and Adcon technology;Real-time warning system","Optical fiber sensors;Smart cities;Surveillance;Security management;Alarm systems;Traffic control;Extraterrestrial measurements","","5","","16","IEEE","10 Dec 2021","","","IEEE","IEEE Conferences"
"A Container-Based Framework to Facilitate Reproducibility in Employing Stochastic Process Algebra for Modeling Parallel Computing Systems","W. S. Sanders; S. Srivastava; I. Banicescu","Computer Science & Engineering, Mississippi State University, Mississippi State, MS, USA; Computer Science, University of Southern Indiana, Evansville, IN, USA; Computer Science & Engineering, Mississippi State University, Mississippi State, MS, USA",2019 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW),"29 Jul 2019","2019","","","373","381","Scientific applications are increasingly complex and domain specific, and the underlying architectures of the parallel and distributed systems on which they are executed also continue to grow in complexity. As these high performance parallel and distributed computing applications and environments continue to grow both in complexity and computing power, there is an increasing financial cost associated with both the acquisition and maintenance of those systems. Therefore, the ability to model the performance of these applications and systems before and during their development and deployment to guide cost-effective decisions about their resources and configurations is highly important to the designers of those applications and systems. Performance Evaluation Process Algebra (PEPA) is a modeling language and framework for modeling parallel and distributed computing and communication applications and systems, and numerous examples are present in the literature where PEPA has been utilized to model these systems for evaluating or predicting their performance using various metrics, including throughput, utilization, and robustness. Since its development, the PEPA modeling framework has been expanded to model biological systems and networks (Bio-PEPA), and massive (on the order of ~10^129 components) homogeneous systems with Grouped PEPA (GPEPA). PEPA and its derivatives are implemented in a variety of ways, ranging from plug-ins integrated with the Eclipse integrated development environment to standalone command-line based interpreters, each with their own unique and often challenging installation and configuration requirements. To help enable other researchers to more easily utilize these frameworks and facilitate increased and robust reproducibility across end-user platforms, we present and make available containerized versions of a number of these PEPA frameworks. We have validated the functionality of these containers by testing them with models available from the research community that utilizes PEPA. These containers serve as a readily available resource for the community and can be executed on any environment capable of executing the underlying containerization framework.","","978-1-7281-3510-6","10.1109/IPDPSW.2019.00070","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8778220","Application virtualization, Reproducibility of results, Performance modeling, Performance evaluation, Robustness analysis, Parallel computing, Process algebra, Scalability","Computational modeling;Biological system modeling;Data models;Algebra;Containers;Markov processes","","3","","34","IEEE","29 Jul 2019","","","IEEE","IEEE Conferences"
"YACHAY - A fully integrated system to promote a flexible and personalized learning in HEI","E. G. y. Restrepo; R. Morales; A. Serrano-Mamolar; O. Lachner; F. Luis-Ferreira; J. Sarraipa; N. Vilhena; J. G. Boticario","Dep. Artificial Intelligence. ETSI Informática, Universidad Nacional de Educación a Distancia (UNED), Madrid, Spain; Virtual University System, l University of Guadalajara, Guadalajara, Jalisco, Mexico; Dep. Artificial Intelligence. ETSI Informática, Universidad Nacional de Educación a Distancia (UNED), Madrid, Spain; Área de Relaciones Internacionales, Vicerrectorado Universidad Nacional de Mar del Plata (UNMdP), Mar del Plata, Argentina; CTS, Uninova, NOVA School of Science and Technology, Caparica, Portugal; CTS, Uninova, NOVA School of Science and Technology, Caparica, Portugal; CTS, Uninova, NOVA School of Science and Technology, Caparica, Portugal; Dep. Artificial Intelligence. ETSI Informática, Universidad Nacional de Educación a Distancia (UNED), Madrid, Spain",2021 World Engineering Education Forum/Global Engineering Deans Council (WEEF/GEDC),"4 Jan 2022","2021","","","624","631","There is an urgent need in Latin America to address the educational requirements of the 21st century in terms of flexibility, personalization, credentials and inclusion, thereby aligning with UNESCO's goals for quality education and those for equal access. To tackle these issues in synergy with business network the YachaY project proposes to establish a unified electronic portfolio system that suits Latin America's needs, develop a portable profile system to facilitate the personalization of learning, create guidelines and virtual courses aimed at teaching staff on the creation of customizable content in order to make it easier for students to choose their learning format and way that suits their needs and preferences, also providing a monitoring system to increase the quality level of university education; promote the flexibility of university curricula, facilitating the empowerment of students in the design of careers adapted to their needs and preferences in synergy with the productive system and labor market through a learning path recommendation system, and establishing a unified credentialing system, fostering university / labor market interoperability. We present a big picture and each of the components of the system, highlighting in some cases the defined use scenarios to finally briefly describe its architecture.","","978-1-6654-2488-2","10.1109/WEEF/GEDC53299.2021.9657242","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9657242","e-profile;e-portfolio;credentials;learning paths;recommender system;higher education","Knowledge engineering;Technological innovation;Education;Europe;Personnel;Mentoring;Portfolios","","1","","14","IEEE","4 Jan 2022","","","IEEE","IEEE Conferences"
"A Framework for Real-time Remote ECG Monitoring and Diagnoses","A. Badr; K. Elgazzar","Ontario Tech University, Oshawa, ON, Canada; Ontario Tech University, Oshawa, ON, Canada","2022 5th International Conference on Communications, Signal Processing, and their Applications (ICCSPA)","24 Jan 2023","2022","","","1","10","Enabled by the fast development of Internet of Things (IoT) technologies in recent years, the healthcare domain has witnessed significant advancements in wearable devices that seamlessly collect vital medical information. With the availability of IoT devices serving the healthcare domain, extraordinary amounts of sensory data are generated in real-time, requiring immediate diagnoses and attention in critical medical conditions. The provision of remote patient monitoring (RPM) and analytics infrastructure proved to be fundamental components of the healthcare domain during the Coronavirus pandemic. Traditional healthcare services are digitized and offered virtually, where patients are monitored and managed remotely without the need to go to hospitals. This paper presents a comprehensive RPM framework for real-time telehealth operations with scalable data monitoring, real-time analytics and decision-making, fine-grained data access and robust notification mechanisms in emergencies and critical health conditions. We focus on the overall framework architecture, enabling technologies integration, various system-level integrations and deployment options. Furthermore, we provide a use case application for patients with chronic heart conditions for real-time electrocardiogram (ECG) monitoring. We are releasing the framework as open-source software to the active research community.","2767-7702","978-1-6654-8237-0","10.1109/ICCSPA55860.2022.10019050","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10019050","e-health;remote patient monitoring;real-time data streaming;real-time data analytics;electrocardiogram","Patient monitoring;Pandemics;Wearable computers;Telemedicine;Electrocardiography;Signal processing;Real-time systems","","1","","31","IEEE","24 Jan 2023","","","IEEE","IEEE Conferences"
"A Time-Saving Task Scheduling Algorithm Based on Deep Reinforcement Learning for Edge Cloud Collaborative Computing","W. Zou; Z. Zhang; N. Wang; X. Tan; L. Tian","Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China; Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China; Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China; Department of Computer Science and Technology, University of Cambridge, United Kingdom; Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China",2024 IEEE 99th Vehicular Technology Conference (VTC2024-Spring),"25 Sep 2024","2024","","","01","06","In common scenarios of cloud computing and edge computing, jobs are divided into tasks with dependencies, and task scheduling and computation are performed through containers. However, the cold start of containers significantly impedes the efficiency of short tasks. The existing research on cold starts faces challenges in addressing task scheduling with dependencies and may not fully exploit the distinct advantages offered by cloud and edge servers. On the other hand, there is limited research on using Deep Reinforcement Learning (DRL) to optimize container cold starts. Existing task scheduling algorithms based on DRL often struggle to handle scenarios with multiple jobs simultaneously. To reduce the job completion time of the system, this paper introduces a task scheduling algorithm based on DRL. By intelligently reusing containers and minimizing cold starts, the algorithm aims to simultaneously consider computing and communication resources, effectively leveraging the unique strengths of both cloud and edge servers to enhance job completion speed. The proposed architecture, comprising both Agent and Scheduler components, reduces the action space and enhances the ability to handle multiple jobs. Simulation results demonstrate that, compared to existing common algorithms, the proposed algorithm reduces the average job completion time by approximately 30%.","2577-2465","979-8-3503-8741-4","10.1109/VTC2024-Spring62846.2024.10683187","National Natural Science Foundation of China(grant numbers:BM2021800); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10683187","edge cloud collaborative computing;deep reinforcement learning;task scheduling","Cloud computing;Vehicular and wireless technologies;Scheduling algorithms;Simulation;Collaboration;Containers;Deep reinforcement learning","","","","16","IEEE","25 Sep 2024","","","IEEE","IEEE Conferences"
"Harnessing Insights from Streams: Unlocking Real-Time Data Flow with Docker and Cassandra in the Apache Ecosystem","J. Oza; A. Patil; C. Maniyath; R. More; G. Kambli; A. Maity","Computer Engineering, K.J. Somaiya Institute of Technology; Computer Engineering, K.J. Somaiya Institute of Technology; Computer Engineering, K.J. Somaiya Institute of Technology; Computer Engineering, K.J. Somaiya Institute of Technology; Computer Engineering, K.J. Somaiya Institute of Technology; Computer Engineering, K.J. Somaiya Institute of Technology",2024 IEEE Recent Advances in Intelligent Computational Systems (RAICS),"1 Oct 2024","2024","","","1","6","Real-time data streaming pipelines are immensely valuable in today's data-driven world since they enable continuous data processing and analytics. This research paper provides a comprehensive exploration of the architecture, development, and deployment of an advanced real-time data streaming pipeline. It utilizes Docker for containerization, Apache Kafka for distributed streaming, Apache Spark for dynamic data transformation, and Cassandra for efficient NoSQL storage. The study outlines the intricacies of integrating these technologies, examining the pipeline's components, functionalities, performance metrics, and potential applications. Through this case study, the paper show-cases the efficacy of open-source tools in constructing highly scalable and resilient data streaming pipelines.","2769-5565","979-8-3503-8168-9","10.1109/RAICS61201.2024.10690115","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10690115","big data;data analytics;data streaming;Kafka;Docker;Cassandra;Spark","Measurement;Scalability;Pipelines;Ecosystems;Distributed databases;Organizations;Data processing","","","","12","IEEE","1 Oct 2024","","","IEEE","IEEE Conferences"
"Research and Application of Task Scheduling and Resource Management Technology in Electric Power Artificial Intelligence Platform","B. Gao; X. Xia; Z. Ji; S. Zhang; Z. Yan; Y. Li","Ningxia Electric Power Research Institution of SGCC, Yinchuan, China; Ningxia Electric Power Research Institution of SGCC, Yinchuan, China; China Electricity Power Research Institute, Beijing, China; Ningxia Electric Power Research Institution of SGCC, Yinchuan, China; Ningxia Electric Power Research Institution of SGCC, Yinchuan, China; Ningxia Electric Power Research Institution of SGCC, Yinchuan, China","2022 IEEE 5th International Conference on Automation, Electronics and Electrical Engineering (AUTEEE)","2 Jan 2023","2022","","","945","951","Starting from the actual business needs of power grid production, operation, and management, extract common key technologies of artificial intelligence, build an electric power artificial intelligence platform, provide sample labeling and management, model training, and model reasoning for business personnel, model developers, and application developers, and support power inspection, scheduling, safety supervision, marketing and other businesses through online service invocation. This paper studies the core issues of task scheduling and resource management of the electric power artificial intelligence platform. To begin with, it introduces its capabilities and overall architecture and analyzes its service objects, task types and processing processes. Then container technology and Kubernetes are employed to achieve resource-elastic management for multiple heterogeneous resources; a task scheduling method is put forward based on load balancing; last but not least, the functional components, deployment and application of the artificial intelligence platform are presented. By building the basic support capabilities of electric power artificial intelligence, reducing the threshold of artificial intelligence model training, gathering high-quality samples and high-quality models, unified model services are provided for business applications, thus accelerating the implementation of artificial intelligence applications and promoting the digital transformation and intelligent upgrade of the power grid.","2831-4549","978-1-6654-7197-8","10.1109/AUTEEE56487.2022.9994566","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9994566","electric power artificial intelligence platform;task scheduling;resource management","Training;Analytical models;Scheduling;Power grids;Safety;Resource management;Artificial intelligence","","","","19","IEEE","2 Jan 2023","","","IEEE","IEEE Conferences"
"Towards Cloud-Native Virtual Reality Applications: State-Of-The-Art and Open Challenges","J. Santos","Department of Information Technology, IDLab, Ghent University - Imec, Ghent, Belgium",2024 IEEE Symposium on Computers and Communications (ISCC),"31 Oct 2024","2024","","","1","6","As Virtual Reality (VR) and Extended Reality (XR) technologies continue to evolve, exploring the deployment of these applications on distributed computing resources across the cloud continuum emerges as a promising research direction for improving immersive experiences. This paper reviews the current state-of-the-art on cloud-native VR applications, explaining the synergies between modern cloud infrastructures and recent advances in VR technology. In addition, the paper discusses an exhaustive list of existing literature to identify essential methodologies, architectures, and frameworks for the proper deployment of cloud-native VR applications. Furthermore, the paper analyzes the challenges associated with leveraging cloud infrastructures for VR and XR applications concerning its stringent requirements, including scalability, latency, and bandwidth. The paper highlights recent efforts on resource allocation and networking, aiming to meet the requirements of these low-latency applications in the cloud continuum. Lastly, the paper presents open challenges and research directions in the field, such as optimal containerization of VR components and efficient networking solutions towards reliable VR experiences. Addressing these challenges will lead to the widespread adoption of cloud-native VR applications, ultimately enabling more immersive, accessible, and scalable virtual experiences.","2642-7389","979-8-3503-5423-2","10.1109/ISCC61673.2024.10733608","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10733608","Cloud-Native;Virtual Reality;Kubernetes;Orchestration","Computers;Cloud computing;Extended reality;Reviews;Scalability;Computer network reliability;Resource management;Reliability;Low latency communication;Distributed computing","","","","40","IEEE","31 Oct 2024","","","IEEE","IEEE Conferences"
"Techniques for Realizing Secure, Resilient and Differentiated 5G Operations","A. Hakiri; A. S. Gokhale; Y. Barve; V. Formicola; S. Shekhar; C. Mahmoudi; M. A. Rahman; U. Ghosh; S. R. Hasan; T. Guo","University of Carthage, ISSAT, Tunis, Tunisia; Vanderbilt University, Nashville, TN, USA; Vanderbilt University, Nashville, TN, USA; California Polytechnic State University, Pomona, CA, USA; Siemens Technology, Princeton, NJ, USA; Siemens Technology, Princeton, NJ, USA; Florida International University, Miami, FL, USA; Meharry Medical College, School of Applied Computational Sciences, Nashville, TN, USA; Tennessee Tech University, Nashville, TN, USA; Tennessee Tech University, Nashville, TN, USA",2022 14th IFIP Wireless and Mobile Networking Conference (WMNC),"25 Nov 2022","2022","","","113","117","The 5G ecosystem is designed as a highly sophisticated and modularized architecture that decouples the radio access network (RAN), the multi-access edge computing (MEC) and the mobile core to enable different and scalable deployments. It leverages modern principles of virtualized network functions, microservices-based service chaining, and cloud-native software stacks. Moreover, it provides built-in security and mechanisms for slicing. Despite all these capabilities, there remain many gaps and opportunities for additional capabilities to support end-to-end secure operations for applications across many domains. Although 5G supports mechanisms for network slicing and tunneling, new algorithms and mechanisms that can adapt network slice configurations dynamically to accommodate urgent and mission-critical traffic are needed. Such slices must be secure, interference-aware, and free of side channel attacks. Resilience of the 5G ecosystem itself requires an effective means for observability and (semi-)autonomous self-healing capabilities. To address this plethora of challenges, this paper presents the SECurity and REsiliency TEchniques for Differentiated 5G OPerationS (SECRETED 5G OPS) project, which is investigating fundamental new solutions that center on the zero trust, network slicing, and network augmentation dimensions, which together will achieve secure and differentiated operations in 5G networks. SECRETED 5G OPS solutions are designed to be easily deployable, minimally invasive to the existing infrastructure, not require modifications to user equipment other than possibly firmware upgrades, economically viable, standards compliant, and compliant to regulations.","2473-3644","978-3-903176-52-2","10.23919/WMNC56391.2022.9954310","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9954310","Zero-Trust;Side Channel Attack;Adaptive Slicing;Hardware-level Security;Network Augmentation","Wireless communication;5G mobile communication;Transmitters;Network slicing;Ecosystems;Tunneling;Zero Trust","","1","","11","","25 Nov 2022","","","IEEE","IEEE Conferences"
"Enabling IoT connectivity for Modbus networks by using IoT edge gateways","G. Corotinschi; V. G. Găitan","Ştefan cel Mare University of Suceava 13, Suceava; Ştefan cel Mare University of Suceava 13, Suceava",2018 International Conference on Development and Application Systems (DAS),"28 Jun 2018","2018","","","175","179","This paper aims at presenting the implementation of a functional model of IoT gateway. The Gateway aims at extending the connectivity of Modbus devices networks to IoT by performing local data processing. Within the implementation process, we've used modern development technologies, such as .NET Core, and a microservice-based application architecture. The implementation is based on a bus data scanning component, using pre-processed commands for read and write actions. Scanned data is stored locally, and when there is a change in the values, it is transmitted to all interested clients via an MQTT broker. A case study was conducted to select the best broker. This study aims at highlighting the performance of three brokers (ActiveMQ, Mosquitto and HiveMQ) by transmitting a continuous data flow. The IoT gateway was implemented using Raspberry PI devices.","","978-1-5386-1493-8","10.1109/DAAS.2018.8396092","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8396092","IoT;Edge Computing;Modbus gateway","Databases;Protocols;Logic gates;Performance evaluation;Cloud computing;Automation;Registers","","16","","12","IEEE","28 Jun 2018","","","IEEE","IEEE Conferences"
"Learning to Simplify Distributed Systems Management","C. Streiffer; R. Raghavendra; T. Benson; M. Srivatsa","Duke University, Durham, NC, USA; IBM T. J. Watson Research Center, Yorktown, NY, USA; Brown University, Providence, RI, USA; IBM T. J. Watson Research Center, Yorktown, NY, USA",2018 IEEE International Conference on Big Data (Big Data),"24 Jan 2019","2018","","","1837","1845","Managing large-scale distributed systems is a difficult task. System administrators are responsible for the upkeep and maintenance of numerous components with complex dependencies. With the shift to microservices-based architectures, these systems can consist of 100s to 1000s of interconnected nodes. To combat this difficulty, administrators rely on analyzing logs and metrics collected from the different services. However, the number of available metrics for large systems presents complexity and scaling issues. To combat these issues, we present Minerva, an unsupervised Machine Learning (ML) framework for performing network diagnosis analysis. Minerva is composed of a multi-stage pipeline, where each component can act individually or cohesively to perform various management tasks. Our system offers a unified and extensible framework for managing the complexity of large networks, and presents administrators with a swiss-army knife for diagnosing the overall health of their systems. To demonstrate the feasibility of Minerva, we evaluate its performance on a production-scale system. We present use cases for the various management tools made available by Minerva, and show how these tools can be used to make strong inferences about the system using unsupervised techniques.","","978-1-5386-5035-6","10.1109/BigData.2018.8622058","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8622058","","Measurement;Monitoring;Task analysis;Machine learning;Tools;Time series analysis;Complexity theory","","2","","40","IEEE","24 Jan 2019","","","IEEE","IEEE Conferences"
"2nd International Workshop on the Internet of Time-Critical Things (IoTime 2023)","I. Zyrianoff; C. Kamienski; D. Cavalcanti; D. M. Batista; A. Virdis; L. Gigli","Department of Computer Science and Engineering, University of Bologna, Bologna, Italy; Federal University of ABC, Santo André, Brazil; Intel Corporation, Hillsboro, USA; Institute of Mathematics and Statistics, University of são Paulo, São Paulo, Brasil; University of Pisa, Pisa, Italy; Department of Computer Science and Engineering, University of Bologna, Bologna, Italy",2023 IEEE 9th World Forum on Internet of Things (WF-IoT),"30 May 2024","2023","","","1","2","With the advances in the interconnection of devices and applications, industrial and consumer applications have adopted the Internet of Things (IoT) as a core component of their systems. In such contexts, precise time and timeliness in task execution are fundamental requirements for emerging IoT applications and new experiences. Industry 4.0, mobile and collaborative robots, autonomous systems, and immersive and interactive human-cyber experiences are only examples of IoT-based domains where precise time, computing, and communication with bounded latencies are strictly required. Furthermore, these applications might be time-critical and safety-critical as they often involve interactions between humans and machines. Such stringent time and safety requirements bring new practical challenges and opportunities to revolutionize computing and communication infrastructure's traditional design, deployment, and management. New concepts in software-defined systems and networks, cloud/edge computing, Time-Sensitive Networking (TSN), Wi-Fi 6/7, 5G, 6G, dynamic, AI-driven resource orches-tration, and Edge AI are emerging as potential building blocks to enable the transformation of computing and communications infrastructure to enable emerging time-critical applications.","2768-1734","979-8-3503-1161-7","10.1109/WF-IoT58464.2023.10539395","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10539395","IoT;Time-Critical Things;TSN;Industrial IoT","","","","","0","IEEE","30 May 2024","","","IEEE","IEEE Conferences"
