Document Title,Authors,Author Affiliations,Publication Title,Date Added To Xplore,Publication Year,Volume,Issue,Start Page,End Page,Abstract,ISSN,ISBNs,DOI,Funding Information,PDF Link,Author Keywords,IEEE Terms,Mesh_Terms,Article Citation Count,Patent Citation Count,Reference Count,License,Online Date,Issue Date,Meeting Date,Publisher,Document Identifier
Building Microservices with Micronaut®: A quick-start guide to building high-performance reactive microservices for Java developers,N. Singh; Z. Dawood; T. M. Foundation,NA; NA; NA,Building Microservices with Micronaut®: A quick-start guide to building high-performance reactive microservices for Java developers,,2021,,,,,"Explore different aspects of building modular microservices such as development, testing, maintenance, and deployment using the Micronaut frameworkKey FeaturesLearn how to build scalable, fast, and resilient microservices with this concise guideExplore the many advantages of using reflection-free, compile-time dependency injections and aspect-oriented programmingBuild cloud-native applications easily with the Micronaut frameworkBook DescriptionThe open source Micronaut® framework is a JVM-based toolkit designed to create microservices quickly and easily. This book will help full-stack and Java developers build modular, high-performing, and reactive microservice-based apps using the Micronaut framework. You'll start by building microservices and learning about the core components, such as ahead-of-time compilation, reflection-less dependency injection, and reactive baked-in HTTP clients and servers. Next, you will work on a real-time microservice application and learn how to integrate Micronaut projects with different kinds of relational and non-relational databases. You'll also learn how to employ different security mechanisms to safeguard your microservices and integrate microservices using event-driven architecture in the Apache Kafka ecosystem. As you advance, you'll get to grips with automated testing and popular testing tools. The book will help you understand how you can easily handle microservice concerns in Micronaut projects, such as service discovery, API documentation, distributed configuration management, fallbacks, and circuit breakers. Finally, you'll explore the deployment and maintenance aspects of microservices and get up to speed with the Internet of Things (IoT) using the Framework. By the end of this book, you'll be able to build, test, deploy, and maintain your own microservice apps using the framework.What you will learnUnderstand why the Micronaut framework is best suited for building microservicesBuild web endpoints and services in the Micronaut frameworkSafeguard microservices using Session, JWT, and OAuth in Micronaut projectsGet to grips with event-driven architecture in Micronaut applicationsDiscover how to automate testing at various levels using built-in tools and testing frameworksDeploy your microservices to containers and cloud platformsBecome well-versed with distributed logging, tracing, and monitoring in Micronaut projectsGet hands-on with the IoT using Alexa and the Micronaut frameworkWho this book is forThis book is for developers who have been building microservices on traditional frameworks such as Spring Boot and are looking for a faster alternative. Intermediate-level knowledge of Java programming and implementing web services development in Java is required.",,9781800567399,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10163509.pdf&bkn=10163508&pdfType=book,,,,,,,,27 Jun 2023,,,Packt Publishing,Packt Publishing eBooks
"Pragmatic Microservices with C# and Azure: Build, deploy, and scale microservices efficiently to meet modern software demands",C. Nagel,,"Pragmatic Microservices with C# and Azure: Build, deploy, and scale microservices efficiently to meet modern software demands",,2024,,,,,"Unlock efficiency in software development by learning microservices with C# and Azure Key FeaturesGain step-by-step project-based guidance on how to develop a full-fledged microservices applicationGain extensive knowledge of microservices by covering essential concepts, tools, and methodologiesAcquire skills to deploy and manage microservices on MS AzurePurchase of the print or Kindle book includes a free PDF eBookBook DescriptionThis book introduces .NET Aspire and its features for developing microservices. It delves into defining an app model for an application's services, using service discovery, and integrating components locally and via native cloud services with Azure. It offers practical insights and hands-on experience, exploring microservices concepts in ASP.NET Core. You’ll learn how to develop robust services using .NET features such as minimal APIs, gRPC, and SignalR for real-time communication. The book also covers essential aspects of DevOps, testing methodologies including unit, integration, and load testing, and logging and monitoring including OpenTelemetry using tools such as Azure Log Analytics, Application Insights, Prometheus, and Grafana. You'll understand how asynchronous communication leveraging queues and events is facilitated through Azure Event Hub and Apache. Throughout the book, you’ll not only discover the theoretical aspects but also gain practical skills by building and deploying a fully functional microservices-based application. By the end of this book, you’ll have a deep understanding of microservices architecture, hands-on experience with various .NET technologies and Azure services, and the ability to design, build, deploy, and manage microservices applications effectively in both on-premises and cloud environments.What you will learnUnderstand microservices architecture benefitsUtilize the cloud-ready .NET Aspire stack along with its associated tools and librariesDevelop REST APIs with ASP.NET Core minimal APIsImplement database integration with relational and NoSQL databasesContainerize microservices using DockerDeploy microservices to the Azure Container Apps environment and KubernetesConfigure logging, monitoring, and tracing for microservicesUse advanced communication patterns with SignalR, gRPC, queues, and eventsWho this book is forThis book is for software developers, architects, and engineers who are interested in adopting microservices architecture using the .NET framework and Microsoft Azure. Both intermediate and advanced developers who have a foundational understanding of C#, ASP.NET Core, and cloud computing concepts will find this book helpful. ",,9781835087046,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10559498.pdf&bkn=10559497&pdfType=book,,,,,,,,17 Jun 2024,,,Packt Publishing,Packt Publishing eBooks
Implementing Event-Driven Microservices Architecture in .NET 7: Develop event-based distributed apps that can scale with ever-changing business demands using C# 11 and .NET 7,D. Brown; J. Garverick; O. D. McIver,NA; NA; NA,Implementing Event-Driven Microservices Architecture in .NET 7: Develop event-based distributed apps that can scale with ever-changing business demands using C# 11 and .NET 7,,2023,,,,,"Implement modern design patterns that leverage domain-driven data, to achieve resiliency and scalability for data-dependent applicationsKey FeaturesLearn the tenets of event-driven architecture, coupled with reliable design patterns to enhance your knowledge of distributed systems and build a foundation for professional growthUnderstand how to translate business goals and drivers into a domain model that can be used to develop an app that enables those goals and driversIdentify areas to enhance development and ensure operational support through the architectural design processBook DescriptionThis book will guide you through various hands-on practical examples for implementing event-driven microservices architecture using C# 11 and .NET 7. It has been divided into three distinct sections, each focusing on different aspects of this implementation. The first section will cover the new features of .NET 7 that will make developing applications using EDA patterns easier, the sample application that will be used throughout the book, and how the core tenets of domain-driven design (DDD) are implemented in .NET 7. The second section will review the various components of a local environment setup, the containerization of code, testing, deployment, and the observability of microservices using an EDA approach. The third section will guide you through the need for scalability and service resilience within the application, along with implementation details related to elastic and autoscale components. You’ll also cover how proper telemetry helps to automatically drive scaling events. In addition, the topic of observability is revisited using examples of service discovery and microservice inventories. By the end of this book, you’ll be able to identify and catalog domains, events, and bounded contexts to be used for the design and development of a resilient microservices architecture.What you will learnExplore .NET 7 and how it enables the development of applications using EDAUnderstand messaging protocols and producer/consumer patterns and how to implement them in .NET 7Test and deploy applications written in .NET 7 and designed using EDA principlesAccount for scaling and resiliency in microservicesCollect and learn from telemetry at the platform and application levelGet to grips with the testing and deployment of microservicesWho this book is forThis book will help .NET developers and architects looking to leverage or pivot to microservices while using a domain-driven event model.",,9781803230405,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10163635.pdf&bkn=10163634&pdfType=book,,,,,,,,27 Jun 2023,,,Packt Publishing,Packt Publishing eBooks
"Software Architecture with C++: Design modern systems using effective architecture concepts, design patterns, and techniques with C++20",A. Ostrowski; P. Gaczkowski,NA; NA,"Software Architecture with C++: Design modern systems using effective architecture concepts, design patterns, and techniques with C++20",,2021,,,,,"Apply business requirements to IT infrastructure and deliver a high-quality product by understanding architectures such as microservices, DevOps, and cloud-native using modern C++ standards and featuresKey FeaturesDesign scalable large-scale applications with the C++ programming languageArchitect software solutions in a cloud-based environment with continuous integration and continuous delivery (CI/CD)Achieve architectural goals by leveraging design patterns, language features, and useful toolsBook DescriptionSoftware architecture refers to the high-level design of complex applications. It is evolving just like the languages we use, but there are architectural concepts and patterns that you can learn to write high-performance apps in a high-level language without sacrificing readability and maintainability. If you're working with modern C++, this practical guide will help you put your knowledge to work and design distributed, large-scale apps. You'll start by getting up to speed with architectural concepts, including established patterns and rising trends, then move on to understanding what software architecture actually is and start exploring its components. Next, you'll discover the design concepts involved in application architecture and the patterns in software development, before going on to learn how to build, package, integrate, and deploy your components. In the concluding chapters, you'll explore different architectural qualities, such as maintainability, reusability, testability, performance, scalability, and security. Finally, you will get an overview of distributed systems, such as service-oriented architecture, microservices, and cloud-native, and understand how to apply them in application development. By the end of this book, you'll be able to build distributed services using modern C++ and associated tools to deliver solutions as per your clients' requirements.What you will learnUnderstand how to apply the principles of software architectureApply design patterns and best practices to meet your architectural goalsWrite elegant, safe, and performant code using the latest C++ featuresBuild applications that are easy to maintain and deployExplore the different architectural approaches and learn to apply them as per your requirementSimplify development and operations using application containersDiscover various techniques to solve common problems in software design and developmentWho this book is forThis software architecture C++ programming book is for experienced C++ developers looking to become software architects or develop enterprise-grade applications. ",,9781789612462,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10162935.pdf&bkn=10162934&pdfType=book,,,,,,,,27 Jun 2023,,,Packt Publishing,Packt Publishing eBooks
"Bootstrapping Service Mesh Implementations with Istio: Build reliable, scalable, and secure microservices on Kubernetes with Service Mesh",A. Rai,,"Bootstrapping Service Mesh Implementations with Istio: Build reliable, scalable, and secure microservices on Kubernetes with Service Mesh",,2023,,,,,"A step-by-step guide to Istio Service Mesh implementation, with examples of complex and distributed workloads built using microservices architecture and deployed in Kubernetes Purchase of the print or Kindle book includes a free PDF eBookKey FeaturesLearn the design, implementation, and troubleshooting of Istio in a clear and concise formatGrasp concepts, ideas, and solutions that can be readily applied in real work environmentsSee Istio in action through examples that cover Terraform, GitOps, AWS, Kubernetes, and GoBook DescriptionIstio is a game-changer in managing connectivity and operational efficiency of microservices, but implementing and using it in applications can be challenging. This book will help you overcome these challenges and gain insights into Istio's features and functionality layer by layer with the help of easy-to-follow examples. It will let you focus on implementing and deploying Istio on the cloud and in production environments instead of dealing with the complexity of demo apps.  You'll learn the installation, architecture, and components of Istio Service Mesh, perform multi-cluster installation, and integrate legacy workloads deployed on virtual machines. As you advance, you'll understand how to secure microservices from threats, perform multi-cluster deployments on Kubernetes, use load balancing, monitor application traffic, implement service discovery and management, and much more. You’ll also explore other Service Mesh technologies such as Linkerd, Consul, Kuma, and Gloo Mesh. In addition to observing and operating Istio using Kiali, Prometheus, Grafana and Jaeger, you'll perform zero-trust security and reliable communication between distributed applications. After reading this book, you'll be equipped with the practical knowledge and skills needed to use and operate Istio effectively.What you will learnGet an overview of Service Mesh and the problems it solvesBecome well-versed with the fundamentals of Istio, its architecture, installation, and deploymentExtend the Istio data plane using WebAssembly (Wasm) and learn why Envoy is used as a data planeUnderstand how to use OPA Gatekeeper to automate Istio’s best practicesManage communication between microservices using IstioExplore different ways to secure the communication between microservicesGet insights into traffic flow in the Service MeshLearn best practices to deploy and operate Istio in production environmentsWho this book is forThe book is for DevOps engineers, SREs, cloud and software developers, sysadmins, and architects who have been using microservices in Kubernetes-based environments. It addresses challenges in application networking during microservice communications. Working experience on Kubernetes, along with knowledge of DevOps, application networking, security, and programming languages like Golang, will assist with understanding the concepts covered.",,9781803235967,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10251188.pdf&bkn=10251187&pdfType=book,,,,,,,,14 Sep 2023,,,Packt Publishing,Packt Publishing eBooks
Event-Driven Architecture in Golang: Building complex systems with asynchronicity and eventual consistency,M. Stack,,Event-Driven Architecture in Golang: Building complex systems with asynchronicity and eventual consistency,,2022,,,,,"Begin building event-driven microservices, including patterns to handle data consistency and resiliencyKey FeaturesExplore the benefits and tradeoffs of event-driven architectures with practical examples and use casesUnderstand synergy with event sourcing, CQRS, and domain-driven development in software architectureBuild an end-to-end robust application architecture by the end of the bookBook DescriptionEvent-driven architecture in Golang is an approach used to develop applications that shares state changes asynchronously, internally, and externally using messages. EDA applications are better suited at handling situations that need to scale up quickly and the chances of individual component failures are less likely to bring your system crashing down. This is why EDA is a great thing to learn and this book is designed to get you started with the help of step-by-step explanations of essential concepts, practical examples, and more. You’ll begin building event-driven microservices, including patterns to handle data consistency and resiliency. Not only will you learn the patterns behind event-driven microservices but also how to communicate using asynchronous messaging with event streams. You’ll then build an application made of several microservices that communicates using both choreographed and orchestrated messaging. By the end of this book, you’ll be able to build and deploy your own event-driven microservices using asynchronous communication.What you will learnUnderstand different event-driven patterns and best practicesPlan and design your software architecture with easeTrack changes and updates effectively using event sourcingTest and deploy your sample software application with easeMonitor and improve the performance of your software architectureWho this book is forThis hands-on book is for intermediate-level software architects, or senior software engineers working with Golang and interested in building asynchronous microservices using event sourcing, CQRS, and DDD. Intermediate-level knowledge of the Go syntax and concurrency features is necessary.",,9781803232188,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10163009.pdf&bkn=10163008&pdfType=book,,,,,,,,27 Jun 2023,,,Packt Publishing,Packt Publishing eBooks
Content Management System Architecture,S. K. Shivakumar,,Enterprise Content and Search Management for Building Digital Platforms,,2017,,,104.0,153.0,"This chapter looks at architecture elements of a content management system (CMS). It discusses the various CMS components and their roles in content strategy and defines various phases of CMS implementation approach. The chapter describes modern CMS architecture patterns including model view controller (MVC), service‐oriented architecture (SOA), n‐tier, and microservices architectures. It focuses on CMS value articulation framework and the key CMS solution design principles and explores design aspects of CMS solution components such as multi‐site management, localization, content folders, content URLs, CMS infrastructure, and CMS maintenance. The chapter also discusses various CMS reference architecture by looking at customer experience management (CXP) architecture, knowledge management architecture, digital marketing platforms based on CMS, and Apache Jackrabbit architecture. Digital marketing content should be personalized based on user segments, target device, and other context parameters. Web analytics should be tagged along with content to track user behavior to gain vital insights.",,9781119206828,10.1002/9781119206842.ch4,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=7827504.pdf&bkn=7753055&pdfType=chapter,,Portals;Computer architecture;Content management;Scalability;Routing;Systems architecture,,,,,,8 Feb 2017,,,IEEE,Wiley-IEEE Press eBook Chapters
Architectural Considerations for the Cloud Environment,J. S. Hurwitz; D. Kirsch,NA; NA,Cloud Computing For Dummies,,2020,,,33.0,42.0,"This chapter discusses the open issues and considerations in planning an environment that serve the best interest of one's internal and external customers. Cloud providers may provide the underlying physical and virtualized resources needed to run various cloud services. They also may create the actual applications and business services that operate in these environments. Clearly, all the components in the cloud provider model must be managed. There have to be services to support the business, manage configurations, and provision the right resources on demand. Management services must also support interoperability and service portability. Placing microservices into containers supported by orchestration services and well‐defined application programming interface is transforming the way businesses gain control over performance in complex computing environments. Making policies and rules operational in a hybrid cloud environment means that these dictates must be integrated from an architectural perspective.",,9781119546757,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=9953270.pdf&bkn=9953200&pdfType=chapter,,Cloud computing;Biological system modeling;Computational modeling;Planning;Task analysis;Computer architecture;Companies,,,,,,16 Nov 2022,,,Wiley,Wiley Data and Cybersecurity eBook Chapters
Designing Production-Grade and Large-Scale IoT Solutions: A comprehensive and practical guide to implementing end-to-end IoT solutions,M. Abdelaziz,,Designing Production-Grade and Large-Scale IoT Solutions: A comprehensive and practical guide to implementing end-to-end IoT solutions,,2022,,,,,"Get to grips with key IoT aspects along with modern trends, architectures, and technologies that support IoT solutions, such as cloud computing, modern app architecture paradigms, and data analyticsKey FeaturesUnderstand the big picture of designing production-grade IoT solutions from an industry expertGet up and running with the development and designing aspects of the Internet of ThingsSolve business problems specific to your domain using different IoT platforms and technologiesBook DescriptionWith the rising demand for and recent enhancements in IoT, a developer with sound knowledge of IoT is the need of the hour. This book will help you design, build, and operate large-scale E2E IoT solutions to transform your business and products, increase revenue, and reduce operational costs. Starting with an overview of how IoT technologies can help you solve your business problems, this book will be a useful guide to helping you implement end-to-end IoT solution architecture. You'll learn to select IoT devices; real-time operating systems; IoT Edge covering Edge location, software, and hardware; and the best IoT connectivity for your IoT solution. As you progress, you'll work with IoT device management, IoT data analytics, IoT platforms, and put these components to work as part of your IoT solution. You'll also be able to build IoT backend cloud from scratch by leveraging the modern app architecture paradigms and cloud-native technologies such as containers and microservices. Finally, you'll discover best practices for different operational excellence pillars, including high availability, resiliency, reliability, security, cost optimization, and high performance, which should be applied for large-scale production-grade IoT solutions. By the end of this IoT book, you'll be confident in designing, building, and operating IoT solutions.What you will learnUnderstand the detailed anatomy of IoT solutions and explore their building blocksExplore IoT connectivity options and protocols used in designing IoT solutionsUnderstand the value of IoT platforms in building IoT solutionsExplore real-time operating systems used in microcontrollersAutomate device administration tasks with IoT device managementMaster different architecture paradigms and decisions in IoT solutionsBuild and gain insights from IoT analytics solutionsGet an overview of IoT solution operational excellence pillarsWho this book is forThis book is for E2E solution architects, systems and technical architects, and IoT developers looking to design, build, and operate E2E IoT applications and solutions. Basic knowledge of cloud computing, software engineering, and distributed system design will help you get the most out of this book.",,9781838827182,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10163358.pdf&bkn=10163357&pdfType=book,,,,,,,,27 Jun 2023,,,Packt Publishing,Packt Publishing eBooks
An Atypical ASP.NET Core 6 Design Patterns Guide: A SOLID adventure into architectural principles and design patterns using .NET 6 and C# 10,C. -H. Marcotte; A. Zebdi,NA; NA,An Atypical ASP.NET Core 6 Design Patterns Guide: A SOLID adventure into architectural principles and design patterns using .NET 6 and C# 10,,2022,,,,,"The professional developer’s essential guide to building robust, maintainable, and flexible web apps by leveraging C# 10 and .NET 6 features and component- and application-scale design patternsKey FeaturesApply the SOLID architectural principles and software design patterns effectively with a focus on dependency injectionDiscover modern application architectures such as vertical slice, clean architecture, and event-driven microservicesExplore full-stack ASP.NET Core with an overview of BlazorBook DescriptionAn Atypical ASP.NET Core 6 Design Patterns Guide, Second Edition approaches programming like playing with LEGO®: snapping small pieces together to create something beautiful. Thoroughly updated for ASP.NET Core 6, with further coverage of microservices patterns, data contracts, and event-driven architecture, this book gives you the tools to build and glue reliable components together to improve your programmatic masterpieces. The chapters are organized based on scale and topic, allowing you to start small and build on a strong base, the same way that you would develop a program. You will begin by exploring basic design patterns, SOLID architectural principles, dependency injection, and other ASP.NET Core 6 mechanisms. You will explore component-scale patterns, and then move to higher level application-scale patterns and techniques to better structure your applications. Finally, you'll advance to the client side to connect the dots with tools like Blazor and make ASP.NET Core a viable full-stack web development framework. You will supplement your learning with practical use cases and best practices, exploring a range of significant Gang of Four (GoF) design patterns along the way. By the end of the book, you will be comfortable combining and implementing patterns in different ways, and crafting software solutions of any scale.What you will learnApply the SOLID principles for building flexible and maintainable softwareGet to grips with .NET dependency injectionWork with GoF design patterns such as strategy, decorator, façade, and compositeExplore the MVC patterns for designing web APIs and web applications using RazorDiscover layering techniques and tenets of clean architectureBecome familiar with CQRS and vertical slice architecture as an alternative to layeringUnderstand microservices patterns and when they can benefit your applicationsBuild ASP.NET user interfaces from server-side to client-side BlazorWho this book is forThe book is intended for intermediate software and web developers with an understanding of .NET who want to write flexible, maintainable, and robust code for building scalable web applications. Knowledge of C# programming and an understanding of web concepts like HTTP is necessary.",,9781803243887,,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=10162382.pdf&bkn=10162381&pdfType=book,,,,,,,,27 Jun 2023,,,Packt Publishing,Packt Publishing eBooks
Building the Right Technology Landscape,S. Sinha; K. Al Huraimel,NA; NA,Reimagining Businesses with AI,,2021,,,179.0,192.0,"This chapter discusses the key aspects of the technology ecosystem and how to build the right technology foundation in a scalable and cost affordable manner. The topics covered are data platform, analytics engine, multi‐agent systems, adaptive user experiences, universal software gateways, and technology partner ecosystems. Database management architecture and systems is the most critical component of the technical infrastructure for AI projects. Analytics engines help reduce the time to develop and deploy the AI algorithms. These engines most often come with a domain‐specific common modeling language to uniformly represent analytical functions. Many industries and companies are adopting microservices architecture as a potential intermediate step before migration into a more mature multi‐agent system. Paying attention to user experience and making it adaptive is therefore critical to the success of any AI initiative. Technology partners become critical as they may bring speed and scale needed to win with AI.",,9781119709176,10.1002/9781119709183.ch11,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=9822286.pdf&bkn=9820895&pdfType=chapter,,Artificial intelligence;Databases;Cloud computing;Natural language processing;Logic gates;Engines;Buildings,,,,,,12 Jul 2022,,,Wiley,Wiley Data and Cybersecurity eBook Chapters
Software‐Defined Fog Orchestration for IoT Services,R. Yang; Z. Wen; D. McKee; T. Lin; J. Xu; P. Garraghan,"School of Computing,Beijing Advanced Innovation Center for Big Data and Brain Computing (BDBC), University of Leeds,Beihang University, Leeds,Beijing, UK,China; School of Computing, Newcastle University upon Tyne, Newcastle, UK; School of Computing, University of Leeds, Leeds, UK; School of Computer and Communication Sciences, École Polytechnique Fédérale de Lausanne, Lausanne, Switzerland; School of Computing,Beijing Advanced Innovation Center for Big Data and Brain Computing (BDBC), University of Leeds,Beihang University, Leeds,Beijing, UK,China; School of Computing and Communications, Lancaster University, Lancaster, UK","Fog and Fogonomics: Challenges and Practices of Fog Computing, Communication, Networking, Strategy, and Economics",,2020,,,179.0,212.0,"This chapter presents a scalable software‐defined orchestration architecture to intelligently compose and orchestrate thousands of heterogeneous Fog appliances (devices, servers). Specifically, it provides a resource filtering‐based resource assignment mechanism to optimize the resource utilization and fair resource sharing among multitenant Internet of things (IoT) applications. The chapter also presents a component selection and placement mechanism for containerized IoT microservices to minimize the latency by harnessing the network uncertainty and security while considering different applications’ requirement and capabilities. It describes a fog simulation scheme to simulate the aforementioned procedure by modeling the entities, their attributes, and actions. The chapter also provides the results of practical experiences on the orchestration and simulation. It outlines numerous difficulties and challenges to develop an orchestration framework across all layers within the Fog resource stack and describes a prototype orchestration system that makes use of some of the most promising mechanisms to tackle these challenges.",,9781119501107,10.1002/9781119501121.ch8,,https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=9215564.pdf&bkn=9215548&pdfType=chapter,,Internet of Things;Sensors;Cloud computing;Real-time systems;Monitoring;Reliability;Quality of service,,1.0,,,,7 Oct 2020,,,Wiley,Wiley Telecom eBook Chapters
