Document Title,Authors,Author Affiliations,Publication Title,Date Added To Xplore,Publication Year,Volume,Issue,Start Page,End Page,Abstract,ISSN,ISBNs,DOI,Funding Information,PDF Link,Author Keywords,IEEE Terms,Mesh_Terms,Article Citation Count,Patent Citation Count,Reference Count,License,Online Date,Issue Date,Meeting Date,Publisher,Document Identifier
Microservice-Based Architecture for an Energy Management System,Z. Lyu; H. Wei; X. Bai; C. Lian,"Guangxi Key Laboratory of Power System Optimization and Energy Technology, Guangxi University, Nanning, China; Guangxi Key Laboratory of Power System Optimization and Energy Technology, Guangxi University, Nanning, China; Guangxi Key Laboratory of Power System Optimization and Energy Technology, Guangxi University, Nanning, China; Guangxi Key Laboratory of Power System Optimization and Energy Technology, Guangxi University, Nanning, China",IEEE Systems Journal,24 Nov 2020,2020,14,4,5061,5072,"This article proposes a microservice-based architecture for an energy management system (MS-EMS) to address the fragility, poor flexibility, and hardware dependence of EMSs. Compared with the service-oriented architecture (SOA), the proposed architecture can significantly improve the load performance and scalability of an EMS through fine-grained decomposition of the system and decentralized data management. Container and cluster technologies are used to manage the microservices. A k-fault (k ≥ 2)-tolerant model is proposed to improve the reliability of the MS-EMS. The model employs containerized microservices as essential components to achieve a parallel connection of the essential components using the horizontal-scale technology of the containers. On the other hand, a MILP model-based algorithm for managing computing resources is also suggested. By minimizing the number of worker nodes of the cluster, where the MS-EMS is deployed, we can improve the utilization of the computing resources and avoid unnecessary costs. The result of the performance analysis showed that the reliability of the MS-EMS is 99.99965625%, which is two orders and one order of magnitude higher than those of the existing EMSs and the SOA-based EMS (S-EMS), respectively. Moreover, the cost of the MS-EMS is also lower than those of the existing EMSs and S-EMSs. The proposed architecture is implemented in a realpower system and has shown favorable operation performances, indicating a promising prospect for future applications.",1937-9234,,10.1109/JSYST.2020.2981095,"National Natural Science Foundation of China(grant numbers:51967002,51967001); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9057450,Container;energy management system (EMS);microservice;reliability;resource management,Energy management;Containers;Computer architecture;Reliability;Power system reliability;Cloud computing;Servers,,19.0,,37,IEEE,6 Apr 2020,,,IEEE,IEEE Journals
Involving Stakeholders in the Implementation of Microservice-Based Systems: A Case Study in an Ambient-Assisted Living System,G. Márquez; C. Taramasco; H. Astudillo; V. Zalc; D. Istrate,"Departamento de Informática, Universidad Técnica Federico Santa María, Valparaíso, Chile; Escuela de Ingeniería Civil Informática, Universidad de Valparaíso, Valparaíso, Chile; Departamento de Informática, Universidad Técnica Federico Santa María, Valparaíso, Chile; Laboratoire BMBI UMR 7338, Université de Technologie de Compiègne, Compègne, France; Laboratoire BMBI UMR 7338, Université de Technologie de Compiègne, Compègne, France",IEEE Access,15 Jan 2021,2021,9,,9411,9428,"Microservice-based systems promote agility and rapid business development. Some features, such as fast time-to-market, scalability and optimal response times, have encouraged stakeholders to get more involved in the development and implementation of microservices architectures in order to translate their business vision into the implementation of the architecture. Although some techniques allow the inclusion of the stakeholders' perspective in the design of microservice architectures, few proposals consider such perspectives in the selection and evaluation of technologies that implement microservice architectures. Indeed, the qualities that characterize microservice-based systems strongly depend on the suitable selection of technologies, such as application frameworks and platforms. This article proposes a collaborative technique that includes stakeholders and software architects in the selection and evaluation of application frameworks and platforms to implement microservice-based systems. We evaluated the technique in an industrial case of design and implementation of an Ambient-Assisted Living (AAL) system, which combines microservice architecture and Internet-of-Medical-Things (IoMT) sensors. The case results indicate that the proposed technique supported stakeholders in the pragmatic evaluation of alternative technological solutions. Additionally, it allowed the implementation of an AAL system that satisfies the quality specifications of stakeholders and end-users. This initial study suggests that actively including stakeholders in the implementation of microservice-based systems allows architects to make design decisions that better consider stakeholders viewpoints as well as managing their expectations.",2169-3536,,10.1109/ACCESS.2021.3049444,ECOS Sud grant BV2 (Well Being and Well Ageing); FONDECYT Regular (Multimodal Machine Learning approach for detecting pathological activity patterns in elderlies)(grant numbers:1201787); ANID PIA/APOYO (CCTVal)(grant numbers:AFB180002); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9314139,Software architecture;microservice architecture;ambient-assisted living system;frameworks,Stakeholders;Software;Computer architecture;Decision making;Tools;Proposals;Collaboration,,9.0,,54,CCBY,5 Jan 2021,,,IEEE,IEEE Journals
Semantic Integration of Plug-and-Play Software Components for Industrial Edges Based on Microservices,W. Dai; P. Wang; W. Sun; X. Wu; H. Zhang; V. Vyatkin; G. Yang,"Department of Automation, Shanghai Jiao Tong University, Shanghai, China; Chinese Academy of Sciences, Shenyang Institute of Automation, Shenyang, China; Department of Automation, Shanghai Jiao Tong University, Shanghai, China; Department of Automation, Shanghai Jiao Tong University, Shanghai, China; Chinese Academy of Sciences, Shenyang Institute of Automation, Shenyang, China; Department of Electrical Engineering and Automation, Aalto University, Espoo, Finland; Department of Automation, Shanghai Jiao Tong University, Shanghai, China",IEEE Access,13 Sep 2019,2019,7,,125882,125892,"The industrial cyber-physical system enables collaboration between distributed nodes across industrial clouds and edge devices. Flexibility and interoperability could be enhanced significantly by introducing the service-oriented architecture to industrial edge devices. From the industrial edge computing perspective, software components shall be dynamically composed across heterogeneous edge devices to perform various functionalities. In this paper, a knowledge-driven Microservice-based architecture to enable plug-and-play software components is proposed for industrial edges. These software components can be dynamically configured based on the orchestration of microservices with the support of the knowledge base and the reasoning process. These semantically enhanced plug-and-play microservices could provide rapid online reconfiguration without any programming efforts. The use of the plug-and-play software components is demonstrated by an assembly line example.",2169-3536,,10.1109/ACCESS.2019.2938565,National Research and Development Key Program of China(grant numbers:2017YFA0700603); National Natural Science Foundation of China(grant numbers:61973216); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8821289,Service-oriented architecture;industrial automation;IEC 61499 function blocks;plug and play;microservices;interoperability;REST API;SQWRL;OWL,Service-oriented architecture;Automation;Semantics;Sensors;Knowledge based systems,,17.0,,39,CCBY,30 Aug 2019,,,IEEE,IEEE Journals
An End-to-End Implementation of a Service-Oriented Architecture for Data-Driven Smart Buildings,L. Chamari; E. Petrova; P. Pauwels,"Department of the Built Environment, Eindhoven University of Technology, Eindhoven, The Netherlands; Department of the Built Environment, Eindhoven University of Technology, Eindhoven, The Netherlands; Department of the Built Environment, Eindhoven University of Technology, Eindhoven, The Netherlands",IEEE Access,30 Oct 2023,2023,11,,117261,117281,"Buildings connect with multiple information systems like Building Management Systems (BMS), Energy Management Systems (EMS), IoT devices, Building Information Models (BIM), the electricity grid, weather services, etc. Data-driven smart building software demands seamless integration of the above systems and their data. The lack of a system architecture with well-defined Application Programming Interfaces (APIs) poses a significant challenge for developing reusable, modular and scalable applications. This article presents a service-oriented system architecture designed with data-driven smart buildings in mind. The architecture relies on the Zachman framework and consists of seven service categories: 1) existing business applications, 2) new microservice-based applications, 3) databases, 4) integration software, 5) infrastructure services, 6) shared services, and 7) user interfaces. It closely resembles the MACH architectural principles: Microservices, API-first, Cloud-based components, and Headless principles. This architecture is implemented as a proof-of-concept, including three smart building applications. These include a Digital Twin application integrating sensor data with a BIM model, a web application merging real-time sensor data with semantic building graphs, and a data exploration tool using sensor data, the Brick ontology, and Grafana dashboards. Future implementations include real-time control applications such as Model Predictive Control (MPC). The proposed architecture and its implementations provide a blueprint for a reusable, modular, and scalable architecture in the smart building domain.",2169-3536,,10.1109/ACCESS.2023.3325767,Dutch Ministry of Economic Affairs and Climate Policy and the Ministry of the Interior and Kingdom Relations; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10287934,Building Information Modeling;data-driven buildings;data integration;IoT;linked building data;microservices;reference architecture;REST API;real-time data acquisition;solution architecture,Computer architecture;Architecture;Buildings;Smart buildings;Business;Data models;Systems architecture;Data integration;Internet of Things;Real-time systems,,8.0,,102,CCBY,19 Oct 2023,,,IEEE,IEEE Journals
A Survey on Microservices Trust Models for Open Systems,Z. Lu; D. T. Delaney; D. Lillis,"School of Computer Science, University College Dublin, Dublin 4, Ireland; School of Electrical and Electronic Engineering, University College Dublin, Dublin 4, Ireland; School of Computer Science, University College Dublin, Dublin 4, Ireland",IEEE Access,27 Mar 2023,2023,11,,28840,28855,"The microservices architecture (MSA) is a form of distributed systems architecture that has been widely adopted in large-scale software systems in recent years. As with other distributed system architectures, one of the challenges that MSA faces is establishing trust between the microservices, particularly in the context of open systems. The boundaries of open systems are unlimited and unknown, which means that they can be applied to any use case. Microservices can leave or join an open system arbitrarily, without restriction as to ownership or origin, and MSA systems can scale extensively. The organisation of microservices (in terms of the roles they play and the communication links they utilise) can also change in response to changes in the environment in which the system is situated. The management of trust within MSAs is of great importance as the concept of trust is critical to microservices communication, and the operation of an open MSA system is highly reliant on communication between these fine-grained microservices. Thus, a trust model should also be able to manage trust in an open environment. Current trust management solutions, however, are often domain-specific and many are not specifically tailored towards the open system model. This motivates research on trust management in the context of open MSA systems. In this paper, we examine existing microservices trust models, identify the limitations of these models in the context of the principles of open microservices systems, propose a set of qualities for open microservices trust models that emerge from these limitations, and assess selected microservices trust models using the proposed qualities.",2169-3536,,10.1109/ACCESS.2023.3260147,Science Foundation Ireland (SFI) Strategic Partnerships Programme(grant numbers:16/SPP/3296); Origin Enterprises plc; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10077578,Microservices;trust management;service oriented architecture;open systems,Microservice architectures;Open systems;Web services;Trust management;Context modeling;Object oriented modeling;Computer architecture,,5.0,,72,CCBYNCND,21 Mar 2023,,,IEEE,IEEE Journals
Long Live the Image: On Enabling Resilient Production Database Containers for Microservice Applications,Z. Li; N. Saldías-Vallejos; D. Seco; M. A. Rodríguez; R. Ranjan,"School of Electronics, Electrical Engineering and Computer Science, Queen’s University Belfast, Belfast, U.K.; Department of Computer Science, University of Concepción, Concepción, Chile; Department of Computer Science and Information Technologies, Universidade de A Coruña, A Coruña, Spain; Department of Computer Science, University of Concepción, Concepción, Chile; School of Computing, Newcastle University, Newcastle upon Tyne, U.K.",IEEE Transactions on Software Engineering,18 Sep 2024,2024,50,9,2363,2378,"Microservices architecture advocates decentralized data ownership for building software systems. Particularly, in the Database per Service pattern, each microservice is supposed to maintain its own database and to handle the data related to its functionality. When implementing microservices in practice, however, there seems to be a paradox: The de facto technology (i.e., containerization) for microservice implementation is claimed to be unsuitable for the microservice component (i.e., database) in production environments, mainly due to the data persistence issues (e.g., dangling volumes) and security concerns. As a result, the existing discussions generally suggest replacing database containers with cloud database services, while leaving the on-premises microservice implementation out of consideration. After identifying three statelessness-dominant application scenarios, we proposed container-native data persistence as a conditional solution to enable resilient database containers in production. In essence, this data persistence solution distinguishes stateless data access (i.e., reading) from stateful data processing (i.e., creating, updating, and deleting), and thus it aims at the development of stateless microservices for suitable applications. In addition to developing our proposal, this research is particularly focused on its validation, via prototyping the solution and evaluating its performance, and via applying this solution to two real-world microservice applications. From the industrial perspective, the validation results have proved the feasibility, usability, and efficiency of fully containerized microservices for production in applicable situations. From the academic perspective, this research has shed light on the operation-side micro-optimization of individual microservices, which fundamentally expands the scope of “software micro-optimization” and reveals new research opportunities.",1939-3520,,10.1109/TSE.2024.3436623,ANID Millennium Science Initiative Program(grant numbers:Code ICN17_002); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10620003,Container;data persistence;read-only database;stateless microservice;microservices architecture,Databases;Containers;Microservice architectures;Production;Usability;Runtime;Prototypes,,,,67,IEEE,1 Aug 2024,,,IEEE,IEEE Journals
μVerum: Intrusion Recovery for Microservice Applications,D. R. Matos; M. L. Pardal; A. R. Silva; M. Correia,"INESC-ID, Universidade de Lisboa, Lisbon, Portugal; INESC-ID, Universidade de Lisboa, Lisbon, Portugal; INESC-ID, Universidade de Lisboa, Lisbon, Portugal; INESC-ID, Universidade de Lisboa, Lisbon, Portugal",IEEE Access,2 Aug 2023,2023,11,,78457,78470,"Microservice architectures allow complex applications to be developed as a collection of loosely coupled components. The heterogeneous architecture of these applications makes the process of recovering from intrusions especially complex, error-prone, and time-consuming. Although there are several recovery mechanisms for monolithic applications, applying such mechanisms in microservices would not work due to the distribution of the components, the different technologies used by each service, and their scale. Moreover, it can be difficult to trace the services affected by an intrusion and which actions to revert. We propose  $\mu $ Verum, a framework for recovering microservices from intrusions that corrupt the application state. Our approach allows recovery of large-scale microservice applications by logging user requests and the operations that are propagated through several microservices. When a system administrator detects a faulty request,  $\mu $ Verum can execute compensating operations in each of the affected microservices. We implemented, evaluated, and made the code of  $\mu $ Verum available. Our experiments show that  $\mu $ Verum is able to revert the effects in an intrusion in one second while the application is running.",2169-3536,,10.1109/ACCESS.2023.3298113,National Funds through Fundação para a Ciência e a Tecnologia (FCT) Instituto de Engenharia de Sistemas e Computadores - Investigação e Desenvolvimento (INESC-ID)(grant numbers:UIDB/50021/2020); Data Consistency in Microservices Compositions (DACOMICO)(grant numbers:PTDC/CCI-COM/2156/2021); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10190596,Microservices;cloud computing;intrusion recovery,Microservice architectures;Servers;Computer architecture;Databases;Routing;Codes;Intrusion detection;Cloud computing,,,,71,CCBY,24 Jul 2023,,,IEEE,IEEE Journals
Telemonitoring System for Infectious Disease Prediction in Elderly People Based on a Novel Microservice Architecture,H. Calderón-Gómez; L. Mendoza-Pittí; M. Vargas-Lombardo; J. M. Gómez-Pulido; J. L. Castillo-Sequera; J. Sanz-Moreno; G. Sención,"Department of Computer Science, University of Alcalá, Alcalá de Henares, Spain; Department of Computer Science, University of Alcalá, Alcalá de Henares, Spain; E-Health and Supercomputing Research Group (GISES), Technological University of Panama, Panama City, Panama; Department of Computer Science, University of Alcalá, Alcalá de Henares, Spain; Department of Computer Science, University of Alcalá, Alcalá de Henares, Spain; Foundation for Biomedical Research, Hospital Universitario Príncipe de Asturias, Alcalá de Henares, Spain; School of Medicine, Autonomous University of Santo Domingo, Santo Domingo, Dominican Republic",IEEE Access,2 Jul 2020,2020,8,,118340,118354,"This article describes the design, development and implementation of a set of microservices based on an architecture that enables detection and assisted clinical diagnosis within the field of infectious diseases of elderly patients, via a telemonitoring system. The proposed system is designed to continuously update a medical database fed with vital signs from biosensor kits applied by nurses to elderly people on a daily basis. The database is hosted in the cloud and is managed by a flexible microservices software architecture. The computational paradigms of the edge and the cloud were used in the implementation of a hybrid cloud architecture in order to support versatile high-performance applications under the microservices pattern for the pre-diagnosis of infectious diseases in elderly patients. The results of an analysis of the usability of the equipment, the performance of the architecture and the service concept show that the proposed e-health system is feasible and innovative. The system components are also selected to give a cost-effective implementation for people living in disadvantaged areas. The proposed e-health system is also suitable for distributed computing, big data and NoSQL structures, thus allowing the immediate application of machine learning and AI algorithms to discover knowledge patterns from the overall population.",2169-3536,,10.1109/ACCESS.2020.3005638,"Ministry of Science, Innovation and Universities of Spain; Foundation for Biomedical Research of the Prince of Asturias University Hospital (FUHUPA); National Secretariat of Science, and the Technology and Innovation of Panama (SENACYT-PANAMA) through the National Research System (SNI-PANAMA) [Design and implementation of a low-cost intelligent system for pre-diagnosis and telecare of infectious diseases in older people (SPIDEP)](grant numbers:AC16/00061); 2nd Joint Call for Research and Innovation (ERANet-LAC) of the Seventh Framework Program for Research and Technological Development (FP7) of the European Union(grant numbers:ELAC2015/T09-0819 SPIDEP); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9127930,Artificial intelligence;e-health;elderly people;infectious diseases;microservice architecture;microservices;telemonitoring,Infectious diseases;Senior citizens;Computer architecture;Hospitals;Technological innovation;Cloud computing,,22.0,,80,CCBY,29 Jun 2020,,,IEEE,IEEE Journals
Microservices: Migration of a Mission Critical System,M. Mazzara; N. Dragoni; A. Bucchiarone; A. Giaretta; S. T. Larsen; S. Dustdar,"Innopolis University, Innopolis, Russia; Technical University of Denmark, Copenhagen, Denmark; Fondazione Bruno Kessler, Trento, Italy; Örebro University, Orebro, Sweden; Danske Bank, Copenhagen, Denmark; TU Wien, Wien, Austria",IEEE Transactions on Services Computing,6 Oct 2021,2021,14,5,1464,1477,"An increasing interest is growing around the idea of microservices and the promise of improving scalability when compared to monolithic systems. Several companies are evaluating pros and cons of a complex migration. In particular, financial institutions are positioned in a difficult situation due to the economic climate and the appearance of agile competitors that can navigate in a more flexible legal framework and started their business since day one with more agile architectures and without being bounded to outdated technological standard. In this paper, we present a real world case study in order to demonstrate how scalability is positively affected by re-implementing a monolithic architecture (MA) into a microservices architecture (MSA). The case study is based on the FX Core system, a mission critical system of Danske Bank, the largest bank in Denmark and one of the leading financial institutions in Northern Europe. The technical problem that has been addressed and solved in this paper is the identification of a repeatable migration process that can be used to convert a real world Monolithic architecture into a Microservices architecture in the specific setting of financial domain, typically characterized by legacy systems and batch-based processing on heterogeneous data sources.",1939-1374,,10.1109/TSC.2018.2889087,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8585089,Service computing;software architecture;scalability;microservices,Scalability;Computer architecture;Service-oriented architecture;Tools;Mission critical systems;Automation,,29.0,,38,IEEE,21 Dec 2018,,,IEEE,IEEE Journals
A Service Oriented Architecture for the Digitalization and Automation of Distribution Grids,M. Pau; M. Mirz; J. Dinkelbach; P. Mckeever; F. Ponci; A. Monti,"Institute for Automation of Complex Power Systems, RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems, RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems, RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems, RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems, RWTH Aachen University, Aachen, Germany; Institute for Automation of Complex Power Systems, RWTH Aachen University, Aachen, Germany",IEEE Access,11 Apr 2022,2022,10,,37050,37063,"Modern distribution grids are complex systems that need advanced management for their secure and reliable operation. The Information and Communication Technology domain today offers unprecedented opportunities for the smart design of tools in support of grid operators. This paper presents a new philosophy for the digitalization and automation of distribution grids, based on a modular architecture of microservices implemented via container technology. This architecture enables a service-oriented deployment of the intelligence needed in the Distribution Management Systems, moving beyond the traditional view of monolithic software installations in the control rooms. The proposed architecture unlocks a broad set of possibilities, including cloud-based implementations, extension of legacy systems and fast integration of machine learning-based analytic tools. Moreover, it potentially opens a completely new market of turnkey services for distribution grid management, thus avoiding large upfront investments for grid operators. This paper presents the main concepts and benefits of the proposed philosophy, together with an example of field implementation based on open source components carried out in the context of the European project SOGNO.",2169-3536,,10.1109/ACCESS.2022.3164393,"Service Oriented Grid for the Network of the Future (SOGNO) and Platform for Operation of Distribution Networks (PLATONE), which are European Projects; European Union’s Horizon 2020 Research and Innovation Program(grant numbers:774613,864300); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9748116,Cloud computing;distribution grid automation;distribution management system;IoT platform;microservice architecture;smart grid,Computer architecture;Cloud computing;Automation;Software;Power systems;Smart grids;Microservice architectures,,21.0,,73,CCBY,4 Apr 2022,,,IEEE,IEEE Journals
Detecting Inconsistencies in Microservice-Based Systems: An Annotation-Assisted Scenario-Oriented Approach,C. -A. Sun; Y. Gong; M. Li; L. Xu; J. Han; Y. Han,"Department of Computer Science and Technology, University of Science and Technology Beijing, Beijing, China; Department of Computer Science and Technology, University of Science and Technology Beijing, Beijing, China; Department of Computer Science and Technology, University of Science and Technology Beijing, Beijing, China; Intelligent Technology Research Institute, China Electronic Technology Group Corporation, Beijing, China; School of Software and Electrical Engineering, Swinburne University of Technology, Melbourne, VIC, Australia; School of Information Engineering, North China University of Technology, Beijing, China",IEEE Transactions on Services Computing,8 Oct 2024,2024,17,5,2194,2209,"Microservice architecture (MSA) has been widely adopted to develop various large-scale distributed systems. Microservice-based systems (MBSs) comprise a number of independently deployed microservices fulfilling the specific functionalities. Unique characteristics of microservices, such as independent and parallel development, rapid iteration, and distributed deployment, result in low observability and reliability of MBSs. A typical solution is to regulate system behavior in specifications of MBSs, and then develop and test MBSs based on these specifications. However, current microservice specifications focus on describing the APIs of microservices without describing the behavior expectation for an MBS. In this article, we propose an annotation-assisted and scenario-oriented approach, called MSA_Sighter, to detect behavior inconsistencies in MBSs. In MSA_Sighter, the details of an MBS are captured in a description model (MSDM), which can be extracted automatically from the functional services through annotation-assisted runtime component instance analysis and static program analysis. Given a specific business scenario, inconsistency detection is conducted by analyzing the actual behavior's conformance to the expected behavior, where the former is collected through distributed tracing while the latter is derived from the MSDM. We have developed a supporting tool called ConsChecker and evaluated MSA_Sighter's effectiveness on three open-source MBSs in GitHub. The experimental results have shown that MSA_Sighter can effectively detect inconsistencies in MBSs during system development and evolution.",1939-1374,,10.1109/TSC.2024.3399652,"National Natural Science Foundation of China(grant numbers:62272037,61872039); Open Research Fund Program of Beijing Key Laboratory on Integration and Analysis of Large-scale Stream Data(grant numbers:220190804); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10542425,Microservice;microservice-based systems;scenario-oriented testing;inconsistency detection;conformance testing;verification;software evolution,Microservice architectures;Unified modeling language;Computer architecture;Software systems;Restful API;Java;Business,,,,46,IEEE,30 May 2024,,,IEEE,IEEE Journals
Servitization of Customized 3D Assets and Performance Comparison of Services and Microservices Implementations,A. Ruiz-Zafra; J. Pigueiras-del-Real; M. Noguera; L. Chung; D. G. Barres; K. Benghazi,"Departament of Software Engineering - ETSIIT, University of Granada, Granada, Spain; Departament of Physics and Condensed Material, University of Cadiz, Cadiz, Spain; Departament of Software Engineering - ETSIIT, University of Granada, Granada, Spain; Departament of Computer Science, University of Texas at Dallas (UT Dallas), Richardson, TX, USA; Departament of Software Engineering - ETSIIT, University of Granada, Granada, Spain; Departament of Software Engineering - ETSIIT, University of Granada, Granada, Spain",IEEE Transactions on Services Computing,5 Feb 2024,2024,17,1,194,208,"3D models (or assets) that are present in many of modern software applications are first modeled by graphic designers using dedicated computer graphic tools and then integrated into such software applications or apps by software developers. This simple workflow/procedure requires developers to have a basic grounding in computer graphics, since 3D engines, libraries and third-party software are needed for this kind of integrations. Oftentimes, 3D designers are also required to customize or produce versions of a 3D model and thus, they must re-model all the assets before they are returned back to the developers for integration into the applications. This procedure also occurs whenever a modification or customization is requested. One possible significant improvement to this traditional, poorly automated workflow is to use services-oriented technology and features servitization to carry out the customization of 3D assets on-demand. In this article, we introduce $ \mu $μS3D, an open-source microservices-based platform designed to support features relating to the customization of 3D models. $ \mu $μS3D not only enables 3D assets to be customized without the need for computer graphic tools or designers, but also allows 3D models to be visualized through web technologies (e.g., HTML, Javascript and web component to visualize and interact with 3D models), thereby avoiding the development of computer graphics libraries or components in final software products. The article describes the elements that $ \mu $μS3D comprises, explains how it works and presents a series of load tests to compare the performance (time consumption, CPU and memory utilization) of $ \mu $μS3D when implemented and deployed as a microservices platform against a monolithic-based implementation, showing similar results with a low number of users (and requests) but reducing, on average, 64.32% the response time in the microservice-based implementation for a large number of users; reducing CPU utilization on microservice-based implementation and remaining the memory usage more or less constant in both implementations.",1939-1374,,10.1109/TSC.2023.3339991,"Spanish Ministry of Science and Innovation(grant numbers:PID2020-118112RB-C21,PID2020-118112RB-C22); Plan Andaluz de Investigación, Desarrollo e Innovación(grant numbers:PAIDI 2020); Proyectos de investigación orientados a los retos de la sociedad andaluza(grant numbers:P18-RT-4550); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10345729,3D models;graphics;services;microservices;customization;  $ \mu $   μ     s3d;architectures,Three-dimensional displays;Solid modeling;Microservice architectures;Software;Computational modeling;Load modeling;Libraries,,,,39,IEEE,6 Dec 2023,,,IEEE,IEEE Journals
On Optimization of Next-Generation Microservice-Based Core Networks,A. Tassi; D. Warren; Y. Wang; D. Bhamare; R. Behravesh,"Advanced Network Research, Samsung R&D Institute, Staines, U.K.; Communications Research, Samsung R&D Institute, Staines, U.K.; Advanced Network Research, Samsung R&D Institute, Staines, U.K.; Advanced Network Research, Samsung R&D Institute, Staines, U.K.; Advanced Network Research, Samsung R&D Institute, Staines, U.K.",IEEE Transactions on Vehicular Technology,19 Jun 2024,2024,73,6,9199,9204,"Next-generation mobile core networks are required to be scalable and capable of efficiently utilizing heterogeneous bare metal resources that may include edge servers. To this end, microservice-based solutions where control plane procedures are deconstructed in their fundamental building blocks are gaining momentum. This letter proposes an optimization framework delivering the partitioning and mapping of large-scale microservice graphs onto heterogeneous bare metal deployments while minimizing the total network traffic among servers. An efficient heuristic strategy for solving the optimization problem is also provided. Simulation results show that, with the proposed framework, a microservice-based core can consistently support the requested load in heterogeneous bare metal deployments even when alternative architecture fails. Besides, our framework ensures an overall reduction in the control plane-related network traffic if compared to current core architectures.",1939-9359,,10.1109/TVT.2024.3355335,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10402017,5G;6G;microservice and control plane;SBA,Servers;Optimization;Noise measurement;Metals;Microservice architectures;Telecommunication traffic;Computational modeling,,,,12,IEEE,17 Jan 2024,,,IEEE,IEEE Journals
Containerized Microservices: A Survey of Resource Management Frameworks,L. M. Al Qassem; T. Stouraitis; E. Damiani; I. M. Elfadel,"Center for Secure Cyber Physical Systems and the College of Computing and Mathematical Sciences, Khalifa University, Abu Dhabi, UAE; Center for Secure Cyber Physical Systems and the College of Computing and Mathematical Sciences, Khalifa University, Abu Dhabi, UAE; Center for Secure Cyber Physical Systems and the College of Computing and Mathematical Sciences, Khalifa University, Abu Dhabi, UAE; Center for Secure Cyber Physical Systems and the College of Computing and Mathematical Sciences, Khalifa University, Abu Dhabi, UAE",IEEE Transactions on Network and Service Management,22 Aug 2024,2024,21,4,3775,3796,"The growing adoption of microservice architectures (MSAs) has led to major research and development efforts to address their challenges and improve their performance, reliability, and robustness. Important aspects of MSA that are not sufficiently covered in the open literature include efficient cloud resource allocation and optimal power management. Other aspects of MSA remain widely scattered in the literature, including cost analysis, service level agreements (SLAs), and demand-driven scaling. In this article, we examine recent cloud frameworks for containerized microservices with a focus on efficient resource utilization using auto-scaling. We classify these frameworks on the basis of their resource allocation models and underlying hardware resources. We highlight current MSA trends and identify workload-driven resource sharing within microservice meshes and SLA streamlining as two key areas for future microservice research.",1932-4537,,10.1109/TNSM.2024.3388633,Khalifa University Center of Secure Cyberphysical System; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10499978,Microservices;containers;resource management;container orchestration;machine learning;workload forecasting;reactive allocation;predictive allocation,Microservice architectures;Resource management;Cloud computing;Containers;Service level agreements;Computer architecture;Surveys,,1.0,,120,IEEE,15 Apr 2024,,,IEEE,IEEE Journals
Design of Industrial Edge Applications Based on IEC 61499 Microservices and Containers,W. Dai; Y. Zhang; L. Kong; J. H. Christensen; D. Huang,"Shanghai Jiao Tong University, Shanghai, China; Shanghai Jiao Tong University, Shanghai, China; Huawei Technology Ltd., Shenzhen, China; Holobloc Inc., Cleveland, OH, USA; Department of Automation, Shanghai Jiao Tong University Shanghai, Shanghai, China",IEEE Transactions on Industrial Informatics,21 Jun 2023,2023,19,7,7925,7935,"Industrial automation is entering a new era of the Industrial Internet with enhanced computing, communication, and storage capabilities provided by cloud computing and field devices. The paradigm of automation systems is shifting from the ISA-95 pyramid to the two-layers architecture: industrial cloud and edge computing. Industrial software is also evolving under the new architecture in ways for which dedicated software applications are no longer suited. Service-based industrial cloud and edge applications provide maximum flexibility, interoperability, and efficiency by combining the IEC 61499 standard, microservice architecture, and container technology. This article provides orchestration methods and deployment procedures for the OT-IT hybrid industrial edge applications. The feasibility of the proposed approach is demonstrated by an industrial case study with accompanying performance analysis.",1941-0050,,10.1109/TII.2022.3214199,"National R&D Key Program of China(grant numbers:2021YFB1714000); National Natural Science Foundation of China(grant numbers:61973216,62122048); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9918040,Industrial edge computing;IEC 61499;microservices;linux container;virtualization,Microservice architectures;IEC Standards;Cloud computing;Computer architecture;Containers;Automation;Virtualization,,10.0,,30,IEEE,13 Oct 2022,,,IEEE,IEEE Journals
MicroNet: Operation Aware Root Cause Identification of Microservice System Anomalies,J. Yang; Y. Guo; Y. Chen; Y. Zhao,"School of Information and Electronic Engineering, Beijing Jiaotong University, Beijing, China; School of Information and Electronic Engineering, Beijing Jiaotong University, Beijing, China; School of Information and Electronic Engineering, Beijing Jiaotong University, Beijing, China; School of Information and Electronic Engineering, Beijing Jiaotong University, Beijing, China",IEEE Transactions on Network and Service Management,22 Aug 2024,2024,21,4,4255,4267,"Microservice architecture has been widely adopted in large-scale applications. However, it also brings new challenges to ensuring reliable performance and maintenance due to the huge volume of data and complex dependencies of microservices. Existing approaches still suffer from the over-aggregation of data, interference from anomaly propagation, and ignoration of component differences. To solve these issues, this paper builds a root cause diagnosis framework at the operation granularity, named as MicroNet. Since operations are subfunctions of microservices, recorded as invocation purposes, we propose the operation-centric perspective, to realize fine-grained data aggregation and operation-level anomaly backtracking. We decompose the diagnosis task into four phases: dependency graph construction, anomaly detection, anomaly evaluation, and culprit location. To construct the invocation dependency accurately, we propose the concept of meta call, defined as the triple (caller, operation, callee), the smallest unit that can be aggregated. Based on the dependency graph, we quantify the operation’s abnormality by analyzing the operation execution process, to backtrack the propagated anomalies. Then, we customize a personalized PageRank algorithm to identify the root cause in which invocation latency and different invocation relationships are considered simultaneously. Our experimental evaluation on an open dataset shows that MicroNet can effectively locate root causes with 90% mean average precision, outperforming state-of-the-art methods.",1932-4537,,10.1109/TNSM.2024.3387552,National Key Research and Development Project of China(grant numbers:2022YFB3303702); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10500843,Microservice architecture;operation analysis;root cause location,Microservice architectures;Data aggregation;Interference;Time factors;System performance;Receivers;Logic gates,,1.0,,63,IEEE,16 Apr 2024,,,IEEE,IEEE Journals
A New Data Processing Architecture for Multi-Scenario Applications in Aviation Manufacturing,W. Wang; L. Fan; P. Huang; H. Li,"School of Mechanical and Electrical Engineering, University of Electronic Science and Technology of China, Chengdu, China; School of Mechanical and Electrical Engineering, University of Electronic Science and Technology of China, Chengdu, China; School of Mechanical and Electrical Engineering, University of Electronic Science and Technology of China, Chengdu, China; School of Mechanical and Electrical Engineering, University of Electronic Science and Technology of China, Chengdu, China",IEEE Access,5 Jul 2019,2019,7,,83637,83650,"The development of industry 4.0 has spurred the transformation of traditional manufacturing into modern industrial Internet-of-Things. The most notable feature during this transition is the improvement of digitization and intelligence based on the massive data drives. In such a data-driven environment, the processing, storage, and utilization of the industry data get more and more important. Usually, the traditional data processing architecture runs as a one-way streamline, which cannot adapt to the different requirements of the multi-scenario application. This paper proposed a new industrial big data processing architecture called Phi architecture, which can realize many functions such as batch data processing and stream data processing, distributed storage and access, and real-time control. Compared with other data processing architecture, the Phi architecture combined with edge computing and feedback control has the ability to deal with the different demands in aviation manufacturing. Next, the new architecture is designed for microservices pattern, which improves the flexibility and stability of the architecture, and makes it independent operated in multi-scenarios, such as state monitoring of workshop, adaptive data acquisition, feedback control, and user-oriented information classification. As a proof of concept, the architecture has been tested in a simulation digital manufacturing workshop. The results verify the improved effectiveness of the Phi architecture on the data feedback control and real-time processing. And, the development of microservices architecture greatly improves the efficiency, adaptability, and extensibility of the manufacturing process.",2169-3536,,10.1109/ACCESS.2019.2925114,National Science and Technology Major Project(grant numbers:2017ZX04002001); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8746121,Data processing architecture;real-time feedback;edge computing;microservices;multi-scenario application,Computer architecture;Data processing;Edge computing;Manufacturing;Cloud computing;Real-time systems;Industries,,19.0,,37,CCBY,26 Jun 2019,,,IEEE,IEEE Journals
Advancing Static Code Analysis With Language-Agnostic Component Identification,M. Schiewe; J. Curtis; V. Bushong; T. Cerny,"Department of Computer Science, Baylor University, Waco, TX, USA; Department of Computer Science, Baylor University, Waco, TX, USA; Department of Computer Science, Baylor University, Waco, TX, USA; Department of Computer Science, Baylor University, Waco, TX, USA",IEEE Access,24 Mar 2022,2022,10,,30743,30761,"Static code analysis of software systems has proven beneficial for a broad range of domains, including security assessments, coding practice, error detection, and others. However, as modern systems have grown in complexity and heterogeneity over the past few decades, advances in development frameworks have dominated. Rather than involving low-level language constructs, these frameworks typically focus on software components, including data entities, controllers, and endpoints. As a result, current code analysis approaches have become unsuitable for analyzing these modern systems due to their focus on low-level constructs in a single language. Thus, code analysis has become a far more complicated endeavor thanks to the plethora of languages, frameworks, and design approaches in modern software development. This paper presents a novel approach to solving the problem of being tied to a single language and its low-level constructs. The system’s source code is transformed into an intermediate representation called a language-agnostic abstract-syntax tree. This system representation is then assessed by generalized component parsers that extract relevant high-level information, such as components, from low-level structures. The design of the approach is presented here in detail, along with its evaluation in a case study involving two large, heterogeneous, cloud-native system benchmarks (Java and C++ microservices). The study demonstrates a unified identification approach to determine system data entities and endpoints. Utilizing higher-level constructs, such as components, can advance the current practice of system analysis to better face broader problems introduced by modern system development practices.",2169-3536,,10.1109/ACCESS.2022.3160485,National Science Foundation(grant numbers:1854049); Red Hat Research (https://research.redhat.com); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9737496,Code analysis;distributed systems;enterprise architecture;microservices,Codes;Microservice architectures;Unified modeling language;Task analysis;Static analysis;Complexity theory;Optimization,,19.0,,45,CCBY,17 Mar 2022,,,IEEE,IEEE Journals
On Code Analysis Opportunities and Challenges for Enterprise Systems and Microservices,T. Cerny; J. Svacina; D. Das; V. Bushong; M. Bures; P. Tisnovsky; K. Frajtak; D. Shin; J. Huang,"Department of Computer Science, Baylor University, Waco, USA; Department of Computer Science, Baylor University, Waco, USA; Department of Computer Science, Baylor University, Waco, USA; Department of Computer Science, Baylor University, Waco, USA; Department of Computer Science, Faculty of Electrical Engineering, Czech Technical University, Prague, Czech Republic; Red Hat Czech, Brno, Czech Republic; Department of Computer Science, Faculty of Electrical Engineering, Czech Technical University, Prague, Czech Republic; Department of Computer Science, New Mexico Tech, Socorro, USA; School of Computer Science, Chongqing University of Posts and Telecommunications, Chongqing, China",IEEE Access,10 Sep 2020,2020,8,,159449,159470,"Code analysis brings excellent benefits to software development, maintenance, and quality assurance. Various tools can uncover code defects or even software bugs in a range of seconds. For many projects and developers, the code analysis tools became essential in their daily routines. However, how can code analysis help in an enterprise environment? Enterprise software solutions grow in scale and complexity. These solutions no longer involve only plain objects and basic language constructs but operate with various components and mechanisms simplifying the development of such systems. Enterprise software vendors have adopted various development and design standards; however, there is a gap between what constructs the enterprise frameworks use and what current code analysis tools recognize. This manuscript aims to challenge the mainstream research directions of code analysis and motivate for a transition towards code analysis of enterprise systems with interesting problems and opportunities. In particular, this manuscript addresses selected enterprise problems apparent for monolithic and distributed enterprise solutions. It also considers challenges related to the recent architectural push towards a microservice architecture. Along with open-source proof-of-concept prototypes to some of the challenges, this manuscript elaborates on code analysis directions and their categorization. Furthermore, it suggests one possible perspective of the problem area using aspect-oriented programming.",2169-3536,,10.1109/ACCESS.2020.3019985,National Science Foundation(grant numbers:1854049); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9179733,Code analysis;distributed systems;enterprise architecture;enterprise systems;global governance;microservice,Computer architecture;Software;Standards;Security;Computer science;Best practices,,18.0,,184,CCBY,28 Aug 2020,,,IEEE,IEEE Journals
The Jaseci Programming Paradigm and Runtime Stack: Building Scale-Out Production Applications Easy and Fast,J. Mars; Y. Kang; R. Daynauth; B. Li; A. Mahendra; K. Flautner; L. Tang,"University of Michigan, Ann Arbor, MI, USA; University of Michigan, Ann Arbor, MI, USA; University of Michigan, Ann Arbor, MI, USA; University of Michigan, Ann Arbor, MI, USA; University of Michigan, Ann Arbor, MI, USA; University of Michigan, Ann Arbor, MI, USA; University of Michigan, Ann Arbor, MI, USA",IEEE Computer Architecture Letters,23 Aug 2023,2023,22,2,101,104,"Today's production scale-out applications include many sub-application components, such as storage backends, logging infrastructure and AI models. These components have drastically different characteristics, are required to work in collaboration, and interface with each other as microservices. This leads to increasingly high complexity in developing, optimizing, configuring, and deploying scale-out applications, raising the barrier to entry for most individuals and small teams. We developed a novel co-designed runtime system, Jaseci, and programming language, Jac, which aims to reduce this complexity. The key design principle throughout Jaseci's design is to raise the level of abstraction by moving as much of the scale-out data management, microservice componentization, and live update complexity into the runtime stack to be automated and optimized automatically. We use real-world AI applications to demonstrate Jaseci's benefit for application performance and developer productivity.",1556-6064,,10.1109/LCA.2023.3274038,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10129141,Serverless computing;artificial intelligence;warehouse-scale computing;runtimes;programming languages,Runtime;Complexity theory;Programming;Microservice architectures;Libraries;Distributed databases;Measurement,,,,17,IEEE,18 May 2023,,,IEEE,IEEE Journals
An Anomaly Detection Algorithm for Microservice Architecture Based on Robust Principal Component Analysis,M. Jin; A. Lv; Y. Zhu; Z. Wen; Y. Zhong; Z. Zhao; J. Wu; H. Li; H. He; F. Chen,"School of Mathematics, South China University of Technology, Guangzhou, China; School of Mathematics, South China University of Technology, Guangzhou, China; School of Mathematics, South China University of Technology, Guangzhou, China; JOYY Inc., Guangzhou, China; JOYY Inc., Guangzhou, China; School of Mathematics, South China University of Technology, Guangzhou, China; School of Mathematics, South China University of Technology, Guangzhou, China; School of Mathematics, South China University of Technology, Guangzhou, China; School of Mathematics, South China University of Technology, Guangzhou, China; School of Management Administration, Guangdong Industry Polytechnic, Guangzhou, China",IEEE Access,29 Dec 2020,2020,8,,226397,226408,"Microservice architecture (MSA) is a new software architecture, which divides a large single application and service into dozens of supporting microservices. With the increasingly popularity of MSA, the security issues of MSA get a lot of attention. In this paper, we propose an algorithm for mining causality and the root cause. Our algorithm consists of two parts: invocation chain anomaly analysis based on robust principal component analysis (RPCA) and a single indicator anomaly detection algorithm. The single indicator anomaly detection algorithm is composed of Isolation Forest (IF) algorithm, One-Class Support Vector Machine (SVM) algorithm, Local Outlier Factor (LOF) algorithm, and  $3\sigma $  principle. For general and network time-consuming anomaly in the process of the MSA, we formulate different anomaly time-consuming detection strategies. We select a batch of sample data and three batches of test data of the 2020 International AIOps Challenge to debug our algorithm. According to the scoring criteria of the competition organizers, our algorithm has an average score of 0.8304 (The full score is 1) in the four batches of data. Our proposed algorithm has higher accuracy than some traditional machine learning algorithms in anomaly detection.",2169-3536,,10.1109/ACCESS.2020.3044610,"National Natural Science Foundation of China(grant numbers:61802129); Natural Science Foundation of Guangdong Province, China(grant numbers:2018A030310381); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9293310,Microservice architecture;root cause analysis;anomaly detection,Anomaly detection;Standards;Topology;Machine learning algorithms;Signal processing algorithms;Containers,,24.0,,42,CCBYNCND,14 Dec 2020,,,IEEE,IEEE Journals
Distributed Digital Twins as Proxies-Unlocking Composability and Flexibility for Purpose-Oriented Digital Twins,A. Aziz; S. S. Chouhan; O. Schelén; U. Bodin,"Department of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Department of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Department of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Department of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden",IEEE Access,15 Dec 2023,2023,11,,137577,137593,"In the realm of the Industrial Internet of Things (IoT) and Industrial Cyber-Physical Systems (ICPS), Digital Twins (DTs) have revolutionized the management of physical entities. However, existing implementations often face constraints due to hardware-centric approaches and limited flexibility. This article introduces a transformative paradigm that harnesses the potential of distributed digital twins as proxies, enabling software-centricity and unlocking composability and flexibility for purpose-oriented digital twin development and deployment. The proposed microservices-based architecture, rooted in service-oriented architecture (SOA) and microservices principles, emphasizes reusability, modularity, and scalability. Leveraging the Lean Digital Twin Methodology and packaged business capabilities expedites digital twin creation and deployment, facilitating dynamic responses to evolving industrial demands. This architecture segments the industrial realm into physical and virtual spaces, where core components are responsible for digital twin management, deployment, and secure interactions. By abstracting and virtualizing physical entities into individual digital twins, this approach lays the groundwork for purpose-oriented composite digital twin creation. Our key contributions involve a comprehensive exposition of the architecture, a practical proof-of-concept (PoC) implementation, and the application of the architecture in a use-case scenario. Additionally, we provide an analysis, including a quantitative evaluation of the proxy aspect and a qualitative comparison with traditional approaches. This assessment emphasizes key properties such as reusability, modularity, abstraction, discoverability, and security, transcending the limitations of contemporary industrial systems and enabling agile, adaptable digital proxies to meet modern industrial demands.",2169-3536,,10.1109/ACCESS.2023.3340132,projects Arrowhead flexible Production Value Network (fPVN) [EU Key Digital Technologies Joint Undertaking (KDT JU)](grant numbers:101111977); Mine.io (Horizon Europe)(grant numbers:101091885); AIMS5.0 (EU KDT JU)(grant numbers:10111208); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10345582,OT virtualization;distributed digital twin as proxy;edge;cloud;composition;flexibility,Digital twins;Industrial Internet of Things;Interoperability;Computer architecture;Security;Virtualization;Microservice architectures,,2.0,,66,CCBYNCND,5 Dec 2023,,,IEEE,IEEE Journals
Component-Based Microservices for Flexible and Scalable Automation of Industrial Bioprocesses,V. Ibarra-Junquera; A. González; C. M. Paredes; D. Martínez-Castro; R. A. Nuñez-Vizcaino,"Laboratorio de Agrobiotecnología, Universidad de Colima, Coquimatlán, México; Laboratorio de Agrobiotecnología, Universidad de Colima, Coquimatlán, México; Facultad de Ingeniería, Universidad Autónoma de Occidente, Cali, Colombia; Facultad de Ingeniería, Universidad Autónoma de Occidente, Cali, Colombia; Facultad de Ingeniería Mecánica y Eléctrica, Universidad de Colima, Coquimatlán, México",IEEE Access,19 Apr 2021,2021,9,,58192,58207,"Industry 4.0 involves the digital transformation of the industry with the integration and digitization of all industrial processes that make up the value chain, which is characterized by adaptability, flexibility, and efficiency to meet the needs of customers in today's market. Therefore, the adaptations of the new bioprocess industry require a lot of flexibility to react quickly and constantly to market changes and to be able to offer more specialized, customized products with high operational efficiency. This paper presents a flexible, scalable, and robust framework based on software components, container technology, microservice concepts, and the publish/subscribe paradigm. This framework allows new components to be added or removed online, without the need for system reconfiguration, while maintaining temporal and functional constraints in industrial automation systems. The main objective of the framework proposed is the use of components based on microservices, allowing easy implementation, scalability, and fast maintenance, without losing or degrading the robustness from previous developments. Finally, the effectiveness of the proposed framework was verified in two case studies (1) a soursop soda making process is presented, with a fuzzy controller implemented to keep the pasteurizer output flow constant (UHT) and (2) an automatic storage tank selection and filling process with actuated valves to direct the fluid to the corresponding tank at the time to start the process. The results showed that the platform provided a high-fidelity design, analysis, and testing environment for the flow of cyber information and its effect on the physical operation in a beverage processing plant with high demand for flexibility, scalability, and robustness of its processes, as they were experimentally verified in a real production process.",2169-3536,,10.1109/ACCESS.2021.3072040,"Research Cooperation between the Universidad de Colima (Mexico), the Universidad Autónoma de Occidente (Colombia), and the Juice Production Plant Punta Delicia, Colima, Mexico; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9399423,Industry 40;distributed industrial automation systems;interoperability;middleware;industrial cyber-physical systems,Computer architecture;Scalability;Containers;Industries;Real-time systems;Production;Process control,,11.0,,30,CCBY,9 Apr 2021,,,IEEE,IEEE Journals
Scheduling Multi-Component Applications Across Federated Edge Clusters With Phare,G. Castellano; S. Galantino; F. Risso; A. Manzalini,"Centre Inria d’Université Côte d’Azur, Valbonne, France; Department of Computer and Control Engineering, Politecnico di Torino, Turin, Italy; Department of Computer and Control Engineering, Politecnico di Torino, Turin, Italy; Innovation Labs, Telecom Italia Mobile, Turin, Italy",IEEE Open Journal of the Communications Society,2 Apr 2024,2024,5,,1814,1826,"The shift towards agile microservice architecture has enabled significant benefits for IT companies but has also resulted in increased complexity for Cloud orchestration tools. Traditional tools were designed for centralized data centers and are ineffective for locating microservices in geographically-distributed edge-like infrastructures. This paper presents Phare, a decentralized scheduling algorithm designed to optimize the placement of microservices by satisfying their computing and communication demands while minimizing deployment costs. Phare employs a heuristic-based approach to solve the NP-Hard scheduling problem, prioritizing the microservices with the more stringent requirements and placing them on the most convenient computing facilities, based on the concept of affinity, contributing to the field by providing a more holistic approach to resource scheduling in edge computing. We validate our approach against Firmament, the state-of-the-art workload scheduling algorithm for component-based applications, on simulated edge infrastructures with hundreds of clusters. Phare achieves up to a  $10\times $  reduction in terms of deployment costs compared to Firmament while providing a much lower scheduling latency.",2644-125X,,10.1109/OJCOMS.2024.3377917,"European Union’s Horizon Europe Research and Innovation Programme Project FLUIDOS (Flexible, Scalable, Secure, and Decentralised Operating System)(grant numbers:101070473); TIM S.p.A. through the Ph.D. Scholarship; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10473112,Resource sharing;cloud-to-edge;service allocation,Costs;Microservice architectures;Task analysis;Scheduling algorithms;Data centers;Cloud computing;Resource management,,,,53,CCBYNCND,18 Mar 2024,,,IEEE,IEEE Journals
Decision as a Service for Transaction Banking Using Service-Oriented Modeling Architecture Methodology,F. L. Gaol; G. D. Nugraha; T. Matsuo,"Computer Science Department, Bina Nusantara University, West Jakarta, Indonesia; Computer Science Department, Bina Nusantara University, West Jakarta, Indonesia; Advanced Institute of Industrial Technology (AIIT), Tokyo, Japan",IEEE Access,2 May 2023,2023,11,,41455,41466,"In order to gain a competitive edge in the banking industry, direct face-to-face interactions between customers and banks are being gradually replaced by virtual interactions. Instead, they communicate using electronic devices such as smartphones, tablets, and web applications. Transaction banking, which provides commercial services for banking products to small, medium, and large corporations, is a highly typical work unit in banking. Shipping and international payments, risk management for international trade, and other services are provided. We use the Service Oriented Modelling Architecture (SOMA) methodology to solve the problem of the transaction banking unit by relocating it from a system with general dependencies to a system that is independent of the entire service and operates on a small function scale. The study found that a decision as a service (DAAS) model with an Enterprise Service Bus (ESB), Business Process Management (BPM), and Business Rule Management (BRM) solution can provide guidelines for the design of decision rules pertaining to integrated or separate business modeling, thereby aiding business unit delivery.",2169-3536,,10.1109/ACCESS.2023.3268284,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10105241,Service oriented modelling architecture (SOMA);enterprise service bus (ESB);business process management (BPM);business rule management (BRM);application programming interface (API);transaction banking,Banking;Business;Service-oriented systems engineering;Computer architecture;System integration;Collaboration;Adaptation models;Application Programming Interfaces;Process monitoring,,,,26,CCBYNCND,19 Apr 2023,,,IEEE,IEEE Journals
Heterogeneous Data-Driven Failure Diagnosis for Microservice-Based Industrial Clouds Toward Consumer Digital Ecosystems,Y. Xu; Z. Qiu; H. Gao; X. Zhao; L. Wang; R. Li,"School of Computer Science and Technology, Xidian University, Xi’an, China; School of Computer Science and Technology, Xidian University, Xi’an, China; School of Computer Engineering and Science and the Key Laboratory of Silicate Cultural Relics Conservation, Ministry of Education, Shanghai University, Shanghai, China; School of Software Technology, Zhejiang University, Ningbo, China; School of Computer Science and Technology, Xidian University, Xi’an, China; School of Computer Science and Technology, Xidian University, Xi’an, China",IEEE Transactions on Consumer Electronics,29 Apr 2024,2024,70,1,2027,2037,"Consumer digital ecosystems include a large volume of different types of applications, and those applications are usually deployed in industrial cloud computing systems. Currently, microservices are one of the most prevailing architectures for industrial clouds. Similar to other architectures, microservices may also produce failures, so failure diagnosis for microservices becomes an inevitable problem in industrial clouds. A majority of existing methods focus on statistical analysis for monitoring data or system topological structure. However, because these methods usually only harness service-level or machine-level metrics, they cannot complete fine-grained failure diagnosis, increasing the running risk of microservice-based industrial clouds. To tackle this issue, in this paper, we design a novel graph structure to represent failure dependencies, especially the heterogeneity, and name it as the heterogeneous failure dependence graph (HFDG). We propose a framework to inform engineers which type of and where failures occur in industrial clouds. The HFDG can be used to mine the propagation of failures between different types of components. We also propose a novel neural network model based on attention mechanism and heterogeneous graph neural network, to fully leverage the metric data and HFDG. We performed experiments on three large-scale public datasets from real-world microservices-based systems. The experimental results demonstrate the superior performance of our model compared to well-known baselines.",1558-4127,,10.1109/TCE.2023.3337351,National Key Research and Development Program(grant numbers:2021YFF0901002); State Key Laboratory of Tibetan Intelligent Information Processing and Application and Tibetan Information Processing and Machine Translation Key Laboratory of Qinghai Province(grant numbers:2023-Z-005); Open Foundation of Yunnan Key Laboratory of Software Engineering(grant numbers:2023SE301); Fundamental Research Funds for the Central Universities(grant numbers:ZYTS23207); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10332462,Heterogeneous data;consumer digital ecosystems;industrial cloud;failure diagnosis;microservice,Measurement;Microservice architectures;Cloud computing;Ecosystems;Monitoring;Feature extraction;Computational modeling,,3.0,,34,IEEE,29 Nov 2023,,,IEEE,IEEE Journals
The Shape of Your Cloud: How to Design and Run Polylithic Cloud Applications,L. Toka,"MTA-BME Information Systems Research Group, MTA-BME Network Softwarization Research Group, Faculty of Electrical Engineering and Informatics, Budapest University of Technology and Economics, Budapest, Hungary",IEEE Access,21 Sep 2022,2022,10,,97971,97982,"Nowadays the major trend in IT dictates deploying applications in the cloud, cutting the monolithic software into small, easily manageable and developable components, and running them in a microservice scheme. With these choices come the questions: which cloud service types to choose from the several available options, and how to distribute the monolith in order to best resonate with the selected cloud features. We propose a model that presents monolithic applications in a novel way and focuses on key properties that are crucial in the development of cloud-native applications. The model focuses on the organization of scaling units, and it accounts for the cost of provisioned resources in scale-out periods and invocation delays among the application components. We analyze dis-aggregated monolithic applications that are deployed in the cloud, offering both Container-as-a-Service (CaaS) and Function-as-a-Service (FaaS) platforms. We showcase the efficiency of our proposed optimization solution by presenting the reduction in operation costs as an illustrative example. We propose to group similarly low scale components together in CaaS, while running dynamically scaled components in FaaS. By doing so, the price is decreased as unnecessary memory provisioning is eliminated, while application response time does not show any degradation.",2169-3536,,10.1109/ACCESS.2022.3206433,"Ministry of Innovation and Technology of Hungary from the National Research, Development and Innovation Fund(grant numbers:128233); FK_18(grant numbers:135074); FK_20(grant numbers:2019-2.1.13-TÉT_IN-2020-00021,2019-2.1.13-TÉT-IN); ÚNKP-22-5 New National Excellence Program of the Ministry for Innovation and Technology from the Source of the National Research, Development and Innovation Fund; János Bolyai Research Scholarship of the Hungarian Academy of Sciences; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9889714,Cloud-native application;container-as-a-service;function-as-a-service;resource footprint;invocation latency;application scaling;microservice architecture,Cloud computing;Microservice architectures;Costs;Resource management;Packaging;Microservice architectures,,1.0,,30,CCBY,14 Sep 2022,,,IEEE,IEEE Journals
Reducing Microservices Interference and Deployment Time in Resource-Constrained Cloud Systems,M. Adeppady; P. Giaccone; H. Karl; C. F. Chiasserini,"Electronics and Telecommunications Department, Politecnico di Torino, Torino, Italy; Electronics and Telecommunications Department, Politecnico di Torino, Torino, Italy; Hasso Plattner Institute, University of Potsdam, Potsdam, Germany; Electronics and Telecommunications Department, Politecnico di Torino, Torino, Italy",IEEE Transactions on Network and Service Management,9 Oct 2023,2023,20,3,3135,3147,"In resource-constrained cloud systems, e.g., at the network edge or in private clouds, it is essential to deploy microservices (MSs) efficiently. Unlike most of the existing approaches, we tackle this issue by accounting for two important facts: (i) the interference that arises when MSs compete for the same resources and degrades their performance, and (ii) the MSs’ deployment time. In particular, we first present some experiments highlighting the impact of interference on the throughput of MSs co-located in the same server, as well as the benefits of MSs’ parallel deployment. Then, we formulate an optimization problem that minimizes the number of used servers while meeting the MSs’ performance requirements. In light of the problem complexity, we design a low-complexity heuristic, called iPlace, that clusters together MSs competing for resources as diverse as possible and, hence, interfering as little as possible. Importantly, clustering MSs also allows us to exploit the benefit of parallel deployment, which greatly reduces the deployment time as compared to the sequential approach applied in prior art and by default in state-of-the-art orchestrators. Our numerical results show that iPlace closely matches the optimum and uses 21-92% fewer servers compared to alternative schemes while proving to be highly scalable. Further, by deploying MSs in parallel using Kubernetes, iPlace reduces the deployment time by 69% compared to state-of-the-art solutions.",1932-4537,,10.1109/TNSM.2023.3235710,"H2020 MSCA-ITN SEMANTIC(grant numbers:861165); European Union’s NextGenerationEU instrument, under the Italian National Recovery and Resilience Plan (NRRP), Mission 4 Component 2 Investment 1.3, enlarged partnership “Telecommunications of the Future” (PE0000001), program “RESTART.”; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10013701,Microservices;performance interference;edge computing;microservice placement;resource contention,Interference;Servers;Throughput;Containers;Microservice architectures;Cloud computing;Degradation,,5.0,,37,IEEE,10 Jan 2023,,,IEEE,IEEE Journals
DeepScaling: Autoscaling Microservices With Stable CPU Utilization for Large Scale Production Cloud Systems,Z. Wang; S. Zhu; J. Li; W. Jiang; K. K. Ramakrishnan; M. Yan; X. Zhang; A. X. Liu,"Key Laboratory of Dependable Service Computing in Cyber Physical Society, Ministry of Education, and the School of Big Data and Software Engineering, Chongqing University, Chongqing, China; Ant Group, Hangzhou, China; Ant Group, Hangzhou, China; Ant Group, Hangzhou, China; Department of Computer Science and Engineering, University of California at Riverside, Riverside, CA, USA; School of Big Data and Software Engineering, Chongqing University, Chongqing, China; School of Big Data and Software Engineering, Chongqing University, Chongqing, China; Ant Group, Hangzhou, China",IEEE/ACM Transactions on Networking,16 Oct 2024,2024,32,5,3961,3976,"Cloud service providers often provision excessive resources to meet the desired Service Level Objectives (SLOs), by setting lower CPU utilization targets. This can result in a waste of resources and a noticeable increase in power consumption in large-scale cloud deployments. To address this issue, this paper presents DeepScaling, an innovative solution for minimizing resource cost while ensuring SLO requirements are met in a dynamic, large-scale production microservice-based system. We propose DeepScaling, which introduces three innovative components to adaptively refine the target CPU utilization of servers in the data center, and we maintain it at a stable value to meet SLO constraints while using minimum amount of system resources. First, DeepScaling forecasts workloads for each service using a Spatio-temporal Graph Neural Network. Secondly, it estimates CPU utilization with a Deep Neural Network, considering factors such as periodic tasks and traffic. Finally, it uses a modified Deep Q-Network (DQN) to generate an autoscaling policy that controls service resources to maximize service stability while meeting SLOs. Evaluation of DeepScaling in Ant Group’s large-scale cloud environment shows that it outperforms state-of-the-art autoscaling approaches in terms of maintaining stable performance and resource savings. The deployment of DeepScaling in the real-world environment of 1900+ microservices saves the provisioning of over 100,000 CPU cores per day, on average.",1558-2566,,10.1109/TNET.2024.3400953,"National Key Research and Development Project(grant numbers:2021YFB1714200); Fundamental Research Funds for the Central Universities(grant numbers:2023CDJKYJH013); Chongqing Technology Innovation and Application Development Project(grant numbers:CSTB2022TIAD-STX0007,CSTB2022TIAD-KPX0067); Postdoctoral Foundation of Chongqing(grant numbers:2020LY13); Research Fund from the Ant Group; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10542703,Microservices autoscaling;cloud systems;horizontal autoscaling;service quality,Microservice architectures;Measurement;Production;Task analysis;Servers;Resource management;Predictive models,,1.0,,50,IEEE,31 May 2024,,,IEEE,IEEE Journals
Enhancing Performance of Distributed Transactions in Microservices via Buffered Serialization,K. Munonye; P. Martinek,"Budapest University of Technology and Economics, Budapest, Hungary; Budapest University of Technology and Economics, Budapest, Hungary",Journal of Web Engineering,22 Sep 2023,2020,19,5-6,647,684,"Although the Microservices Architecture comes with a number of benefits, it is a challenge to design an efficient transaction management for multi-agent transactions that span across multiple services. Since microservices design require a loose coupling between service logic and resources, data used by a distributed transaction is spread across different nodes, there is need to an effective way to ensure data portability, speed consistency for transaction in microservices. Therefore this research addresses both the issue of improving transaction performance and maintaining data portability for distributed transactions in microservices. A novel approach to transaction management termed ‘buffered serialization’ is proposed in this research as a way to improve transaction management by the use serialization libraries. This work has a three-part objective which are (1) to highlight the challenges of distributed transaction management in microservices, (2) to propose an enhanced approach to transaction management through the use of buffered serialization between services (3) to provide a proof of concept for this novel approach. Obtained result indicate a 60% improvement in transaction failure recovery time, 10% higher success rate for load tests but an insignificantly higher resource utilization values.",1544-5976,,10.13052/jwe1540-9589.19564,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10247286,Distributed Transactions;Microservices;Transaction Management;Serialization;Protocol Buffer;Buffered Serialization;Appointment transaction processing,Couplings;Microservice architectures;Distributed databases;Libraries;Resource management,,,,32,,22 Sep 2023,,,River Publishers,River Publishers Journals
Service Based Virtual RAN Architecture for Next Generation Cellular Systems,E. Zeydan; J. Mangues-Bafalluy; J. Baranda; M. Requena; Y. Turk,"Centre Tecnològic de Telecomunicacions de Catalunya, Castelldefels, Barcelona, Spain; Centre Tecnològic de Telecomunicacions de Catalunya, Castelldefels, Barcelona, Spain; Centre Tecnològic de Telecomunicacions de Catalunya, Castelldefels, Barcelona, Spain; Centre Tecnològic de Telecomunicacions de Catalunya, Castelldefels, Barcelona, Spain; Aselsan Corporation, Istanbul, Turkey",IEEE Access,27 Jan 2022,2022,10,,9455,9470,"Service based architecture (SBA) is a paradigm shift from Service-Oriented Architecture (SOA) to microservices, combining their principles. Network virtualization enables the application of SBA in cellular systems. To better guide the software design of this virtualized cellular system with SBA, this paper presents a software perspective and a positional approach to using fundamental development principles for adapting SBA in virtualized Radio Access Networks (vRANs). First, we present the motivation for using an SBA in cellular radio systems. Then, we explore the critical requirements, key principles, and components for the software to provide radio services in SBA. We also explore the potential of applying SBA-based Radio Access Network (RAN) by comparing the functional split requirements of 5G RAN with existing open-source software and accelerated hardware implementations of service bus, and discuss the limitations of SBA. Finally, we present some discussions, future directions, and a roadmap of applying such a high-level design perspective of SBA to next-generation RAN infrastructure.",2169-3536,,10.1109/ACCESS.2022.3144534,European Union (EU) H2020 5GROWTH Project(grant numbers:856709); Generalitat de Catalunya(grant numbers:2017 SGR 1195); National Program on Equipment and Scientific and Technical Infrastructure under the European Regional Development Fund (FEDER)(grant numbers:EQC2018-005257-P); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9684900,Service-based architecture;network interfaces;radio access networks;software,Computer architecture;Software;Radio access networks;5G mobile communication;Cloud computing;Protocols;Hardware,,16.0,,51,CCBY,18 Jan 2022,,,IEEE,IEEE Journals
CoScal: Multifaceted Scaling of Microservices With Reinforcement Learning,M. Xu; C. Song; S. Ilager; S. S. Gill; J. Zhao; K. Ye; C. Xu,"Shenzhen Institute of Advanced Technology, Chinese Academy of Sciences, Shenzhen, China; Shenzhen Institute of Advanced Technology, Chinese Academy of Sciences, Shenzhen, China; Department of Informatics, Vienna University of Technology, Vienna, Austria; School of Electronic Engineering and Computer Science, Queen Mary University of London, London, U.K.; Shenzhen Institute of Advanced Technology, Chinese Academy of Sciences, Shenzhen, China; Shenzhen Institute of Advanced Technology, Chinese Academy of Sciences, Shenzhen, China; State Key Laboratory of IoTSC, University of Macau, Macau, China",IEEE Transactions on Network and Service Management,1 Feb 2023,2022,19,4,3995,4009,"The emerging trend towards moving from monolithic applications to microservices has raised new performance challenges in cloud computing environments. Compared with traditional monolithic applications, the microservices are lightweight, fine-grained, and must be executed in a shorter time. Efficient scaling approaches are required to ensure microservices’ system performance under diverse workloads with strict Quality of Service (QoS) requirements and optimize resource provisioning. To solve this problem, we investigate the trade-offs between the dominant scaling techniques, including horizontal scaling, vertical scaling, and brownout in terms of execution cost and response time. We first present a prediction algorithm based on gradient recurrent units to accurately predict workloads assisting in scaling to achieve efficient scaling. Further, we propose a multi-faceted scaling approach using reinforcement learning called CoScal to learn the scaling techniques efficiently. The proposed CoScal approach takes full advantage of data-driven decisions and improves the system performance in terms of high communication cost and delay. We validate our proposed solution by implementing a containerized microservice prototype system and evaluated with two microservice applications. The extensive experiments demonstrate that CoScal reduces response time by 19%-29% and decreases the connection time of services by 16% when compared with the state-of-the-art scaling techniques for Sock Shop application. CoScal can also improve the number of successful transactions with 6%-10% for Stan’s Robot Shop application.",1932-4537,,10.1109/TNSM.2022.3210211,"National Key Research and Development Program of China(grant numbers:2021YFB3300200); National Natural Science Foundation of China(grant numbers:62102408,62072451); Shenzhen Science and Technology Program(grant numbers:RCBS20210609104609044); Youth Innovation Promotion Association CAS(grant numbers:2019349); CCF-Huawei Innovative Research Plan; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9904920,Cloud computing;workload prediction;microservices;reinforcement learning;brownout;scalability,Microservice architectures;Quality of service;Cloud computing;Predictive models;Costs;Heuristic algorithms;Reinforcement learning,,31.0,,43,IEEE,28 Sep 2022,,,IEEE,IEEE Journals
Workflow-Aware Automatic Fault Diagnosis for Microservice-Based Applications With Statistics,T. Wang; W. Zhang; J. Xu; Z. Gu,"State Key Laboratory of Computer Science, Institute of Software, Chinese Academy of Sciences, Beijing, China; State Key Laboratory of Computer Science, Institute of Software, Chinese Academy of Sciences, Beijing, China; School of Computer Science, University College Dublin, Dublin 4, Ireland; Xiaomi Internet Department, Xiaomi Mobile Software Company Ltd., Beijing, China",IEEE Transactions on Network and Service Management,10 Dec 2020,2020,17,4,2350,2363,"Microservice architectures bring many benefits, e.g., faster delivery, improved scalability, and greater autonomy, so they are widely adopted to develop and operate Internet-based applications. How to effectively diagnose the faults of applications with lots of dynamic microservices has become a key to guarantee applications’ performance and reliability. As a microservice performs various behaviors in different workflows of processing requests, existing approaches often cannot accurately locate the root cause of an application with interactive microservices in a dynamic deployment environment. We propose a workflow-aware automatic fault diagnosis approach for microservice-based applications with statistics. We characterize traces across microservices with calling trees, and then learn trace patterns as baselines. For the faults affecting the workflows of processing requests, we estimate the workflows’ anomaly degrees, and then locate the microservices causing anomalies by comparing the difference between current traces and learned baselines with tree edit distance. For performance anomalies causing significantly increased response time, we employ principal component analysis to extract suspicious microservices with large fluctuation in response time. Finally, we evaluate our approach on three typical microservice-based applications with a series of experiments. The results show that our approach can accurately locate the microservices causing anomalies.",1932-4537,,10.1109/TNSM.2020.3022028,National Key R&D Program of China(grant numbers:2017YFB1400804); National Natural Science Foundation of China(grant numbers:61872344); Beijing Natural Science Foundation(grant numbers:4182070); Youth Innovation Promotion Association of Chinese Academy of Sciences Fund(grant numbers:2018144); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9187406,Fault diagnosis;workflow;microservice;execution traces;statistics,Fault diagnosis;Time factors;Computer architecture;Software systems;Internet,,28.0,,39,IEEE,7 Sep 2020,,,IEEE,IEEE Journals
Edge Computing and Microservices Middleware for Home Energy Management Systems,L. C. B. C. Ferreira; A. D. R. Borchardt; G. D. S. Cardoso; D. A. Mendes Lemes; G. R. D. R. d. Sousa; F. B. Neto; E. R. de Lima; G. Fraidenraich; P. Cardieri; L. G. P. Meloni,"Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil; Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil; Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil; Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil; Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil; Companhia Paranaense de Energia, Curitiba, Parana, Brazil; Department of Hardware Design, Instituto de Pesquisa Eldorado, São Paulo, Campinas, Brazil; Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil; Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil; Department of Communications, School of Electrical and Computer Engineering, University of Campinas (FEEC), São Paulo, Campinas, Brazil",IEEE Access,21 Oct 2022,2022,10,,109663,109676,"A middleware software can be seem as an abstraction layer between hardware and user applications, that facilitates the development and deployment of services in various scenarios, such as those found in Home Energy Management Systems (HEMS). There are several middleware proposals for HEMS, with most of them taking the cloud computing approach. This approach is unconcerned about computing resources but raises a dependency on external connections. This paper presents a middleware for energy management systems, based on the concept of edge computing for smart homes. The paper presents a reference model for the proposed architecture, considering specific requirements for this type of application. The proposed architecture employs the concept of microservices for data access and system configuration. The proposed middleware is designed to work with embedded systems under computational constraints, such as processing capability and storage, to reduce costs and allow its application closer to the user. The middleware is open and customizable to meet the developer’s needs. The proposed solution was implemented and tested in a university laboratory, as well as at the Eldorado Research Institute to confirm the effectiveness of the middleware. The proposal stands out from others found in the literature as it can be implemented using low cost hardware. In addition to using microservices concepts, the proposed middleware is a valuable option for applications that need an edge computing approach. A performance analysis was carried out, using low cost hardware with limited resources. The results show that the proposal can handle a significant number of devices, offering low latency and low error rate, and consuming few processing resources and memory.",2169-3536,,10.1109/ACCESS.2022.3214229,Companhia Paranaense de Energia (COPEL) through the Research and Development Project ANEEL PD-02866-0508/2019; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9917529,Home energy management systems;middleware;Internet of Things,Middleware;Internet of Things;Hardware;Edge computing;Computer architecture;Microservice architectures;Energy management systems;Computer applications,,8.0,,33,CCBY,13 Oct 2022,,,IEEE,IEEE Journals
"OPACA: Toward an Open, Language- and Platform-Independent API for Containerized Agents",B. Acar; T. Küster; O. F. Kupke; R. K. Strehlow; M. G. Augusto; F. Sivrikaya; S. Albayrak,"Chair of Agent Technology, Technische Universität Berlin, Berlin, Germany; GT-ARC gGmbH, Berlin, Germany; GT-ARC gGmbH, Berlin, Germany; GT-ARC gGmbH, Berlin, Germany; Chair of Agent Technology, Technische Universität Berlin, Berlin, Germany; GT-ARC gGmbH, Berlin, Germany; Chair of Agent Technology, Technische Universität Berlin, Berlin, Germany",IEEE Access,22 Jan 2024,2024,12,,10012,10022,"While multi-agent frameworks can provide many advanced features, they often suffer from not being able to seamlessly interact with the outside world, e.g., with web-services or other multi-agent frameworks. This may be one factor that hinders a broader application of multi-agent systems in production systems. A possible solution to this problem is the combination of multi-agent systems with the concepts of micro-services and containerization, providing language-agnostic open interfaces, as well as encapsulation and modularity. In this paper, we propose an API and reference implementation that can be employed by multi-agent systems based on different languages and frameworks. Each agent component is encapsulated in a container and is accessed through its parent runtime platform, which takes care of aspects such as authentication, input validation, monitoring and other infrastructure tasks. Multiple runtime platforms can then be connected to form systems of distributed, heterogeneous multi-agent societies.",2169-3536,,10.1109/ACCESS.2024.3353613,KI-Anwendungen (Go-KI) project (Offenes Innovationslabor KI zur Förderung gemeinwohlorientierter KI-Anwendungen); German Federal Ministry of Labour and Social Affairs (BMAS)(grant numbers:DKI.00.00032.21); German Research Foundation and the Open Access Publication Fund of TU Berlin; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10398198,Multi-agent systems;microservices;Kubernetes;Docker;API,Microservice architectures;Multi-agent systems;Task analysis;Software;Artificial intelligence;Industries;Programming,,1.0,,33,CCBYNCND,12 Jan 2024,,,IEEE,IEEE Journals
A Study on the Aging and Fault Tolerance of Microservices in Kubernetes,J. Flora; P. Gonçalves; M. Teixeira; N. Antunes,"Centre for Informatics and Systems of the University of Coimbra (CISUC), Department of Informatics Engineering, University of Coimbra, Coimbra, Portugal; Centre for Informatics and Systems of the University of Coimbra (CISUC), Department of Informatics Engineering, University of Coimbra, Coimbra, Portugal; Centre for Informatics and Systems of the University of Coimbra (CISUC), Department of Informatics Engineering, University of Coimbra, Coimbra, Portugal; Centre for Informatics and Systems of the University of Coimbra (CISUC), Department of Informatics Engineering, University of Coimbra, Coimbra, Portugal",IEEE Access,26 Dec 2022,2022,10,,132786,132799,"Microservice-based applications are increasingly being adopted along with cloud service models, and nowadays serve millions of customers daily. They are supported by container-based architectures which are managed by orchestration platforms, such as Kubernetes, that monitor, manage, and automate most of the tasks. Although these tools provide failover capabilities, it is not yet studied how effective they are in dealing with diverse types of faults. Fault injection is an effective methodology for validating components that are supposed to detect the malfunctions and report/correct them. This paper studies the effectiveness of Kubernetes in dealing with faults and aging in microservices, and on the possibility of using faults to accelerate aging effects for testing purposes. For this, we conducted an analysis of the implementation and tuning of Kubernetes probes, followed by experiments with varying load and fault injection into two distinct and representative microservice testbeds to analyze the capacity of probes in detecting issues in applications. The goal is to improve the knowledge of researchers and developers on whether Kubernetes can detect different faults and aging issues. Also, even though some services tend to accumulate aging effects, with increasing resource consumption, Kubernetes does not detect them nor acts on them, indicating that probes may be insufficient for aging scenarios. Results also showed that fault injection is useful to accelerate aging effects for the testing and evaluation purposes.",2169-3536,,10.1109/ACCESS.2022.3231191,"Portuguese Foundation for Science and Technology (FCT) through the Ph.D. Grant(grant numbers:2020.05145.BD); Project Adaptive, Intelligent and Distributed Assurance Platform (AIDA)(grant numbers:POCI-01-0247-FEDER-045907); European Regional Development Fund (ERDF) through the Operational Program for Competitiveness and Internationalisation (COMPETE2020); Portuguese FCT under Carnegie Mellon University (CMU) Portugal; FCT - Foundation for Science and Technology, I.P./MCTES through national funds (PIDDAC), within the scope of CISUC R&D Unit(grant numbers:UIDB/00326/2020,UIDP/00326/2020); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9996355,Fault injection;fault tolerance;Kubernetes;microservices;software aging,Aging;Microservice architectures;Probes;Software engineering;Fault tolerant systems;Containers,,3.0,,37,CCBY,21 Dec 2022,,,IEEE,IEEE Journals
Joint Deployment and Request Routing for Microservice Call Graphs in Data Centers,Y. Hu; H. Wang; L. Wang; M. Hu; K. Peng; B. Veeravalli,"Hubei Key Laboratory of Smart Internet Technology, School of Electronic Information and Communications, Huazhong University of Science, Technology, Wuhan, China; Hubei Key Laboratory of Smart Internet Technology, School of Electronic Information and Communications, Huazhong University of Science, Technology, Wuhan, China; Hubei Key Laboratory of Smart Internet Technology, School of Electronic Information and Communications, Huazhong University of Science, Technology, Wuhan, China; Hubei Key Laboratory of Smart Internet Technology, School of Electronic Information and Communications, Huazhong University of Science, Technology, Wuhan, China; Hubei Key Laboratory of Smart Internet Technology, School of Electronic Information and Communications, Huazhong University of Science, Technology, Wuhan, China; Department of Electrical and Computer Engineering, National University of Singapore, Singapore",IEEE Transactions on Parallel and Distributed Systems,2 Oct 2023,2023,34,11,2994,3011,"Microservices are an architectural and organizational paradigm for Internet application development. In cloud data centers, delay-sensitive applications receive massive user requests, which are fed into multiple queues and subsequently served by multiple microservice instances. Accordingly, effective deployment of multiple queues and containers can significantly reduce queuing delay, processing delay, and communication delay. Due to the increased complexity of call dependencies and probabilistic routing paths, the deployment of service instances fully interacts with request routing, bringing great difficulties to service orchestration. In this case, it is valuable to simultaneously consider service deployment and request routing in a fine-grained manner. However, most existing studies considered them as two independent components with local optimization, while data dependencies and the instance-level deployment are ignored. Therefore, this paper proposes to jointly optimize the deployment and request routing of microservice call graphs based on fine-grained queuing network analysis and container orchestration. We first formulate the problem as a mixed-integer nonlinear program and exploit open Jackson queuing networks to model intrinsic data dependencies and analyze response latency. To optimize the overall cost and latency, this paper presents an efficient two-stage heuristic algorithm, which consists of a resource-splitting-based deployment approach and a partition-mapping-based routing method. Further, this paper also provides mathematical analysis on the performance and complexity of the proposed algorithm. Finally, comprehensive trace-driven experiments demonstrate that the overall performance of our approach is better than existing microservice benchmarks. The average deployment cost is reduced by 27.4% and end-to-end response latency is reduced by 15.1% on average.",1558-2183,,10.1109/TPDS.2023.3311767,"National Key Research and Development Program of China(grant numbers:2022ZD0117104); National Natural Science Foundation of China(grant numbers:62171189,62272183); Key Research and Development Program of Hubei Province, China(grant numbers:2022BAA038,2023BAB074,2021BAA026); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10247200,Cloud data centers;microservice call graphs;queuing theory;request routing;service deployment;services computing,Microservice architectures;Routing;Delays;Containers;Optimization;Queueing analysis;Data centers,,9.0,,41,IEEE,11 Sep 2023,,,IEEE,IEEE Journals
A Progressive Web Application Based on Microservices Combining Geospatial Data and the Internet of Things,M. Mena; A. Corral; L. Iribarne; J. Criado,"Applied Computing Group, University of Almería, Almería, Spain; Applied Computing Group, University of Almería, Almería, Spain; Applied Computing Group, University of Almería, Almería, Spain; Applied Computing Group, University of Almería, Almería, Spain",IEEE Access,9 Aug 2019,2019,7,,104577,104590,"Modern Web applications combine information from different sources, such as Web services, static resources, or real-time sensors data. The Internet of Things (IoT) is increasingly being used in these applications to show useful, updated information. However, the information related to the IoT devices is commonly displayed on dashboards for monitoring and control purposes and is not often combined with other types of data. In addition, it is important to base information on the location displayed in the user context. In this paper, we propose the use of a software architecture based on microservices and micro frontends for assisting the user in the friendly, seamless acquisition of geospatial data and information concerning the IoT. Our solution orchestrates those microservices and a component-based progressive Web application (PWA). The main microservice handles the creation of component configurations using a selection graph consisting of component tags and other descriptive properties and also contextual information about the application user. To demonstrate how the proposed architecture works, we present a scenario in which the Web application is dynamically built up by combining the geospatial information, the data acquired from the IoT sensors, and other complementary data.",2169-3536,,10.1109/ACCESS.2019.2932196,EU ERDF and the Spanish Ministry of Economy and Competitiveness (MINECO)(grant numbers:TIN2017-83964-R); Grant of the Spanish Government(grant numbers:FPU17/02010); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8782470,Geospatial data;IoT;microservices;Netflix OSS;micro frontend;progressive Web application,Geospatial analysis;Internet of Things;Computer architecture;Data visualization;Sensors;User experience;Proposals,,17.0,,47,CCBY,31 Jul 2019,,,IEEE,IEEE Journals
A Unified Control Platform and Architecture for the Integration of Wind-Hydrogen Systems Into the Grid,M. B. Abdelghany; V. Mariani; D. Liuzza; O. R. Natale; L. Glielmo,"Department of Engineering, Group for Research on Automatic Control Engineering (GRACE), University of Sannio, Benevento, Italy; Department of Energy Technologies and Renewable Energy Sources, ENEA, Portici, Italy; Department of Engineering, Group for Research on Automatic Control Engineering (GRACE), University of Sannio, Benevento, Italy; KES Knowledge Environment Security S.r.l., Benevento, Italy; Department of Electrical Engineering and Information Technologies, University of Naples Federico II, Napoli, Italy",IEEE Transactions on Automation Science and Engineering,8 Aug 2024,2024,21,3,4042,4057,"Hydrogen is a promising energy vector for achieving renewable integration into the grid, thus fostering the decarbonization of the energy sector. This paper presents the control platform architecture of a real hydrogen-based energy production, storage, and re-electrification system (HESS) paired to a wind farm located in north Norway and connected to the main grid. The HESS consists of an electrolyser, a hydrogen tank, and a fuel cell. The control platform includes the management software, the control algorithms, and the automation technologies operating the HESS in order to address the three use cases (electricity storage, mini-grid, and fuel production) identified in the IEA-HIA Task24 final report, that promote the integration of wind energy into the main grid. The control algorithms have been already developed by the same authors in other papers using mixed-logical dynamical modeling, and implemented via a two-layer model predictive control scheme for each use case, and are quickly introduced in order to make evident their integration into the presented architecture. Simulation test runs with real equipment data, wind generation, load profiles, and market prices are also reported so as to highlight the control platform performances.Note to Practitioners—The paper develops the integration between the management platform of a HESS, paired to a real wind farm in northern Norway, and the control algorithms aimed at scheduling hydrogen production and re-electrification on the basis of several forecast streams about exogenous conditions and different possible operating modes of the wind-hydrogen system. The control algorithms address the three use cases identified by the IEA-HIA in the final report of Task 24 about the integration of wind energy into the grid, namely i) electricity storage, where the HESS is operated in order to enable the wind farm to power smoothing; ii) mini-grid, where the wind farm and the HESS form a mini-grid with a local load (small town) and the HESS is therefore operated in order to fulfill it without and with grid support (in this case buying and selling electricity to the market is also handled); and iii) fuel production, where the HESS is operated in order to fulfill a hydrogen demand (e.g., due to fuel cell vehicles). In addition to the specific objectives of each use case, the developed control algorithms also optimize the HESS operating costs and typically address two time-scale behaviors to appropriately handle corresponding long and short terms dynamics. The management platform of the HESS is arranged in three layers (physical, control, and supervision layers), and located in the cloud. The physical layer targets the physical components, sensors, and actuators. The automation layer includes all local controllers and modules used for measurement, and several servers for interactions between the higher and lower layers of the control architecture and databases. In the supervision layer, the execution of control algorithms and clients for remote diagnoses, monitoring, and top-management activities are located. Since each layer performs specific functionalities, a multi-tier architecture is implemented and the communications among the layers occur through services and microservices.",1558-3783,,10.1109/TASE.2023.3292029,Fuel Cells and Hydrogen 2 Joint Undertaking under the project HAEOLUS(grant numbers:779469); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10180407,Energy management systems (EMSs);hydrogen storage;control architecture;wind energy integration;model predictive control (MPC);mixed logic dynamic,Hydrogen;Production;Costs;Computer architecture;Wind farms;Microgrids;Renewable energy sources,,13.0,,46,CCBY,12 Jul 2023,,,IEEE,IEEE Journals
A Choreography Analysis Approach for Microservice Composition in Cyber-Physical-Social Systems,F. Dai; Q. Mo; Z. Qiang; B. Huang; W. Kou; H. Yang,"School of Big Data and Intelligent Engineering, Southwest Forestry University, Kunming, China; School of Software, Yunnan University, Kunming, China; School of Big Data and Intelligent Engineering, Southwest Forestry University, Kunming, China; School of Big Data and Intelligent Engineering, Southwest Forestry University, Kunming, China; School of Big Data and Intelligent Engineering, Southwest Forestry University, Kunming, China; Department of Informatics, University of Leicester, Leicester, U.K",IEEE Access,24 Mar 2020,2020,8,,53215,53222,"Choreography-driven microservice composition has provided a better way to integrate components in the Cyber-physical-Social System (CPSS). Choreography is a global contract that specifies interactions among microservices participating in a composite service. After modeling a choreography, a problem arises here is whether the choreography specification at design time can be implemented correctly by generated microservices that interact with each other via exchanging messages. In this paper, we propose a novel approach for choreography analysis. Specifically, a choreography is specified using a Labeled Transition Systems (LTSs); then, the microservices participating in a composite service can be generated from the given choreography via projection and  $\varepsilon $ -remove; finally, the analysis of the choreography can be checked for both synchronous and asynchronous compositions using refinement checking. Our approach is completely automated under the support of our developed tool and the Process Analysis Toolkit (PAT) tool.",2169-3536,,10.1109/ACCESS.2020.2980891,"National Natural Science Foundation of China(grant numbers:61702442,61862065); Application Basic Research Project in Yunnan Province(grant numbers:2018FB105); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9036947,Service composition;microservice;choreography;cyber-physical-social system;peer to peer communication,Tools;Peer-to-peer computing;Petri nets;Algebra;Web services;Contracts;Protocols,,21.0,,41,CCBY,16 Mar 2020,,,IEEE,IEEE Journals
Resource-Aware Dynamic Service Deployment for Local IoT Edge Computing: Healthcare Use Case,J. Islam; T. Kumar; I. Kovacevic; E. Harjula,"Centre for Wireless Communication, University of Oulu, Oulu, Finland; Centre for Wireless Communication, University of Oulu, Oulu, Finland; Centre for Wireless Communication, University of Oulu, Oulu, Finland; Centre for Wireless Communication, University of Oulu, Oulu, Finland",IEEE Access,26 Aug 2021,2021,9,,115868,115884,"Edge Computing is a novel computing paradigm moving server resources closer to end-devices. In the context of IoT, Edge Computing is a centric technology for enabling reliable, context-aware and low-latency services for several application areas such as smart healthcare, smart industry and smart cities. In our previous work, we have proposed a three-tier IoT Edge architecture and a virtual decentralized service platform based on lightweight microservices, called nanoservices, running on it. Together, these proposals form a basis for virtualizing the available local computational capacity and utilizing it to provide localized resource-efficient IoT services based on the applications’ need. Furthermore, locally-deployed functions are resilient to access network problems and can limit the propagation of sensitive user data for improved privacy. In this paper, we propose an automatic service and resource discovery mechanism for efficient on-the-fly deployment of nanoservices on local IoT nodes. As use case, we have selected a healthcare remote monitoring scenario, which requires high service reliability and availability in a highly dynamic environment. Based on the selected use case, we propose a real-world prototype implementation of the proposed mechanism on Raspberry Pi platform. We evaluate the performance and resource-efficiency of the proposed resource matching function with two alternative deployment approaches: containerized and non-containerized deployment. The results show that the containerized deployment is more resource-efficient, while the resource discovery and matching process takes approximately 6–17 seconds, where containerization adds only 1–1.5 seconds. This can be considered a feasible price for streamlined service management, scalability, resource-efficiency and fault-tolerance.",2169-3536,,10.1109/ACCESS.2021.3102867,"Academy of Finland, under the projects: DigiHealth and 6G Flagship Projects(grant numbers:326291,318927); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9507488,IoT;edge computing;distributed computing;virtualization;resource discovery;microservices;nanoservices,Cloud computing;Computer architecture;Internet of Things;Edge computing;Dynamic scheduling;Computational modeling;Medical services,,17.0,,38,CCBY,5 Aug 2021,,,IEEE,IEEE Journals
"Fog Computing: Survey of Trends, Architectures, Requirements, and Research Directions",R. K. Naha; S. Garg; D. Georgakopoulos; P. P. Jayaraman; L. Gao; Y. Xiang; R. Ranjan,"School of Technology, Environments and Design, University of Tasmania, Hobart, TAS, Australia; School of Technology, Environments and Design, University of Tasmania, Hobart, TAS, Australia; Faculty of Science, Engineering and Technology, Swinburne University of Technology, Melbourne, VIC, Australia; Faculty of Science, Engineering and Technology, Swinburne University of Technology, Melbourne, VIC, Australia; School of Information Technology, Deakin University, Burwood, VIC, Australia; School of Information Technology, Deakin University, Burwood, VIC, Australia; School of Computing, Newcastle University, Newcastle upon Tyne, U.K.",IEEE Access,20 Sep 2018,2018,6,,47980,48009,"Emerging technologies such as the Internet of Things (IoT) require latency-aware computation for real-time application processing. In IoT environments, connected things generate a huge amount of data, which are generally referred to as big data. Data generated from IoT devices are generally processed in a cloud infrastructure because of the on-demand services and scalability features of the cloud computing paradigm. However, processing IoT application requests on the cloud exclusively is not an efficient solution for some IoT applications, especially time-sensitive ones. To address this issue, Fog computing, which resides in between cloud and IoT devices, was proposed. In general, in the Fog computing environment, IoT devices are connected to Fog devices. These Fog devices are located in close proximity to users and are responsible for intermediate computation and storage. One of the key challenges in running IoT applications in a Fog computing environment are resource allocation and task scheduling. Fog computing research is still in its infancy, and taxonomy-based investigation into the requirements of Fog infrastructure, platform, and applications mapped to current research is still required. This survey will help the industry and research community synthesize and identify the requirements for Fog computing. This paper starts with an overview of Fog computing in which the definition of Fog computing, research trends, and the technical differences between Fog and cloud are reviewed. Then, we investigate numerous proposed Fog computing architectures and describe the components of these architectures in detail. From this, the role of each component will be defined, which will help in the deployment of Fog computing. Next, a taxonomy of Fog computing is proposed by considering the requirements of the Fog computing paradigm. We also discuss existing research works and gaps in resource allocation and scheduling, fault tolerance, simulation tools, and Fog-based microservices. Finally, by addressing the limitations of current research works, we present some open issues, which will determine the future research direction for the Fog computing paradigm.",2169-3536,,10.1109/ACCESS.2018.2866491,University of Tasmania; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8444370,Fog computing;Internet of Things (IoT);fog devices;fault tolerance;IoT application;microservices,Edge computing;Cloud computing;Computer architecture;Market research;Internet of Things;Resource management;Taxonomy,,388.0,,142,OAPA,22 Aug 2018,,,IEEE,IEEE Journals
Refining Microservices Placement Employing Workload Profiling Over Multiple Kubernetes Clusters,J. Han; Y. Hong; J. Kim,"School of Electrical Engineering and Computer Science, Gwangju Institute of Science and Technology (GIST), Gwangju, South Korea; School of Electrical Engineering and Computer Science, Gwangju Institute of Science and Technology (GIST), Gwangju, South Korea; AI Graduate School, Gwangju Institute of Science and Technology (GIST), Gwangju, South Korea",IEEE Access,28 Oct 2020,2020,8,,192543,192556,"As cloud-native computing is becoming the de-facto paradigm in the cloud field, Microservices Architecture has attracted attention from industries and researchers for agility and efficiency. Moreover, with the popularity of the IoT in the context of edge computing, cloud-native applications that utilize geographically-distributed multiple resources are emerging. In line with this trend, there is an increasing demand for microservices placement that selectively use optimal resources. However, optimal microservices placement is a significant challenge because microservices are dynamic and complex, depending on diversified workloads. Besides, generalizing workloads' characteristics consisting of complex microservices is realistically challenging. Thus, microservices deployment with mathematically structured algorithms based on simulation is less practical. As an alternative, a microservices placement framework is required that can reflect the characteristics of workloads derived from empirical profiling. Therefore, in this research work, we propose a refinement framework for profiling-based microservices placement to identify and respond to workload characteristics in a practical way. To achieve this goal, we perform profiling experiments with selected workloads to derive delicate resource requirements. Then, we perform microservices placement with a greedy-based heuristic algorithm that considers application performance by using resource requirements derived from the profiled results. Finally, we verify the proposed concept by comparing the experimental results that use our work and those that don't.",2169-3536,,10.1109/ACCESS.2020.3033019,"Vehicles AI Convergence Research and Development Program through the National IT Industry Promotion Agency of Korea (NIPA); Ministry of Science and ICT (MSIT)(grant numbers:S1605-20-1002); Institute of Information and Communications Technology Planning and Evaluation (IITP); Korean Government, MSIT, Artificial Intelligence Graduate School Program (GIST)(grant numbers:2019-0-01842); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9235316,Cloud-native computing;microservices placement;workload profiling;container orchestration;resource monitoring,Cloud computing;Containers;Virtual machining;Resource management;Monitoring;Optimization;Refining,,17.0,,37,CCBY,22 Oct 2020,,,IEEE,IEEE Journals
Privacy-Preserving Microservices in Industrial Internet-of-Things-Driven Smart Applications,N. Bugshan; I. Khalil; N. Moustafa; M. S. Rahman,"School of Computing Technologies, RMIT University, Melbourne, VIC, Australia; School of Computing Technologies, RMIT University, Melbourne, VIC, Australia; School of Engineering and Information Technology, University of New South Wales at Canberra, Canberra, ACT, Australia; School of Computing Technologies, RMIT University, Melbourne, VIC, Australia",IEEE Internet of Things Journal,6 Feb 2023,2023,10,4,2821,2831,"Machine learning (ML) algorithms can effectively perform analytics and inferences for building smart applications, such as early detection of diseases in the Industrial Internet of Things (IIoT) and smart healthcare systems. The main components of ML, including training and testing phases, can be decomposed into microservices to improve service quality, along with fast implementation and integration with the edge and cloud services. However, the execution of ML in an edge-cloud environment introduces privacy risks to data owners (e.g., patients). In this article, we present a privacy-preserving ML framework by leveraging microservice technology for safeguarding healthcare IIoT systems. More specifically, we develop a microservice-based distributed privacy-preserving technique using differential privacy (DP) and a radial basis function network (RBFN) to balance between privacy protection and model performance in edge networks. We conduct extensive experiments to evaluate the performance of the proposed technique. The results revealed that DP has a significant influence on the model’s performance and achieves more than 90% accuracy with an epsilon value over 0.4, enhancing data protection and analytics through the implementation of microservices.",2327-4662,,10.1109/JIOT.2021.3098980,Australian Research Council Discovery Project(grant numbers:DP210102761 (2021–2023)); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9492287,Differential privacy (DP);edge computing;Industrial Internet of Things (IIoT);microservices;privacy-preserving machine learning (ML);smart healthcare,Industrial Internet of Things;Medical services;Cloud computing;Data models;Computer architecture;Task analysis;Servers,,18.0,,36,IEEE,21 Jul 2021,,,IEEE,IEEE Journals
DRPC: Distributed Reinforcement Learning Approach for Scalable Resource Provisioning in Container-Based Clusters,H. Bai; M. Xu; K. Ye; R. Buyya; C. Xu,"Shenzhen Institute of Advanced Technology, Chinese Academy of Sciences, Shenzhen, China; Shenzhen Institute of Advanced Technology, Chinese Academy of Sciences, Shenzhen, China; Shenzhen Institute of Advanced Technology, Chinese Academy of Sciences, Shenzhen, China; School of Computing and Information Systems, University of Melbourne, Melbourne, VIC, Australia; State Key Lab of IOTSC, University of Macau, Macau, China",IEEE Transactions on Services Computing,31 Dec 2024,2024,17,6,3473,3484,"Microservices have transformed monolithic applications into lightweight, self-contained, and isolated application components, establishing themselves as a dominant paradigm for application development and deployment in public clouds such as Google and Alibaba. Autoscaling emerges as an efficient strategy for managing resources allocated to microservices’ replicas. However, the dynamic and intricate dependencies within microservice chains present challenges to the effective management of scaled microservices. Additionally, the centralized autoscaling approach can encounter scalability issues, especially in the management of large-scale microservice-based clusters. To address these challenges and enhance scalability, we propose an innovative distributed resource provisioning approach for microservices based on the Twin Delayed Deep Deterministic Policy Gradient algorithm. This approach enables effective autoscaling decisions and decentralizes responsibilities from a central node to distributed nodes. Comparative results with state-of-the-art approaches, obtained from a realistic testbed and traces, indicate that our approach reduces the average response time by 15% and the number of failed requests by 24%, validating improved scalability as the number of requests increases.",1939-1374,,10.1109/TSC.2024.3433388,"National Key R & D Program of China(grant numbers:2021YFB3300200); National Natural Science Foundation of China(grant numbers:62072451,62102408,92267105); Guangdong Basic and Applied Basic Research Foundation(grant numbers:2023B1515130002,2024A1515010251); Guangdong Special Support Plan(grant numbers:2021TQ06X990); Shenzhen Basic Research Program(grant numbers:JCYJ20220818101610023,KJZD20230923113800001); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10609536,Cloud computing;Kubernetes;microservice;reinforcement learning;distributed resources management,Microservice architectures;Resource management;Scalability;Heuristic algorithms;Reinforcement learning;Time factors;Quality of service,,,,38,IEEE,25 Jul 2024,,,IEEE,IEEE Journals
Multi-Site Resource Allocation in a QoS-Aware 5G Infrastructure,R. Bolla; R. Bruschi; F. Davoli; C. Lombardo; J. F. Pajo,"Department of Electrical, Electronic and Telecommunications Engineering, and Naval Architecture (DITEN), University of Genoa, Genoa, Italy; Department of Electrical, Electronic and Telecommunications Engineering, and Naval Architecture (DITEN), University of Genoa, Genoa, Italy; Department of Electrical, Electronic and Telecommunications Engineering, and Naval Architecture (DITEN), University of Genoa, Genoa, Italy; CNIT S2N National Laboratory, Genoa, Italy; Telenor Research, Fornebu, Norway",IEEE Transactions on Network and Service Management,12 Oct 2022,2022,19,3,2034,2047,"Network softwarization has paved the way for 5G technologies, and a wide-range of (radically new) verticals. As the telecommunications infrastructure evolves into a sort of distributed datacenter, multiple tenants such as vertical industries and network service providers share its aggregate pool of resources (e.g., networking, computing, etc.) in a layered “as-a-Service” approach exposed as slice abstractions. The challenge remains in the coordination of various stakeholders’ assets in realizing end-to-end network slices and supporting the multi-site deployment and chaining of the micro-service components needed to implement cloud-native vertical applications (vApps). In this context, particular care must be taken to ensure that the required resources are identified, made available and managed in a way that satisfies the vApp requirements, allows for a fair share of resources and has a reasonable impact on the overall vApp deployment time. With these challenges in mind, this paper presents the Resource Selection Optimizer (RSO)– a software-service in the MATILDA Operations Support System (OSS), whose main goal is to select the most appropriate network and computing resources (according to some criterion) among a list of options provided by the Wide-area Infrastructure Manager (WIM). It consists of three submodules that respectively handle: (i) the aggregation of vApp components based on affinities, (ii) the forecasting of (micro-) datacenter resources utilization, (iii) and the multi-site placement of the (aggregated) vApp micro-service components. The RSO’s performance is mainly evaluated in terms of the execution times of its submodules while varying their respective input parameters, and additionally, three selection policies are also compared. Experimental results aim to highlight the RSO behavior in both execution times and deployment costs, as well as the RSO interactions with other OSS submodules and network platform components, not only for multi-site vApp deployment but also for other network/services management operations.",1932-4537,,10.1109/TNSM.2022.3151468,Horizon 2020 5G-PPP Innovation Action 5G-INDUCE(grant numbers:101016941); Horizon 2020 Innovation Action SPIDER(grant numbers:833685); Horizon 2020 5G-PPP Innovation Action MATILDA(grant numbers:761898); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9714279,5G;multi-site resource allocation;network slicing;OSS microservices;resource selection;vertical applications%,5G mobile communication;Computer architecture;Cloud computing;Quality of service;Delays;Costs;Resource management,,6.0,,40,IEEE,15 Feb 2022,,,IEEE,IEEE Journals
Delay-Aware Container Scheduling in Kubernetes,W. -K. Lai; Y. -C. Wang; S. -C. Wei,"Department of Computer Science and Engineering, National Sun Yat-sen University, Kaohsiung, Taiwan; Department of Computer Science and Engineering, National Sun Yat-sen University, Kaohsiung, Taiwan; Department of Computer Science and Engineering, National Sun Yat-sen University, Kaohsiung, Taiwan",IEEE Internet of Things Journal,22 Jun 2023,2023,10,13,11813,11824,"Kubernetes is a powerful tool to manage containerized applications, which is also regarded as one promising platform to support microservices in edge computing. The scheduler is a key component of Kubernetes. It allocates each pod (i.e., a set of running containers) to one worker node (i.e., a machine). The default scheduler in Kubernetes is designed for the cloud environment containing homogeneous nodes. However, IoT edge nodes usually have various computing power and network bandwidth. This article proposes a delay-aware container scheduling (DACS) algorithm to address the issue of node heterogeneity in edge computing. To efficiently assign pods to worker nodes, DACS takes account of not only residual resources of worker nodes but also potential delays caused by the pod assignment. We build a Kubernetes cluster by VMware to evaluate system performance. Experimental results reveal that DACS can significantly reduce both processing and network delays, thereby helping Kubernetes perform more efficiently in an edge environment.",2327-4662,,10.1109/JIOT.2023.3244545,"National Science and Technology Council (NSTC), Taiwan,(grant numbers:111-2221-E-110-025); NSTC(grant numbers:111-2221-E-110-023-MY2); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10044213,Container;delay;edge;kubernetes;scheduling,Containers;Delays;Processor scheduling;Task analysis;Micromechanical devices;Microservice architectures;Internet of Things,,7.0,,45,IEEE,14 Feb 2023,,,IEEE,IEEE Journals
Operating Latency Sensitive Applications on Public Serverless Edge Cloud Platforms,I. Pelle; J. Czentye; J. Dóka; A. Kern; B. P. Gerő; B. Sonkoly,"MTA-BME Network Softwarization Research Group, Budapest, Hungary; MTA-BME Network Softwarization Research Group, Budapest, Hungary; MTA-BME Network Softwarization Research Group, Budapest, Hungary; Ericsson Research, Budapest, Hungary; Ericsson Research, Budapest, Hungary; MTA-BME Network Softwarization Research Group, Budapest, Hungary",IEEE Internet of Things Journal,7 May 2021,2021,8,10,7954,7972,"Cloud native programming and serverless architectures provide a novel way of software development and operation. A new generation of applications can be realized with features never seen before while the burden on developers and operators will be reduced significantly. However, latency sensitive applications, such as various distributed IoT services, generally do not fit in well with the new concepts and today's platforms. In this article, we adapt the cloud native approach and related operating techniques for latency sensitive IoT applications operated on public serverless platforms. We argue that solely adding cloud resources to the edge is not enough and other mechanisms and operation layers are required to achieve the desired level of quality. Our contribution is threefold. First, we propose a novel system on top of a public serverless edge cloud platform, which can dynamically optimize and deploy the microservice-based software layout based on live performance measurements. We add two control loops and the corresponding mechanisms which are responsible for the online reoptimization at different timescales. The first one addresses the steady-state operation, while the second one provides fast latency control by directly reconfiguring the serverless runtime environments. Second, we apply our general concepts to one of today's most widely used and versatile public cloud platforms, namely, Amazon's AWS, and its edge extension for IoT applications, called Greengrass. Third, we characterize the main operation phases and evaluate the overall performance of the system. We analyze the performance characteristics of the two control loops and investigate different implementation options.",2327-4662,,10.1109/JIOT.2020.3042428,AWS Cloud Credits for Research Program; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9279315,Amazon Web Services (AWS);cloud;edge;greengrass;IoT;lambda;serverless,Cloud computing;Software;Internet of Things;Tools;Optimization;Monitoring;Layout,,35.0,,38,CCBY,3 Dec 2020,,,IEEE,IEEE Journals
A Micro-Service Approach to Cloud Native RAN for 5G and Beyond,P. Song; H. Peng; X. Zhang,"Networks and Edge Computing, Intel Beijing Research and Development Center, Beijing, China; Networks and Edge Computing, Intel Beijing Research and Development Center, Beijing, China; Networks and Edge Computing, Intel Shanghai Research and Development Center, Shanghai, China",IEEE Access,23 Nov 2023,2023,11,,130257,130271,"5G aims to support diverse applications with programmable infrastructure. Traditional RAN based on purpose-built-in hardware and monolithic software lack resiliency, programmability, and business agility. Cloud native virtualized RAN (vRAN) solves the issues by designing telecom applications into micro-service in cloud environment. This enables flexible virtualized network function deployment, efficient service provisioning, and on-demand resource usage. However, designing telecom RAN applications as micro-services has no guidelines but faces challenges such as high-precision synchronization and real-time processing requirements. This paper first introduces cloud native tenets and the current state of RAN cloudification and then evaluates the micro-service design of RAN software components. A micro-service approach for vDU user plane was proposed in this study, and a vDU prototype was developed based on the Intel x86 computing platform. System validation results proved the feasibility of inter-Pod communication processing latency, and capacity analytics predicted substantial capacity improvement for the proposed vDU scheme. The paper concludes with a summary and open points on the way forward for cloud native vRAN transformation.",2169-3536,,10.1109/ACCESS.2023.3332964,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10318161,5G NR;vRAN;vDU;cloud native;micro-service,Cloud computing;Software engineering;Telecommunications;5G mobile communication;Hardware;Computer architecture;Business;Microservice architectures,,3.0,,33,CCBYNCND,15 Nov 2023,,,IEEE,IEEE Journals
Architectural Design of Cloud Applications: A Performance-Aware Cost Minimization Approach,M. Ciavotta; G. P. Gibilisco; D. Ardagna; E. D. Nitto; M. Lattuada; M. A. A. da Silva,"Dipartimento di Informatica, Sistemistica e Comunicazione, Università di Milano-Bicocca, Milano, Italy; Dipartimento di Elettronica, Informazione e Bioingegneria, Politecnico di Milano, Milano, Italy; Dipartimento di Elettronica, Informazione e Bioingegneria, Politecnico di Milano, Milano, Italy; Dipartimento di Elettronica, Informazione e Bioingegneria, Politecnico di Milano, Milano, Italy; Dipartimento di Elettronica, Informazione e Bioingegneria, Politecnico di Milano, Milano, Italy; Softeam, Paris, France",IEEE Transactions on Cloud Computing,2 Sep 2022,2022,10,3,1571,1591,"Cloud Computing has assumed a relevant role in the ICT, profoundly influencing the life-cycle of modern applications in the manner they are designed, developed, and deployed and operated. In this article, we tackle the problem of supporting the design-time analysis of Cloud applications to identify a cost-optimized strategy for allocating components onto Cloud Virtual Machine infrastructural services, taking performance requirements into account. We present an approach and a tool, SPACE4Cloud, that supports users in modeling the architecture of an application, in defining performance requirements as well as deployment constraints, and then in mapping each architecture component into a corresponding VM service, minimizing total costs. An optimization algorithm supports the mapping and determines the Cloud configuration that minimizes the execution costs of the application over a daily time horizon. The benefits of this approach are demonstrated in the context of an industrial case study. Furthermore, we show that SPACE4Cloud leads to a cost reduction up to 60 percent, when compared to a first-principle technique based on utilization thresholds, like the ones typically used in practice, and that our solution is able to solve large problem instances within a time frame compatible with a fast-paced design process (less than half an hour in the worst case). Finally, we show that SPACE4Cloud is suitable to model even microservice-based applications and to compute the corresponding optimized deployment configuration which is compared with a state-of-the art meta-heuristic alternative method, achieving savings between 21 and 85 percent.",2168-7161,,10.1109/TCC.2020.3015703,European Commission(grant numbers:FP7-ICT-2011-8-318484); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9164994,Model-driven software development;search-based software engineering;performance assessment;cloud computing;cost minimization;quality of service,Cloud computing;Optimization;Tools;Unified modeling language;Computer architecture;Computational modeling;Companies,,3.0,,55,IEEE,11 Aug 2020,,,IEEE,IEEE Journals
An NFV-Based Service Framework for IoT Applications in Edge Computing Environments,Y. -Y. Shih; H. -P. Lin; A. -C. Pang; C. -C. Chuang; C. -T. Chou,"Department of Communications Engineering, National Chung Cheng University, Minxiong, Taiwan; Chunghwa Telecom Laboratories, Chunghwa Telecom Company Ltd., Taipei, Taiwan; Graduate Institute of Networking and Multimedia, National Taiwan University, Taipei, Taiwan; Graduate Institute of Networking and Multimedia, National Taiwan University, Taipei, Taiwan; Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan",IEEE Transactions on Network and Service Management,10 Dec 2019,2019,16,4,1419,1434,"Emerging Internet of Things (IoT) applications share the same characteristics of involving multiple processing components (i.e., function modules) and requiring a massive amount of data to be processed with low latency. To meet these needs, edge/fog computing has been proposed for next-generation mobile networks to migrate the computing from the cloud to the edge of the network. Thanks to the development of Network Functions Virtualization (NFV), with which edge computing platform can virtualize function modules and deploy them on any edge devices to provide flexible services on the edge networks. However, such platform would need to deal with complicated function module calling relationship (i.e., call graph) of applications and user mobility, and both are not thoroughly considered by existing works of NFV and edge computing. In this paper, based on our previous idea of virtual local-hub (VLH), we propose a complete design of edge computing framework, which applies NFV technology on edge computing environment for IoT applications. To handle the complicated call graphs of IoT applications with better resource utilization, the VLH framework adapts the technologies of container-based virtualization and microservice architecture, which enables remote function module sharing on the edge computing environment. The framework includes the heuristic algorithm for function module allocation with the objective of minimizing total bandwidth consumption. We also present a design of protocols for system operations and mobility handling in the framework. Then we implement the framework on commodity hardware as a testbed. Via simulations under a large-scale environment with practical settings and experiments on the testbed under real-world scenarios, we demonstrate and verify the effectiveness and practicability of the proposed VLH framework for IoT application service provision.",1932-4537,,10.1109/TNSM.2019.2948764,"Ministry of Science and Technology(grant numbers:108-2221-E-002-069-MY3,107-2923-E-002-006-MY3,106-2221-E-002-MY2,105-2221-E-002-144-MY3); National Taiwan University(grant numbers:108L880503,108L891904); Ministry of Economic Affairs(grant numbers:107-EC-17-A-02-S5-007); National Chung-Hsing University(grant numbers:2019-5G-0202); MOXA(grant numbers:108-S-C05); Microsoft Research; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8880517,Network functions virtualization;edge computing;fog computing;Internet of Things;wearable device;microservices;container-based virtualization,IEEE transactions,,22.0,,47,IEEE,23 Oct 2019,,,IEEE,IEEE Journals
Toward Bio-Inspired Auto-Scaling Algorithms: An Elasticity Approach for Container Orchestration Platforms,J. Herrera; G. Moltó,"Instituto de Instrumentación para Imagen Molecular (I3M), Centro mixto CSIC-Universitat Politècnica de València (UPV), Valencia, Spain; Instituto de Instrumentación para Imagen Molecular (I3M), Centro mixto CSIC-Universitat Politècnica de València (UPV), Valencia, Spain",IEEE Access,20 Mar 2020,2020,8,,52139,52150,"The wide adoption of microservices architectures has introduced an unprecedented granularisation of computing that requires the coordinated execution of multiple containers with diverse lifetimes and with potentially different auto-scaling requirements. These applications are managed by means of container orchestration platforms and existing centralised approaches for auto-scaling face challenges when used for the timely adaptation of the elasticity required for the different application components. This paper studies the impact of integrating bio-inspired approaches for dynamic distributed auto-scaling on container orchestration platforms. With a focus on running self-managed containers, we compare alternative configuration options for the container life cycle. The performance of the proposed models is validated through simulations subjected to both synthetic and real-world workloads. Also, multiple scaling options are assessed with the purpose of identifying exceptional cases and improvement areas. Furthermore, a nontraditional metric for scaling measurement is introduced to substitute classic analytical approaches. We found out connections for two related worlds (biological systems and software container elasticity procedures) and we open a new research area in software containers that features potential self-guided container elasticity activities.",2169-3536,,10.1109/ACCESS.2020.2980852,"Ministerio de Economía, Industria y Competitividad, Spanish Government, for the Project BigCLOE(grant numbers:TIN2016-79951-R); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9036958,Auto-scaling;bio-inspired;sofware containers,Containers;Elasticity;Computer architecture;Biological system modeling;Virtual machining;Microprocessors;Cloud computing,,14.0,,54,CCBY,16 Mar 2020,,,IEEE,IEEE Journals
Root Cause Analysis for Cloud-Native Applications,B. Żurkowski; K. Zieliński,"Faculty of Computer Science, AGH University, Krakow, Poland; Faculty of Computer Science, AGH University, Krakow, Poland",IEEE Transactions on Cloud Computing,7 Mar 2024,2024,12,1,232,250,"Root cause analysis (RCA) is a critical component in maintaining the reliability and performance of modern cloud applications. However, due to the inherent complexity of cloud environments, traditional RCA techniques become insufficient in supporting system administrators in daily incident response routines. This article presents an RCA solution specifically designed for cloud applications, capable of pinpointing failure root causes and recreating complete fault trajectories from the root cause to the effect. The novelty of our approach lies in approximating causal symptom dependencies by synergizing several symptom correlation methods that assess symptoms in terms of structural, semantic, and temporal aspects. The solution integrates statistical methods with system structure and behavior mining, offering a more comprehensive analysis than existing techniques. Based on these concepts, in this work, we provide definitions and construction algorithms for RCA model structures used in the inference, propose a symptom correlation framework encompassing essential elements of symptom data analysis, and provide a detailed description of the elaborated root cause identification process. Functional evaluation on a live microservice-based system demonstrates the effectiveness of our approach in identifying root causes of complex failures across multiple cloud layers.",2168-7161,,10.1109/TCC.2024.3358823,Polish Ministry of Science and Higher Education; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10415627,Root cause analysis;event correlation;knowledge mining;cloud-native applications,Cloud computing;Correlation;Semantics;Behavioral sciences;Trajectory;Measurement;Inference algorithms,,1.0,,35,IEEE,29 Jan 2024,,,IEEE,IEEE Journals
Enabling Emulation and Evaluation of IEC 61850 Networks With TITAN,A. A. Z. Soares; L. F. Soares; D. P. Mattos; P. H. B. S. Pinheiro; S. E. Quincozes; V. C. Ferreira; G. H. Apostolo; G. R. Carrara; I. M. Moraes; C. Albuquerque; Y. Lopes; N. C. Fernandes; D. C. Muchaluat-Saade,"MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; FRIENDS Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil; MídiaCom Lab, Fluminense Federal University, Niterói, Brazil",IEEE Access,2 Apr 2021,2021,9,,49788,49805,"Sensing and monitoring electrical signals and power device parameters within the smart grid network infrastructure plays a fundamental role in assessing the smart devices' proper functioning. Nevertheless, a key challenge for academic teaching and researching purposes is the elevated cost of real electronic devices, such as current and potential transformers, or even intelligent electronic devices. Therefore, traffic emulators are a valuable solution for the evaluation of new smart grid communication proposals. In this work, we propose TITAN, a tool to support the evaluation of automation systems' communication networks. TITAN enables the emulation of IEC 61850 communication, ranging from data sensing to data acquisition, thus supporting extensive research and development on this fundamental smart grid domain. This tool can interact and communicate with real elements, such as intelligent electronic devices. It enables the emulation of voltage and current data sensing communication, as well as the implementation of different data acquisition schemes by an emulated supervisory system. Our main contributions are: (i) TITAN, a tool with a distributed microservices architecture to execute communication traffic generation tasks; (ii) a user-friendly interface to integrate and manage all components; and (iii) a proof of concept testbed using TITAN and real teleprotection devices. Real case studies using TITAN reveal its feasibility in supporting low-cost testbeds for research, teaching, and testing purposes in sensing and acquisition for automation systems.",2169-3536,,10.1109/ACCESS.2021.3068366,ANEEL’s Research and Development Program(grant numbers:PD-07130-0053/2018); National Council for Scientific and Technological Development (CNPq); Rio de Janeiro State Research Foundation (FAPERJ); Coordination for the Improvement of Higher Education Personnel (CAPES); CAPES PRINT; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9385090,IEC 61850;IED;intelligent electronic device;SCADA;smart grid communication;supervisory system;traffic generator,IEC Standards;Protocols;Standards;Tools;Substations;Sensors;Emulation,,7.0,,28,CCBYNCND,24 Mar 2021,,,IEEE,IEEE Journals
Model-Driven Dependability and Power Consumption Quantification of Kubernetes-Based Cloud-Fog Continuum,I. Fé; T. A. Nguyen; A. B. Soares; S. Son; E. Choi; D. Min; J. -W. Lee; F. A. Silva,"Laboratory of Applied Research to Distributed Systems (PASID), Federal University of Piauí (UFPI), Picos, Piauí, Brazil; Konkuk Aerospace Design-Airworthiness Research Institute (KADA), Konkuk University, Seoul, South Korea; Distributed Systems and Network Computer Laboratory (DisNeL), Federal University of Piauí (UFPI), Teresina, Piauí, Brazil; Electronics and Telecommunications Research Institute (ETRI), Daejeon, South Korea; School of Software, College of Computer Science, Kookmin University, Seoul, South Korea; Department of Computer Science and Engineering, College of Engineering, Konkuk University, Seoul, South Korea; Department of Aerospace Information Engineering, Konkuk University, Seoul, South Korea; Laboratory of Applied Research to Distributed Systems (PASID), Federal University of Piauí (UFPI), Picos, Piauí, Brazil",IEEE Access,19 Dec 2023,2023,11,,140826,140852,"System dependability is pivotal for the reliable execution of designated computing functions. With the emergence of cloud-fog computing and microservices architectures, new challenges and opportunities arise in evaluating system dependability. Enhancing dependability in microservices often involves component replication, potentially increasing energy costs. Thus, discerning optimal redundancy strategies and understanding their energy implications is crucial for both cost efficiency and ecological sustainability. This paper presents a model-driven approach to evaluate the dependability and energy consumption of cloud-fog systems, utilizing Kubernetes, a container application orchestration platform. The developed model considers various determinants affecting system dependability, including hardware and software reliability, resource accessibility, and support personnel availability. Empirical studies validate the model’s effectiveness, demonstrating a 22.33% increase in system availability with only a 1.33% rise in energy consumption. Moreover, this methodology provides a structured framework for understanding cloud-fog system dependability, serves as a reference for comparing dependability across different systems, and aids in resource allocation optimization. This research significantly contributes to the efforts to enhance cloud-fog system dependability.",2169-3536,,10.1109/ACCESS.2023.3340195,"Basic Science Research Program through the National Research Foundation of Korea (NRF); Ministry of Education(grant numbers:2020R1A6A1A03046811,2021R1A2C2094943); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10347188,Cloud-fog continuum;dependability;Kubernetes;stochastic modeling,Modeling;Stochastic processes;Power demand;Energy consumption;Edge computing;Cloud computing,,1.0,,47,CCBYNCND,7 Dec 2023,,,IEEE,IEEE Journals
